<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>移动开发 | ngudream</title>
  <subtitle>Coding Changes the World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ngudream.com/"/>
  <updated>2017-02-09T12:47:30.270Z</updated>
  <id>http://ngudream.com/</id>
  
  <author>
    <name>ngudream</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux Shell 脚本切换 IP</title>
    <link href="http://ngudream.com/2017/02/09/linux-ip-switch-shell/"/>
    <id>http://ngudream.com/2017/02/09/linux-ip-switch-shell/</id>
    <published>2017-02-09T12:43:41.000Z</published>
    <updated>2017-02-09T12:47:30.270Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>&#x8F6C;&#x8F7D;&#x81EA;&#xFF1A;<a href="http://diaocow.iteye.com/blog/1674074" target="_blank" rel="external">http://diaocow.iteye.com/blog/1674074</a></p>
</blockquote>
<p>&#x5728;web&#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x7ECF;&#x5E38;&#x9700;&#x8981;&#x5207;&#x6362;hosts&#x7ED1;&#x5B9A;&#xFF0C;&#x6BD4;&#x8F83;&#x597D;&#x7528;&#x5DE5;&#x5177;&#x706B;&#x72D0;&#x63D2;&#x4EF6;&#xFF1A;hostAdmin.</p>
<p>&#x4ECA;&#x5929;&#x7A81;&#x53D1;&#x5947;&#x60F3;&#xFF08;&#x6700;&#x8FD1;&#x770B;&#x4E86;&#x5F88;&#x591A; shell&#xFF0C;&#x4E5F;&#x60F3;&#x953B;&#x70BC;&#x4E00;&#x4E0B;&#xFF09;&#xFF0C;&#x4EFF;&#x7167; hostAdmin &#x5199;&#x4E86;&#x4E00;&#x4E2A; shell &#x811A;&#x672C;&#xFF0C;&#x76EE;&#x524D;&#x8FD0;&#x884C;&#x826F;&#x597D;&#x3002;</p>
<pre><code>#!/bin/bash

##############################
#  &#x5207;&#x6362;hosts&#x7684;&#x5DE5;&#x5177;&#x7C7B; swich hosts
#
#  --------hosts &#x6587;&#x4EF6;&#x683C;&#x5F0F;--------
#  ==offline
#  ip list...
#  ==offline
#
#  ==online
#  ip list...
#  ==online
#  --------hosts &#x6587;&#x4EF6;&#x683C;&#x5F0F;--------
#  
#  &#x64CD;&#x4F5C;&#xFF1A;sh shosts.sh offline &#x5F00;&#x542F;offline&#x8FD9;&#x7EC4;host&#x7ED1;&#x5B9A;
#
#  diaocow 2012-9-8
#
##############################

# &#x68C0;&#x6D4B;&#x7528;&#x6237;&#x662F;&#x5426;&#x8F93;&#x5165;&#x4E86;group tag
if [[ -z $1 ]] ; then
        echo &quot;Error: Please input a group tag! eg. offline&quot;
        exit 1
fi

HOSTS=&quot;testdata&quot;         # hosts&#x6587;&#x4EF6;(&#x8FD9;&#x91CC;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x66FF;&#x6362;&#x6210;/etc/hosts)
HOSTS_TEMP=&quot;host.tmp&quot;    # hosts&#x4E34;&#x65F6;&#x6587;&#x4EF6;
GROUP_TAG=&quot;==$1&quot;         # &#x9700;&#x8981;&#x6253;&#x5F00;&#x7684;&#x7EC4;

# &#x68C0;&#x6D4B;group tag&#x6709;&#x6548;&#x6027;
if ! grep -q  &quot;$GROUP_TAG&quot;  &quot;$HOSTS&quot; ; then
        echo &quot;Error: there is no group tag named $GROUP_TAG in $HOSTS&quot;
        exit 1
fi

# &#x51FD;&#x6570;&#xFF1A;&#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x4E3A;IP
isIp() {
	echo $1 | grep -E -q &apos;([0-9]+\.){3}[0-9]&apos;
    ip_result=`echo $?`
}

# clean&#x4E34;&#x65F6;&#x6587;&#x4EF6;
: &gt; $HOSTS_TEMP
# group tag &#x8BA1;&#x6570;
start_flag=0

# &#x5904;&#x7406;hosts
cat $HOSTS | while read line ; do

        if echo $line | grep -q $GROUP_TAG; then
                start_flag=$((start_flag + 1))
        fi

        isIp &quot;$line&quot;

        if [[ $start_flag == 1 &amp;&amp; $ip_result == 0 ]] ; then
                # &#x53BB;&#x6389;&#x5F00;&#x5934;&#x7684;&#x6CE8;&#x91CA;&#x7B26; 
                line=${line/#\#/}
        elif [[ $ip_result == 0 ]] ; then
                # &#x5728;&#x884C;&#x5F00;&#x5934;&#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#x7B26;
                if ! echo $line | grep -q &apos;^ *#&apos; ; then
                     line=\#$line
                fi
        fi
        echo &quot;$line&quot; &gt;&gt; $HOSTS_TEMP

done

# &#x91CD;&#x65B0;&#x751F;&#x6210;hosts
cat $HOSTS_TEMP &gt; $HOSTS

rm -rf $HOSTS_TEMP
</code></pre>
<p>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x6765;&#x6D4B;&#x8BD5;&#x4E0B;&#x8FD9;&#x4E2A;&#x811A;&#x672C;&#xFF1A;</p>
<p>&#x6211;&#x4EEC;&#x51C6;&#x5907;&#x4E0B;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#xFF08;&#x811A;&#x672C;&#x4E2D;&#x7684;HOSTS&#x53D8;&#x91CF;&#x6307;&#x5B9A;hosts&#x6587;&#x4EF6;&#xFF0C;&#x76EE;&#x524D;&#x6211;&#x4EEC;&#x6682;&#x5B9A;&#x4E49;&#x4E3A;testdata)&#xFF1A;</p>
<pre><code>[diaocow@ubuntu]$ cat testdata 
==offline
72.51.30.13    offline.test1.com 
72.20.123.321  offline.test2.com

==offline

==online
12.56.92.97 online.test1.com    
12.56.38.84 online.test2.com
==online
</code></pre>
<p>&#x5C06;host&#x5207;&#x6362;&#x5230;&#x7EBF;&#x4E0A;&#x73AF;&#x5883;</p>
<pre><code>[diaocow@ubuntu]$ sh shosts.sh  online
[diaocow@ubuntu]$ cat testdata
==offline
#72.51.30.13    offline.test1.com
#72.20.123.321  offline.test2.com

==offline

==online
12.56.92.97 online.test1.com
12.56.38.84 online.test2.com
==online
</code></pre>
<p>&#x91CD;&#x590D;&#x6267;&#x884C;  sh <a href="http://shosts.sh" target="_blank" rel="external">shosts.sh</a>  online &#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x95EE;&#x9898;</p>
<p>&#x6211;&#x4EEC;&#x5728;&#x5C1D;&#x8BD5;&#x5207;&#x6362;&#x6210;&#x7EBF;&#x4E0B;&#x73AF;&#x5883;</p>
<pre><code>[diaocow@ubuntu]$ sh shosts.sh  offline
[diaocow@ubuntu]$ cat testdata
==offline
72.51.30.13    offline.test1.com
72.20.123.321  offline.test2.com

==offline

==online
#12.56.92.97 online.test1.com
#12.56.38.84 online.test2.com
==online
</code></pre>
<p>&#x4E00;&#x5207;OK &#xFF0C;&#x6CE8;&#xFF1A;<strong>&#x4E0A;&#x9762;&#x6240;&#x5199;&#x7684;online&#x3001;offline&#x4E0D;&#x662F;&#x5FC5;&#x987B;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x540D;&#x5B57;&#xFF0C;&#x5B83;&#x4EEC;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x6807;&#x8BB0;&#x4F4D;&#x800C;&#x5DF2;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x5176;&#x5B83;&#x540D;&#x5B57;&#xFF0C;&#x6BD4;&#x5982;inweb&#x2026;</strong></p>
<p>&#x5728;&#x811A;&#x672C;&#x7684;&#x7F16;&#x5199;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x7ECF;&#x5E38;&#x4F7F;&#x7528;&#x8FD9;&#x4E24;&#x4E2A;&#x547D;&#x4EE4;</p>
<p>sh -n <a href="http://shosts.sh" target="_blank" rel="external">shosts.sh</a> online              # &#x68C0;&#x6D4B;&#x811A;&#x672C;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;<br>
sh -x <a href="http://shosts.sh" target="_blank" rel="external">shosts.sh</a> online                 # &#x8BE6;&#x7EC6;&#x6253;&#x51FA;&#x811A;&#x672C;&#x6BCF;&#x4E00;&#x6B65;&#x6267;&#x884C;&#x8FC7;&#x7A0B;</p>]]></content>
    
    <summary type="html">
    
      笔者常在 linux 下开发，时不时需要进行内外网的切换，但没有像 windows 下的 SwitchHosts 一样方便的工具；虽然可以使用火狐浏览器的插件 hostAdmin，但是感觉也不太方便，没有命令行直接操作来得快。今天就介绍一个网友的脚本，原理是将 /etc/hosts 文件下的非选择的地址注释掉，只保留选择的地址。
    
    </summary>
    
      <category term="编程" scheme="http://ngudream.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="linux" scheme="http://ngudream.com/tags/linux/"/>
    
      <category term="Shell" scheme="http://ngudream.com/tags/Shell/"/>
    
      <category term="IP" scheme="http://ngudream.com/tags/IP/"/>
    
  </entry>
  
  <entry>
    <title>WebView异步加载自定义CSS/JS</title>
    <link href="http://ngudream.com/2017/02/08/android-webview-asyncload-css-js/"/>
    <id>http://ngudream.com/2017/02/08/android-webview-asyncload-css-js/</id>
    <published>2017-02-07T16:27:01.000Z</published>
    <updated>2017-02-07T14:56:23.013Z</updated>
    
    <content type="html"><![CDATA[<p>&#x8FD1;&#x6765;&#x63A5;&#x5230;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#xFF0C;&#x5C31;&#x662F; webview &#x8981;&#x52A8;&#x6001;&#x52A0;&#x8F7D; css &#x6587;&#x4EF6;&#xFF0C;&#x66FF;&#x6362; html &#x6587;&#x4EF6;&#x539F;&#x6765;&#x7684;&#xFF0C;&#x8FBE;&#x5230;&#x5B9A;&#x5236;&#x754C;&#x9762;&#x7684;&#x76EE;&#x7684;&#x3002;&#x81EA;&#x5DF1;&#x505A;demo &#x8BD5;&#x9A8C;&#x8BC1;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;webview &#x672C;&#x8EAB;&#x63D0;&#x4F9B;&#x8FD9;&#x6837;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x8981;&#x6C42;&#x3002;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x4F7F;&#x7528; webview &#x7684; shouldInterceptRequest &#x63A5;&#x53E3;&#xFF0C;&#x62E6;&#x622A;&#x8BF7;&#x6C42;&#x3002;</p>
<h2 id="&#x62E6;&#x622A;&#x63A5;&#x53E3;"><a class="header-anchor" href="#&#x62E6;&#x622A;&#x63A5;&#x53E3;"></a>&#x62E6;&#x622A;&#x63A5;&#x53E3;</h2>
<p>WebView &#x8C03;&#x7528; loadUrl &#x540E;&#xFF0C;&#x4F1A;&#x9996;&#x5148;&#x6839;&#x636E;&#x4F20;&#x5165;&#x7684;URL&#x83B7;&#x53D6;&#x54CD;&#x5E94;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5C06;&#x54CD;&#x5E94;&#x663E;&#x793A;&#x5230;&#x9875;&#x9762;&#x4E0A;&#x3002;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x539F;&#x7406;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x83B7;&#x53D6;&#x54CD;&#x5E94;&#x8FC7;&#x7A0B;&#x4E2D;&#x91CD;&#x65B0;&#x6539;&#x53D8;&#x8BF7;&#x6C42;URL&#x6216;&#x8005;&#x76F4;&#x63A5;&#x5C06;&#x54CD;&#x5E94;&#x66FF;&#x6362;&#x3002;&#x8981;&#x60F3;&#x62E6;&#x622A; WebView &#x52A0;&#x8F7D;&#x7F51;&#x9875;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x91CD;&#x5199; WebViewClient &#x7C7B;&#xFF0C;&#x5728; WebViewClient &#x7C7B;&#x4E2D;&#x6211;&#x4EEC;&#x91CD;&#x5199; <strong>shouldInterceptRequest()</strong> &#x65B9;&#x6CD5;&#x3002;</p>
<p>&#x901A;&#x8FC7;&#x67E5;&#x770B; WebViewClient &#x7684;&#x6E90;&#x7801;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x540C;&#x540D;&#x65B9;&#x6CD5;&#xFF0C;&#x5206;&#x522B;&#x662F;&#xFF1A;</p>
<pre><code>/**
     * Notify the host application of a resource request and allow the
     * application to return the data.  If the return value is null, the WebView
     * will continue to load the resource as usual.  Otherwise, the return
     * response and data will be used.  NOTE: This method is called on a thread
     * other than the UI thread so clients should exercise caution
     * when accessing private data or the view system.
     *
     * @param view The {@link android.webkit.WebView} that is requesting the
     *             resource.
     * @param url The raw url of the resource.
     * @return A {@link android.webkit.WebResourceResponse} containing the
     *         response information or null if the WebView should load the
     *         resource itself.
     * @deprecated Use {@link #shouldInterceptRequest(WebView, WebResourceRequest)
     *             shouldInterceptRequest(WebView, WebResourceRequest)} instead.
     */
    @Deprecated
    public WebResourceResponse shouldInterceptRequest(WebView view,
            String url) {
        return null;
    }
</code></pre>
<p>&#x548C;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#xFF1A;</p>
<pre><code>/**
     * Notify the host application of a resource request and allow the
     * application to return the data.  If the return value is null, the WebView
     * will continue to load the resource as usual.  Otherwise, the return
     * response and data will be used.  NOTE: This method is called on a thread
     * other than the UI thread so clients should exercise caution
     * when accessing private data or the view system.
     *
     * @param view The {@link android.webkit.WebView} that is requesting the
     *             resource.
     * @param request Object containing the details of the request.
     * @return A {@link android.webkit.WebResourceResponse} containing the
     *         response information or null if the WebView should load the
     *         resource itself.
     */
    public WebResourceResponse shouldInterceptRequest(WebView view,
            WebResourceRequest request) {
        return shouldInterceptRequest(view, request.getUrl().toString());
    }
</code></pre>
<p>&#x7B2C;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;@Deprecated&#xFF0C;&#x5373;&#x5728; SDK API 20 &#x53CA;&#x4EE5;&#x4E0B;&#x7684;&#x4F1A;&#x6267;&#x884C;&#x65B9;&#x6CD5;1&#xFF0C;SDK API 20 &#x4EE5;&#x4E0A;&#x7684;&#x4F1A;&#x6267;&#x884C;&#x65B9;&#x6CD5;2&#x3002;</p>
<h2 id="demo-&#x5B9E;&#x4F8B;"><a class="header-anchor" href="#demo-&#x5B9E;&#x4F8B;"></a>demo &#x5B9E;&#x4F8B;</h2>
<p>&#x6211;&#x4EEC;&#x7528;&#x4E00;&#x4E2A; map &#x6765;&#x4F20;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x7684; css&#x3001;js &#x6587;&#x4EF6;&#xFF0C;key&#x4E3A;&#x6587;&#x4EF6;&#x540D;(&#x4E0E;&#x73B0;&#x6709;html&#x6587;&#x4EF6;&#x4E0A;&#x52A0;&#x8F7D;&#x7684;&#x4E00;&#x81F4;&#xFF0C;&#x65B9;&#x4FBF;&#x5224;&#x65AD;)&#xFF0C;value&#x4E3A;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;<br>
map &#x662F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x7528; intent &#x4F20;&#x8F93;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x4E86; Serializable &#x63A5;&#x53E3;&#x7684;&#x7C7B;&#xFF0C;&#x7528;&#x6765;&#x4F20;&#x76F8;&#x5E94;&#x7684;&#x53C2;&#x6570;&#x3002;</p>
<pre><code>/**
 * Created on 17-2-8.
 */
public class SerializableMap implements Serializable {

    private Map&lt;String, String&gt; map;

    public Map&lt;String, String&gt; getMap() {
        return map;
    }

    public void setMap(Map&lt;String, String&gt; map) {
        this.map = map;
    }
}
</code></pre>
<p>&#x4E0B;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5B9E;&#x73B0;&#x4FEE;&#x6539;&#x6253;&#x5F00;&#x9875;&#x9762;&#x7684;&#x80CC;&#x666F;&#x8272;&#x3002;&#x9875;&#x9762;&#x7684;&#x539F;&#x59CB;&#x80CC;&#x666F;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;</p>
<div align="center">
<img style="width:300px;height:300px" data-original="/2017/02/08/android-webview-asyncload-css-js/original.jpg" class="lazy">
</div>
<p>&#x6211;&#x4EEC;&#x8981;&#x5C06;&#x9875;&#x9762;&#x7684;&#x80CC;&#x666F;&#x53D8;&#x6210;&#x7EA2;&#x8272;&#xFF0C;&#x9996;&#x5148;&#x4FEE;&#x6539;&#x4E00;&#x4E0B; css &#x6587;&#x4EF6;&#x7684; body &#x80CC;&#x666F;&#xFF1A;</p>
<pre><code>body {
    background: red !important;
}
</code></pre>
<p>&#x9996;&#x5148;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF1A;</p>
<pre><code>//&#x5C01;&#x88C5;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x7684;css
Map&lt;String, String&gt; map = new HashMap&lt;&gt;();
        map.put(&quot;style.css&quot;, &quot;file:///android_asset/style.css&quot;);
        
Intent intent = new Intent(MzAccountManager.getInstance().getContext(), HtmlLoginActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        if(map != null &amp;&amp; map.size() &gt; 0){
            SerializableMap serializableMap = new SerializableMap();
            serializableMap.setMap(map);
            Bundle bundle = new Bundle();
            bundle.putSerializable(&quot;map&quot;, serializableMap);//&#x4F20;&#x7ED9;activity
            intent.putExtras(bundle);
        }
        getContext().startActivity(intent);
</code></pre>
<p>&#x7136;&#x540E;&#x5728; activity &#x91CC;&#x9762;&#x53D6;&#x51FA;&#x6765;&#x4F7F;&#x7528;&#x5373;&#x53EF;&#xFF1A;</p>
<pre><code>/**
     * &#x52A0;&#x8F7D;&#x81EA;&#x5B9A;&#x4E49;&#x7684;css/js
     */
    private Map mExtraCssJsMap;
    
    SerializableMap serializableMap = (SerializableMap) intent.getSerializableExtra(&quot;map&quot;);
                if(serializableMap != null){
                    mExtraCssJsMap = serializableMap.getMap();
                }
</code></pre>
<p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x91CD;&#x8F7D; shouldInterceptRequest &#x63A5;&#x53E3;&#xFF0C;&#x9996;&#x5148;&#x5B9E;&#x73B0; SDK 20 &#x7248;&#x672C;&#x4EE5;&#x4E0A;&#x7684;&#xFF1A;</p>
<pre><code>private class AccountWebViewClient extends WebViewClient {

        public AccountWebViewClient() {
        }

        @Override
        public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) {
//            handleSslError(handler);
            handler.proceed();//&#x9047;&#x5230;&#x8BC1;&#x4E66;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x7EE7;&#x7EED;&#x6267;&#x884C;
        }

        @TargetApi(Build.VERSION_CODES.LOLLIPOP)
        @Override
        public WebResourceResponse shouldInterceptRequest(WebView view, WebResourceRequest request) {
            String url = request.getUrl().toString();
            if(mExtraCssJsMap != null &amp;&amp; mExtraCssJsMap.size() &gt; 0){
                Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = mExtraCssJsMap.entrySet().iterator();
                while (iterator.hasNext()){
                    Map.Entry&lt;String, String&gt; entry = iterator.next();
                    String key = entry.getKey();
                    String value = entry.getValue();
                    if(url.contains(key)){
                        WebResourceResponse response = null;
                        File fileCss = new File(value);
                        if(fileCss.exists()){
                            try {
                                InputStream inputStream = new FileInputStream(fileCss);//&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#xFF0C;&#x8FD4;&#x56DE;&#x81EA;&#x5B9A;&#x4E49;&#x7684; response
                                response = new WebResourceResponse(&quot;text/css&quot;, &quot;UTF-8&quot;, inputStream);
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        } else {
                            try {
                                response = new WebResourceResponse(&quot;text/css&quot;, &quot;UTF-8&quot;, getAssets().open(key));
                            } catch (IOException e) {
                                e.printStackTrace();
                            }
                        }
                        if(response != null){
                            return response;
                        }
                    }
                }
            }
            return super.shouldInterceptRequest(view, request);
        }
    }
</code></pre>
<p>&#x5176;&#x5B9E; SDK 20 &#x4EE5;&#x4E0B;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x5DEE;&#x4E0D;&#x591A;&#x7684;&#xFF0C;&#x5C31;&#x662F;&#x91CD;&#x8F7D;&#x7684;&#x65B9;&#x6CD5;&#x4E0D;&#x4E00;&#x6837;&#x800C;&#x5DF2;&#xFF1A;</p>
<pre><code>private class AccountWebViewClient extends WebViewClient {

        public AccountWebViewClient() {
        }

        @Override
        public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) {
//            handleSslError(handler);
            handler.proceed();//&#x9047;&#x5230;&#x8BC1;&#x4E66;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x7EE7;&#x7EED;&#x6267;&#x884C;
        }

        @Override
        public WebResourceResponse shouldInterceptRequest(WebView view, String url) {
            if(mExtraCssJsMap != null &amp;&amp; mExtraCssJsMap.size() &gt; 0){
                Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = mExtraCssJsMap.entrySet().iterator();
                while (iterator.hasNext()){
                    Map.Entry&lt;String, String&gt; entry = iterator.next();
                    String key = entry.getKey();
                    String value = entry.getValue();
                    if(url.contains(key)){
                        WebResourceResponse response = null;
                        File fileCss = new File(value);
                        if(fileCss.exists()){
                            try {
                                InputStream inputStream = new FileInputStream(fileCss);
                                response = new WebResourceResponse(&quot;text/css&quot;, &quot;UTF-8&quot;, inputStream);
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        } else {
                            try {
                                response = new WebResourceResponse(&quot;text/css&quot;, &quot;UTF-8&quot;, getAssets().open(key));
                            } catch (IOException e) {
                                e.printStackTrace();
                            }
                        }
                        if(response != null){
                            return response;
                        }
                    }
                }
            }
            return super.shouldInterceptRequest(view, url);
        }
    }
</code></pre>
<p>&#x901A;&#x8FC7;&#x62E6;&#x622A;&#x8BF7;&#x6C42;&#xFF0C;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x5B9A;&#x4E49;&#x7684; style.css &#x6587;&#x4EF6;&#xFF0C;&#x6253;&#x5F00;&#x9875;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x9875;&#x9762;&#x7684;&#x80CC;&#x666F;&#x8272;&#x5DF2;&#x7ECF;&#x53D8;&#x6210;&#x4E86;&#x7EA2;&#x8272;&#xFF1A;</p>
<div align="center">
<img style="width:300px;height:300px" data-original="/2017/02/08/android-webview-asyncload-css-js/red.jpg" class="lazy">
</div>
<p>&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x6587;&#x7AE0;&#xFF0C;&#x6BD4;&#x8F83;&#x8BE6;&#x7EC6;&#x7684;&#x5B9E;&#x73B0;&#xFF1A;<br>
<a href="http://stackoverflow.com/questions/8273991/webview-shouldinterceptrequest-example" target="_blank" rel="external">webview-shouldinterceptrequest-example</a></p>]]></content>
    
    <summary type="html">
    
      Android WebView 如何动态改变一个 html 页面原有样式？可以通过拦截请求，在加载 html 文件原有的 css/jss 文件前，将它们替换成自定义的新文件，这个具体要用到的就是 webview 的 shouldInterceptRequest 接口，重载此接口，然后返回重新生成的响应。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android Airbnb Lottie 复杂动画</title>
    <link href="http://ngudream.com/2017/02/05/android-airbnb-lottie/"/>
    <id>http://ngudream.com/2017/02/05/android-airbnb-lottie/</id>
    <published>2017-02-05T14:27:31.000Z</published>
    <updated>2017-02-05T14:49:54.326Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>&#x539F;&#x8C05;&#x94FE;&#x63A5;&#xFF1A;<a href="http://stormzhang.com/2017/02/03/airbnb-lottie-android/" target="_blank" rel="external">http://stormzhang.com/2017/02/03/airbnb-lottie-android/</a></p>
</blockquote>
<p>&#x65B0;&#x5E74;&#x7B2C;&#x4E00;&#x5929;&#x4E0A;&#x73ED;&#xFF0C;&#x6CA1;&#x60F3;&#x5230;&#x5C31;&#x7ACB;&#x6625;&#x4E86;&#xFF0C;&#x4FD7;&#x8BDD;&#x8BF4;&#xFF0C;&#x4E00;&#x5E74;&#x4E4B;&#x8BA1;&#x5728;&#x4E8E;&#x6625;&#xFF0C;&#x5168;&#x65B0;&#x7684; 17 &#x5E74;&#x5F00;&#x59CB;&#x5566;&#xFF0C;&#x6765;&#xFF0C;&#x6536;&#x62FE;&#x4E0B;&#x5FC3;&#x60C5;&#xFF0C;&#x6295;&#x5165;&#x5230;&#x5DE5;&#x4F5C;&#x4E2D;&#xFF0C;&#x64B8;&#x8D77;&#x8896;&#x5B50;&#xFF0C;&#x5C31;&#x662F;&#x5E72;&#xFF01;</p>
<p>&#x5C31;&#x5728;&#x524D;&#x51E0;&#x5929;&#xFF0C;Airbnb &#x5F00;&#x6E90;&#x4E86;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x53EB;&#x505A; Lottie&#xFF0C;&#x6211;&#x4E2A;&#x4EBA;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x7B80;&#x76F4;&#x7889;&#x5821;&#x4E86;&#xFF01;</p>
<p>&#x52A8;&#x753B;&#x76F8;&#x4FE1;&#x5927;&#x5BB6;&#x90FD;&#x4E0D;&#x964C;&#x751F;&#xFF0C;&#x5728; App &#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9002;&#x5F53;&#x7684;&#x4F7F;&#x7528;&#x52A8;&#x753B;&#x53EF;&#x4EE5;&#x63D0;&#x5347;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#xFF0C;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x4EA7;&#x54C1;&#x9526;&#x4E0A;&#x6DFB;&#x82B1;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x6211;&#x4EEC;&#x5F88;&#x5BB9;&#x6613;&#x5C31;&#x80FD;&#x5B9E;&#x73B0;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x5B9E;&#x73B0;&#x8D77;&#x6765;&#x5C31;&#x6BD4;&#x8F83;&#x9EBB;&#x70E6;&#x4E86;&#xFF0C;&#x6BD4;&#x5982;&#x4E0B;&#x56FE;&#x7684;&#x4E00;&#x4E9B;&#x52A8;&#x753B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/02/05/android-airbnb-lottie/Example1.gif" class="lazy">
</div>
<div align="center">
<img data-original="/2017/02/05/android-airbnb-lottie/Example2.gif" class="lazy">
</div>
<div align="center">
<img data-original="/2017/02/05/android-airbnb-lottie/Example3.gif" class="lazy">
</div>
<div align="center">
<img data-original="/2017/02/05/android-airbnb-lottie/Example4.gif" class="lazy">
</div>
<p>&#x600E;&#x4E48;&#x6837;&#xFF1F;&#x8FD9;&#x4E9B;&#x53EF;&#x4E0D;&#x662F;&#x7B80;&#x5355;&#x7684;&#x79FB;&#x52A8;&#x3001;&#x7F29;&#x653E;&#x3001;&#x65CB;&#x8F6C;&#x5C31;&#x641E;&#x5F97;&#x5B9A;&#x7684;&#xFF0C;&#x53EF;&#x80FD;&#x6709;&#x4E9B;&#x4EBA;&#x601D;&#x8003;&#x4E86;&#x4E4B;&#x540E;&#x5927;&#x6982;&#x6709;&#x4EE5;&#x4E0B;&#x5B9E;&#x73B0;&#x601D;&#x8DEF;&#xFF1A;</p>
<ul>
<li>&#x4F7F;&#x7528; Gif&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5F53;&#x7136;&#x53EF;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x4F7F;&#x7528; Gif &#x5360;&#x7528;&#x7A7A;&#x95F4;&#x8F83;&#x5927;&#xFF0C;&#x800C;&#x4E14;&#x9700;&#x8981;&#x4E3A;&#x5404;&#x79CD;&#x5C4F;&#x5E55;&#x5C3A;&#x5BF8;&#x3001;&#x5206;&#x8FA8;&#x7387;&#x505A;&#x9002;&#x914D;&#xFF0C;&#x56E0;&#x4E3A; Android &#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x539F;&#x751F; Gif &#x7684; api &#x652F;&#x6301;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x79CD;&#x65B9;&#x6848;&#x8FD8;&#x4F1A;&#x9047;&#x5230;&#x517C;&#x5BB9;&#x6027;&#x95EE;&#x9898;&#xFF1B;</li>
<li>&#x4F7F;&#x7528;&#x5E27;&#x52A8;&#x753B;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x8FD8;&#x4E0D;&#x5982;&#x4F7F;&#x7528; Gif&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x4F7F;&#x7528;&#x5E27;&#x52A8;&#x753B;&#x5360;&#x7528;&#x7A7A;&#x95F4;&#x6BD4; Gif &#x8FD8;&#x8981;&#x5927;&#x7684;&#x591A;&#xFF0C;&#x800C;&#x4E14;&#x4E00;&#x6837;&#x8981;&#x505A;&#x591A;&#x5C4F;&#x5E55;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x9002;&#x914D;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E0D;&#x4F1A;&#x9047;&#x5230;&#x517C;&#x5BB9;&#x6027;&#x95EE;&#x9898;&#xFF1B;</li>
<li>&#x4F7F;&#x7528;&#x89C6;&#x9891;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x5BA3;&#x4F20;&#x7247;&#x624D;&#x7528;&#x7684;&#x4E0A;&#x89C6;&#x9891;&#xFF0C;&#x4E00;&#x822C;&#x7684;&#x52A8;&#x753B;&#x8FDC;&#x4E0D;&#x9700;&#x8981;&#x7528;&#x89C6;&#x9891;&#x624D;&#x80FD;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x672A;&#x514D;&#x6709;&#x4E9B;&#x5927;&#x6750;&#x5C0F;&#x7528;&#x4E86;&#xFF0C;&#x800C;&#x4E14;&#x5360;&#x7528;&#x7A7A;&#x95F4;&#x4F9D;&#x7136;&#x5F88;&#x5927;&#x3002;</li>
</ul>
<p>&#x5C31;&#x6CA1;&#x6709;&#x66F4;&#x597D;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x4E86;&#x4E48;&#xFF1F;</p>
<p>&#x5F53;&#x7136;&#x6709;&#xFF0C;Android 5.x &#x4E4B;&#x540E;&#x63D0;&#x4F9B;&#x4E86;&#x5BF9; SVG &#x7684;&#x652F;&#x6301;&#xFF0C;&#x901A;&#x8FC7; VectorDrawable&#x3001;AnimatedVectorDrawable &#x7684;&#x7ED3;&#x5408;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4E00;&#x4E9B;&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x4F46;&#x662F;&#x517C;&#x5BB9;&#x6027;&#x662F;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x4E2A;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x6765;&#x89E3;&#x51B3;&#xFF0C;&#x4E0D;&#x8FC7;&#x6574;&#x4E2A;&#x5B9E;&#x73B0;&#x6D41;&#x7A0B;&#x975E;&#x5E38;&#x9EBB;&#x70E6;&#xFF0C;&#x6BCF;&#x6B21;&#x5168;&#x65B0;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x52A8;&#x753B;&#x90FD;&#x5F97;&#x91CD;&#x5934;&#x6765;&#x8FC7;&#xFF0C;&#x6700;&#x6700;&#x5173;&#x952E;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x516C;&#x53F8;&#x4E0B;&#x7684; App&#xFF0C;iOS &#x4E5F;&#x8981;&#x5B9E;&#x73B0;&#x4E00;&#x5957;&#x4E00;&#x6837;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x8D44;&#x6E90;&#x7684;&#x5360;&#x7528;&#x4E0E;&#x5F00;&#x53D1;&#x6210;&#x672C;&#x5C31;&#x663E;&#x5F97;&#x8FC7;&#x5927;&#x4E86;&#x3002;</p>
<p>&#x800C; Airbnb &#x5F00;&#x6E90;&#x7684;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x5B8C;&#x7F8E;&#x7684;&#x89E3;&#x51B3;&#x4EE5;&#x4E0A;&#x96BE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E0B;&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x3002;</p>
<p>&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x8981;&#x505A;&#x4E00;&#x4E2A;&#x5F15;&#x5BFC;&#x9875;&#x9762;&#x7684;&#x6B22;&#x8FCE;&#x52A8;&#x753B;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E00;&#x822C;&#x8BBE;&#x8BA1;&#x5E08;&#x4F1A;&#x7528; Adobe &#x65D7;&#x4E0B;&#x7684; After Effects &#xFF08;&#x7B80;&#x79F0; AE&#xFF09;&#x6765;&#x505A;&#x4E2A;&#x52A8;&#x753B;&#x51FA;&#x6765;&#xFF0C;&#x8BBE;&#x8BA1;&#x5E08;&#x7528; AE &#x505A;&#x4E2A;&#x52A8;&#x753B;&#x6BD4;&#x5DE5;&#x7A0B;&#x5E08;&#x7528;&#x4EE3;&#x7801;&#x53BB;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x52A8;&#x753B;&#x8981;&#x5FEB;&#x7684;&#x591A;&#x7684;&#x591A;&#xFF0C;&#x8C03;&#x6574;&#x8D77;&#x6765;&#x4E5F;&#x5F88;&#x65B9;&#x4FBF;&#xFF0C;&#x4E4B;&#x540E; AE &#x4E0A;&#x6709;&#x4E00;&#x6B3E;&#x63D2;&#x4EF6;&#x53EB;&#x505A; <a href="https://github.com/bodymovin/bodymovin" target="_blank" rel="external">Bodymovin</a>&#xFF0C;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x4E5F;&#x6BD4;&#x8F83;&#x5C4C;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6839;&#x636E; AE &#x4E0A;&#x7684;&#x52A8;&#x753B;&#x6587;&#x4EF6;&#x5BFC;&#x51FA; json &#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E2A; json &#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x4E86;&#x8BE5;&#x52A8;&#x753B;&#x7684;&#x4E00;&#x4E9B;&#x5173;&#x952E;&#x70B9;&#x7684;&#x5750;&#x6807;&#x4EE5;&#x53CA;&#x8FD0;&#x52A8;&#x8F68;&#x8FF9;&#xFF0C;&#x4E4B;&#x540E;&#x6211;&#x4EEC;&#x5728;&#x9879;&#x76EE;&#x4E2D;&#x5F15;&#x7528; Lottie &#x5F00;&#x6E90;&#x5E93;&#xFF0C;&#x5728;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x4E2D;&#x7B80;&#x5355;&#x7684;&#x52A0;&#x4E0A;&#x8FD9;&#x4E48;&#x4E00;&#x53E5;&#x5C31;&#x5B8C;&#x7F8E;&#x7684;&#x5B9E;&#x73B0;&#x4E86;&#x3002;</p>
<pre><code>&lt;com.airbnb.lottie.LottieAnimationView
    android:id=&quot;@+id/animation_view&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    app:lottie_fileName=&quot;hello-world.json&quot;
    app:lottie_loop=&quot;true&quot;
    app:lottie_autoPlay=&quot;true&quot; /&gt;
</code></pre>
<p>&#x6216;&#x8005;&#x4EE3;&#x7801;&#x4E2D;&#x8FD9;&#x6837;&#x4F7F;&#x7528;&#xFF1A;</p>
<pre><code>LottieAnimationView animationView = findViewById(R.id.animation_view);
animationView.setAnimation(&quot;hello-world.json&quot;);
animationView.loop(true);
</code></pre>
<p>&#x503C;&#x5F97;&#x4E00;&#x63D0;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x7684; hello-world.json &#x6587;&#x4EF6;&#x53EA;&#x9700;&#x8981;&#x653E;&#x5728; app/src/main/assets &#x76EE;&#x5F55;&#x4E0B;&#x5C31; ok &#x4E86;&#x3002;</p>
<p>&#x5F53;&#x7136;&#xFF0C;&#x8FD8;&#x6709;&#x66F4;&#x591A;&#x7684;&#x7528;&#x6CD5;&#xFF0C;&#x6BD4;&#x5982;&#x7ED9;&#x52A8;&#x753B;&#x6DFB;&#x52A0;&#x4E8B;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982;&#x63CF;&#x8FF0;&#x52A8;&#x753B;&#x7684; json &#x6587;&#x4EF6;&#x53EF;&#x4EE5;&#x8FDC;&#x7A0B;&#x66F4;&#x65B0;&#x4E0B;&#x8F7D;&#x5230;&#x672C;&#x5730;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x52A8;&#x58F0;&#x8272;&#x7684;&#x5B9A;&#x671F;&#x66F4;&#x65B0;&#x4F60;&#x7684;&#x52A8;&#x753B;&#x4E86;&#x3002;</p>
<p>&#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x5E93;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5145;&#x5206;&#x53D1;&#x6325;&#x6211;&#x4EEC;&#x7684;&#x60F3;&#x8C61;&#x529B;&#xFF0C;&#x5F88;&#x7B80;&#x5355;&#x65B9;&#x4FBF;&#x7684;&#x5C31;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x5957;&#x5F88;&#x9177;&#x70AB;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x4E2A;&#x5E93;&#x662F;&#x8DE8;&#x5E73;&#x53F0;&#x7684;&#xFF0C;&#x652F;&#x6301; Android&#x3001;iOS &#x4EE5;&#x53CA; ReactNative&#xFF0C;&#x5171;&#x7528;&#x4E00;&#x5957; json &#x52A8;&#x753B;&#x63CF;&#x8FF0;&#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5176;&#x5B9E; Facebook &#x524D;&#x6BB5;&#x65F6;&#x95F4;&#x5F00;&#x6E90;&#x4E86;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x7684;&#x5E93;&#x53EB;&#x505A; <a href="https://github.com/facebookincubator/Keyframes" target="_blank" rel="external">Keyframes</a>&#xFF0C;&#x4E5F;&#x662F;&#x8DE8;&#x5E73;&#x53F0;&#x7684;&#xFF0C;&#x4F46;&#x662F; Lottie &#x6BD4; Keyframes &#x652F;&#x6301;&#x7684;&#x7279;&#x6027;&#x66F4;&#x591A;&#xFF0C;&#x800C;&#x4E14;&#x636E; Airbnb &#x5B98;&#x65B9;&#x535A;&#x5BA2;&#x4ECB;&#x7ECD;&#xFF0C;&#x4EE5;&#x540E;&#x5BF9;&#x8BA9;&#x8FD9;&#x4E2A;&#x5E93;&#x652F;&#x6301;&#x66F4;&#x591A;&#x7684;&#x7279;&#x6027;&#x4E0E;&#x529F;&#x80FD;&#xFF0C;&#x4E0D;&#x5F97;&#x4E0D;&#x8BF4;&#xFF0C;&#x771F;&#x4E43;&#x826F;&#x5FC3;&#xFF01;</p>
<p>&#x6700;&#x540E;&#xFF0C;&#x8FD9;&#x4E2A;&#x5E93;&#x7684;&#x5F00;&#x6E90;&#x5730;&#x5740;&#x5728;&#x8FD9;&#x91CC;&#xFF1A;</p>
<ul>
<li>Android: <a href="https://github.com/airbnb/lottie-android" target="_blank" rel="external">https://github.com/airbnb/lottie-android</a></li>
<li>iOS: <a href="https://github.com/airbnb/lottie-ios" target="_blank" rel="external">https://github.com/airbnb/lottie-ios</a></li>
<li>ReactNative: <a href="https://github.com/airbnb/lottie-react-native" target="_blank" rel="external">https://github.com/airbnb/lottie-react-native</a></li>
</ul>
<p>&#x6700;&#x6700;&#x540E;&#xFF0C;Airbnb &#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A; sample apk&#xFF0C;&#x8003;&#x8651;&#x5230;&#x90E8;&#x5206;&#x4EBA;&#x5728; Google Play &#x4E0A;&#x4E0B;&#x8F7D; apk &#x6709;&#x4E9B;&#x56F0;&#x96BE;&#xFF0C;&#x6211;&#x4E5F;&#x8D34;&#x5FC3;&#x7684;&#x628A; sample apk &#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x4E86;&#xFF0C;&#x516C;&#x4F17;&#x53F7; AndroidDeveloper &#x540E;&#x53F0;&#x56DE;&#x590D;&#x300C;lottie&#x300D;&#x5173;&#x952E;&#x5B57;&#x83B7;&#x53D6;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      就在前几天，Airbnb 开源了一个项目叫做 Lottie，我个人觉得这个项目简直碉堡了！动画相信大家都不陌生，在 App 开发过程中，适当的使用动画可以提升用户体验，使我们的产品锦上添花，对于一些简单的动画，我们很容易就能实现，但是对于一些比较复杂的动画，实现起来就比较麻烦了。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android安全–DexClassLoader动态加载分析</title>
    <link href="http://ngudream.com/2017/02/05/android-dexclassloader/"/>
    <id>http://ngudream.com/2017/02/05/android-dexclassloader/</id>
    <published>2017-02-05T14:05:43.000Z</published>
    <updated>2017-02-05T14:22:27.156Z</updated>
    
    <content type="html"><![CDATA[<p>&#x770B;&#x5230;&#x539F;&#x6765;&#x6709;&#x628A;&#x539F;&#x59CB;&#x7684;dex&#x6587;&#x4EF6;&#x52A0;&#x5BC6;&#x4FDD;&#x5B58;&#xFF0C;&#x7136;&#x540E;&#x89E3;&#x5BC6;&#x540E;&#x4F7F;&#x7528;DexClassLoader&#x52A0;&#x8F7D;&#x6587;&#x4EF6;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x6765;&#x5206;&#x6790;&#x4E0B;DexClassLoader&#x7684;&#x52A0;&#x8F7D;&#x6D41;&#x7A0B;&#xFF1A;</p>
<h2 id="java-&#x90E8;&#x5206;"><a class="header-anchor" href="#java-&#x90E8;&#x5206;"></a>java &#x90E8;&#x5206;</h2>
<p>&#x6E90;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="http://androidxref.com/4.4_r1/xref/libcore/dalvik/src/main/java/dalvik/system/DexClassLoader.java" target="_blank" rel="external">http://androidxref.com/4.4_r1/xref/libcore/dalvik/src/main/java/dalvik/system/DexClassLoader.java</a></p>
<p>&#x8BE5;class&#x52A0;&#x8F7D;&#x5668;&#x662F;&#x52A0;&#x8F7D;&#x5305;&#x542B;classes.dex&#x6587;&#x4EF6;&#x7684;jar&#x6587;&#x4EF6;&#x6216;&#x8005;apk&#x6587;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x79C1;&#x6709;&#x7684;&#xFF0C;&#x53EF;&#x5199;&#x7684;&#x76EE;&#x5F55;&#x53BB;&#x7F13;&#x5B58;&#x4F18;&#x5316;&#x7684;classes&#x3002;&#x53EF;&#x4EE5;&#x7528;&#x4F7F;&#x7528;File dexoutputDir = context.getDir(&#x201C;dex&#x201D;,0);&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x5916;&#x90E8;&#x7F13;&#x5B58;&#xFF0C;&#x4EE5;&#x4FDD;&#x62A4;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x88AB;&#x4EE3;&#x7801;&#x6CE8;&#x5165;&#x3002;</p>
<p>&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public class DexClassLoader extends BaseDexClassLoader {
    &#x4E0B;&#x9762;&#x8FD9;&#x6BB5;&#x6CE8;&#x91CA;&#x8BE6;&#x7EC6;&#x5730;&#x8BF4;&#x660E;&#x4E86;&#x8FD9;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x5404;&#x4E2A;&#x53C2;&#x6570;&#x5730;&#x610F;&#x4E49;&#xFF0C;&#x4E0D;&#x4F5C;&#x9610;&#x8FF0;&#x4E86;&#xFF0C;&#x5E0C;&#x671B;&#x5927;&#x5BB6;&#x80FD;&#x591F;&#x8BA4;&#x771F;&#x9605;&#x8BFB;&#xFF0C;&#x601D;&#x8003;&#xFF1B;

public DexClassLoader(String dexPath, String optimizedDirectory,
            String libraryPath, ClassLoader parent) {
        super(dexPath, new File(optimizedDirectory), libraryPath, parent);
    }
}
</code></pre>
<p>dexpath&#x4E3A;jar&#x6216;apk&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x3002;</p>
<p>optimizedDirectory&#x4E3A;&#x4F18;&#x5316;dex&#x7F13;&#x5B58;&#x76EE;&#x5F55;&#x3002;</p>
<p>libraryPath&#x5305;&#x542B;native lib&#x7684;&#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#x3002;</p>
<p>parent&#x7236;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x3002;</p>
<p>&#x7136;&#x540E;&#x6267;&#x884C;&#x7684;&#x662F;&#x7236;&#x7C7B;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>super(dexPath, new File(optimizedDirectory), libraryPath, parent);
</code></pre>
<p>BaseDexClassLoader &#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public BaseDexClassLoader(String dexPath, File optimizedDirectory,
          String libraryPath, ClassLoader parent) {
    super(parent);
    this.pathList = new DexPathList(this, dexPath, libraryPath, optimizedDirectory);
}
</code></pre>
<p>&#x7B2C;&#x4E00;&#x53E5;&#x8C03;&#x7528;&#x7684;&#x8FD8;&#x662F;&#x7236;&#x7C7B;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;ClassLoader&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>protected ClassLoader(ClassLoader parentLoader) {
        this(parentLoader, false);
    }
    /*
     * constructor for the BootClassLoader which needs parent to be null.
     */
    ClassLoader(ClassLoader parentLoader, boolean nullAllowed) {
       if (parentLoader == null &amp;&amp; !nullAllowed) {
            throw new NullPointerException(&#x201C;parentLoader == null &amp;&amp; !nullAllowed&#x201D;);
      }
      parent = parentLoader;
}
</code></pre>
<p>&#x8BE5;&#x6784;&#x9020;&#x51FD;&#x6570;&#x628A;&#x4F20;&#x8FDB;&#x6765;&#x7684;&#x7236;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x8D4B;&#x7ED9;&#x4E86;&#x79C1;&#x6709;&#x53D8;&#x91CF;parent&#x3002;</p>
<p>&#x518D;&#x6765;&#x770B;</p>
<pre><code>this.pathList = new DexPathList(this, dexPath, libraryPath, optimizedDirectory);
</code></pre>
<p>pathList&#x4E3A;&#x8BE5;&#x7C7B;&#x7684;&#x79C1;&#x6709;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x7C7B;&#x578B;&#x4E3A;DexPathList&#xFF0C;&#x8FDB;&#x53BB;DexPathList&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>public DexPathList(ClassLoader definingContext, String dexPath,
            String libraryPath, File optimizedDirectory) {
    &#x2026;&#x2026;&#x2026;..    
this.dexElements = makeDexElements(splitDexPath(dexPath), optimizedDirectory,
                                           suppressedExceptions);
    &#x2026;&#x2026;&#x2026;..
}
</code></pre>
<p>&#x524D;&#x9762;&#x662F;&#x4E00;&#x4E9B;&#x5BF9;&#x4E8E;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x7684;&#x9A8C;&#x8BC1;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;&#x4E86;makeDexElements&#x3002;</p>
<pre><code>private static Element[] makeDexElements(ArrayList&lt;File&gt; files, File optimizedDirectory,
                                             ArrayList&lt;IOException&gt; suppressedExceptions) {
ArrayList&lt;Element&gt; elements = new ArrayList&lt;Element&gt;();
        for (File file : files) {
            File zip = null;
            DexFile dex = null;
            String name = file.getName();

            if (name.endsWith(DEX_SUFFIX)) {               //dex&#x6587;&#x4EF6;&#x5904;&#x7406;
                // Raw dex file (not inside a zip/jar).
                try {
                    dex = loadDexFile(file, optimizedDirectory);
                } catch (IOException ex) {
                    System.logE(&#x201C;Unable to load dex file: &#x201D; + file, ex);
                }
            } else if (name.endsWith(APK_SUFFIX) || name.endsWith(JAR_SUFFIX)
                    || name.endsWith(ZIP_SUFFIX)) {   //apk&#xFF0C;jar&#xFF0C;zip&#x6587;&#x4EF6;&#x5904;&#x7406;
                zip = file;

                try {
                    dex = loadDexFile(file, optimizedDirectory);
                } catch (IOException suppressed) {
                    suppressedExceptions.add(suppressed);
                }
            } else if (file.isDirectory()) {
                elements.add(new Element(file, true, null, null));
            } else {
                System.logW(&#x201C;Unknown file type for: &#x201D; + file);
            }

            if ((zip != null) || (dex != null)) {
                elements.add(new Element(file, false, zip, dex));
            }
        }

        return elements.toArray(new Element[elements.size()]);
    }
}
</code></pre>
<p>&#x4E0D;&#x7BA1;&#x662F;dex&#x6587;&#x4EF6;&#xFF0C;&#x8FD8;&#x662F;apk&#x6587;&#x4EF6;&#x6700;&#x7EC8;&#x52A0;&#x8F7D;&#x7684;&#x90FD;&#x662F;loadDexFile&#xFF0C;&#x8DDF;&#x8FDB;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>private static DexFile loadDexFile(File file, File optimizedDirectory)
            throws IOException {
        if (optimizedDirectory == null) {
            return new DexFile(file);
        } else {
            String optimizedPath = optimizedPathFor(file, optimizedDirectory);
            return DexFile.loadDex(file.getPath(), optimizedPath, 0);
        }
}
</code></pre>
<p>&#x5982;&#x679C;optimizedDirectory&#x4E3A;null&#x5C31;&#x4F1A;&#x8C03;&#x7528;openDexFile(fileName, null, 0);&#x52A0;&#x8F7D;&#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5426;&#x5219;&#x8C03;&#x7528;DexFile.loadDex(file.getPath(), optimizedPath, 0);</p>
<p>&#x800C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E5F;&#x53EA;&#x662F;&#x76F4;&#x63A5;&#x8C03;&#x7528;new DexFile(sourcePathName, outputPathName, flags);</p>
<p>&#x91CC;&#x9762;&#x8C03;&#x7528;&#x7684;&#x4E5F;&#x662F;openDexFile(sourceName, outputName, flags);</p>
<p>&#x6240;&#x4EE5;&#x6700;&#x540E;&#x90FD;&#x662F;&#x8C03;&#x7528;openDexFile&#xFF0C;&#x8DDF;&#x8FDB;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>private static int openDexFile(String sourceName, String outputName,
        int flags) throws IOException {
        return openDexFileNative(new File(sourceName).getCanonicalPath(),
                                 (outputName == null) ? null : new File(outputName).getCanonicalPath(),
                                 flags);
}
</code></pre>
<p>&#x800C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x662F;so&#x7684;openDexFileNative&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x3002;&#x6253;&#x5F00;&#x6210;&#x529F;&#x5219;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;cookie&#x3002;</p>
<h2 id="native-&#x90E8;&#x5206;"><a class="header-anchor" href="#native-&#x90E8;&#x5206;"></a>native &#x90E8;&#x5206;</h2>
<p>&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x5206;&#x6790;native&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x90E8;&#x5206;&#x4E86;&#x3002;</p>
<p>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="http://androidxref.com/4.4_r1/xref/dalvik/vm/native/dalvik_system_DexFile.cpp" target="_blank" rel="external">http://androidxref.com/4.4_r1/xref/dalvik/vm/native/dalvik_system_DexFile.cpp</a></p>
<pre><code>static void Dalvik_dalvik_system_DexFile_openDexFileNative(const u4* args,
    JValue* pResult)
{
    &#x2026;&#x2026;&#x2026;&#x2026;&#x2026;
if (hasDexExtension(sourceName)
            &amp;&amp; dvmRawDexFileOpen(sourceName, outputName, &amp;pRawDexFile, false) == 0) {
        ALOGV(&#x201C;Opening DEX file &#x2018;%s&#x2019; (DEX)&#x201D;, sourceName);

        pDexOrJar = (DexOrJar*) malloc(sizeof(DexOrJar));
        pDexOrJar-&gt;isDex = true;
        pDexOrJar-&gt;pRawDexFile = pRawDexFile;
        pDexOrJar-&gt;pDexMemory = NULL;
    } else if (dvmJarFileOpen(sourceName, outputName, &amp;pJarFile, false) == 0) {
        ALOGV(&#x201C;Opening DEX file &#x2018;%s&#x2019; (Jar)&#x201D;, sourceName);

        pDexOrJar = (DexOrJar*) malloc(sizeof(DexOrJar));
        pDexOrJar-&gt;isDex = false;
        pDexOrJar-&gt;pJarFile = pJarFile;
        pDexOrJar-&gt;pDexMemory = NULL;
    } else {
        ALOGV(&#x201C;Unable to open DEX file &#x2018;%s&#x2019;&#x201D;, sourceName);
        dvmThrowIOException(&#x201C;unable to open DEX file&#x201D;);
    }
    &#x2026;&#x2026;&#x2026;&#x2026;&#x2026;
}
</code></pre>
<p>&#x8FD9;&#x91CC;&#x4F1A;&#x6839;&#x636E;&#x662F;&#x5426;&#x4E3A;dex&#x6587;&#x4EF6;&#x6216;&#x8005;&#x5305;&#x542B;classes.dex&#x6587;&#x4EF6;&#x7684;jar&#xFF0C;&#x5206;&#x522B;&#x8C03;&#x7528;&#x51FD;&#x6570;dvmRawDexFileOpen&#x548C;dvmJarFileOpen&#x6765;&#x5904;&#x7406;&#xFF0C;&#x6700;&#x7EC8;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;DexOrJar&#x7684;&#x7ED3;&#x6784;&#x3002;</p>
<p>&#x9996;&#x5148;&#x6765;&#x770B;dvmRawDexFileOpen&#x51FD;&#x6570;&#x7684;&#x5904;&#x7406;&#xFF1A;</p>
<pre><code>int dvmRawDexFileOpen(const char* fileName, const char* odexOutputName,
    RawDexFile** ppRawDexFile, bool isBootstrap)
{
    .................
    dexFd = open(fileName, O_RDONLY);
    if (dexFd &lt; 0) goto bail;

    /* If we fork/exec into dexopt, don&apos;t let it inherit the open fd. */
    dvmSetCloseOnExec(dexFd);

    //&#x6821;&#x9A8C;&#x524D;8&#x4E2A;&#x5B57;&#x8282;&#x7684;magic&#x662F;&#x5426;&#x6B63;&#x786E;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x6821;&#x9A8C;&#x548C;&#x4FDD;&#x5B58;&#x5230;adler32
    if (verifyMagicAndGetAdler32(dexFd, &amp;adler32) &lt; 0) {
        ALOGE(&quot;Error with header for %s&quot;, fileName);
        goto bail;
    }
    //&#x5F97;&#x5230;&#x6587;&#x4EF6;&#x4FEE;&#x6539;&#x65F6;&#x95F4;&#x4EE5;&#x53CA;&#x6587;&#x4EF6;&#x5927;&#x5C0F;
   if (getModTimeAndSize(dexFd, &amp;modTime, &amp;fileSize) &lt; 0) {
        ALOGE(&quot;Error with stat for %s&quot;, fileName);
        goto bail;
    }
    .................
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dexOptCreateEmptyHeader,&#x6784;&#x9020;&#x4E86;&#x4E00;&#x4E2A;DexOptHeader&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x5199;&#x5165;fd&#x5E76;&#x8FD4;&#x56DE;
    optFd = dvmOpenCachedDexFile(fileName, cachedName, modTime,
        adler32, isBootstrap, &amp;newFile, /*createIfMissing=*/true);

    if (optFd &lt; 0) {
        ALOGI(&quot;Unable to open or create cache for %s (%s)&quot;,
                fileName, cachedName);
        goto bail;
    }
    locked = true;

       //&#x5982;&#x679C;&#x6210;&#x529F;&#x751F;&#x4E86;opt&#x5934;
    if (newFile) {
        u8 startWhen, copyWhen, endWhen;
        bool result;
       off_t dexOffset;

        dexOffset = lseek(optFd, 0, SEEK_CUR);
        result = (dexOffset &gt; 0);

        if (result) {
            startWhen = dvmGetRelativeTimeUsec();
            // &#x5C06;dex&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4ECE;dexOffset&#x7684;&#x504F;&#x79FB;&#x5904;&#x5F00;&#x59CB;&#x5199;
            result = copyFileToFile(optFd, dexFd, fileSize) == 0;
            copyWhen = dvmGetRelativeTimeUsec();
        }

        if (result) {
            //&#x5BF9;dex&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x4F18;&#x5316;
            result = dvmOptimizeDexFile(optFd, dexOffset, fileSize,
                fileName, modTime, adler32, isBootstrap);
        }

        if (!result) {
            ALOGE(&quot;Unable to extract+optimize DEX from &apos;%s&apos;&quot;, fileName);
            goto bail;
        }

        endWhen = dvmGetRelativeTimeUsec();
        ALOGD(&quot;DEX prep &apos;%s&apos;: copy in %dms, rewrite %dms&quot;,
            fileName,
            (int) (copyWhen - startWhen) / 1000,
            (int) (endWhen - copyWhen) / 1000);
    }

     //dvmDexFileOpenFromFd&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6700;&#x4E3B;&#x8981;&#x5728;&#x8FD9;&#x91CC;&#x5E72;&#x4E86;&#x4E24;&#x4EF6;&#x4E8B;&#x60C5;
     // 1.&#x5C06;&#x4F18;&#x5316;&#x540E;&#x5F97;dex&#x6587;&#x4EF6;&#xFF08;&#x4E5F;&#x5C31;&#x662F;odex&#x6587;&#x4EF6;&#xFF09;&#x901A;&#x8FC7;mmap&#x6620;&#x5C04;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;mprotect&#x4FEE;&#x6539;&#x5B83;&#x7684;&#x6620;&#x5C04;&#x5185;&#x5B58;&#x4E3A;&#x53EA;&#x8BFB;&#x6743;&#x9650;
     // 2.&#x5C06;&#x6620;&#x5C04;&#x4E3A;&#x53EA;&#x8BFB;&#x7684;&#x8FD9;&#x5757;dex&#x6570;&#x636E;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5168;&#x90E8;&#x63D0;&#x53D6;&#x5230;DexFile&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E2D;&#x53BB;
    if (dvmDexFileOpenFromFd(optFd, &amp;pDvmDex) != 0) {
        ALOGI(&quot;Unable to map cached %s&quot;, fileName);
        goto bail;
    }

    if (locked) {
        /* unlock the fd */
       if (!dvmUnlockCachedDexFile(optFd)) {
            /* uh oh -- this process needs to exit or we&apos;ll wedge the system */
            ALOGE(&quot;Unable to unlock DEX file&quot;);
            goto bail;
        }
        locked = false;
    }

    ALOGV(&quot;Successfully opened &apos;%s&apos;&quot;, fileName);
    //&#x586B;&#x5145;&#x7ED3;&#x6784;&#x4F53; RawDexFile
    *ppRawDexFile = (RawDexFile*) calloc(1, sizeof(RawDexFile));
    (*ppRawDexFile)-&gt;cacheFileName = cachedName;
   (*ppRawDexFile)-&gt;pDvmDex = pDvmDex;
    cachedName = NULL;      // don&apos;t free it below
    result = 0;

bail:
    free(cachedName);
    if (dexFd &gt;= 0) {
        close(dexFd);
    }
    if (optFd &gt;= 0) {
        if (locked)
            (void) dvmUnlockCachedDexFile(optFd);
        close(optFd);
    }
    return result;
}
</code></pre>
<p>&#x6700;&#x540E;&#x6210;&#x529F;&#x7684;&#x8BDD;&#xFF0C;&#x586B;&#x5145;RawDexFile&#x3002;</p>
<p>dvmJarFileOpen&#x7684;&#x4EE3;&#x7801;&#x5904;&#x7406;&#x4E5F;&#x662F;&#x5DEE;&#x4E0D;&#x591A;&#x7684;&#x3002;</p>
<pre><code>int dvmJarFileOpen(const char* fileName, const char* odexOutputName,
    JarFile** ppJarFile, bool isBootstrap)
{
    ...
    ...
    ...
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dexZipOpenArchive&#x6765;&#x6253;&#x5F00;zip&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x7F13;&#x5B58;&#x5230;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x91CC;
    if (dexZipOpenArchive(fileName, &amp;archive) != 0)
        goto bail;
    archiveOpen = true;
    ...
    //&#x8FD9;&#x884C;&#x4EE3;&#x7801;&#x8BBE;&#x7F6E;&#x5F53;&#x6267;&#x884C;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5173;&#x95ED;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x53E5;&#x67C4;
    dvmSetCloseOnExec(dexZipGetArchiveFd(&amp;archive));
    ...
    //&#x4F18;&#x5148;&#x5904;&#x7406;&#x5DF2;&#x7ECF;&#x4F18;&#x5316;&#x4E86;&#x7684;Dex&#x6587;&#x4EF6;
    fd = openAlternateSuffix(fileName, &quot;odex&quot;, O_RDONLY, &amp;cachedName);
    ...
    //&#x4ECE;&#x538B;&#x7F29;&#x5305;&#x91CC;&#x627E;&#x5230;Dex&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x6253;&#x5F00;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;
    entry = dexZipFindEntry(&amp;archive, kDexInJarName);
    ...
    //&#x628A;&#x672A;&#x7ECF;&#x8FC7;&#x4F18;&#x5316;&#x7684;Dex&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#x5904;&#x7406;&#xFF0C;&#x5E76;&#x8F93;&#x51FA;&#x5230;&#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;
    if (odexOutputName == NULL) {
                cachedName = dexOptGenerateCacheFileName(fileName,
                                kDexInJarName);
    }
    ...
    //&#x521B;&#x5EFA;&#x7F13;&#x5B58;&#x7684;&#x4F18;&#x5316;&#x6587;&#x4EF6;
    fd = dvmOpenCachedDexFile(fileName, cachedName,
                    dexGetZipEntryModTime(&amp;archive, entry),
                    dexGetZipEntryCrc32(&amp;archive, entry),
                    isBootstrap, &amp;newFile, /*createIfMissing=*/true);
    ...
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dexZipExtractEntryToFile&#x4ECE;&#x538B;&#x7F29;&#x5305;&#x91CC;&#x89E3;&#x538B;&#x6587;&#x4EF6;&#x51FA;&#x6765;
    if (result) {
                    startWhen = dvmGetRelativeTimeUsec();
                    result = dexZipExtractEntryToFile(&amp;archive, entry, fd) == 0;
                    extractWhen = dvmGetRelativeTimeUsec();
                 }
    ...
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dvmOptimizeDexFile&#x5BF9;&#xFF24;ex&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#x5904;&#x7406;
    if (result) {
                    result = dvmOptimizeDexFile(fd, dexOffset,
                                dexGetZipEntryUncompLen(&amp;archive, entry),
                                fileName,
                                dexGetZipEntryModTime(&amp;archive, entry),
                                dexGetZipEntryCrc32(&amp;archive, entry),
                                isBootstrap);
                }
    ...
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dvmDexFileOpenFromFd&#x6765;&#x7F13;&#x5B58;dex&#x6587;&#x4EF6;
    //&#x5E76;&#x5206;&#x6790;&#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x6BD4;&#x5982;&#x6807;&#x8BB0;&#x662F;&#x5426;&#x4F18;&#x5316;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x901A;&#x8FC7;&#x7B7E;&#x540D;&#x68C0;&#x67E5;Dex&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5408;&#x6CD5;
    if (dvmDexFileOpenFromFd(fd, &amp;pDvmDex) != 0) {
        ALOGI(&quot;Unable to map %s in %s&quot;, kDexInJarName, fileName);
        goto bail;
    }
    ...
    //&#x4FDD;&#x5B58;&#x6587;&#x4EF6;&#x5230;&#x7F13;&#x5B58;&#x91CC;&#xFF0C;&#x6807;&#x8BB0;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x53E5;&#x67C4;&#x5DF2;&#x7ECF;&#x4FDD;&#x5B58;&#x5230;&#x7F13;&#x5B58;
    if (locked) {
        /* unlock the fd */
        if (!dvmUnlockCachedDexFile(fd)) {
            /* uh oh -- this process needs to exit or we&apos;ll wedge the system */
            ALOGE(&quot;Unable to unlock DEX file&quot;);
            goto bail;
        }
        locked = false;
    }
    ...
     //&#x8BBE;&#x7F6E;&#x4E00;&#x4E9B;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x8FD4;&#x56DE;&#x524D;&#x9762;&#x7684;&#x51FD;&#x6570;&#x5904;&#x7406;&#x3002;
    *ppJarFile = (JarFile*) calloc(1, sizeof(JarFile));
    (*ppJarFile)-&gt;archive = archive;
    (*ppJarFile)-&gt;cacheFileName = cachedName;
    (*ppJarFile)-&gt;pDvmDex = pDvmDex;
    cachedName = NULL;      // don&apos;t free it below
    result = 0;
    ...

}
</code></pre>
<p>&#x6700;&#x540E;&#x6210;&#x529F;&#x7684;&#x8BDD;&#xFF0C;&#x586B;&#x5145;JarFile&#x3002;</p>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="http://bbs.pediy.com/showthread.php?t=199230" target="_blank" rel="external">http://bbs.pediy.com/showthread.php?t=199230</a></li>
<li><a href="http://0nly3nd.sinaapp.com/?p=688" target="_blank" rel="external">http://0nly3nd.sinaapp.com/?p=688</a></li>
<li><a href="http://blog.csdn.net/roland_sun/article/details/47183119" target="_blank" rel="external">http://blog.csdn.net/roland_sun/article/details/47183119</a></li>
</ul>
<blockquote>
<p>&#x539F;&#x6587;&#x94FE;&#x63A5;&#xFF1A;<a href="http://www.blogfshare.com/dexclassloader.html" target="_blank" rel="external">http://www.blogfshare.com/dexclassloader.html</a></p>
</blockquote>]]></content>
    
    <summary type="html">
    
      看到原来有把原始的dex文件加密保存，然后解密后使用DexClassLoader加载文件的方法，就来分析下DexClassLoader的加载流程。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>笔者博客源代码</title>
    <link href="http://ngudream.com/2017/01/24/n-hexo-blog/"/>
    <id>http://ngudream.com/2017/01/24/n-hexo-blog/</id>
    <published>2017-01-24T09:35:19.000Z</published>
    <updated>2017-02-04T15:29:35.336Z</updated>
    
    <content type="html"><![CDATA[<div><img class="pic lazy" data-original="/2017/01/24/n-hexo-blog/1.gif" style="float:left; margin-right:16px" alt="">
<img class="pic lazy" id="img_right" data-original="/2017/01/24/n-hexo-blog/2.gif" style="float:right; margin-right:16px" alt="">
<span>&#x53F7;&#x5916;&#x53F7;&#x5916;&#xFF01;&#xFF01; &#x7B14;&#x8005;&#x5BF9;&#x535A;&#x5BA2;&#x4FEE;&#x6539;&#x7684;&#x6E90;&#x7801;&#x5DF2;&#x653E;&#x5230;<a href="https://github.com/ngudream/N-Hexo-Blog" target="_blank"> github </a>&#x4E0A;&#x3002;&#x5306;&#x5306;&#x6765;&#x5306;&#x5306;&#x53BB;&#x4F60;&#x662F;&#x4F55;&#x610F;&#xFF1F;&#x6765;&#x4E86;&#x5C31;&#x4E0A;&#x53BB;&#x770B;&#x770B;&#x5457;&#x3002;&#x95EE;&#x541B;&#x4F55;&#x5904;&#x53BB;&#xFF1F;&#x5C3D;&#x5728;&#x4E0D;&#x8A00;&#x4E2D;&#x3002;&#x201C;&#x6D45;&#x6D45;&#x6C34;&#xFF0C;&#x957F;&#x60A0;&#x60A0;&#xFF0C;&#x6765;&#x65E0;&#x5C3D;&#xFF0C;&#x53BB;&#x65E0;&#x4F11;&#x3002;&#x66F2;&#x66F2;&#x6298;&#x6298;&#x5411;&#x4E1C;&#x6D41;&#xFF0C;&#x5C71;&#x5C71;&#x5CAD;&#x5CAD;&#x96BE;&#x963B;&#x7559;&#x3002;&#x95EE;&#x4F0A;&#x5954;&#x817E;&#x4F55;&#x65F6;&#x6B47;&#xFF0C;&#x4E0D;&#x5230;&#x5927;&#x6D77;&#x4E0D;&#x56DE;&#x5934;&#x3002;&#x201D;<a style="color:#660066">&#x5B9E;&#x9A8C;&#x6027;&#x7684;&#x52A0;&#x5165;&#x4E86;&#xFF08;&#x5751;&#x6BD4;&#x8F83;&#x591A;^_~&#xFF09;&#xFF1A;InstantClick&#xFF0C;&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x4F53;&#x9A8C;&#x4E00;&#x4E0B;&#x6587;&#x7AE0;&#x7684;&#x52A0;&#x8F7D;&#x901F;&#x5EA6;</a>&#x3002;</span></div>
<script>
if(navigator.userAgent.match(/(iPhone|iPod|Android|ios|Opera Mini|BlackBerry|webOS)/i)){
$("#img_right").remove();
}
</script>
<a id="more"></a>
<br>
<br>
<p><strong>github&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/ngudream/N-Hexo-Blog" target="_blank" rel="external">https://github.com/ngudream/N-Hexo-Blog</a></strong></p>
<p><strong>&#x4FEE;&#x6539;&#x81EA; <a href="http://moxfive.xyz/" target="_blank" rel="external">MOxFIVE</a> &#x7684; <a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">yelee</a> &#x4E3B;&#x9898;</strong></p>
<h2 id="&#x5B89;&#x88C5;node-js"><a class="header-anchor" href="#&#x5B89;&#x88C5;node-js"></a>&#x5B89;&#x88C5;Node.js</h2>
<pre><code>sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get update
sudo apt-get install nodejs
</code></pre>
<h2 id="&#x5B89;&#x88C5;hexo"><a class="header-anchor" href="#&#x5B89;&#x88C5;hexo"></a>&#x5B89;&#x88C5;hexo</h2>
<pre><code>sudo npm install hexo -g
</code></pre>
<h2 id="&#x63D2;&#x4EF6;&#x5B89;&#x88C5;"><a class="header-anchor" href="#&#x63D2;&#x4EF6;&#x5B89;&#x88C5;"></a>&#x63D2;&#x4EF6;&#x5B89;&#x88C5;</h2>
<p>&#xFF08;1&#xFF09;&#x5B89;&#x88C5;hexo-deployer-Git</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre>
<p>&#xFF08;2&#xFF09;&#x5B57;&#x6570;&#x7EDF;&#x8BA1;&#x63D2;&#x4EF6;</p>
<pre><code>npm install hexo-wordcount --save
</code></pre>
<p>&#xFF08;3&#xFF09;&#x7528;&#x4E8E;&#x751F;&#x6210;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x7F51;&#x7AD9;&#x5730;&#x56FE;</p>
<pre><code>npm install hexo-generator-sitemap --save
</code></pre>
<p>&#xFF08;4&#xFF09;&#x535A;&#x5BA2;&#x5907;&#x4EFD;&#x8BF7;&#x53C2;&#x8003;</p>
<p><a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">https://github.com/coneycode/hexo-git-backup</a></p>
<p>&#xFF08;5&#xFF09;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x7AD9;&#x5185;&#x641C;&#x7D22;</p>
<p><a href="https://github.com/androiddevelop/hexo-search" target="_blank" rel="external">https://github.com/androiddevelop/hexo-search</a></p>
<p>&#xFF08;6&#xFF09;&#x5DE6;&#x8FB9;&#x62E6;&#x7684;&#x7AD9;&#x5185;&#x641C;&#x7D22;&#x4F18;&#x5316;</p>
<p><a href="http://www.tuicool.com/articles/ZRZnErq" target="_blank" rel="external">http://www.tuicool.com/articles/ZRZnErq</a></p>
<p><a href="http://gaomf.cn/2016/10/10/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2Yilia%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/" target="_blank" rel="external">http://gaomf.cn/2016/10/10/&#x4E3A;Hexo&#x535A;&#x5BA2;Yilia&#x4E3B;&#x9898;&#x6DFB;&#x52A0;&#x672C;&#x5730;&#x7AD9;&#x5185;&#x641C;&#x7D22;&#x529F;&#x80FD;/</a></p>
<p>&#x7B14;&#x8005;&#x4FEE;&#x6539;&#x7684;Hexo\node_modules\hexo-generator-search&#x4E0B;&#x7684;&#x6587;&#x4EF6;index.js&#x3001;search.ejs&#x5DF2;&#x9644;&#x4E0A;&#xFF0C;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x751F;&#x6210;&#x7684;search.xml&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x3002;</p>
<p>&#xFF08;7&#xFF09;&#x4EE3;&#x7801;&#x9AD8;&#x4EAE;</p>
<p><a href="http://ngudream.com/2016/09/13/hexo-install-prettify/">http://ngudream.com/2016/09/13/hexo-install-prettify/</a></p>
<p>&#xFF08;8&#xFF09;css&#x3001;js&#x3001;image&#x7B49;&#x538B;&#x7F29;</p>
<p><a href="http://luckykun.com/work/2016-07-10/hexo-faster.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">http://luckykun.com/work/2016-07-10/hexo-faster.html?utm_source=tuicool&amp;utm_medium=referral</a></p>
<p>&#x7B14;&#x8005;&#x4FEE;&#x6539;&#x7684;gulpfile.js&#x6587;&#x4EF6;&#x4E5F;&#x5DF2;&#x9644;&#x4E0A;&#x3002;</p>
<p>&#xFF08;9&#xFF09;&#x535A;&#x5BA2;&#x56FE;&#x7247;&#x6587;&#x4EF6;&#x5939;&#xFF0C;hexo new page&#x7684;&#x65F6;&#x5019;&#x540C;&#x65F6;&#x5728;_post&#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x540C;&#x540D;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x8FD9;&#x6837;&#x6BCF;&#x7BC7;&#x6587;&#x7AE0;&#x7528;&#x5230;&#x7684;&#x56FE;&#x7247;&#x5C31;&#x662F;&#x5355;&#x72EC;&#x653E;&#x5728;&#x76F8;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF0C;&#x65B9;&#x4FBF;&#x5BFB;&#x627E;&#x3001;&#x5904;&#x7406;&#x3002;</p>
<p><a href="http://www.jianshu.com/p/c2ba9533088a" target="_blank" rel="external">http://www.jianshu.com/p/c2ba9533088a</a></p>
<h2 id="&#x7F51;&#x9875;&#x52A0;&#x901F;-&#x5B9E;&#x9A8C;&#x6027;"><a class="header-anchor" href="#&#x7F51;&#x9875;&#x52A0;&#x901F;-&#x5B9E;&#x9A8C;&#x6027;"></a>&#x7F51;&#x9875;&#x52A0;&#x901F;&#xFF08;&#x5B9E;&#x9A8C;&#x6027;&#xFF09;</h2>
<p>&#x8D81;&#x5FEB;&#x653E;&#x5047;&#x8FD9;&#x4E24;&#x5929;&#xFF0C;&#x5DE5;&#x4F5C;&#x4E0A;&#x6CA1;&#x4EC0;&#x4E48;&#x4E8B;&#x505A;&#xFF08;&#x5176;&#x5B9E;&#x662F;&#x4E0D;&#x60F3;&#x505A;*<sup>&#xF7;</sup>*&#xFF09;&#xFF0C;&#x5B9E;&#x9A8C;&#x6027;&#x7684;&#x52A0;&#x5165;&#x4E86; <a href="http://instantclick.io/" target="_blank" rel="external">InstantClick</a>&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x52A0;&#x901F;&#x4F60;&#x7684;&#x7F51;&#x7AD9;&#x54CD;&#x5E94;&#x901F;&#x5EA6;&#x3002;&#x539F;&#x7406;&#x5C31;&#x662F;&#x5728;&#x8BBF;&#x95EE;&#x8005;&#x70B9;&#x51FB;&#x4E00;&#x4E2A;&#x94FE;&#x63A5;&#x4E4B;&#x524D;&#xFF0C;&#x9F20;&#x6807;&#x4F1A;&#x60AC;&#x505C;&#x5728;&#x94FE;&#x63A5;&#x4E0A;&#x9762;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x4E8B;&#x4EF6;&#x4E4B;&#x95F4;&#x901A;&#x5E38;&#x6709;200ms~300ms&#x7684;&#x95F4;&#x9694;&#xFF0C;InstantClick &#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x9884;&#x52A0;&#x8F7D;&#x9875;&#x9762;&#x3002;</p>
<p>&#x56E0;&#x4E3A;&#x4F7F;&#x7528; InstantClick &#x4F1A;&#x5E26;&#x6765;&#x6BD4;&#x8F83;&#x591A;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x76F4;&#x6CA1;&#x6253;&#x5F00;&#x8FD9;&#x4E2A;&#x5F00;&#x5173;&#xFF0C;&#x73B0;&#x5728;&#x6709;&#x65F6;&#x95F4;&#x4E86;&#xFF0C;&#x507F;&#x8BD5;&#x7740;&#x89E3;&#x51B3;&#x4E86;&#x90E8;&#x5206;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x6709;&#x6BD4;&#x8F83;&#x591A;&#x7684;bug&#xFF0C;&#x73B0;&#x5728;&#x53EA;&#x5F00;&#x653E;&#x4E86;<strong>&#x6587;&#x7AE0;&#x4F7F;&#x7528; InstantClick</strong>&#xFF0C;&#x5DE6;&#x8FB9;&#x680F;&#x5404;&#x9879;&#x76EE;&#x8FD8;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#xFF0C;&#x5E74;&#x524D;&#x6CA1;&#x65F6;&#x95F4;&#x4FEE;&#x6539;bug&#x4E86;&#x3002;<strong>&#x6B22;&#x8FCE;&#x4E0B;&#x8F7D;&#x8BD5;&#x7528;&#xFF0C;&#x5E76;&#x586B;&#x5751;</strong>(&#x2022;&#x203E;&#x311;&#x2323;&#x203E;&#x311;&#x2022;)&#x2727;&#x2D6;&#xB0;</p>
<p>&#x4E3B;&#x8981;&#x4FEE;&#x6539;&#x70B9;&#x5982;&#x4E0B;&#xFF1A;<br>
&#xFF08;1&#xFF09;&#x3001;&#x5728;&#x8FDB;&#x5165;&#x6587;&#x7AE0;&#x9875;&#x9762;&#x65F6;&#xFF0C;&#x8981;&#x8BBE;&#x7F6E;&#x4EE5;&#x4E0B;&#xFF0C;&#x8981;&#x4E0D;&#x6587;&#x7AE0;&#x662F;&#x770B;&#x4E0D;&#x89C1;&#x7684;&#xFF1A;</p>
<pre><code>$(&quot;.article&quot;).css(&quot;opacity&quot;, &quot;1.0&quot;);
</code></pre>
<p>&#xFF08;2&#xFF09;&#x3001;&#x591A;&#x8BF4;&#x8BC4;&#x8BBA;&#x5728;click2show.ejs&#x4E2D;&#x8981;&#x4E3B;&#x52A8;&#x8C03;&#x7528;</p>
<pre><code>if (typeof DUOSHUO !== &apos;undefined&apos;){
	DUOSHUO.EmbedThread(&apos;.ds-thread&apos;);
}
</code></pre>
<p>&#xFF08;3&#xFF09;&#x3001;&#x5904;&#x7406;&#x6587;&#x7AE0;&#x76EE;&#x5F55;&#xFF0C;&#x8981;&#x5728; InstantClick change &#x540E;&#x4E3B;&#x52A8;&#x8C03;&#x7528; toc.js &#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8981;&#x4E0D;&#x7136;&#x76EE;&#x5F55;&#x7684;&#x663E;&#x793A;&#x9690;&#x85CF;&#x3001;&#x53CC;&#x51FB;&#x6253;&#x5F00;&#x7B49;&#x90FD;&#x65E0;&#x6CD5;&#x4F7F;&#x7528;&#x3002;&#x8BE6;&#x60C5;&#x89C1; after-footer.ejs &#x6587;&#x4EF6;&#xFF1B;<br>
&#xFF08;4&#xFF09;&#x3001;&#x5DE6;&#x8FB9;&#x680F;&#x7684;&#x641C;&#x7D22;&#xFF0C;&#x8981;&#x5728; InstantClick change &#x540E;&#x4E3B;&#x52A8;&#x8C03;&#x7528; main.js &#x4E2D;&#x7684;&#x641C;&#x7D22;&#x51FD;&#x6570;&#xFF0C;&#x5373; after-footer.ejs &#x6587;&#x4EF6;&#x4E2D;&#x7684; leftSearch()&#xFF1B;<br>
&#xFF08;5&#xFF09;&#x3001;&#x5728;&#x6587;&#x7AE0;&#x9875;&#x9762;&#xFF0C;&#x5DE6;&#x8FB9;&#x680F;&#x7684;&#x9E1F;&#x5C4B;&#x5F39;&#x51FA;&#x83DC;&#x5355;&#xFF0C;&#x8981;&#x5728; InstantClick change &#x540E;&#x4E3B;&#x52A8;&#x8C03;&#x7528; pc.js &#x4E2D;&#x7684;&#x641C;&#x7D22;&#x51FD;&#x6570;&#xFF0C;&#x5373; after-footer.ejs &#x6587;&#x4EF6;&#x4E2D;&#x7684; tipBoxFunc()&#xFF1B;<br>
&#xFF08;6&#xFF09;&#x3001;&#x8FD8;&#x4FEE;&#x6539;&#x4E86;&#x793E;&#x4EA4;&#x56FE;&#x6807;&#x70B9;&#x51FB;&#x3001;&#x4E0D;&#x849C;&#x5B50;&#x7EDF;&#x8BA1;&#x3001;&#x590D;&#x5236;&#x529F;&#x80FD; clipboard &#x7B49;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x6E90;&#x4EE3;&#x7801; <a href="https://github.com/ngudream/N-Hexo-Blog" target="_blank" rel="external">N-Hexo-Blog</a><br>
&#xFF08;7&#xFF09;&#x3001;to-do&#xFF1A;&#x5E74;&#x540E;&#x627E;&#x65F6;&#x95F4;&#x5C06;&#x535A;&#x5BA2;&#x5168;&#x90E8;&#x9002;&#x914D; InstantClick</p>
<h2 id="&#x90E8;&#x7F72;"><a class="header-anchor" href="#&#x90E8;&#x7F72;"></a>&#x90E8;&#x7F72;</h2>
<p>&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x662F;&#x540C;&#x65F6;&#x90E8;&#x7F72;&#x5728; github &#x548C; coding&#xFF0C;&#x56FD;&#x5185;&#x8D70;&#x7684;&#x662F; coding&#xFF0C;&#x7F51;&#x7AD9;&#x7684;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x4F1A;&#x5FEB;&#x70B9;&#x3002;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#xFF1A;<br>
<a href="http://www.jianshu.com/p/7ad9d3cd4d6e" target="_blank" rel="external">http://www.jianshu.com/p/7ad9d3cd4d6e</a></p>
<h2 id="&#x8BF4;&#x660E;"><a class="header-anchor" href="#&#x8BF4;&#x660E;"></a>&#x8BF4;&#x660E;</h2>
<p>&#xFF08;1&#xFF09;plugins&#x6587;&#x4EF6;&#x5939;&#x91CC;&#x9762;&#x662F;&#x653E;&#x4E00;&#x4E9B;&#x535A;&#x5BA2;&#x989D;&#x5916;&#x7528;&#x5230;&#x7684;css&#x3001;js&#x6587;&#x4EF6;&#xFF0C;&#x7B14;&#x8005;&#x73B0;&#x5728;&#x662F;&#x653E;&#x5728;hexo/source&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x653E;&#x5728;yelee&#x4E3B;&#x9898;&#x7684;source&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x8BF7;&#x81EA;&#x884C;&#x4FEE;&#x6539;&#x8D44;&#x6E90;&#x7684;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;</p>
<ul>
<li>font&#x4E0B;&#x9762;&#x7684;&#x662F;&#x5DE6;&#x8FB9;&#x680F;Never Give Up Dream&#x5F80;&#x4E0B;&#x6389;</li>
<li>hint&#x662F;&#x535A;&#x5BA2;&#x7528;&#x5230;&#x7684;&#x63D0;&#x793A;&#x6846;css</li>
<li>prettify&#x662F;&#x535A;&#x5BA2;&#x7528;&#x5230;&#x7684;&#x4EE3;&#x7801;&#x9AD8;&#x4EAE;&#x63D2;&#x4EF6;</li>
</ul>
<p>&#xFF08;2&#xFF09;&#x9996;&#x9875;&#x6587;&#x7AE0;&#x6982;&#x8981;&#x6837;&#x5F0F;&#x662F;&#x4F7F;&#x7528;&#x7684;semantic-ui&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x559C;&#x6B22;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;yelee/layout/_partial/article.ejs&#x6587;&#x4EF6;&#x4E0B;&#x9762;&#x7684;&#x6982;&#x8981;div&#x7684;&#x6837;&#x5F0F;</p>
<p>&#xFF08;3&#xFF09;404&#x5728;pc&#x7AEF;&#x7B14;&#x8005;&#x4F7F;&#x7528;&#x7684;&#x662F;iframe&#x52A0;&#x8F7D;&#x7F51;&#x6613;&#x7684;&#xFF0C;&#x79FB;&#x52A8;&#x7AEF;&#x5219;&#x662F;&#x4F7F;&#x7528;yelee/source/publicwelfare&#x7684;&#x52A0;&#x8F7D;&#x817E;&#x8BAF;&#x7684;</p>
<p>&#xFF08;4&#xFF09;&#x591A;&#x8BF4;&#x6837;&#x5F0F;&#x4F7F;&#x7528;&#x7684;&#x662F;yelee/source/duoshuo/shejidaren.css</p>
<h2 id="&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;"><a class="header-anchor" href="#&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;"></a>&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;</h2>
<p><a href="http://ngudream.com">&#x79FB;&#x52A8;&#x5F00;&#x53D1;|ngudream</a></p>
<h2 id="&#x611F;&#x8C22;"><a class="header-anchor" href="#&#x611F;&#x8C22;"></a>&#x611F;&#x8C22;</h2>
<p>&#x518D;&#x6B21;&#x5F3A;&#x8C03;&#x672C;&#x4E3B;&#x9898;&#x662F;&#x5728;<a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">hexo-theme-yelee</a>&#x8FD9;&#x6B3E;&#x4E3B;&#x9898;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x4FEE;&#x6539;&#x7684;&#xFF0C;&#x5411;&#x539F;&#x4F5C;&#x8005;&#x8868;&#x793A;&#x611F;&#x8C22;&#xFF01;&#x540C;&#x65F6;&#x611F;&#x8C22;&#x5404;&#x4F4D;&#x7F51;&#x53CB;&#x63D0;&#x4F9B;&#x7684;&#x4FEE;&#x6539;&#x3001;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#xFF0C;&#x7B14;&#x8005;&#x53EA;&#x662F;&#x642C;&#x8FD0;&#x5DE5;&#x3002;</p>
<p><strong>&#x4E2A;&#x4EBA;&#x4F7F;&#x7528;&#xFF08;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF09;</strong></p>
<p>1&#x3001;&#x538B;&#x7F29;&#x63D2;&#x4EF6;gulp</p>
<pre><code>npm install xxx --save&#x547D;&#x4EE4;&#x5B89;&#x88C5;&#x4EE5;&#x4E0B;&#x63D2;&#x4EF6;
gulp
gulp-htmlclean
gulp-htmlmin
gulp-minify-css
gulp-uglify
</code></pre>
<p>2&#x3001;&#x6DFB;&#x52A0;emoji&#x8868;&#x60C5;</p>
<pre><code>cd hexo
npm un hexo-renderer-marked --save
npm i hexo-renderer-markdown-it --save
npm install markdown-it-emoji --save
</code></pre>
<p>3&#x3001;&#x5907;&#x4EFD;&#x63D2;&#x4EF6;&#xFF1A;<a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">https://github.com/coneycode/hexo-git-backup</a></p>
<pre><code>npm install hexo-git-backup --save
</code></pre>
<p>4&#x3001;&#x8FD8;&#x539F;hexo&#x535A;&#x5BA2;</p>
<ol>
<li>&#x4F7F;&#x7528;git clone &#x62F7;&#x8D1D;&#x4ED3;&#x5E93;&#xFF08;&#x9ED8;&#x8BA4;&#x5206;&#x652F;&#x4E3A;hexo&#xFF09;&#xFF1B;</li>
<li>&#x5728;&#x672C;&#x5730;&#x65B0;&#x62F7;&#x8D1D;&#x7684;hexo&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x901A;&#x8FC7;Git bash&#x4F9D;&#x6B21;&#x6267;&#x884C;&#x4E0B;&#x5217;&#x6307;&#x4EE4;&#xFF1A;</li>
</ol>
<pre><code>npm install hexo
npm install
npm install hexo-deployer-git&#xFF08;&#x8BB0;&#x5F97;&#xFF0C;&#x4E0D;&#x9700;&#x8981;hexo init&#x8FD9;&#x6761;&#x6307;&#x4EE4;&#xFF09;&#x3002;
</code></pre>
<p>5&#x3001;&#x538B;&#x7F29;js&#x3001;css&#x7B49;&#x63D2;&#x4EF6;</p>
<pre><code>npm install hexo-all-minifier --save
</code></pre>
<p>&#x7136;&#x540E;&#x5728; hexo &#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684; config.yml &#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p>
<pre><code>html_minifier:
  enable: true
  exclude:
css_minifier:
  enable: true
  exclude:
    - &apos;*.min.css&apos;
js_minifier:
  enable: true
  mangle: true
  output:
  compress:
  exclude:
    - &apos;*.min.js&apos;
image_minifier:
  enable: true
  interlaced: false
  multipass: false
  optimizationLevel: 2
  pngquant: false
  progressive: false
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2017/01/24/n-hexo-blog/1.gif&quot; style=&quot;float:left; margin-right:16px&quot; alt=&quot;&quot;&gt;
&lt;img class=&quot;pic lazy&quot; id=&quot;img_right&quot; data-original=&quot;/2017/01/24/n-hexo-blog/2.gif&quot; style=&quot;float:right; margin-right:16px&quot; alt=&quot;&quot;&gt;
&lt;span&gt;&amp;#x53F7;&amp;#x5916;&amp;#x53F7;&amp;#x5916;&amp;#xFF01;&amp;#xFF01; &amp;#x7B14;&amp;#x8005;&amp;#x5BF9;&amp;#x535A;&amp;#x5BA2;&amp;#x4FEE;&amp;#x6539;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x5DF2;&amp;#x653E;&amp;#x5230;&lt;a href=&quot;https://github.com/ngudream/N-Hexo-Blog&quot; target=&quot;_blank&quot;&gt; github &lt;/a&gt;&amp;#x4E0A;&amp;#x3002;&amp;#x5306;&amp;#x5306;&amp;#x6765;&amp;#x5306;&amp;#x5306;&amp;#x53BB;&amp;#x4F60;&amp;#x662F;&amp;#x4F55;&amp;#x610F;&amp;#xFF1F;&amp;#x6765;&amp;#x4E86;&amp;#x5C31;&amp;#x4E0A;&amp;#x53BB;&amp;#x770B;&amp;#x770B;&amp;#x5457;&amp;#x3002;&amp;#x95EE;&amp;#x541B;&amp;#x4F55;&amp;#x5904;&amp;#x53BB;&amp;#xFF1F;&amp;#x5C3D;&amp;#x5728;&amp;#x4E0D;&amp;#x8A00;&amp;#x4E2D;&amp;#x3002;&amp;#x201C;&amp;#x6D45;&amp;#x6D45;&amp;#x6C34;&amp;#xFF0C;&amp;#x957F;&amp;#x60A0;&amp;#x60A0;&amp;#xFF0C;&amp;#x6765;&amp;#x65E0;&amp;#x5C3D;&amp;#xFF0C;&amp;#x53BB;&amp;#x65E0;&amp;#x4F11;&amp;#x3002;&amp;#x66F2;&amp;#x66F2;&amp;#x6298;&amp;#x6298;&amp;#x5411;&amp;#x4E1C;&amp;#x6D41;&amp;#xFF0C;&amp;#x5C71;&amp;#x5C71;&amp;#x5CAD;&amp;#x5CAD;&amp;#x96BE;&amp;#x963B;&amp;#x7559;&amp;#x3002;&amp;#x95EE;&amp;#x4F0A;&amp;#x5954;&amp;#x817E;&amp;#x4F55;&amp;#x65F6;&amp;#x6B47;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5230;&amp;#x5927;&amp;#x6D77;&amp;#x4E0D;&amp;#x56DE;&amp;#x5934;&amp;#x3002;&amp;#x201D;&lt;a style=&quot;color:#660066&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x6027;&amp;#x7684;&amp;#x52A0;&amp;#x5165;&amp;#x4E86;&amp;#xFF08;&amp;#x5751;&amp;#x6BD4;&amp;#x8F83;&amp;#x591A;^_~&amp;#xFF09;&amp;#xFF1A;InstantClick&amp;#xFF0C;&amp;#x5927;&amp;#x5BB6;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F53;&amp;#x9A8C;&amp;#x4E00;&amp;#x4E0B;&amp;#x6587;&amp;#x7AE0;&amp;#x7684;&amp;#x52A0;&amp;#x8F7D;&amp;#x901F;&amp;#x5EA6;&lt;/a&gt;&amp;#x3002;&lt;/span&gt;&lt;/div&gt;
&lt;script&gt;
if(navigator.userAgent.match(/(iPhone|iPod|Android|ios|Opera Mini|BlackBerry|webOS)/i)){
$(&quot;#img_right&quot;).remove();
}
&lt;/script&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://ngudream.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Hexo" scheme="http://ngudream.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>如何用 Clean 架构开发 Android 应用</title>
    <link href="http://ngudream.com/2016/12/21/android-clean-architecture-pattern/"/>
    <id>http://ngudream.com/2016/12/21/android-clean-architecture-pattern/</id>
    <published>2016-12-21T12:59:53.000Z</published>
    <updated>2017-01-15T07:58:44.317Z</updated>
    
    <content type="html"><![CDATA[<div><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external"><img class="pic lazy" data-original="/2016/12/21/android-clean-architecture-pattern/mvp_clean.png" style="float:left; width:100px; height:56px; margin-right:16px" alt=""></a>
<span>&#x3010;&#x7FFB;&#x8BD1;&#x3011;&#x81EA;&#x6211;&#x5F00;&#x59CB;&#x5F00;&#x53D1; Android &#x5E94;&#x7528;&#x4EE5;&#x6765;&#x5C31;&#x6709;&#x4E00;&#x79CD;&#x611F;&#x89C9;&#x2014;&#x2014;&#x6211;&#x53EF;&#x4EE5;&#x628A;&#x5B83;&#x505A;&#x5F97;&#x66F4;&#x597D;&#x3002;&#x5728;&#x6211;&#x7684;&#x804C;&#x4E1A;&#x751F;&#x6DAF;&#x4E2D;&#xFF0C;&#x6211;&#x770B;&#x5230;&#x8FC7;&#x4E0D;&#x5C11;&#x70C2;&#x4EE3;&#x7801;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x4E9B;&#x8FD8;&#x662F;&#x6211;&#x81EA;&#x5DF1;&#x5199;&#x7684;&#x3002;Android &#x7684;&#x590D;&#x6742;&#x6027;&#x548C;&#x70C2;&#x4EE3;&#x7801;&#x52BF;&#x5FC5;&#x9020;&#x6210;&#x5927;&#x95EE;&#x9898;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x4ECE;&#x9519;&#x8BEF;&#x4E2D;&#x6C72;&#x53D6;&#x6559;&#x8BAD;&#x5E76;&#x6301;&#x7EED;&#x6539;&#x5584;&#x5341;&#x5206;&#x91CD;&#x8981;&#x3002;&#x5728;&#x591A;&#x6B21;&#x5C1D;&#x8BD5;&#x5BFB;&#x627E;&#x66F4;&#x597D;&#x7684;&#x5F00;&#x53D1;&#x65B9;&#x5F0F;&#x540E;&#xFF0C;&#x6211;&#x9047;&#x5230;&#x4E86; Clean &#x67B6;&#x6784;&#xFF08;&#x7B80;&#x6D01;&#x67B6;&#x6784;&#xFF09;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x5C06;&#x5176;&#x5E94;&#x7528;&#x5728;&#x4E86; Android &#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x5E76;&#x7ED3;&#x5408;&#x6211;&#x7684;&#x5F00;&#x53D1;&#x7ECF;&#x9A8C;&#x505A;&#x4E86;&#x8C03;&#x6574;&#xFF0C;&#x5199;&#x51FA;&#x4E86;&#x8FD9;&#x7BC7;&#x6211;&#x89C9;&#x5F97;&#x8F83;&#x4E3A;&#x5B9E;&#x7528;&#x3001;&#x503C;&#x5F97;&#x5206;&#x4EAB;&#x7684;&#x6587;&#x7AE0;&#x3002;</span></div>
<a id="more"></a>
<p>&#x82F1;&#x6587;&#x539F;&#x6587;&#xFF1A;<a href="https://medium.com/@dmilicic/a-detailed-guide-on-developing-android-apps-using-the-clean-architecture-pattern-d38d71e94029#.8yosmtpre" target="_blank" rel="external">A detailed guide on developing Android apps using the Clean Architecture pattern</a></p>
<blockquote>
<p><a href="https://www.oschina.net/" target="_blank" rel="external">&#x6765;&#x81EA;&#x5F00;&#x6E90;&#x4E2D;&#x56FD;</a><br>
&#x539F;&#x6587;&#x94FE;&#x63A5;:&#x3000;<a href="https://www.oschina.net/translate/developing-android-apps-using-the-clean-architecture-pattern?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">&#x5982;&#x4F55;&#x7528; Clean &#x67B6;&#x6784;&#x5F00;&#x53D1; Android &#x5E94;&#x7528; </a><br>
&#x53C2;&#x4E0E;&#x7FFB;&#x8BD1; (5&#x4EBA;) : <a href="https://my.oschina.net/jamesfancy" target="_blank" rel="external">&#x8FB9;&#x57CE;</a>, <a href="https://my.oschina.net/tocy" target="_blank" rel="external">Tocy</a>, <a href="https://my.oschina.net/viyinfo" target="_blank" rel="external">Viyi</a>, <a href="https://my.oschina.net/sensen163" target="_blank" rel="external">&#x7D2B;&#x7CFB;&#x6D41;&#x6708;</a>, <a href="https://my.oschina.net/crooner" target="_blank" rel="external">&#x65E0;&#x82E5;</a></p>
</blockquote>
<p>&#x6700;&#x8FD1;&#x6211;&#x7528; Clean &#x67B6;&#x6784;&#x4E3A;&#x5BA2;&#x6237;&#x6784;&#x5EFA;&#x4E86; app&#xFF0C;&#x5E76;&#x6536;&#x5230;&#x4E86;&#x5F88;&#x597D;&#x7684;&#x53CD;&#x9988;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E2D;&#x6211;&#x4F1A;&#x624B;&#x628A;&#x624B;&#x6559;&#x4F60;&#x5982;&#x4F55;&#x7528; Clean &#x67B6;&#x6784;&#x5F00;&#x53D1; Android &#x5E94;&#x7528;&#x3002;</p>
<h2 id="&#x4EC0;&#x4E48;&#x662F;-clean-&#x67B6;&#x6784;&#xFF1F;"><a class="header-anchor" href="#&#x4EC0;&#x4E48;&#x662F;-clean-&#x67B6;&#x6784;&#xFF1F;"></a>&#x4EC0;&#x4E48;&#x662F; Clean &#x67B6;&#x6784;&#xFF1F;</h2>
<p>&#x6709;&#x8BB8;&#x591A;&#x6587;&#x7AE0;&#x5DF2;&#x7ECF;&#x5BF9; Clean &#x67B6;&#x6784;&#x7684;&#x6982;&#x5FF5;&#x505A;&#x8FC7;&#x4ECB;&#x7ECD;&#x3002;&#x5728;&#x6B64;&#x6211;&#x8BB2;&#x4E00;&#x8BB2; Clean &#x67B6;&#x6784;&#x7684;&#x6838;&#x5FC3;&#x5185;&#x5BB9;&#x3002;</p>
<p>&#x901A;&#x5E38;&#x6240;&#x8BF4;&#x7684; Clean&#xFF0C;&#x662F;&#x6307;&#x4EE3;&#x7801;&#x88AB;&#x5206;&#x4E3A;&#x50CF;&#x6D0B;&#x8471;&#x72B6;&#x7684;&#x591A;&#x4E2A;&#x5C42;&#xFF0C;&#x5176;<strong>&#x89C4;&#x5219;&#x57FA;&#x7840;</strong>&#xFF1A;&#x5185;&#x5C42;&#x4E0D;&#x9700;&#x8981;&#x77E5;&#x9053;&#x5916;&#x5C42;&#x5728;&#x5E72;&#x4EC0;&#x4E48;&#x3002;&#x5373;<strong>&#x5411;&#x5185;&#x4F9D;&#x8D56;</strong>&#x3002;</p>
<p>&#x8FD9;&#x662F;&#x4E0A;&#x4E00;&#x6BB5;&#x5185;&#x5BB9;&#x7684;&#x76F4;&#x89C2;&#x5448;&#x73B0;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/12/21/android-clean-architecture-pattern/110613_GK36_2903254.jpg" class="lazy">
<br>
<span style="width:100%">&#x7B80;&#x6D01;&#x67B6;&#x6784;&#x6781;&#x4F73;&#x7684;&#x89C6;&#x89C9;&#x8868;&#x73B0;&#x3002;&#x56FE;&#x7247;&#x6765;&#x81EA;<a href="https://blog.8thlight.com/uncle-bob/archive.html" target="_blank" rel="external">Uncle Bob</a>&#x3002;</span>
</div>
<p>&#x6587;&#x4E2D;&#x63D0;&#x5230;&#x7684; Clean &#x67B6;&#x6784;&#x4F1A;&#x7ED9;&#x4EE3;&#x7801;&#x63D0;&#x4F9B;&#x4E00;&#x4E0B;&#x5C5E;&#x6027;&#xFF1A;</p>
<ul>
<li>&#x4E0D;&#x4F9D;&#x8D56;&#x6846;&#x67B6;&#x3002;</li>
<li>&#x53EF;&#x6D4B;&#x8BD5;&#x3002;</li>
<li>&#x4E0D;&#x4F9D;&#x8D56; UI&#x3002;</li>
<li>&#x4E0D;&#x4F9D;&#x8D56;&#x6570;&#x636E;&#x5E93;&#x3002;</li>
<li>&#x4E0D;&#x4F9D;&#x8D56;&#x5176;&#x5B83;&#x5916;&#x90E8;&#x529B;&#x91CF;</li>
</ul>
<p>&#x6211;&#x5E0C;&#x671B;&#x4F60;&#x80FD;&#x7406;&#x89E3;&#x8FD9;&#x51E0;&#x70B9;&#x5728;&#x4E0B;&#x9762;&#x7684;&#x793A;&#x4F8B;&#x4E2D;&#x662F;&#x5982;&#x4F55;&#x4F53;&#x73B0;&#x7684;&#x3002;&#x66F4;&#x591A;&#x5173;&#x4E8E; Clean &#x67B6;&#x6784;&#x7684;&#x89E3;&#x91CA;&#xFF0C;&#x6211;&#x63A8;&#x8350;&#x4F60;&#x770B;&#x770B;&#x8FD9;&#x7BC7;<a href="https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html" target="_blank" rel="external">&#x6587;&#x7AE0;</a>&#x548C;&#x8FD9;&#x4E2A;<a href="https://vimeo.com/43612849" target="_blank" rel="external">&#x89C6;&#x9891;</a>&#x3002;</p>
<h2 id="&#x8FD9;&#x5728;-anroid-&#x4E2D;&#x610F;&#x5473;&#x7740;&#x4EC0;&#x4E48;"><a class="header-anchor" href="#&#x8FD9;&#x5728;-anroid-&#x4E2D;&#x610F;&#x5473;&#x7740;&#x4EC0;&#x4E48;"></a>&#x8FD9;&#x5728; Anroid &#x4E2D;&#x610F;&#x5473;&#x7740;&#x4EC0;&#x4E48;</h2>
<p>&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x53EF;&#x4EE5;&#x6709;&#x4EFB;&#x610F;&#x6570;&#x91CF;&#x7684;&#x5C42;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x7684; Android &#x5E94;&#x7528;&#x5305;&#x542B;&#x4F01;&#x4E1A;&#x7EA7;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x662F;3&#x5C42;&#xFF1A;</p>
<ul>
<li>&#x5916;&#x5C42;&#xFF1A;&#x5B9E;&#x73B0;&#x5C42;</li>
<li>&#x4E2D;&#x95F4;&#x5C42;&#xFF1A;&#x63A5;&#x53E3;&#x9002;&#x914D;&#x5C42;</li>
<li>&#x5185;&#x5C42;&#xFF1A;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C42;</li>
</ul>
<p><strong>&#x5B9E;&#x73B0;&#x5C42;</strong>&#x662F;&#x6846;&#x67B6;&#x8981;&#x6C42;&#x6240;&#x6709;&#x4E8B;&#x60C5;&#x53D1;&#x751F;&#x7684;&#x5730;&#x65B9;&#x3002;&#x6784;&#x67B6;&#x4EE3;&#x7801;<strong>&#x5305;&#x62EC;&#x6BCF;&#x884C;&#x4EE3;&#x7801;&#x90FD;&#x4E0D;&#x662F;&#x5728;&#x89E3;&#x51B3;&#x4F60;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;</strong>&#xFF0C;&#x6BD4;&#x5982;&#x6240;&#x6709; Android &#x5F00;&#x53D1;&#x8005;&#x90FD;&#x559C;&#x6B22;&#x521B;&#x5EFA;&#x7684; Activity &#x548C; Fragment&#xFF0C;&#x53D1;&#x9001; Intent&#xFF0C;&#x4EE5;&#x53CA;&#x5176;&#x5B83;&#x7F51;&#x7EDC;&#x548C;&#x6570;&#x636E;&#x5E93;&#x76F8;&#x5173;&#x7684;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#x3002;</p>
<p><strong>&#x63A5;&#x53E3;&#x9002;&#x914D;&#x5C42;</strong>&#x7684;&#x76EE;&#x6807;&#x662F;&#x8FDE;&#x63A5;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x548C;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#x3002;</p>
<p>&#x6700;&#x91CD;&#x8981;&#x7684;&#x95EE;&#x9898;&#x662F;<strong>&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C42;</strong>&#x3002;&#x8FD9;&#x91CC;&#x662F;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x4E2D;&#x5B9E;&#x9645;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x5730;&#x65B9;&#x3002;&#x8FD9;&#x91CC;&#x4E0D;&#x4F1A;&#x6709;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#xFF0C;&#x4F60;<strong>&#x5E94;&#x8BE5;&#x80FD;&#x5728;&#x6CA1;&#x6709;&#x6A21;&#x62DF;&#x5668;&#x652F;&#x6301;&#x4E0B;&#x8FD0;&#x884C;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;</strong>&#x3002;&#x8FD9;&#x6837;&#x4F60;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#x624D;<strong>&#x5BB9;&#x6613;&#x6D4B;&#x8BD5;&#x3001;&#x5F00;&#x53D1;&#x548C;&#x7EF4;&#x62A4;</strong>&#x3002;&#x8FD9;&#x662F; Clean &#x67B6;&#x6784;&#x7684;&#x4E3B;&#x8981;&#x4F18;&#x52BF;&#x3002;</p>
<p>&#x6838;&#x5FC3;&#x5C42;&#x4E4B;&#x4E0A;&#x7684;&#x6BCF;&#x4E00;&#x5C42;&#x90FD;&#x9700;&#x8981;&#x4E3A;&#x4E0B;&#x4E00;&#x5C42;&#x8F6C;&#x6362;&#x6A21;&#x578B;&#x7ED3;&#x6784;&#x3002;&#x5185;&#x5C42;&#x4E0D;&#x4F1A;&#x5F15;&#x7528;&#x5916;&#x5C42;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x4F46;&#x5916;&#x5C42;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5185;&#x5C42;&#x7684;&#x6A21;&#x578B;&#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;<strong>&#x4F9D;&#x8D56;&#x89C4;&#x5219;</strong>&#x3002;&#x867D;&#x7136;&#x8FD9;&#x6837;&#x505A;&#x4F1A;&#x5BFC;&#x81F4;&#x66F4;&#x5927;&#x7684;&#x5F00;&#x9500;&#xFF0C;&#x4F46;&#x80FD;&#x786E;&#x4FDD;&#x5404;&#x5C42;&#x4EE3;&#x7801;&#x4E4B;&#x95F4;&#x7684;&#x89E3;&#x8026;&#x3002;</p>
<blockquote>
<p>&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x6A21;&#x578B;&#x8F6C;&#x6362;&#xFF1F;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x5F53;&#x903B;&#x8F91;&#x5C42;&#x7684;&#x6A21;&#x578B;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x5F88;&#x4F18;&#x96C5;&#x5730;&#x5C55;&#x73B0;&#x7ED9;&#x7528;&#x6237;&#xFF0C;&#x6216;&#x662F;&#x9700;&#x8981;&#x540C;&#x65F6;&#x5C55;&#x793A;&#x591A;&#x4E2A;&#x903B;&#x8F91;&#x5C42;&#x7684;&#x6A21;&#x578B;&#x65F6;&#xFF0C;&#x6700;&#x597D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; ViewModel &#x7C7B;&#x6765;&#x66F4;&#x597D;&#x7684;&#x8FDB;&#x884C; UI &#x5C55;&#x793A;&#x3002;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x5728;&#x5916;&#x5C42;&#x4F7F;&#x7528;&#x8F6C;&#x6362;&#x5668;&#x7C7B;&#x5C06;&#x4E1A;&#x52A1;&#x6A21;&#x578B;&#x8F6C;&#x6362;&#x6210;&#x5408;&#x9002;&#x7684; ViewModel&#x3002;</p>
</blockquote>
<blockquote>
<p>&#x53E6;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;&#x5047;&#x8BBE;&#x4F60;&#x8981;&#x4ECE;&#x5916;&#x90E8;&#x6570;&#x636E;&#x5C42;&#x7684;  ContentProvider &#x5F97;&#x5230;&#x4E00;&#x4E2A; Cursor &#x5BF9;&#x8C61;&#xFF0C;&#x5916;&#x5C42;&#x8981;&#x5148;&#x628A;&#x5B83;&#x8F6C;&#x6362;&#x6210;&#x5185;&#x5C42;&#x7684;&#x4E1A;&#x52A1;&#x6A21;&#x578B;&#xFF0C;&#x518D;&#x9001;&#x7ED9;&#x4F60;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C42;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;</p>
</blockquote>
<p>&#x6587;&#x672B;&#x6211;&#x4F1A;&#x7ED9;&#x51FA;&#x66F4;&#x591A;&#x76F8;&#x5173;&#x8D44;&#x6E90;&#xFF0C;&#x4EE5;&#x4FBF;&#x4F60;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x3002;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x4E86;&#x89E3; Clean &#x67B6;&#x6784;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7528;&#x4EE3;&#x7801;&#x793A;&#x4F8B;&#x8FDB;&#x884C;&#x8BF4;&#x660E;&#xFF1A;&#x7528; Clean &#x67B6;&#x6784;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x529F;&#x80FD;&#x3002;</p>
<h2 id="&#x600E;&#x6837;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;-clean-&#x5E94;&#x7528;&#xFF1F;"><a class="header-anchor" href="#&#x600E;&#x6837;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;-clean-&#x5E94;&#x7528;&#xFF1F;"></a>&#x600E;&#x6837;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x4E00;&#x4E2A; Clean &#x5E94;&#x7528;&#xFF1F;</h2>
<p>&#x6211;&#x505A;&#x4E86;&#x4E00;&#x4E2A;<a href="https://github.com/dmilicic/Android-Clean-Boilerplate" target="_blank" rel="external">&#x6837;&#x677F;&#x9879;&#x76EE;</a>&#xFF0C;&#x5B83;&#x4E3A;&#x4F60;&#x63D0;&#x4F9B;&#x4E86;&#x6240;&#x6709;&#x7684;&#x5E95;&#x5C42;&#x547D;&#x4EE4;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A; <strong>Clean &#x542F;&#x52A8;&#x5305;</strong>&#xFF0C;&#x5728;&#x8BBE;&#x8BA1;&#x4E4B;&#x521D;&#x5C31;&#x5305;&#x542B;&#x6700;&#x5E38;&#x7528;&#x7684;&#x4E00;&#x4E9B;&#x5DE5;&#x5177;&#x5305;&#x3002;&#x4F60;&#x53EF;&#x514D;&#x8D39;&#x4E0B;&#x8F7D;&#x548C;&#x4FEE;&#x6539;&#xFF0C;&#x8FD8;&#x80FD;&#x7528;&#x5B83;&#x5EFA;&#x7ACB;&#x81EA;&#x5DF1;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;</p>
<p>&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x627E;&#x5230;&#x5165;&#x95E8;&#x9879;&#x76EE;: <a href="https://github.com/dmilicic/Android-Clean-Boilerplate" target="_blank" rel="external">Android Clean Boilerplate</a></p>
<h2 id="&#x5F00;&#x59CB;&#x7F16;&#x5199;&#x65B0;&#x7528;&#x4F8B;"><a class="header-anchor" href="#&#x5F00;&#x59CB;&#x7F16;&#x5199;&#x65B0;&#x7528;&#x4F8B;"></a>&#x5F00;&#x59CB;&#x7F16;&#x5199;&#x65B0;&#x7528;&#x4F8B;</h2>
<p>&#x672C;&#x8282;&#x5C06;&#x89E3;&#x91CA;&#x6240;&#x6709;&#x9700;&#x8981;&#x7F16;&#x5199;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F60;&#x53EF;&#x901A;&#x8FC7;&#x4E0A;&#x4E00;&#x8282;&#x63D0;&#x4F9B;&#x7684;&#x6837;&#x677F;&#x6587;&#x4EF6;&#x4F7F;&#x7528; Clean &#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x3002; &#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x53EA;&#x4EE3;&#x8868;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x90E8;&#x5206;&#x72EC;&#x7ACB;&#x529F;&#x80FD;&#x3002; &#x7528;&#x6237;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x70B9;&#x51FB;&#x65F6;&#xFF09;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x542F;&#x7528;&#x6216;&#x4E0D;&#x542F;&#x7528;&#x3002;</p>
<p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x6765;&#x89E3;&#x91CA;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x7ED3;&#x6784;&#x548C;&#x672F;&#x8BED;&#x3002;&#x8FD9;&#x91CC;&#x8981;&#x8BF4;&#x7684;&#x662F;&#x6211;&#x5982;&#x4F55;&#x6784;&#x5EFA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x5176;&#x65B9;&#x6CD5;&#x5E76;&#x4E0D;&#x56FA;&#x5B9A;&#xFF0C;&#x4F60;&#x53EF;&#x6839;&#x636E;&#x4F60;&#x7684;&#x9700;&#x6C42;&#x7EC4;&#x7EC7;&#x4E0D;&#x540C;&#x7684;&#x7ED3;&#x6784;&#x3002;</p>
<h3 id="&#x7ED3;&#x6784;"><a class="header-anchor" href="#&#x7ED3;&#x6784;"></a>&#x7ED3;&#x6784;</h3>
<p>&#x4E00;&#x822C;&#x7684; Android &#x5E94;&#x7528;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul>
<li>&#x5916;&#x5C42;&#x5305;&#xFF1A;UI&#x3001;Storage&#x3001;Network &#x7B49;&#x3002;</li>
<li>&#x4E2D;&#x5C42;&#x5305;&#xFF1A;Presenters, Converters</li>
<li>&#x5185;&#x5C42;&#x5305;&#xFF1A;Interactors&#x3001;Models&#x3001;Repositories&#x3001;Executor</li>
</ul>
<h3 id="&#x5916;&#x5C42;"><a class="header-anchor" href="#&#x5916;&#x5C42;"></a>&#x5916;&#x5C42;</h3>
<p>&#x4E0A;&#x9762;&#x5DF2;&#x7ECF;&#x63D0;&#x5230;&#x8FC7;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x6846;&#x67B6;&#x7684;&#x7EC6;&#x8282;&#x3002;</p>
<p><strong>UI</strong>&#x200A;&#x2014;&#x5305;&#x62EC; Activite&#x3001;Fragment&#x3001;Adapter &#x548C;&#x5176;&#x5B83;&#x7528;&#x6237;&#x754C;&#x9762;&#x76F8;&#x5173;&#x7684;&#x4EE3;&#x7801;&#x3002;</p>
<p><strong>Storage</strong>&#x200A;&#x2014;&#x200A;&#x6570;&#x636E;&#x5E93;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#xFF0C;&#x5B9E;&#x73B0; Interactor &#x9700;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x7528;&#x4E8E;&#x8BBF;&#x95EE;&#x548C;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x3002;&#x5305;&#x542B;&#x5982; <a href="https://developer.android.com/guide/topics/providers/content-providers.html" target="_blank" rel="external">ContentProviders</a> &#x6216;&#x8005;&#x50CF; <a href="https://github.com/Raizlabs/DBFlow" target="_blank" rel="external">DBFlow</a> &#x8FD9;&#x6837;&#x7684; ORM&#x3002;</p>
<p><strong>Network</strong>&#x200A;&#x2014;&#x200A;&#x7C7B;&#x4F3C; <a href="http://square.github.io/retrofit/" target="_blank" rel="external">Retrofit</a> &#x7684;&#x7F51;&#x7EDC;&#x64CD;&#x4F5C;&#x3002;</p>
<h3 id="&#x4E2D;&#x5C42;"><a class="header-anchor" href="#&#x4E2D;&#x5C42;"></a>&#x4E2D;&#x5C42;</h3>
<p>&#x7C98;&#x5408;&#x4EE3;&#x7801;&#x5C42;&#xFF0C;&#x5C06;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x4E0E;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;</p>
<p><strong>Presenters</strong>&#x200A;&#x2014;&#x200A;&#x5904;&#x7406;&#x6765;&#x81EA; UI &#x7684;&#x4E8B;&#x4EF6;&#xFF08;&#x6BD4;&#x5982;&#x7528;&#x6237;&#x5355;&#x51FB;&#xFF09;&#x6216;&#x8005;&#x5E38;&#x7528;&#x4F5C;&#x5185;&#x5C42;&#xFF08;Interactor&#xFF09;&#x7684;&#x56DE;&#x8C03;&#x3002;</p>
<p><strong>Converters</strong>&#x200A;&#x2014;&#x200A;&#x8F6C;&#x6362;&#x5668;&#x5BF9;&#x8C61;&#x8D1F;&#x8D23;&#x628A;&#x5185;&#x90E8;&#x6A21;&#x578B;&#x8F6C;&#x6362;&#x4E3A;&#x5916;&#x90E8;&#x6A21;&#x578B;&#xFF0C;&#x53CD;&#x4E4B;&#x4EA6;&#x7136;&#x3002;</p>
<p>&#x5185;&#x5C42;</p>
<p>&#x6838;&#x5FC3;&#x5C42;&#x5305;&#x542B;&#x5927;&#x90E8;&#x5206;&#x9AD8;&#x7B49;&#x7EA7;&#x4EE3;&#x7801;&#x3002;<strong>&#x8FD9;&#x91CC;&#x7684;&#x6240;&#x6709;&#x7C7B;&#x90FD;&#x662F; POJO</strong>&#x3002;&#x8FD9;&#x4E00;&#x5C42;&#x4E2D;&#x7684;&#x7C7B;&#x548C;&#x5BF9;&#x8C61;&#x90FD;&#x4E0D;&#x662F;&#x7279;&#x5B9A;&#x8FD0;&#x884C;&#x5728; Android &#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#x7684;&#x79FB;&#x690D;&#x5230;&#x5176;&#x5B83; JVM &#x8FD0;&#x884C;&#x3002;</p>
<p><strong>Interactors</strong> - &#x8FD9;&#x4E9B;&#x662F;&#x5B9E;&#x9645;&#x5305;&#x542B;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#x7684;&#x7C7B;&#x3002;&#x8FD9;&#x4E9B;&#x7C7B;&#x5728;&#x540E;&#x53F0;&#x8FD0;&#x884C;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x56DE;&#x8C03;&#x5411;&#x4E0A;&#x5C42;&#x4F20;&#x9012;&#x4E8B;&#x4EF6;&#x3002;&#x5728;&#x4E00;&#x4E9B;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;&#x5B83;&#x4EEC;&#x4E5F;&#x88AB;&#x79F0;&#x4E3A;&#x7528;&#x4F8B;&#xFF08;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;&#x540D;&#x79F0;&#xFF09;&#x3002;&#x5728;&#x60A8;&#x7684;&#x9879;&#x76EE;&#x4E2D;&#x53EF;&#x80FD;&#x6709;&#x5F88;&#x591A;&#x5C0F;&#x7684;&#x7528;&#x4E8E;&#x89E3;&#x51B3;&#x7279;&#x5B9A;&#x95EE;&#x9898; Interactor &#x7C7B;&#xFF0C;&#x8FD9;&#x5C5E;&#x6B63;&#x5E38;&#x73B0;&#x8C61;&#x3002;&#x53EF;&#x4EE5;&#x8BF4;&#xFF0C;&#x5B83;&#x7B26;&#x5408;<a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" target="_blank" rel="external">&#x5355;&#x4E00;&#x8D23;&#x4EFB;&#x539F;&#x5219;</a>&#xFF0C;&#x800C;&#x4E14;&#x8FD9;&#x6837;&#x7684;&#x7406;&#x89E3;&#x66F4;&#x5BB9;&#x6613;&#x8BA9;&#x4EBA;&#x63A5;&#x53D7;&#x3002;</p>
<p><strong>Models</strong> - &#x8FD9;&#x4E9B;&#x662F;&#x60A8;&#x5728;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E2D;&#x5904;&#x7406;&#x7684;&#x4E1A;&#x52A1;&#x6A21;&#x578B;&#x3002;</p>
<p><strong>Repositories</strong> - &#x6B64;&#x5305;&#x4EC5;&#x5305;&#x542B;&#x6570;&#x636E;&#x5E93;&#x6216;&#x5176;&#x4ED6;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#x3002;Interactors &#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x63A5;&#x53E3;&#x6765;&#x8BBF;&#x95EE;&#x548C;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x3002;&#x4E5F;&#x79F0;&#x4E3A;<a href="https://msdn.microsoft.com/en-us/library/ff649690.aspx" target="_blank" rel="external">&#x4ED3;&#x5E93;&#x6A21;&#x5F0F;</a>&#x3002;</p>
<p><strong>Executor</strong> - &#x6B64;&#x5305;&#x5305;&#x542B;&#x7528;&#x4E8E;&#x8C03;&#x7528;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5668;&#x5728;&#x540E;&#x53F0;&#x6267;&#x884C; Interactors &#x7684;&#x4EE3;&#x7801;&#x3002;&#x8FD9;&#x4E2A;&#x5305;&#x4E00;&#x822C;&#x4E0D;&#x9700;&#x8981;&#x4F60;&#x4FEE;&#x6539;&#x4EFB;&#x4F55;&#x90E8;&#x5206;&#x3002;</p>
<h3 id="&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;"><a class="header-anchor" href="#&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;"></a>&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;</h3>
<p>&#x5728;&#x8FD9;&#x4E2A;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x7528;&#x4F8B;&#x662F;&#xFF1A; &#x201C;<strong>&#x5728; app &#x542F;&#x52A8;&#x65F6;&#x8BFB;&#x53D6;&#x5B58;&#x50A8;&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x6D88;&#x606F;&#x5E76;&#x5C55;&#x793A;&#x3002;</strong>&#x201D; &#x6B64;&#x793A;&#x4F8B;&#x5C06;&#x4F1A;&#x5C55;&#x793A;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x4E09;&#x4E2A;&#x7A0B;&#x5E8F;&#x5305;&#x6765;&#x5B8C;&#x6210;&#x7528;&#x4F8B;&#x7684;&#x529F;&#x80FD;&#xFF1A;</p>
<ul>
<li>presentation &#x5305;&#xFF08;&#x5C55;&#x793A;&#x5305;&#xFF09;</li>
<li>storage &#x5305;&#xFF08;&#x5B58;&#x50A8;&#x5305;&#xFF09;</li>
<li>domain &#x5305;&#xFF08;&#x4E3B;&#x5305;&#xFF09;</li>
</ul>
<p>&#x524D;&#x4E24;&#x4E2A;&#x5C5E;&#x4E8E;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5C5E;&#x4E8E;&#x5185;&#x90E8;/&#x6838;&#x5FC3;&#x5C42;&#x5B9E;&#x73B0;&#x3002;</p>
<p><strong>Presentation</strong> &#x5305;&#x4E3B;&#x8981;&#x8D1F;&#x8D23;&#x6240;&#x6709;&#x4E0E;&#x5C4F;&#x5E55;&#x663E;&#x793A;&#x76F8;&#x5173;&#x7684;&#x90E8;&#x5206;&#x2014;&#x2014;&#x5305;&#x62EC;&#x5168;&#x90E8;&#x7684; <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter" target="_blank" rel="external">MVP</a> &#x6808;&#xFF0C;&#x5373;&#x5305;&#x62EC; UI &#x548C; presenter &#x8FD9;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x5C42;&#x7684;&#x7EC4;&#x4EF6;&#x3002;</p>
<h2 id="&#x7F16;&#x5199;&#x65B0;&#x7684;-interactor-&#x5185;&#x90E8;-&#x6838;&#x5FC3;&#x5C42;"><a class="header-anchor" href="#&#x7F16;&#x5199;&#x65B0;&#x7684;-interactor-&#x5185;&#x90E8;-&#x6838;&#x5FC3;&#x5C42;"></a>&#x7F16;&#x5199;&#x65B0;&#x7684; Interactor &#xFF08;&#x5185;&#x90E8;/&#x6838;&#x5FC3;&#x5C42;&#xFF09;</h2>
<p>&#x4E8B;&#x5B9E;&#x4E0A;&#x4F60;&#x53EF;&#x4EE5;&#x4ECE;&#x67B6;&#x6784;&#x7684;&#x4EFB;&#x610F;&#x5C42;&#x5F00;&#x59CB;&#x7F16;&#x7801;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x8FD8;&#x662F;&#x63A8;&#x8350;&#x4F60;&#x9996;&#x5148;&#x4ECE;&#x6838;&#x5FC3;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5F00;&#x59CB;&#x3002;&#x56E0;&#x4E3A;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#x5199;&#x597D;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E0D;&#x9700;&#x8981; activity &#x4E5F;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#x3002;</p>
<p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5148;&#x4ECE;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; Interactor &#x5F00;&#x59CB;&#x3002;Interactor &#x662F;&#x7528;&#x4F8B;&#x4E3B;&#x903B;&#x8F91;&#x5B9E;&#x73B0;&#x7684;&#x5730;&#x65B9;&#x3002;<strong>&#x6240;&#x6709;&#x7684; Interactors &#x90FD;&#x8FD0;&#x884C;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#xFF0C;&#x56E0;&#x6B64;&#x5E94;&#x8BE5;&#x4E0D;&#x4F1A;&#x5BF9; UI &#x5C55;&#x793A;&#x9020;&#x6210;&#x5F71;&#x54CD;</strong>&#x3002; &#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A; Interactor&#xFF0C;&#x53EB;&#x505A; <strong>WelcomingInteractor</strong>&#x3002;</p>
<pre><code>public interface WelcomingInteractor extends Interactor { 
 
    interface Callback { 
 
        void onMessageRetrieved(String message);
 
        void onRetrievalFailed(String error);
    } 
}
</code></pre>
<p><strong>Callback</strong> &#x8D1F;&#x8D23;&#x548C;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x7684; UI &#x4EA4;&#x4E92;&#xFF0C;&#x6211;&#x4EEC;&#x4E4B;&#x6240;&#x4EE5;&#x5C06;&#x5176;&#x653E;&#x5728; Interactor &#x63A5;&#x53E3;&#x4E2D;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x5C06;&#x5176;&#x91CD;&#x65B0;&#x547D;&#x540D;&#x4E3A; WelcomingInteractorCallback&#x2014;&#x2014;&#x7528;&#x4E8E;&#x5C06;&#x5176;&#x4E0E;&#x5176;&#x4ED6;&#x56DE;&#x8C03;&#x533A;&#x5206;&#x3002;&#x4E0B;&#x9762;&#x8BA9;&#x6211;&#x4EEC;&#x5B9E;&#x73B0;&#x53D6;&#x56DE;&#x6D88;&#x606F;&#x7684;&#x903B;&#x8F91;&#x3002;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A; Interactor &#x7684; <strong>MessageRepository</strong>&#xFF0C;&#x53EF;&#x4EE5;&#x7ED9;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x6B22;&#x8FCE;&#x6D88;&#x606F;&#x3002;</p>
<pre><code> MessageRepository { 
    String getWelcomeMessage();
}
</code></pre>
<p>&#x4E0B;&#x9762;&#x8BA9;&#x6211;&#x4EEC;&#x53C2;&#x8003;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5B9E;&#x73B0; Interactor &#x63A5;&#x53E3;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x5B9E;&#x73B0;&#x5FC5;&#x987B;&#x6269;&#x5C55;&#x81EA; <strong>AbstractInteractor&#xFF0C;&#x8FD9;&#x6837;&#x4EE3;&#x7801;&#x5C31;&#x80FD;&#x5728;&#x540E;&#x53F0;&#x6267;&#x884C;&#x4E86;</strong>&#x3002;</p>
<pre><code>public class WelcomingInteractorImpl extends AbstractInteractor implements WelcomingInteractor {
    
    ...    
    private void notifyError() {
        mMainThread.post(new Runnable() {            @Override
            public void run() {
                mCallback.onRetrievalFailed(&quot;Nothing to welcome you with :(&quot;);
            }
        });
    }    private void postMessage(final String msg) {
        mMainThread.post(new Runnable() {            @Override
            public void run() {
                mCallback.onMessageRetrieved(msg);
            }
        });
    }    @Override
    public void run() {        // retrieve the message
        final String message = mMessageRepository.getWelcomeMessage();        // check if we have failed to retrieve our message
        if (message == null || message.length() == 0) {            // notify the failure on the main thread
            notifyError();            return;
        }        // we have retrieved our message, notify the UI on the main thread
        postMessage(message);
    }
</code></pre>
<div align="center">
WelcomingInteractor &#x8FD0;&#x884C;&#x65B9;&#x6CD5;&#x3002;
</div>
<p>&#x8FD9;&#x91CC;&#x5C1D;&#x8BD5;&#x83B7;&#x53D6;&#x4E86;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x6216;&#x8005;&#x9519;&#x8BEF;&#x7801;&#x5230; UI &#x5C42;&#x7528;&#x4E8E;&#x663E;&#x793A;&#x3002;&#x6211;&#x4EEC;&#x901A;&#x8FC7; Callback &#x901A;&#x77E5; UI&#xFF0C;&#x8FD9;&#x4E2A; Callback &#x626E;&#x6F14;&#x7684;&#x662F; presenter &#x7684;&#x89D2;&#x8272;&#x3002;<strong>&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x662F;&#x6211;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x5173;&#x952E;&#x3002;&#x5176;&#x4ED6;&#x6846;&#x67B6;&#x90FD;&#x662F;&#x4F9D;&#x8D56;&#x4E8E;&#x6846;&#x67B6;&#x672C;&#x8EAB;&#x3002;</strong></p>
<p>&#x8BA9;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B; Interactor &#x7A76;&#x7ADF;&#x6709;&#x54EA;&#x4E9B;&#x4F9D;&#x8D56;&#xFF1A;</p>
<pre><code>import com.kodelabs.boilerplate.domain.executor.Executor;
import com.kodelabs.boilerplate.domain.executor.MainThread;
import com.kodelabs.boilerplate.domain.interactors.WelcomingInteractor;
import com.kodelabs.boilerplate.domain.interactors.base.AbstractInteractor;
import com.kodelabs.boilerplate.domain.repository.MessageRepository;
</code></pre>
<p>&#x6B63;&#x5982;&#x4F60;&#x6240;&#x770B;&#x5230;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;<strong>&#x6CA1;&#x6709;&#x63D0;&#x5230;&#x4EFB;&#x4F55; Android &#x4EE3;&#x7801;</strong>&#xFF0C;&#x8FD9;&#x5C31;&#x662F; Clean &#x67B6;&#x6784;&#x7684;<strong>&#x4E3B;&#x8981;&#x597D;&#x5904;</strong>&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x770B;&#x5230;<strong>&#x6846;&#x67B6;&#x7684;&#x72EC;&#x7ACB;&#x6027;</strong>&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x6CE8; UI &#x6216;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x662F;&#x8C03;&#x7528;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x3002;</p>
<h2 id="&#x6D4B;&#x8BD5;-interactor"><a class="header-anchor" href="#&#x6D4B;&#x8BD5;-interactor"></a>&#x6D4B;&#x8BD5; Interactor</h2>
<p>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;<strong>&#x8131;&#x79BB;&#x4EFF;&#x771F;&#x5668;&#x8FD0;&#x884C;&#x5E76;&#x6D4B;&#x8BD5; Interator</strong>&#x3002;&#x6765;&#x5199;&#x4E2A;&#x7B80;&#x5355;&#x7684; <strong>JUnit</strong> &#x6D4B;&#x8BD5;&#x786E;&#x4FDD;&#x5B83;&#x6709;&#x6548;&#x3002;</p>
<pre><code>...    @Test
    public void testWelcomeMessageFound() throws Exception {

        String msg = &quot;Welcome, friend!&quot;;

        when(mMessageRepository.getWelcomeMessage())
                .thenReturn(msg);

        WelcomingInteractorImpl interactor = new WelcomingInteractorImpl(
            mExecutor, 
            mMainThread, 
            mMockedCallback, 
            mMessageRepository
        );
        interactor.run();

        Mockito.verify(mMessageRepository).getWelcomeMessage();
        Mockito.verifyNoMoreInteractions(mMessageRepository);
        Mockito.verify(mMockedCallback).onMessageRetrieved(msg);
    }
</code></pre>
<p>&#x8FD9;&#x4E2A; Interactor &#x4EE3;&#x7801;&#x5E76;&#x4E0D;&#x77E5;&#x9053;&#x5B83;&#x4F1A;&#x7528;&#x5728; Android &#x5E94;&#x7528;&#x4E2D;&#x3002;&#x8FD9;&#x8BC1;&#x660E;&#x4E86;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x7B2C;&#x4E8C;&#x70B9;&#x2014;&#x2014;&#x6211;&#x4EEC;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x662F;<strong>&#x53EF;&#x6D4B;&#x8BD5;&#x7684;</strong>&#x3002;</p>
<h2 id="&#x7F16;&#x5199;&#x5C55;&#x73B0;&#x5C42;"><a class="header-anchor" href="#&#x7F16;&#x5199;&#x5C55;&#x73B0;&#x5C42;"></a>&#x7F16;&#x5199;&#x5C55;&#x73B0;&#x5C42;</h2>
<p>&#x5C55;&#x73B0;&#x4EE3;&#x7801;&#x5C5E;&#x4E8E;&#x7B80;&#x6D01;&#x6846;&#x67B6;&#x7684;<strong>&#x5916;&#x5C42;</strong>&#x3002;&#x5B83;&#x7531;&#x5411;&#x7528;&#x6237;&#x5448;&#x73B0;&#x754C;&#x9762;&#x7684;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#x7EC4;&#x6210;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528; <strong>MainActivity</strong> &#x7C7B;&#x5728;&#x7528;&#x6237;&#x56DE;&#x5230;&#x5E94;&#x7528;&#x7684;&#x65F6;&#x5019;&#x5411;&#x7528;&#x6237;&#x663E;&#x793A;&#x6B22;&#x8FCE;&#x4FE1;&#x606F;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x4ECE; <strong>Presenter</strong> &#x548C; <strong>View</strong> &#x5F00;&#x59CB;&#x5199;&#x754C;&#x9762;&#x3002;&#x89C6;&#x56FE;&#x9700;&#x8981;&#x5E72;&#x7684;&#x552F;&#x4E00;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x5C31;&#x662F;&#x663E;&#x793A;&#x6B22;&#x8FCE;&#x4FE1;&#x606F;&#xFF1A;</p>
<pre><code>public interface MainPresenter extends BasePresenter { 
 
    interface View extends BaseView { 
        void displayWelcomeMessage(String msg);
    } 
}
</code></pre>
<p>&#x90A3;&#x4E48;&#xFF0C;&#x7528;&#x6237;&#x56DE;&#x5230;&#x5E94;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5E94;&#x8BE5;&#x5982;&#x4F55;&#x5F00;&#x59CB; Interactor &#x5462;&#xFF1F;&#x4E00;&#x5207;&#x4E0D;&#x4E25;&#x683C;&#x76F8;&#x5173;&#x7684;&#x4E1C;&#x897F;&#x90FD;&#x5E94;&#x8BE5;&#x653E;&#x5728; Presenter &#x7C7B;&#x4E2D;&#x3002;&#x8FD9;&#x6709;&#x52A9;&#x4E8E;&#x7EC4;&#x7EC7;<a href="https://en.wikipedia.org/wiki/Separation_of_concerns" target="_blank" rel="external">&#x79BB;&#x6563;&#x7684;&#x5173;&#x7CFB;</a>&#x5E76;&#x9632;&#x6B62; Activity &#x53D8;&#x5F97;&#x81C3;&#x80BF;&#x3002;&#x8FD9;&#x5305;&#x62EC;&#x6240;&#x6709;&#x7528; Interator &#x8FD0;&#x884C;&#x7684;&#x4EE3;&#x7801;&#x3002;</p>
<p>&#x5728; <strong>MainActivity</strong> &#x7C7B;&#x4E2D;&#x91CD;&#x8F7D; <strong>onResume()</strong> &#x65B9;&#x6CD5;&#xFF1A;</p>
<pre><code>@Override
protected void onResume() {
    super.onResume();
    // let&apos;s start welcome message retrieval when the app resumes
    mPresenter.resume();
}
</code></pre>
<p>&#x6240;&#x6709; <strong>Presenter</strong> &#x5BF9;&#x8C61;&#x90FD;&#x8981;&#x5728;&#x5B9E;&#x73B0; <strong>BasePresenter</strong> &#x7684;&#x65F6;&#x5019;&#x5B9E;&#x73B0; <strong>resume()</strong> &#x65B9;&#x6CD5;&#x3002;</p>
<blockquote>
<p>&#x6CE8;&#x610F;&#xFF1A;&#x6709;&#x4E9B;&#x654F;&#x9510;&#x7684;&#x8BFB;&#x8005;&#x4F1A;&#x53D1;&#x73B0;&#x6211;&#x5728; BasePresenter &#x63A5;&#x53E3;&#x4E2D;&#x6DFB;&#x52A0;&#x4E86; Android &#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x65B9;&#x6CD5;&#xFF0C;&#x5373;&#x4F7F; Presenter &#x5728;&#x8F83;&#x4F4E;&#x5C42;&#x3002;Presenter &#x4E0D;&#x4F1A;&#x83B7;&#x77E5; UI &#x5C42;&#x7684;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x2014;&#x2014;&#x6BD4;&#x5982;&#x5B83;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x6307;&#x5B9A; Android &#x7279;&#x5B9A;&#x7684; * &#x4E8B;&#x4EF6;* &#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x4E2A; UI &#x90FD;&#x9700;&#x8981;&#x5411;&#x7528;&#x6237;&#x5C55;&#x793A;&#x3002;&#x60F3;&#x50CF;&#x4E00;&#x4E0B;&#xFF0C;&#x6211;&#x8C03;&#x7528;&#x7684;&#x662F;  onUIShow() &#x800C;&#x4E0D;&#x662F; onResumt()&#xFF0C;&#x7ED3;&#x679C;&#x4F1A;&#x600E;&#x4E48;&#x6837;&#x5462;&#x3002;&#x4E00;&#x5207;&#x8FD0;&#x884C;&#x826F;&#x597D;&#xFF0C;&#x4E0D;&#x662F;&#x5417;&#xFF1F;<img class="emoji" draggable="false" alt="&#x1F603;" src="https://twemoji.maxcdn.com/2/72x72/1f603.png"></p>
</blockquote>
<p>&#x6240;&#x6709;&#x7684; Presenter &#x5728;&#x7EE7;&#x627F; BasePresenter &#x65F6;&#x90FD;&#x8981;&#x5B9E;&#x73B0; resume() &#x65B9;&#x6CD5;&#x3002;&#x6211;&#x4EEC;&#x5728; <strong>MainPresenter</strong> &#x7684; <strong>Resume()</strong> &#x65B9;&#x6CD5;&#x4E2D;&#x542F;&#x52A8; Interactor&#x3002;</p>
<pre><code>@Override
public void resume() {
    mView.showProgress();    
    // initialize the interactor
    WelcomingInteractor interactor = new WelcomingInteractorImpl(
            mExecutor,
            mMainThread, 
            this, 
            mMessageRepository
    );    
    // run the interactor
    interactor.execute();
}
</code></pre>
<p><strong>execute()</strong> &#x65B9;&#x6CD5;&#x4F1A;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C; <strong>WelcomingInteractorImpl</strong> &#x7684; <strong>run()</strong> &#x65B9;&#x6CD5;&#x3002;&#x800C; <strong>run()</strong> &#x65B9;&#x6CD5;&#x5728;<strong>&#x7F16;&#x5199;&#x65B0;&#x7684; Interactor</strong> &#x4E00;&#x8282;&#x4E2D;&#x4F1A;&#x6709;&#x4ECB;&#x7ECD;&#x3002;</p>
<p>&#x4F60;&#x53EF;&#x80FD;&#x6CE8;&#x610F;&#x5230; Interactor &#x7684;&#x884C;&#x4E3A;&#x4E0E; <strong>AsyncTask</strong> &#x76F8;&#x7C7B;&#x4F3C;&#xFF0C;&#x90FD;&#x662F;&#x5728;&#x63D0;&#x4F9B;&#x6240;&#x9700;&#x4E1C;&#x897F;&#x540E;&#x8FD0;&#x884C;&#x3002;&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x4F7F;&#x7528; AsyncTask &#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x8FD9;&#x662F; <strong>Android &#x4EE3;&#x7801;</strong>&#xFF0C;&#x9700;&#x8981;&#x6A21;&#x62DF;&#x5668;&#x624D;&#x80FD;&#x8FD0;&#x884C;&#x6216;&#x6D4B;&#x8BD5;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x4E3A; Interfactor &#x63D0;&#x4F9B;&#x4E0B;&#x5217;&#x5C5E;&#x6027;&#xFF1A;</p>
<ul>
<li><strong>ThreadExecutor</strong> &#x5B9E;&#x4F8B;&#x8D1F;&#x8D23;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C; Interactor&#x3002;&#x6211;&#x901A;&#x5E38;&#x4F1A;&#x4F7F;&#x7528;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x3002;&#x8FD9;&#x4E2A;&#x7C7B;&#x5B9E;&#x9645;&#x9A7B;&#x7559;&#x5728;&#x57DF;&#x5305;&#x4E2D;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x5728;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#x3002;</li>
<li><strong>MainThreadImpl</strong> &#x5B9E;&#x4F8B;&#x8D1F;&#x8D23;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0A;&#x4ECE; Interactor &#x53D1;&#x9001;&#x53EF;&#x8FD0;&#x884C;&#x5BF9;&#x8C61;&#x3002;&#x4E3B;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#x8BBF;&#x95EE;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x7C7B;&#x9700;&#x8981;&#x5728;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#x3002;</li>
<li>&#x4F60;&#x53EF;&#x80FD;&#x6CE8;&#x610F;&#x5230;&#x6211;&#x4EEC;&#x5411; Interactor &#x63D0;&#x4F9B;&#x4E86; this &#xFF0C;&#x56E0;&#x4E3A; MainPresenter &#x4E5F;&#x662F;&#x4E00;&#x4E2A; Callback &#x5BF9;&#x8C61;&#xFF0C;Interactor &#x4F1A;&#x7528;&#x5B83;&#x5728;&#x4E8B;&#x4EF6;&#x56DE;&#x8C03;&#x4E2D;&#x66F4;&#x65B0; UI&#x3002;</li>
<li><strong>WelcomeMessageRepository</strong> &#x5B9E;&#x73B0;&#x4E86; Interactor &#x7528;&#x5230;&#x7684; <strong>MessageRepository</strong> &#x63A5;&#x53E3;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x5B83;&#x7684;&#x5B9E;&#x4F8B;&#x3002;<strong>WelcomeMessageRepository</strong> &#x4F1A;&#x5728;<strong>&#x7F16;&#x5199;&#x5B58;&#x50A8;&#x5C42;</strong>&#x4E00;&#x8282;&#x4E2D;&#x8BE6;&#x8FF0;&#x3002;</li>
</ul>
<blockquote>
<p>&#x6CE8;&#x610F;&#xFF1A;&#x56E0;&#x4E3A;&#x6BCF;&#x6B21;&#x90FD;&#x9700;&#x8981;&#x5411; Interactor &#x63D0;&#x4F9B;&#x8BB8;&#x591A;&#x5C5E;&#x6027;&#xFF0C;&#x5C06;  Dagger 2 &#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x6846;&#x67B6;&#x4F1A;&#x63D0;&#x4F9B;&#x4E0D;&#x5C11;&#x5E2E;&#x52A9;&#x3002;&#x7B80;&#x660E;&#x8D77;&#x89C1;&#xFF0C;&#x6B64;&#x5904;&#x6CA1;&#x6709;&#x5C06;&#x5176;&#x6CE8;&#x5165;&#x3002;&#x4F60;&#x53EF;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x9009;&#x62E9;&#x4F7F;&#x7528;&#x3002;</p>
</blockquote>
<p>&#x4E3A;&#x4EC0;&#x4E48; <strong>this</strong> &#x4E5F;&#x662F; Callback &#x5462;&#xFF1F;&#xFF0C;&#x56E0;&#x4E3A; <strong>MainActivity</strong> &#x7684; <strong>MainPresenter</strong> &#x5B9E;&#x73B0;&#x4E86; Callback &#x63A5;&#x53E3;&#xFF1A;</p>
<pre><code>public class MainPresenterImpl extends AbstractPresenter implements MainPresenter, WelcomingInteractor.Callback {
</code></pre>
<p>&#x6211;&#x4EEC;&#x76D1;&#x542C;&#x7684;&#x4E8B;&#x4EF6;&#x6765;&#x81EA;&#x4E8E; Interactor &#x3002;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x6765;&#x81EA;&#x4E8E; <strong>MainPresenter</strong>&#xFF1A;</p>
<pre><code>@Override 
public void onMessageRetrieved(String message) {
    mView.hideProgress(); 
    mView.displayWelcomeMessage(message);
} 
 
@Override 
public void onRetrievalFailed(String error) {
    mView.hideProgress(); 
    onError(error);
}
</code></pre>
<p>&#x5728;&#x4EE3;&#x7801;&#x6BB5;&#x4E2D;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x7684; View &#x5176;&#x5B9E;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x4E86; MainPresenter.View &#x63A5;&#x53E3;&#x7684; <strong>MainActivity</strong>&#xFF1A;</p>
<pre><code>public class MainActivity extends AppCompatActivity implements MainPresenter.View {
</code></pre>
<p>&#x5B83;&#x8D1F;&#x8D23;&#x663E;&#x793A;&#x6B22;&#x8FCE;&#x4FE1;&#x606F;&#xFF1A;</p>
<pre><code>@Override 
public void displayWelcomeMessage(String msg) {
    mWelcomeTextView.setText(msg);
}
</code></pre>
<p>&#x8FD9;&#x5DEE;&#x4E0D;&#x591A;&#x5C31;&#x662F;&#x8868;&#x793A;&#x5C42;&#x7684;&#x5185;&#x5BB9;&#x4E86;&#x3002;</p>
<h2 id="&#x7F16;&#x5199;&#x5B58;&#x50A8;&#x5C42;"><a class="header-anchor" href="#&#x7F16;&#x5199;&#x5B58;&#x50A8;&#x5C42;"></a>&#x7F16;&#x5199;&#x5B58;&#x50A8;&#x5C42;</h2>
<p>repository &#x4E2D;&#x7684;&#x63A5;&#x53E3;&#x5C31;&#x5728;&#x5B58;&#x50A8;&#x5C42;&#x5B9E;&#x73B0;&#x3002;&#x6240;&#x6709;&#x6570;&#x636E;&#x5E93;&#x76F8;&#x5173;&#x7684;&#x4EE3;&#x7801;&#x90FD;&#x5728;&#x8FD9;&#x91CC;&#x3002;&#x4ED3;&#x5E93;&#x6A21;&#x5F0F;&#x53EA;&#x662F;&#x8868;&#x8FBE;&#x6570;&#x636E;&#x6765;&#x6E90;&#x3002;&#x4F46;&#x6211;&#x4EEC;&#x7684;&#x4E3B;&#x8981;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E0D;&#x5728;&#x4E4E;&#x9996;&#x6570;&#x636E;&#x7684;&#x6765;&#x6E90;&#x2014;&#x2014;&#x4E0D;&#x7BA1;&#x5B83;&#x662F;&#x6765;&#x81EA;&#x6570;&#x636E;&#x5E93;&#x3001;&#x670D;&#x52A1;&#x5668;&#x8FD8;&#x662F;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;&#x590D;&#x6742;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; <a href="https://developer.android.com/guide/topics/providers/content-providers.html" target="_blank" rel="external">ContentProviders</a> &#x6216;&#x8005;&#x50CF; <a href="https://github.com/Raizlabs/DBFlow" target="_blank" rel="external">DBFlow</a> &#x8FD9;&#x6837;&#x7684; ORM &#x5DE5;&#x5177;&#x5904;&#x7406;&#x3002;&#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x4ECE; Web &#x63A5;&#x6536;&#x6570;&#x636E;&#xFF0C;&#x90A3;&#x5C31;&#x4F1A;&#x7528;&#x5230; <a href="http://square.github.io/retrofit/" target="_blank" rel="external">Retrofit</a>&#x3002;&#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x7B80;&#x5355;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x5B58;&#x50A8;&#xFF0C;&#x90A3;&#x4F60;&#x4F1A;&#x7528;&#x5230; <a href="https://developer.android.com/training/basics/data-storage/shared-preferences.html" target="_blank" rel="external">SharedPreferences</a>&#x3002;&#x4E0D;&#x7BA1;&#x600E;&#x6837;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x9009;&#x62E9;&#x6B63;&#x786E;&#x7684;&#x5DE5;&#x5177;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x7684;&#x6570;&#x636E;&#x5E93;&#x5E76;&#x4E0D;&#x662F;&#x771F;&#x6B63;&#x7684;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x7C7B;&#xFF0C;&#x901A;&#x8FC7;&#x5EF6;&#x8FDF;&#x6765;&#x6A21;&#x62DF;&#xFF1A;</p>
<pre><code>public class WelcomeMessageRepository implements MessageRepository { 
    @Override 
    public String getWelcomeMessage() {
        String msg = &quot;Welcome, friend!&quot;; // let&apos;s be friendly
 
        // let&apos;s simulate some network/database lag 
        try { 
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } 
 
        return msg;
    } 
}
</code></pre>
<p>&#x5C31; <strong>WelcomingInteractor</strong> &#x800C;&#x8A00;&#xFF0C;&#x5EF6;&#x8FDF;&#x7684;&#x539F;&#x56E0;&#x53EF;&#x80FD;&#x662F;&#x7531;&#x771F;&#x5B9E;&#x7F51;&#x7EDC;&#x6216;&#x5176;&#x4ED6;&#x539F;&#x56E0;&#x9020;&#x6210;&#x7684;&#xFF0C;&#x4F46;&#x5B83;&#x5E76;&#x4E0D;&#x5728;&#x4E4E;&#xFF0C;&#x5B83;&#x53EA;&#x9700;&#x8981;&#x6570;&#x636E;&#x63D0;&#x4F9B;&#x8005;&#x5B9E;&#x73B0; <strong>MessageRepository</strong> &#x63A5;&#x53E3;&#x5C31;&#x597D;&#x3002;</p>
<h2 id="&#x6982;&#x89C8;"><a class="header-anchor" href="#&#x6982;&#x89C8;"></a>&#x6982;&#x89C8;</h2>
<p>&#x8FD9;&#x4E2A;<a href="https://github.com/dmilicic/Android-Clean-Boilerplate/tree/example" target="_blank" rel="external">&#x793A;&#x4F8B;</a>&#x5DF2;&#x7ECF;&#x653E;&#x5728;GitHub&#x4E0A;&#x3002;&#x5404;&#x4E2A;&#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x603B;&#x7ED3;&#x5982;&#x4E0B;&#xFF1A;</p>
<blockquote>
<p>MainActivity -&gt;MainPresenter -&gt; WelcomingInteractor -&gt; WelcomeMessageRepository -&gt; WelcomingInteractor -&gt; MainPresenter -&gt; MainActivity</p>
</blockquote>
<p>&#x6CE8;&#x610F;&#x8FD9;&#x4E2A;&#x63A7;&#x5236;&#x6D41;&#x7A0B;&#xFF0C;&#x8FD9;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF1A;</p>
<blockquote>
<p>Outer&#x200A;&#x2014;&#x200A;Mid&#x200A;&#x2014;&#x200A;Core&#x200A;&#x2014;&#x200A;Outer&#x200A;&#x2014;&#x200A;Core&#x200A;&#x2014;&#x200A;Mid&#x200A;&#x2014;&#x200A;Outer</p>
</blockquote>
<p>&#x5728;&#x4E00;&#x4E2A;&#x7528;&#x4F8B;&#x4E2D;&#x591A;&#x6B21;&#x8BBF;&#x95EE;&#x5916;&#x5C42;&#x662F;&#x5F88;&#x5E38;&#x89C1;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x5982;&#x679C;&#x4F60;&#x8981;&#x663E;&#x793A;&#x70B9;&#x4EC0;&#x4E48;&#xFF0C;&#x5B58;&#x50A8;&#x70B9;&#x4EC0;&#x4E48;&#x5E76;&#x4ECE; Web &#x8BBF;&#x95EE;&#x4E9B;&#x4EC0;&#x4E48;&#xFF0C;&#x63A7;&#x5236;&#x6D41;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x8BBF;&#x95EE;&#x5916;&#x5C42;&#x4E09;&#x6B21;&#x3002;</p>
<h2 id="&#x7ED3;&#x8BBA;"><a class="header-anchor" href="#&#x7ED3;&#x8BBA;"></a>&#x7ED3;&#x8BBA;</h2>
<p>&#x5BF9;&#x4E8E;&#x6211;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x662F;&#x8FC4;&#x4ECA;&#x4E3A;&#x6B62;&#x5F00;&#x53D1;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6700;&#x4F73;&#x65B9;&#x5F0F;&#x3002;&#x89E3;&#x8026;&#x7684;&#x4EE3;&#x7801;&#x80FD;&#x8BA9;&#x4EBA;&#x628A;&#x6CE8;&#x610F;&#x529B;&#x653E;&#x5728;&#x5177;&#x4F53;&#x7684;&#x95EE;&#x9898;&#x4E0A;&#xFF0C;&#x800C;&#x4E0D;&#x53D7;&#x5176;&#x4ED6;&#x4E8B;&#x4EF6;&#x5E72;&#x6270;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x9519;&#x7684; <a href="https://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29" target="_blank" rel="external">SOLID</a> &#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x8FD8;&#x9700;&#x8981;&#x4E00;&#x4E9B;&#x65F6;&#x95F4;&#x9002;&#x5E94;&#x3002;&#x5E0C;&#x671B;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x793A;&#x4F8B;&#x80FD;&#x8BA9;&#x4F60;&#x5BF9;&#x8BE5;&#x5185;&#x5BB9;&#x6709;&#x8FDB;&#x4E00;&#x6B65;&#x4E86;&#x89E3;&#x3002;</p>
<p>&#x4F7F;&#x7528;&#x7B80;&#x6D01;&#x67B6;&#x6784;&#xFF0C;&#x6211;&#x8FD8;&#x5EFA;&#x7ACB;&#x4E86;&#x4E00;&#x4E2A;&#x5F00;&#x6E90;&#x7684;&#x6210;&#x672C;&#x8DDF;&#x8E2A;&#x5E94;&#x7528;&#xFF0C;&#x5B83;&#x80FD;&#x5C55;&#x793A;&#x4E00;&#x9879;&#x5E94;&#x7528;&#x7684;&#x7F16;&#x7801;&#x3002;&#x6B64;&#x5E94;&#x7528;&#x5E76;&#x65E0;&#x521B;&#x65B0;&#x5185;&#x5BB9;&#xFF0C;&#x4F60;&#x82E5;&#x611F;&#x5174;&#x8DA3;&#xFF0C;&#x53EF;&#x67E5;&#x770B;&#xFF1A;<a href="https://github.com/dmilicic/android-clean-sample-app" target="_blank" rel="external">&#x6210;&#x672C;&#x8DDF;&#x8E2A;&#x5E94;&#x7528;&#x793A;&#x4F8B;</a></p>
<p>&#x53E6;&#x5916;&#xFF0C;&#x6B64;&#x793A;&#x4F8B; app &#x662F;&#x6839;&#x636E;&#x7B80;&#x6D01;&#x7684;&#x542F;&#x52A8;&#x5305;&#x521B;&#x5EFA;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x627E;&#x5230;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF1A;<a href="https://github.com/dmilicic/android-clean-sample-app" target="_blank" rel="external">Android Clean Boilerplate</a></p>
<h2 id="&#x76F8;&#x5173;&#x9605;&#x8BFB;"><a class="header-anchor" href="#&#x76F8;&#x5173;&#x9605;&#x8BFB;"></a>&#x76F8;&#x5173;&#x9605;&#x8BFB;</h2>
<p>&#x672C;&#x6307;&#x5357;&#x662F;&#x5BF9;&#x8BE5;<a href="http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/" target="_blank" rel="external">&#x6587;&#x7AE0;</a>&#x7684;&#x6269;&#x5C55;&#x3002;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x6211;&#x5728;&#x793A;&#x4F8B;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;<strong>&#x5E38;&#x89C4;&#x7684;Java&#x4EE3;&#x7801;</strong>&#xFF0C;&#x4EE5;&#x907F;&#x514D;&#x5728;&#x5C55;&#x793A;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#x6709;&#x5176;&#x5B83;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x770B;&#x5230;&#x5728;&#x7B80;&#x6D01;&#x67B6;&#x6784;&#x4E2D;&#x4F7F;&#x7528; <strong>RxJava</strong> &#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x770B;<a href="http://fernandocejas.com/2015/07/18/architecting-android-the-evolution/" target="_blank" rel="external">&#x8FD9;&#x4E2A;</a>&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/12/21/android-clean-architecture-pattern/mvp_clean.png&quot; style=&quot;float:left; width:100px; height:56px; margin-right:16px&quot; alt=&quot;&quot;&gt;&lt;/a&gt;
&lt;span&gt;&amp;#x3010;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3011;&amp;#x81EA;&amp;#x6211;&amp;#x5F00;&amp;#x59CB;&amp;#x5F00;&amp;#x53D1; Android &amp;#x5E94;&amp;#x7528;&amp;#x4EE5;&amp;#x6765;&amp;#x5C31;&amp;#x6709;&amp;#x4E00;&amp;#x79CD;&amp;#x611F;&amp;#x89C9;&amp;#x2014;&amp;#x2014;&amp;#x6211;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x5B83;&amp;#x505A;&amp;#x5F97;&amp;#x66F4;&amp;#x597D;&amp;#x3002;&amp;#x5728;&amp;#x6211;&amp;#x7684;&amp;#x804C;&amp;#x4E1A;&amp;#x751F;&amp;#x6DAF;&amp;#x4E2D;&amp;#xFF0C;&amp;#x6211;&amp;#x770B;&amp;#x5230;&amp;#x8FC7;&amp;#x4E0D;&amp;#x5C11;&amp;#x70C2;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x5176;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E9B;&amp;#x8FD8;&amp;#x662F;&amp;#x6211;&amp;#x81EA;&amp;#x5DF1;&amp;#x5199;&amp;#x7684;&amp;#x3002;Android &amp;#x7684;&amp;#x590D;&amp;#x6742;&amp;#x6027;&amp;#x548C;&amp;#x70C2;&amp;#x4EE3;&amp;#x7801;&amp;#x52BF;&amp;#x5FC5;&amp;#x9020;&amp;#x6210;&amp;#x5927;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#xFF0C;&amp;#x4ECE;&amp;#x9519;&amp;#x8BEF;&amp;#x4E2D;&amp;#x6C72;&amp;#x53D6;&amp;#x6559;&amp;#x8BAD;&amp;#x5E76;&amp;#x6301;&amp;#x7EED;&amp;#x6539;&amp;#x5584;&amp;#x5341;&amp;#x5206;&amp;#x91CD;&amp;#x8981;&amp;#x3002;&amp;#x5728;&amp;#x591A;&amp;#x6B21;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5BFB;&amp;#x627E;&amp;#x66F4;&amp;#x597D;&amp;#x7684;&amp;#x5F00;&amp;#x53D1;&amp;#x65B9;&amp;#x5F0F;&amp;#x540E;&amp;#xFF0C;&amp;#x6211;&amp;#x9047;&amp;#x5230;&amp;#x4E86; Clean &amp;#x67B6;&amp;#x6784;&amp;#xFF08;&amp;#x7B80;&amp;#x6D01;&amp;#x67B6;&amp;#x6784;&amp;#xFF09;&amp;#x3002;&amp;#x4E8E;&amp;#x662F;&amp;#x6211;&amp;#x5C06;&amp;#x5176;&amp;#x5E94;&amp;#x7528;&amp;#x5728;&amp;#x4E86; Android &amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5E76;&amp;#x7ED3;&amp;#x5408;&amp;#x6211;&amp;#x7684;&amp;#x5F00;&amp;#x53D1;&amp;#x7ECF;&amp;#x9A8C;&amp;#x505A;&amp;#x4E86;&amp;#x8C03;&amp;#x6574;&amp;#xFF0C;&amp;#x5199;&amp;#x51FA;&amp;#x4E86;&amp;#x8FD9;&amp;#x7BC7;&amp;#x6211;&amp;#x89C9;&amp;#x5F97;&amp;#x8F83;&amp;#x4E3A;&amp;#x5B9E;&amp;#x7528;&amp;#x3001;&amp;#x503C;&amp;#x5F97;&amp;#x5206;&amp;#x4EAB;&amp;#x7684;&amp;#x6587;&amp;#x7AE0;&amp;#x3002;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Architecture" scheme="http://ngudream.com/tags/Architecture/"/>
    
  </entry>
  
  <entry>
    <title>Android 知识梳理</title>
    <link href="http://ngudream.com/2016/11/30/android-data-gather/"/>
    <id>http://ngudream.com/2016/11/30/android-data-gather/</id>
    <published>2016-11-30T15:16:15.000Z</published>
    <updated>2017-01-15T07:58:44.320Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6765;&#x4E00;&#x5F20;googdev&#x7684;&#x601D;&#x7EF4;&#x5BFC;&#x56FE;&#xFF0C;&#x770B;&#x770B;&#x5982;&#x4F55;&#x7CFB;&#x7EDF;&#x7684;&#x5B66;&#x4E60; Android &#x5F00;&#x53D1;&#x77E5;&#x8BC6;&#x3002;</p>
<div align="center">
<img data-original="/2016/11/30/android-data-gather/20160913000554907.png" class="lazy">
</div>
<p>&#x518D;&#x6765;&#x4E00;&#x5F20;Android&#x77E5;&#x8BC6;&#x70B9;&#x603B;&#x7ED3;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/11/30/android-data-gather/20160108161827482.png" class="lazy">
</div>
<p>&#x672C;&#x7BC7;&#x535A;&#x5BA2;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x77E5;&#x8BC6;&#x6574;&#x7406;&#xFF0C;&#x56E0;&#x4E3A;&#x7F51;&#x4E0A;&#x5BF9;&#x4E8E;Android&#x7684;&#x77E5;&#x8BC6;&#x4ECB;&#x7ECD;&#x8DB3;&#x591F;&#x591A;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4E0D;&#x518D;&#x5199;&#x76F8;&#x5173;&#x6587;&#x7AE0;&#xFF08;&#x4E3B;&#x8981;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x5199;&#x7684;&#x4E0D;&#x5982;&#x4EBA;&#x5BB6;&#x597D;&#xFF09;&#xFF0C;&#x6240;&#x4EE5;&#x6240;&#x6709;&#x6587;&#x7AE0;&#x5747;&#x6765;&#x81EA;&#x5176;&#x4ED6;&#x5927;&#x795E;&#x4E4B;&#x624B;&#xFF0C;&#x4E0D;&#x8D34;&#x539F;&#x6587;&#x7AE0;&#xFF0C;&#x53EA;&#x63D0;&#x4F9B;&#x8FDE;&#x63A5;&#xFF0C;&#x56E0;&#x6B64;&#x672C;&#x6587;&#x65E8;&#x5728;&#x51CF;&#x5C11;&#x4F60;&#x5BF9;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x7684;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;&#xFF0C;&#x65B9;&#x4FBF;&#x67E5;&#x627E;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x3002;</p>
<blockquote>
<p>&#x6587;&#x7AE0;&#x4F5C;&#x8005;:<a href="http://www.codemx.cn/" target="_blank" rel="external">&#x58A8;&#x9999;</a><br>
&#x539F;&#x59CB;&#x94FE;&#x63A5;:<a href="http://www.codemx.cn/2016/05/04/2016-05-04-Android-Tree/" target="_blank" rel="external">http://www.codemx.cn/2016/05/04/2016-05-04-Android-Tree/</a></p>
</blockquote>
<h2 id="activity"><a class="header-anchor" href="#activity"></a>Activity</h2>
<p>Activity&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x6B63;&#x5E38;&#x7ED3;&#x675F;&#x548C;&#x975E;&#x6B63;&#x5E38;&#x9500;&#x6BC1;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x548C;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x53CA;&#x5176;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#xFF1B;</p>
<ul>
<li><a href="http://hukai.me/android-training-managing-the-activity-lifecycle-lesson-1/" target="_blank" rel="external">Android Training - &#x8BE6;&#x89E3;Activity&#x751F;&#x547D;&#x5468;&#x671F;(Lesson 1 - &#x542F;&#x52A8;&#x4E0E;&#x9500;&#x6BC1;Activity)</a></li>
<li><a href="http://hukai.me/android-training-managing-the-activity-lifecycle-lesson-2/" target="_blank" rel="external">Android Training - &#x8BE6;&#x89E3;Activity&#x751F;&#x547D;&#x5468;&#x671F;(Lesson 2 - &#x6682;&#x505C;&#x4E0E;&#x6062;&#x590D;activity)</a></li>
<li><a href="http://hukai.me/android-training-managing-the-activity-lifecycle-lesson-3/" target="_blank" rel="external">Android Training - &#x8BE6;&#x89E3;Activity&#x751F;&#x547D;&#x5468;&#x671F;(Lesson 3 - &#x505C;&#x6B62;&#x4E0E;&#x91CD;&#x542F;activity)</a></li>
<li><a href="http://hukai.me/android-training-managing-the-activity-lifecycle-lesson-4/" target="_blank" rel="external">Android Training - &#x8BE6;&#x89E3;Activity&#x751F;&#x547D;&#x5468;&#x671F;(Lesson 4 - &#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x9500;&#x6BC1;&#x7684;activity)</a></li>
<li><a href="http://www.cnblogs.com/hanyonglu/archive/2012/03/28/2420515.html" target="_blank" rel="external">Android&#x5F00;&#x53D1;&#x4E4B;InstanceState&#x8BE6;&#x89E3;</a></li>
</ul>
<h3 id="activity&#x542F;&#x52A8;&#x6A21;&#x5F0F;"><a class="header-anchor" href="#activity&#x542F;&#x52A8;&#x6A21;&#x5F0F;"></a>Activity&#x542F;&#x52A8;&#x6A21;&#x5F0F;</h3>
<ul>
<li><a href="http://jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0520/2897.html" target="_blank" rel="external">Activity&#x542F;&#x52A8;&#x6A21;&#x5F0F;&#x56FE;&#x6587;&#x8BE6;&#x89E3;&#xFF1A;standard, singleTop, singleTask &#x4EE5;&#x53CA; singleInstance</a></li>
<li><a href="http://blog.csdn.net/zhangjg_blog/article/details/10923643" target="_blank" rel="external">Android&#x4E2D;Activity&#x56DB;&#x79CD;&#x542F;&#x52A8;&#x6A21;&#x5F0F;&#x548C;taskAffinity&#x5C5E;&#x6027;&#x8BE6;&#x89E3;</a></li>
</ul>
<h3 id="activity&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;"><a class="header-anchor" href="#activity&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;"></a>Activity&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;</h3>
<ul>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6689748" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6703247" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5185;&#x90E8;&#x542F;&#x52A8;Activity&#x8FC7;&#x7A0B;&#xFF08;startActivity&#xFF09;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6720261" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5728;&#x65B0;&#x7684;&#x8FDB;&#x7A0B;&#x4E2D;&#x542F;&#x52A8;&#x65B0;&#x7684;Activity&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</a></li>
<li><a href="http://www.soso.io/article/113440.html" target="_blank" rel="external">Activity&#x7684;&#x56DE;&#x6536;&#x8FC7;&#x7A0B;&#x53CA;&#x539F;&#x7406;</a></li>
</ul>
<h2 id="view"><a class="header-anchor" href="#view"></a>View</h2>
<h3 id="view&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;"><a class="header-anchor" href="#view&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;"></a>View&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;</h3>
<ul>
<li><a href="http://blog.csdn.net/wangjinyu501/article/details/9008271" target="_blank" rel="external">Android View&#x7ED8;&#x5236;&#x6D41;&#x7A0B;</a></li>
<li><a href="http://a.codekk.com/detail/Android/lightSky/%E5%85%AC%E5%85%B1%E6%8A%80%E6%9C%AF%E7%82%B9%E4%B9%8B%20View%20%E7%BB%98%E5%88%B6%E6%B5%81%E7%A8%8B" target="_blank" rel="external">&#x516C;&#x5171;&#x6280;&#x672F;&#x70B9;&#x4E4B; View &#x7ED8;&#x5236;&#x6D41;&#x7A0B;</a></li>
<li><a href="http://blog.csdn.net/qinjuning/article/details/8051811" target="_blank" rel="external">Android&#x4E2D;measure&#x8FC7;&#x7A0B;&#x3001;WRAP_CONTENT&#x8BE6;&#x89E3;&#x4EE5;&#x53CA;xml&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x89E3;&#x6790;&#x6D41;&#x7A0B;&#x6D45;&#x6790;(&#x4E0A;)</a></li>
<li><a href="http://blog.csdn.net/qinjuning/article/details/8074262" target="_blank" rel="external">Android&#x4E2D;measure&#x8FC7;&#x7A0B;&#x3001;WRAP_CONTENT&#x8BE6;&#x89E3;&#x4EE5;&#x53CA;xml&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x89E3;&#x6790;&#x6D41;&#x7A0B;&#x6D45;&#x6790;(&#x4E0B;)</a></li>
<li><a href="http://blog.csdn.net/qinjuning/article/details/7474827" target="_blank" rel="external">Android&#x4E2D;View(&#x89C6;&#x56FE;)&#x7ED8;&#x5236;&#x4E0D;&#x540C;&#x72B6;&#x6001;&#x80CC;&#x666F;&#x56FE;&#x7247;&#x539F;&#x7406;&#x6DF1;&#x5165;&#x5206;&#x6790;&#x4EE5;&#x53CA;StateListDrawable&#x4F7F;&#x7528;&#x8BE6;&#x89E3;</a></li>
<li><a href="http://blog.csdn.net/qinjuning/article/details/7226787" target="_blank" rel="external">Android&#x4E2D;&#x5C06;&#x5E03;&#x5C40;&#x6587;&#x4EF6;/View&#x6DFB;&#x52A0;&#x81F3;&#x7A97;&#x53E3;&#x8FC7;&#x7A0B;&#x5206;&#x6790; &#x2014;- &#x4ECE;setContentView()&#x8C08;&#x8D77;</a></li>
</ul>
<h3 id="view&#x7684;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x539F;&#x7406;"><a class="header-anchor" href="#view&#x7684;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x539F;&#x7406;"></a>View&#x7684;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://www.jianshu.com/p/e99b5e8bd67b#" target="_blank" rel="external">&#x56FE;&#x89E3; Android &#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x673A;&#x5236;</a></li>
<li><a href="http://blog.csdn.net/wangjinyu501/article/details/22584465" target="_blank" rel="external">Android &#x4E2D;Touch&#xFF08;&#x89E6;&#x5C4F;&#xFF09;&#x4E8B;&#x4EF6;&#x4F20;&#x9012;&#x673A;&#x5236;</a></li>
<li><a href="http://www.cnblogs.com/sunzn/archive/2013/05/10/3064129.html" target="_blank" rel="external">Android &#x7F16;&#x7A0B;&#x4E0B; Touch &#x4E8B;&#x4EF6;&#x7684;&#x5206;&#x53D1;&#x548C;&#x6D88;&#x8D39;&#x673A;&#x5236;</a></li>
<li><a href="http://blog.csdn.net/lvxiangan/article/details/9309927" target="_blank" rel="external">Android-onInterceptTouchEvent()&#x548C;onTouchEvent()&#x603B;&#x7ED3;</a></li>
<li></li>
</ul>
<p>&#x6CE8;&#xFF1A;&#x4E0A;&#x9762;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x6CA1;&#x627E;&#x5230;&#x539F;&#x521B;&#xFF0C;&#x8FDE;&#x63A5;&#x662F;&#x8F6C;&#x8F7D;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x8C01;&#x627E;&#x5230;&#x539F;&#x521B;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x7ED9;&#x6211;&#x3002;</p>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/49203945" target="_blank" rel="external">Android&#x4E2D;View&#x7684;&#x91CF;&#x7B97;&#x3001;&#x5E03;&#x5C40;&#x53CA;&#x7ED8;&#x56FE;&#x673A;&#x5236;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/49403315" target="_blank" rel="external">&#x6E90;&#x7801;&#x89E3;&#x6790;Android&#x4E2D;View&#x7684;measure&#x91CF;&#x7B97;&#x8FC7;&#x7A0B;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/50366021" target="_blank" rel="external">&#x6E90;&#x7801;&#x89E3;&#x6790;Android&#x4E2D;View&#x7684;layout&#x5E03;&#x5C40;&#x8FC7;&#x7A0B;</a></li>
</ul>
<h3 id="&#x81EA;&#x5B9A;&#x4E49;view"><a class="header-anchor" href="#&#x81EA;&#x5B9A;&#x4E49;view"></a>&#x81EA;&#x5B9A;&#x4E49;View</h3>
<ul>
<li><a href="http://blog.csdn.net/aigestudio/article/details/41212583" target="_blank" rel="external">&#x81EA;&#x5B9A;&#x4E49;&#x63A7;&#x4EF6;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;(&#x7CFB;&#x5217;&#x6559;&#x7A0B;)</a></li>
<li><a href="http://www.gcssloop.com/customview/CustomViewIndex" target="_blank" rel="external">&#x5B89;&#x5353;&#x81EA;&#x5B9A;&#x4E49;View&#x6559;&#x7A0B;&#x76EE;&#x5F55;</a></li>
</ul>
<h3 id="&#x81EA;&#x5B9A;&#x4E49;viewgroup"><a class="header-anchor" href="#&#x81EA;&#x5B9A;&#x4E49;viewgroup"></a>&#x81EA;&#x5B9A;&#x4E49;ViewGroup</h3>
<ul>
<li><a href="http://blog.csdn.net/lmj623565791/article/details/38339817" target="_blank" rel="external">Android &#x624B;&#x628A;&#x624B;&#x6559;&#x60A8;&#x81EA;&#x5B9A;&#x4E49;ViewGroup</a></li>
<li><a href="http://blog.csdn.net/lmj623565791/article/details/38352503" target="_blank" rel="external">Android &#x81EA;&#x5B9A;&#x4E49;ViewGroup &#x5B9E;&#x6218;&#x7BC7; -&gt; &#x5B9E;&#x73B0;FlowLayout</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/51314039" target="_blank" rel="external">Android&#x4E2D;&#x81EA;&#x5B9A;&#x4E49;View&#x3001;ViewGroup&#x7406;&#x8BBA;&#x57FA;&#x7840;&#x8BE6;&#x89E3;</a></li>
</ul>
<h3 id="listview"><a class="header-anchor" href="#listview"></a>ListView</h3>
<ul>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/44996879" target="_blank" rel="external">Android ListView&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x5B8C;&#x5168;&#x89E3;&#x6790;&#xFF0C;&#x5E26;&#x4F60;&#x4ECE;&#x6E90;&#x7801;&#x7684;&#x89D2;&#x5EA6;&#x5F7B;&#x5E95;&#x7406;&#x89E3;</a></li>
</ul>
<h2 id="broadcast"><a class="header-anchor" href="#broadcast"></a>Broadcast</h2>
<h3 id="&#x5E7F;&#x64AD;&#x7684;&#x5206;&#x7C7B;&#x53CA;&#x533A;&#x522B;-&#x6CE8;&#x518C;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x5E7F;&#x64AD;&#x7684;&#x5206;&#x7C7B;&#x53CA;&#x533A;&#x522B;-&#x6CE8;&#x518C;&#x65B9;&#x6CD5;"></a>&#x5E7F;&#x64AD;&#x7684;&#x5206;&#x7C7B;&#x53CA;&#x533A;&#x522B;,&#x6CE8;&#x518C;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://www.cnblogs.com/net168/p/3980068.html" target="_blank" rel="external">&#x89E3;&#x6790;BroadcastReceiver&#x4E4B;&#x4F60;&#x9700;&#x8981;&#x4E86;&#x89E3;&#x7684;&#x4E00;&#x4E9B;&#x4E1C;&#x4E1C;</a></li>
</ul>
<h3 id="&#x5E7F;&#x64AD;&#x5B9E;&#x73B0;&#x8DE8;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1;&#x7684;&#x539F;&#x7406;"><a class="header-anchor" href="#&#x5E7F;&#x64AD;&#x5B9E;&#x73B0;&#x8DE8;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1;&#x7684;&#x539F;&#x7406;"></a>&#x5E7F;&#x64AD;&#x5B9E;&#x73B0;&#x8DE8;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1;&#x7684;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6737352" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6CE8;&#x518C;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x5668;&#xFF08;registerReceiver&#xFF09;&#x7684;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6744448" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53D1;&#x9001;&#x5E7F;&#x64AD;&#xFF08;sendBroadcast&#xFF09;&#x7684;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</a></li>
</ul>
<h2 id="service"><a class="header-anchor" href="#service"></a>Service</h2>
<h3 id="service&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;"><a class="header-anchor" href="#service&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;"></a>Service&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;</h3>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/48169339" target="_blank" rel="external">Android&#x4E2D;bindService&#x7684;&#x4F7F;&#x7528;&#x53CA;Service&#x751F;&#x547D;&#x5468;&#x671F;</a></li>
</ul>
<h3 id="&#x7ED1;&#x5B9A;&#x548C;&#x975E;&#x7ED1;&#x5B9A;service&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x7ED1;&#x5B9A;&#x548C;&#x975E;&#x7ED1;&#x5B9A;service&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>&#x7ED1;&#x5B9A;&#x548C;&#x975E;&#x7ED1;&#x5B9A;Service&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/48169339" target="_blank" rel="external">Android&#x4E2D;bindService&#x7684;&#x4F7F;&#x7528;&#x53CA;Service&#x751F;&#x547D;&#x5468;&#x671F;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/48015475" target="_blank" rel="external">Android&#x901A;&#x8FC7;startService&#x5B9E;&#x73B0;&#x6279;&#x91CF;&#x4E0B;&#x8F7D;&#x793A;&#x4F8B;</a></li>
</ul>
<h3 id="service&#x7684;&#x539F;&#x7406;"><a class="header-anchor" href="#service&#x7684;&#x539F;&#x7406;"></a>Service&#x7684;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6745181" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7ED1;&#x5B9A;&#x670D;&#x52A1;&#xFF08;bindService&#xFF09;&#x7684;&#x8FC7;&#x7A0B;&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;</a></li>
</ul>
<h3 id="intentservice"><a class="header-anchor" href="#intentservice"></a>IntentService</h3>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/48046861" target="_blank" rel="external">Android&#x4E2D;IntentService&#x7684;&#x4F7F;&#x7528;&#x53CA;&#x5176;&#x6E90;&#x7801;&#x89E3;&#x6790;</a></li>
</ul>
<h3 id="accessibility-services"><a class="header-anchor" href="#accessibility-services"></a>Accessibility Services</h3>
<ul>
<li><a href="http://www.android-doc.com/guide/topics/ui/accessibility/services.html" target="_blank" rel="external">Building Accessibility Services(&#x5EFA;&#x7ACB;&#x53EF;&#x8BBF;&#x95EE;&#x6027;&#x670D;&#x52A1;)</a></li>
<li><a href="http://blog.csdn.net/androidsecurity/article/details/41890369?utm_source=tuicool" target="_blank" rel="external">Android Accessibility(&#x8F85;&#x52A9;&#x529F;&#x80FD;) &#x2013;&#x5B9E;&#x73B0;Android&#x5E94;&#x7528;&#x81EA;&#x52A8;&#x5B89;&#x88C5;&#x3001;&#x5378;&#x8F7D;</a></li>
<li><a href="http://www.infoq.com/cn/articles/android-accessibility-installing?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global" target="_blank" rel="external">&#x4F7F;&#x7528;Android Accessibility&#x5B9E;&#x73B0;&#x514D;Root&#x81EA;&#x52A8;&#x6279;&#x91CF;&#x5B89;&#x88C5;&#x529F;&#x80FD;</a></li>
</ul>
<h2 id="contentprovider"><a class="header-anchor" href="#contentprovider"></a>ContentProvider</h2>
<h3 id="contentprovider&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#contentprovider&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>ContentProvider&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://blog.sina.com.cn/s/blog_9f233c070101euqx.html" target="_blank" rel="external">Android ContentProvider&#x548C;Uri&#x8BE6;&#x89E3; (&#x7EDD;&#x5BF9;&#x5168;&#x9762;)</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6950440" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;Content Provider&#x5E94;&#x7528;&#x5B9E;&#x4F8B;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6963418" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;Content Provider&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6967204" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;Content Provider&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#x6570;&#x636E;&#x7684;&#x539F;&#x7406;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6985171" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;Content Provider&#x7684;&#x5171;&#x4EAB;&#x6570;&#x636E;&#x66F4;&#x65B0;&#x901A;&#x77E5;&#x673A;&#x5236;&#x5206;&#x6790;</a></li>
</ul>
<p>&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E0E;Applocation&#x548C;Activity&#x6BD4;&#x8F83;&#x542F;&#x52A8;&#x987A;&#x5E8F;&#x662F;&#x600E;&#x6837;&#x7684;&#xFF1B;</p>
<p>Contentprovider&#x7684;onCreate&#x65B9;&#x6CD5;&#x5728;Application&#x7684;onCreate&#x65B9;&#x6CD5;&#x524D;&#x9762;&#xFF0C;&#x8D44;&#x6599;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul>
<li><a href="http://www.jianshu.com/p/a1f40b39b3de" target="_blank" rel="external">android &#x5E94;&#x7528;&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</a></li>
</ul>
<h2 id="handler"><a class="header-anchor" href="#handler"></a>Handler</h2>
<h3 id="handle&#x7684;&#x539F;&#x7406;&#x53CA;&#x673A;&#x5236;"><a class="header-anchor" href="#handle&#x7684;&#x539F;&#x7406;&#x53CA;&#x673A;&#x5236;"></a>Handle&#x7684;&#x539F;&#x7406;&#x53CA;&#x673A;&#x5236;</h3>
<ul>
<li><a href="http://www.cnblogs.com/codingmyworld/archive/2011/09/12/2174255.html" target="_blank" rel="external">android&#x7684;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#xFF08;&#x56FE;+&#x6E90;&#x7801;&#x5206;&#x6790;&#xFF09;&#x2014;&#x2014;Looper,Handler,Message</a></li>
<li><a href="http://blog.csdn.net/lmj623565791/article/details/38377229" target="_blank" rel="external">Android &#x5F02;&#x6B65;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236; &#x8BA9;&#x4F60;&#x6DF1;&#x5165;&#x7406;&#x89E3; Looper&#x3001;Handler&#x3001;Message&#x4E09;&#x8005;&#x5173;&#x7CFB;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/47180325" target="_blank" rel="external">&#x6DF1;&#x5165;&#x6E90;&#x7801;&#x89E3;&#x6790;Android&#x4E2D;&#x7684;Handler,Message,MessageQueue,Looper</a></li>
<li><a href="http://www.cnblogs.com/lbangel/p/4335855.html" target="_blank" rel="external">Handler&#x7684;&#x53D1;&#x9001;&#x5904;&#x7406;&#x6D88;&#x606F;&#x7684;&#x65B9;&#x6CD5;&#x603B;&#x4F1A;&#x53CA;&#x5404;&#x81EA;&#x7684;&#x4F18;&#x7F3A;&#x70B9;</a></li>
</ul>
<h3 id="handler&#x7684;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#handler&#x7684;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>Handler&#x7684;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://stackoverflow.com/questions/11278875/handlers-and-memory-leaks-in-android" target="_blank" rel="external">Handlers and memory leaks in Android</a></li>
</ul>
<h2 id="intent"><a class="header-anchor" href="#intent"></a>Intent</h2>
<h3 id="intent&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#intent&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>Intent&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/48417779" target="_blank" rel="external">Android&#x4E2D;Intent&#x6982;&#x8FF0;&#x53CA;&#x4F7F;&#x7528;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/48481793" target="_blank" rel="external">Android&#x4E2D;Intent&#x5BF9;&#x8C61;&#x4E0E;Intent Filter&#x8FC7;&#x6EE4;&#x5339;&#x914D;&#x8FC7;&#x7A0B;&#x8BE6;&#x89E3;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/48578295" target="_blank" rel="external">Android&#x4E2D;&#x5E38;&#x89C1;Intent&#x4E60;&#x60EF;&#x7528;&#x6CD5;-&#x4E0A;&#x7BC7;(&#x9644;&#x6E90;&#x7801;&#x4E0B;&#x8F7D;) </a></li>
</ul>
<h3 id="intent&#x5C5E;&#x6027;"><a class="header-anchor" href="#intent&#x5C5E;&#x6027;"></a>Intent&#x5C5E;&#x6027;</h3>
<ul>
<li><a href="http://blog.csdn.net/github_25928675/article/details/46460417" target="_blank" rel="external">Android&#x6743;&#x9650;&#x548C;&#x52A8;&#x4F5C;&#x5927;&#x5168;</a></li>
</ul>
<h2 id="&#x7F51;&#x7EDC;"><a class="header-anchor" href="#&#x7F51;&#x7EDC;"></a>&#x7F51;&#x7EDC;</h2>
<h3 id="socket&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;"><a class="header-anchor" href="#socket&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;"></a>Socket&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;</h3>
<ul>
<li><a href="http://blog.csdn.net/jiajia4336/article/details/8798421" target="_blank" rel="external">Socket&#x901A;&#x4FE1;&#x539F;&#x7406;&#x548C;&#x5B9E;&#x8DF5;</a></li>
</ul>
<h3 id="tcp-udp&#x7684;&#x539F;&#x7406;"><a class="header-anchor" href="#tcp-udp&#x7684;&#x539F;&#x7406;"></a>TCP&#x3001;UDP&#x7684;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://blog.chinaunix.net/uid-26833883-id-3627644.html" target="_blank" rel="external">TCP&#x3001;UDP&#x3001;IP &#x534F;&#x8BAE;&#x5206;&#x6790; </a></li>
</ul>
<h3 id="http&#x901A;&#x4FE1;&#x539F;&#x7406;"><a class="header-anchor" href="#http&#x901A;&#x4FE1;&#x539F;&#x7406;"></a>Http&#x901A;&#x4FE1;&#x539F;&#x7406;</h3>
<ul>
<li><a href="https://github.com/GeniusVJR/LearningNotes/blob/master/Part4/Network/Http%E5%8D%8F%E8%AE%AE.md" target="_blank" rel="external">Http&#x534F;&#x8BAE;</a></li>
<li><a href="http://www.cnblogs.com/rocomp/p/4803864.html" target="_blank" rel="external">HTTP&#x534F;&#x8BAE;&#x62A5;&#x6587;&#x3001;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x53CA;Java&#x4E2D;&#x7684;HTTP&#x901A;&#x4FE1;&#x6280;&#x672F;&#x8BE6;&#x89E3;</a></li>
</ul>
<h2 id="bluetooth"><a class="header-anchor" href="#bluetooth"></a>Bluetooth</h2>
<h3 id="&#x84DD;&#x7259;2-0"><a class="header-anchor" href="#&#x84DD;&#x7259;2-0"></a>&#x84DD;&#x7259;2.0</h3>
<ul>
<li><a href="http://blog.csdn.net/lanyamokuai/article/details/5998437" target="_blank" rel="external">Bluetooth&#x4ECB;&#x7ECD;&#x53CA;&#x539F;&#x7406;</a></li>
<li><a href="http://blog.csdn.net/zhanghua1121/article/details/9331545" target="_blank" rel="external">Bluetooth&#x901A;&#x4FE1;&#x65B9;&#x5F0F;</a></li>
<li><a href="http://www.cnblogs.com/wenjiang/p/3200138.html" target="_blank" rel="external">Bluetooth&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</a></li>
</ul>
<h3 id="&#x84DD;&#x7259;4-0"><a class="header-anchor" href="#&#x84DD;&#x7259;4-0"></a>&#x84DD;&#x7259;4.0</h3>
<ul>
<li><a href="http://www.tuicool.com/articles/quiuMv" target="_blank" rel="external">BLE&#x4ECB;&#x7ECD;&#x53CA;&#x539F;&#x7406;</a></li>
<li><a href="http://www.51edu.com/it/bckf/35279.html" target="_blank" rel="external">BLE&#x901A;&#x4FE1;&#x65B9;&#x5F0F;</a></li>
<li><a href="http://www.cnblogs.com/xxzjyf/p/x_x_z_j_y_f.html" target="_blank" rel="external">BLE&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</a></li>
</ul>
<h2 id="&#x5185;&#x5B58;&#x4F18;&#x5316;"><a class="header-anchor" href="#&#x5185;&#x5B58;&#x4F18;&#x5316;"></a>&#x5185;&#x5B58;&#x4F18;&#x5316;</h2>
<ul>
<li><a href="http://gityuan.com/2016/01/02/memory-analysis-command/" target="_blank" rel="external">Android&#x5185;&#x5B58;&#x5206;&#x6790;&#x547D;&#x4EE4;</a></li>
</ul>
<h3 id="&#x7CFB;&#x7EDF;gc&#x56DE;&#x6536;&#x8FC7;&#x7A0B;&#x53CA;&#x539F;&#x7406;"><a class="header-anchor" href="#&#x7CFB;&#x7EDF;gc&#x56DE;&#x6536;&#x8FC7;&#x7A0B;&#x53CA;&#x539F;&#x7406;"></a>&#x7CFB;&#x7EDF;GC&#x56DE;&#x6536;&#x8FC7;&#x7A0B;&#x53CA;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://www.importnew.com/13504.html" target="_blank" rel="external">Java GC&#x7CFB;&#x5217;&#xFF08;1&#xFF09;&#xFF1A;Java&#x5783;&#x573E;&#x56DE;&#x6536;&#x7B80;&#x4ECB;</a></li>
<li><a href="http://www.importnew.com/13493.html" target="_blank" rel="external">Java GC&#x7CFB;&#x5217;&#xFF08;2&#xFF09;&#xFF1A;Java&#x5783;&#x573E;&#x56DE;&#x6536;&#x662F;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#xFF1F;</a></li>
<li><a href="http://www.importnew.com/13827.html" target="_blank" rel="external">Java GC&#x7CFB;&#x5217;&#xFF08;3&#xFF09;&#xFF1A;&#x5783;&#x573E;&#x56DE;&#x6536;&#x5668;&#x79CD;&#x7C7B;</a></li>
<li><a href="http://www.importnew.com/13838.html" target="_blank" rel="external">Java GC&#x7CFB;&#x5217;&#xFF08;4&#xFF09;&#xFF1A;&#x5783;&#x573E;&#x56DE;&#x6536;&#x76D1;&#x89C6;&#x548C;&#x5206;&#x6790;</a></li>
</ul>
<h3 id="&#x7CFB;&#x7EDF;gc&#x56DE;&#x6536;&#x7684;&#x89E6;&#x53D1;&#x6761;&#x4EF6;"><a class="header-anchor" href="#&#x7CFB;&#x7EDF;gc&#x56DE;&#x6536;&#x7684;&#x89E6;&#x53D1;&#x6761;&#x4EF6;"></a>&#x7CFB;&#x7EDF;GC&#x56DE;&#x6536;&#x7684;&#x89E6;&#x53D1;&#x6761;&#x4EF6;</h3>
<ul>
<li><a href="http://www.cnblogs.com/killmyday/archive/2013/06/12/3132518.html" target="_blank" rel="external">Android&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x539F;&#x7406;</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-android-mmry-rcycl/" target="_blank" rel="external">Android &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x5185;&#x5B58;&#x56DE;&#x6536;&#x673A;&#x5236;</a></li>
</ul>
<h3 id="&#x5185;&#x5B58;&#x4F18;&#x5316;-v2"><a class="header-anchor" href="#&#x5185;&#x5B58;&#x4F18;&#x5316;-v2"></a>&#x5185;&#x5B58;&#x4F18;&#x5316;</h3>
<ul>
<li><a href="http://blog.csdn.net/a396901990/article/details/37914465" target="_blank" rel="external">ANDROID&#x5185;&#x5B58;&#x4F18;&#x5316;(&#x5927;&#x6C47;&#x603B;&#x2014;&#x2014;&#x4E0A;)</a></li>
<li><a href="http://blog.csdn.net/a396901990/article/details/38707007" target="_blank" rel="external">ANDROID&#x5185;&#x5B58;&#x4F18;&#x5316;(&#x5927;&#x6C47;&#x603B;&#x2014;&#x2014;&#x4E2D;)</a></li>
<li><a href="http://blog.csdn.net/a396901990/article/details/38904543" target="_blank" rel="external">ANDROID&#x5185;&#x5B58;&#x4F18;&#x5316;(&#x5927;&#x6C47;&#x603B;&#x2014;&#x2014;&#x5168;)</a></li>
<li><a href="http://hukai.me/android-performance-memory/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x4E4B;&#x5185;&#x5B58;&#x7BC7;</a></li>
</ul>
<h3 id="ui&#x4F18;&#x5316;"><a class="header-anchor" href="#ui&#x4F18;&#x5316;"></a>UI&#x4F18;&#x5316;</h3>
<ul>
<li><a href="http://blog.nimbledroid.com/2016/03/21/ways-to-hang-main-thread-zh.html?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">5&#x4E2A;&#x5BFC;&#x81F4;&#x4E3B;&#x7EBF;&#x7A0B;&#x5361;&#x987F;&#x8F83;&#x9C9C;&#x4E3A;&#x4EBA;&#x77E5;&#x7684;&#x5143;&#x51F6;</a></li>
<li><a href="http://blog.csdn.net/xyz_lmn/article/details/14524567" target="_blank" rel="external">Android&#x62BD;&#x8C61;&#x5E03;&#x5C40;&#x2014;&#x2014;include&#x3001;merge &#x3001;ViewStub</a></li>
<li><a href="http://blog.venmo.com/hf2t3h4x98p5e13z82pl8j66ngcmry/performance-tuning-on-android" target="_blank" rel="external">Performance Tuning On Android</a></li>
</ul>
<h3 id="&#x6027;&#x80FD;&#x4F18;&#x5316;"><a class="header-anchor" href="#&#x6027;&#x80FD;&#x4F18;&#x5316;"></a>&#x6027;&#x80FD;&#x4F18;&#x5316;</h3>
<ul>
<li><a href="http://hukai.me/android-performance-patterns/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x4E00;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-patterns-season-2/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x4E8C;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-patterns-season-3/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x4E09;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-patterns-season-4/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x56DB;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-patterns-season-5/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x4E94;&#xFF09;</a></li>
<li>[Android&#x5E94;&#x7528;&#x6027;&#x80FD;&#x4F18;&#x5316;&#x4E2A;&#x4EBA;&#x603B;&#x7ED3;&#x2013;&#x56FE;&#x5F62;&#x4F18;&#x5316;)](<a href="https://mp.weixin.qq.com/s?__biz=MzAxMzYyNDkyNA==&amp;mid=403778409&amp;idx=1&amp;sn=2955f5209f2cb46c327167e9f558013c&amp;scene=0&amp;key=710a5d99946419d93bd87693b2fb201a979a3f06f49072f49e0e5dd05b91de2dbe204e56cbcd8c71cac94e931791f5f3&amp;ascene=0&amp;uin=ODU2NjQ0ODgx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.11.4+build(15E65)" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzAxMzYyNDkyNA==&amp;mid=403778409&amp;idx=1&amp;sn=2955f5209f2cb46c327167e9f558013c&amp;scene=0&amp;key=710a5d99946419d93bd87693b2fb201a979a3f06f49072f49e0e5dd05b91de2dbe204e56cbcd8c71cac94e931791f5f3&amp;ascene=0&amp;uin=ODU2NjQ0ODgx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.11.4+build(15E65)</a></li>
</ul>
<h3 id="&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x8BE6;&#x89E3;&#x53CA;&#x603B;&#x7ED3;"><a class="header-anchor" href="#&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x8BE6;&#x89E3;&#x53CA;&#x603B;&#x7ED3;"></a>&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x8BE6;&#x89E3;&#x53CA;&#x603B;&#x7ED3;</h3>
<ul>
<li><a href="http://rayleeya.iteye.com/blog/1956059" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - OOM&#xFF08;&#x4E00;&#xFF09;</a></li>
<li><a href="http://rayleeya.iteye.com/blog/1956638" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - OOM&#xFF08;&#x4E8C;&#xFF09;</a></li>
<li><a href="http://rayleeya.iteye.com/blog/1955652" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - ANR&#xFF08;&#x4E00;&#xFF09;</a></li>
<li><a href="http://rayleeya.iteye.com/blog/1955657" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - ANR&#xFF08;&#x4E8C;&#xFF09;</a></li>
<li><a href="http://rayleeya.iteye.com/blog/1956056" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - ANR&#xFF08;&#x4E09;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-oom/" target="_blank" rel="external">Android&#x5185;&#x5B58;&#x4F18;&#x5316;&#x4E4B;OOM</a></li>
<li><a href="http://yq.aliyun.com/articles/3009" target="_blank" rel="external">Android &#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x603B;&#x7ED3;</a></li>
<li><a href="http://www.360doc.com/content/14/0526/11/9462341_381066152.shtml" target="_blank" rel="external">ANDROID &#x63A2;&#x7A76;oom&#x5185;&#x5E55;</a></li>
</ul>
<h3 id="&#x5185;&#x5B58;&#x68C0;&#x6D4B;&#x5DE5;&#x5177;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x5185;&#x5B58;&#x68C0;&#x6D4B;&#x5DE5;&#x5177;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>&#x5185;&#x5B58;&#x68C0;&#x6D4B;&#x5DE5;&#x5177;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<h4 id="blockcanary"><a class="header-anchor" href="#blockcanary"></a>BlockCanary</h4>
<ul>
<li><a href="http://blog.zhaiyifan.cn/2016/01/16/BlockCanaryTransparentPerformanceMonitor/" target="_blank" rel="external">BlockCanary &#x2014; &#x8F7B;&#x677E;&#x627E;&#x51FA;Android App&#x754C;&#x9762;&#x5361;&#x987F;&#x5143;&#x51F6;</a></li>
</ul>
<h4 id="leakcanary"><a class="header-anchor" href="#leakcanary"></a>LeakCanary</h4>
<ul>
<li><a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0509/2854.html" target="_blank" rel="external">LeakCanary:&#x68C0;&#x6D4B;&#x6240;&#x6709;&#x7684;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;</a></li>
</ul>
<h2 id="&#x4F20;&#x611F;&#x5668;"><a class="header-anchor" href="#&#x4F20;&#x611F;&#x5668;"></a>&#x4F20;&#x611F;&#x5668;</h2>
<ul>
<li><a href="http://blog.csdn.net/lincyang/article/details/49471929" target="_blank" rel="external">&#x52A0;&#x901F;&#x5EA6;</a></li>
<li><a href="http://blog.csdn.net/smartbetter/article/details/53161452" target="_blank" rel="external">&#x78C1;&#x529B;</a></li>
<li><a href="http://blog.csdn.net/u014492609/article/details/51741402" target="_blank" rel="external">&#x65B9;&#x5411;</a></li>
<li><a href="http://blog.csdn.net/smartbetter/article/details/53161452" target="_blank" rel="external">&#x9640;&#x87BA;</a></li>
<li><a href="http://blog.csdn.net/menuconfig/article/details/7225441" target="_blank" rel="external">&#x5149;&#x7EBF;&#x611F;&#x5E94;</a></li>
<li><a href="http://blog.csdn.net/chadcao/article/details/9928103" target="_blank" rel="external">&#x538B;&#x529B;</a></li>
<li><a href="http://www.voidcn.com/blog/chadcao/article/p-2503607.html" target="_blank" rel="external">&#x6E29;&#x5EA6;</a></li>
<li><a href="http://blog.csdn.net/luozhi3527/article/details/9999901" target="_blank" rel="external">&#x63A5;&#x8FD1;/&#x8DDD;&#x79BB;</a></li>
<li><a href="http://www.xuanyusong.com/archives/337" target="_blank" rel="external">&#x91CD;&#x529B;</a></li>
<li><a href="http://blog.csdn.net/think_soft/article/details/8101144" target="_blank" rel="external">&#x7EBF;&#x6027;&#x52A0;&#x901F;&#x5EA6;</a></li>
<li><a href="http://www.2cto.com/kf/201210/162858.html" target="_blank" rel="external">&#x65CB;&#x8F6C;&#x77E2;&#x91CF;</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_48d49130010110qw.html" target="_blank" rel="external">&#x76F8;&#x5BF9;&#x6E7F;&#x5EA6;&#x4F20;&#x611F;&#x5668;</a></li>
<li><a href="http://blog.csdn.net/think_soft/article/details/8169483" target="_blank" rel="external">&#x8FD1;&#x573A;&#x901A;&#x4FE1;&#xFF08;NFC&#xFF09;</a></li>
<li><a href="https://www.oschina.net/question/163910_28354" target="_blank" rel="external">Android&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;11&#x79CD;&#x4F20;&#x611F;&#x5668;&#x4ECB;&#x7ECD;</a></li>
<li><a href="http://blog.csdn.net/xiong_it/article/details/45917009" target="_blank" rel="external">Android&#x5F00;&#x53D1;&#xFF1A;Android&#x8BBE;&#x5907;&#x4F20;&#x611F;&#x5668;&#x5F00;&#x53D1;&#x603B;&#x7ED3;</a></li>
</ul>
<h2 id="&#x5F00;&#x53D1;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x5F00;&#x53D1;&#x6846;&#x67B6;"></a>&#x5F00;&#x53D1;&#x6846;&#x67B6;</h2>
<h3 id="&#x7F51;&#x7EDC;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x7F51;&#x7EDC;&#x6846;&#x67B6;"></a>&#x7F51;&#x7EDC;&#x6846;&#x67B6;</h3>
<ul>
<li><a href="https://github.com/square/okhttp" target="_blank" rel="external">OkHttp</a></li>
<li><a href="">Volley</a></li>
<li><a href="https://github.com/wyouflf/xUtils3" target="_blank" rel="external">xUtils3</a></li>
<li><a href="https://github.com/square/retrofit" target="_blank" rel="external">Retrofit</a></li>
</ul>
<h3 id="&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x6846;&#x67B6;"></a>&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x6846;&#x67B6;</h3>
<ul>
<li><a href="https://github.com/facebook/fresco" target="_blank" rel="external">Fresco</a></li>
<li><a href="http://fresco-cn.org/docs/index.html" target="_blank" rel="external">Fresco&#x6587;&#x6863;</a></li>
<li><a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="external">Android-Universal-Image-Loader</a></li>
<li><a href="https://github.com/bumptech/glide" target="_blank" rel="external">Glide</a></li>
<li><a href="https://github.com/square/picasso" target="_blank" rel="external">picasso</a></li>
<li><a href="http://www.trinea.cn/android/android-image-cache-compare/" target="_blank" rel="external">Android &#x4E09;&#x5927;&#x56FE;&#x7247;&#x7F13;&#x5B58;&#x539F;&#x7406;&#x3001;&#x7279;&#x6027;&#x5BF9;&#x6BD4;</a></li>
</ul>
<h3 id="&#x7ED8;&#x56FE;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x7ED8;&#x56FE;&#x6846;&#x67B6;"></a>&#x7ED8;&#x56FE;&#x6846;&#x67B6;</h3>
<ul>
<li><a href="https://github.com/ddanny/achartengine" target="_blank" rel="external">AChartEngine</a></li>
<li><a href="https://github.com/PhilJay/MPAndroidChart" target="_blank" rel="external">MPAndroidChart</a></li>
<li><a href="https://github.com/xcltapestry/XCL-Charts" target="_blank" rel="external">XCL-Charts</a></li>
<li><a href="https://github.com/blackfizz/EazeGraph" target="_blank" rel="external">EazeGraph</a></li>
<li><a href="https://github.com/diogobernardino/WilliamChart" target="_blank" rel="external">WilliamChart</a></li>
<li><a href="https://github.com/lecho/hellocharts-android" target="_blank" rel="external">HelloCharts for Android</a></li>
</ul>
<h3 id="&#x6570;&#x636E;&#x5E93;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x6570;&#x636E;&#x5E93;&#x6846;&#x67B6;"></a>&#x6570;&#x636E;&#x5E93;&#x6846;&#x67B6;</h3>
<ul>
<li><a href="">Provider&#xFF0C;ORMLite&#xFF0C;GreenDao</a></li>
<li><a href="http://blog.csdn.net/u012565107/article/details/21546829" target="_blank" rel="external">Provider&#xFF0C;ORMLite&#xFF0C;GreenDao&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5E76;&#x4E14;&#x7B80;&#x5355;&#x6027;&#x80FD;&#x5BF9;&#x6BD4;</a></li>
</ul>
<h3 id="&#x6CE8;&#x89E3;"><a class="header-anchor" href="#&#x6CE8;&#x89E3;"></a>&#x6CE8;&#x89E3;</h3>
<ul>
<li><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external">Butter Knife</a></li>
<li><a href="https://github.com/google/dagger" target="_blank" rel="external">Dragger2</a></li>
</ul>
<h2 id="&#x7F51;&#x7EDC;&#x671F;&#x520A;"><a class="header-anchor" href="#&#x7F51;&#x7EDC;&#x671F;&#x520A;"></a>&#x7F51;&#x7EDC;&#x671F;&#x520A;</h2>
<ul>
<li><a href="http://www.codekk.com/open-source-project-analysis" target="_blank" rel="external">codeKK</a></li>
<li><a href="http://gank.io/" target="_blank" rel="external">&#x5E72;&#x8D27;&#x96C6;&#x4E2D;&#x8425;</a></li>
<li><a href="http://www.androidweekly.cn/" target="_blank" rel="external">Android&#x6280;&#x672F;&#x5468;&#x62A5;</a></li>
<li><a href="http://www.devtf.cn/?tag=%E5%91%A8%E6%8A%A5" target="_blank" rel="external">&#x5F00;&#x53D1;&#x6280;&#x672F;&#x524D;&#x7EBF;</a></li>
<li><a href="http://gold.xitu.io/#/" target="_blank" rel="external">&#x6398;&#x91D1;</a></li>
<li><a href="http://toutiao.io/" target="_blank" rel="external">&#x5F00;&#x53D1;&#x8005;&#x5934;&#x6761;</a></li>
</ul>
<h2 id="&#x6280;&#x672F;&#x793E;&#x533A;"><a class="header-anchor" href="#&#x6280;&#x672F;&#x793E;&#x533A;"></a>&#x6280;&#x672F;&#x793E;&#x533A;</h2>
<ul>
<li><a href="http://www.ibm.com/developerworks/cn/" target="_blank" rel="external">IBM developerWorks</a></li>
<li><a href="http://tech.meituan.com/" target="_blank" rel="external">&#x7F8E;&#x56E2;&#x70B9;&#x8BC4;&#x6280;&#x672F;&#x56E2;&#x961F;</a></li>
<li><a href="http://club.alibabatech.org/" target="_blank" rel="external">&#x963F;&#x91CC;&#x6280;&#x672F;&#x6C99;&#x9F99;</a></li>
<li><a href="http://mogu.io/" target="_blank" rel="external">&#x8611;&#x83C7;&#x8857;&#x6280;&#x672F;&#x535A;&#x5BA2;</a></li>
<li><a href="http://taobaofed.org/" target="_blank" rel="external">&#x6DD8;&#x5B9D;&#x524D;&#x6BB5;&#x56E2;&#x961F;</a></li>
<li><a href="http://bugly.qq.com/bbs/portal.php" target="_blank" rel="external">Bugly&#x793E;&#x533A;</a></li>
<li><a href="http://www.alloyteam.com/" target="_blank" rel="external">&#x817E;&#x8BAF;AllyTeam Blog</a></li>
<li><a href="http://www.importnew.com/" target="_blank" rel="external">ImportNew</a></li>
<li><a href="http://android.jobbole.com/" target="_blank" rel="external">&#x4F2F;&#x4E50;&#x5728;&#x7EBF;</a></li>
</ul>
<h2 id="&#x8D44;&#x6E90;&#x7F51;&#x7AD9;"><a class="header-anchor" href="#&#x8D44;&#x6E90;&#x7F51;&#x7AD9;"></a>&#x8D44;&#x6E90;&#x7F51;&#x7AD9;</h2>
<ul>
<li><a href="https://android-arsenal.com/" target="_blank" rel="external">Android Arsenal</a></li>
<li><a href="http://itlanbao.com/" target="_blank" rel="external">IT&#x84DD;&#x8C79;</a></li>
<li><a href="http://a.code4app.com/" target="_blank" rel="external">Code4App</a></li>
<li><a href="http://www.23code.com/" target="_blank" rel="external">23Code</a></li>
<li><a href="http://www.see-source.com/index.html" target="_blank" rel="external">&#x5F00;&#x6E90;&#x793E;&#x533A;</a></li>
<li><a href="https://www.coolgithubprojects.com/#" target="_blank" rel="external">CoolGithubProjects</a></li>
</ul>
<h2 id="&#x535A;&#x5BA2;"><a class="header-anchor" href="#&#x535A;&#x5BA2;"></a>&#x535A;&#x5BA2;</h2>
<ul>
<li><a href="http://androidperformance.com/" target="_blank" rel="external">Gracker</a></li>
</ul>
<p>&#x4E13;&#x6CE8;&#x5199;Android&#x4F18;&#x5316;&#x7684;&#x535A;&#x5BA2;&#x3002;</p>
<ul>
<li><a href="http://hukai.me/" target="_blank" rel="external">&#x80E1;&#x51EF;</a></li>
</ul>
<p>Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#x4F5C;&#x8005;&#xFF0C;&#x9AD8;&#x54C1;&#x8D28;&#x6587;&#x7AE0;&#x3002;</p>
<ul>
<li><a href="http://blog.csdn.net/Luoshengyang?viewmode=contents" target="_blank" rel="external">&#x8001;&#x7F57;&#x7684;Android&#x4E4B;&#x65C5;</a></li>
</ul>
<p>Android&#x6E90;&#x7801;&#x5206;&#x6790;&#x7CBE;&#x54C1;&#x7CFB;&#x5217;&#x3002;</p>
<ul>
<li><a href="http://blog.csdn.net/harvic880925" target="_blank" rel="external">&#x542F;&#x8230;</a></li>
</ul>
<p>&#x96C6;&#x5408;&#x4E86;&#x52A8;&#x753B;&#x3001;&#x81EA;&#x5B9A;&#x4E49;&#x63A7;&#x4EF6;&#x4EE5;&#x53CA;Android&#x5404;&#x79CD;&#x77E5;&#x8BC6;&#x7684;&#x8BE6;&#x89E3;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      Android的知识点是比较琐碎和庞大的，海洋很大，知识很多，但开一扇心门点一盏心灯，愿化作一叶小舟，自由的在知识的海洋里遨游。对于Android体系的相关知识点，我们需要熟悉Android系统中的各种API，各种UI控件，网络请求，系统原理还有各种坑。当然，从事应用层开发，那必须关注用户体验和技术的平衡。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>RxJava线程切换原理</title>
    <link href="http://ngudream.com/2016/11/24/rxjava-thread-switch-theory/"/>
    <id>http://ngudream.com/2016/11/24/rxjava-thread-switch-theory/</id>
    <published>2016-11-24T14:13:27.000Z</published>
    <updated>2017-01-15T07:58:44.465Z</updated>
    
    <content type="html"><![CDATA[<div><a href="https://mcxiaoke.gitbooks.io/rxdocs/content/" target="_blank" rel="external"><img class="pic lazy" data-original="/2016/11/24/rxjava-thread-switch-theory/2.jpg" style="float:left; width:100px; height:56px; margin-right:16px" alt=""></a><span>RxJava&#x5728;&#x5708;&#x5B50;&#x91CC;&#x8D8A;&#x6765;&#x8D8A;&#x706B;&#xFF0C;&#x76F8;&#x4FE1;&#x5F88;&#x5927;&#x7684;&#x4E00;&#x4E2A;&#x539F;&#x56E0;&#x5C31;&#x662F;&#x5B83;&#x7684;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x3002;&#x5B83;&#x7684;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x53EF;&#x4EE5;&#x7528;&#x4F18;&#x96C5;&#x6765;&#x5F62;&#x5BB9;&#xFF0C;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#xFF0C;&#x7B80;&#x5355;&#x3001;&#x65B9;&#x4FBF;&#x3002;&#x4ECA;&#x5929;&#xFF0C;&#x5C31;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x7AA5;&#x63A2;&#x4E00;&#x4E0B;RxJava&#x7684;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x539F;&#x7406;&#x3002;&#x672C;&#x6B21;&#x62C6;&#x8F6E;&#x5B50;&#xFF0C;&#x8FD8;&#x662F;&#x6309;&#x539F;&#x6837;&#xFF0C;&#x901A;&#x8FC7;&#x5C0F;&#x4F8B;&#x5B50;&#xFF0C;&#x7814;&#x8BFB;RxJava&#x6E90;&#x7801;&#x7B49;&#x6765;&#x7406;&#x89E3;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x3001;&#x7ED3;&#x6784;&#x3001;&#x539F;&#x7406;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x8981;&#x7684;&#x662F;&#x5148;&#x5BF9;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x539F;&#x7406;&#x6709;&#x4E2A;&#x5168;&#x5C40;&#x7684;&#x6982;&#x89C8;&#xFF0C;&#x7EC6;&#x8282;&#x518D;&#x6162;&#x6162;&#x6765;&#x6DF1;&#x5165;&#x3002;</span></div>
<a id="more"></a>
<h2 id="&#x524D;&#x8A00;"><a class="header-anchor" href="#&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h2>
<p>&#x7EBF;&#x7A0B;&#x7684;&#x5207;&#x6362;&#x90FD;&#x662F;&#x901A;&#x8FC7;subscribeOn&#x6216;&#x8005;observeOn&#x6765;&#x8FDB;&#x884C;&#xFF0C;&#x751F;&#x4EA7;&#x8005;&#x7684;&#x6267;&#x884C;&#x7EBF;&#x7A0B;&#x53EA;&#x53D7;subscribeOn&#x63A7;&#x5236;&#xFF0C;&#x4E0D;&#x53D7;observeOn&#x5F71;&#x54CD;&#x3002;subscribeOn&#x6307;&#x5B9A;&#x7684;&#x7EBF;&#x7A0B;&#x73AF;&#x5883;&#x80FD;&#x4E00;&#x76F4;&#x7EF4;&#x6301;&#x5230;&#x7B2C;&#x4E00;&#x6B21;observeOn&#x51FA;&#x73B0;&#x4E4B;&#x524D;&#x3002;&#x8981;&#x8BB2;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x539F;&#x7406;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x4E0B;&#x9762;&#x7684;&#x51E0;&#x4E2A;&#x7C7B;&#x5B9A;&#x4E49;&#xFF1A;</p>
<ul>
<li>Operator</li>
</ul>
<pre><code>/**
     * Operator function for lifting into an Observable.
     */
    public interface Operator&lt;R, T&gt; extends Func1&lt;Subscriber&lt;? super R&gt;, Subscriber&lt;? super T&gt;&gt; {
        // cover for generics insanity
    }
</code></pre>
<p>Operator&#x662F;Observable&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5373;&#x7528;&#x6237;&#x7684;&#x903B;&#x8F91;&#x64CD;&#x4F5C;&#xFF0C;RxJava&#x6846;&#x67B6;&#x4F1A;&#x8C03;&#x7528;lift&#x65B9;&#x6CD5;&#x5C06;Operator&#x5305;&#x88C5;&#x6210;&#x4E3A;Observable&#x3002;</p>
<ul>
<li>ObserveOnSubseriber</li>
</ul>
<p>ObserveOnSubseriber&#x662F;&#x88AB;&#x8BA2;&#x9605;&#x8005;&#x7684;&#x7C7B;&#xFF0C;&#x5904;&#x7406;&#x7528;&#x6237;&#x6570;&#x636E;&#x903B;&#x8F91;&#xFF0C;&#x4E5F;&#x5373;&#x751F;&#x4EA7;&#x8005;&#xFF0C;&#x7528;&#x6765;&#x4EA7;&#x751F;&#x7528;&#x6237;&#x6570;&#x636E;&#x7684;&#x3002;</p>
<ul>
<li>OperatorObserveOn</li>
</ul>
<p>OperatorObserveOn&#x662F;&#x8BA2;&#x9605;&#x8005;&#x7684;&#x7C7B;&#xFF0C;&#x63A5;&#x6536;&#x6570;&#x636E;&#x7684;&#xFF0C;&#x4E5F;&#x5373;&#x6D88;&#x8D39;&#x8005;&#xFF0C;&#x6D88;&#x8D39;&#x751F;&#x4EA7;&#x8005;&#x53D1;&#x9001;&#x8FC7;&#x6765;&#x7684;&#x6570;&#x636E;&#x3002;</p>
<ul>
<li>Worker</li>
</ul>
<p>Worker&#x662F;&#x7EBF;&#x7A0B;&#x771F;&#x6B63;&#x6267;&#x884C;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5355;&#x72EC;&#x65B0;&#x5EFA;&#x7684;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6216;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x7EBF;&#x7A0B;&#x3002;</p>
<h2 id="&#x539F;&#x7406;&#x89E3;&#x6790;"><a class="header-anchor" href="#&#x539F;&#x7406;&#x89E3;&#x6790;"></a>&#x539F;&#x7406;&#x89E3;&#x6790;</h2>
<p>&#x6211;&#x4EEC;&#x5148;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;Observable&#xFF1A;</p>
<pre><code>Observable.just(null)
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe();
</code></pre>
<p>just&#x65B9;&#x6CD5;&#x53C8;&#x662F;&#x8C03;&#x7528;&#x7684;ScalarSynchronousObservable&#xFF0C;&#x7136;&#x540E;new&#x4E00;&#x4E2A;OnSubscribe&#x4F5C;&#x4E3A;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x6682;&#x4E14;&#x53EB;&#x505A;1&#x53F7;OnSubscribe&#xFF0C;&#x8FD9;&#x4E2A;&#x4E0B;&#x9762;&#x4F1A;&#x518D;&#x63D0;&#x5230;&#xFF0C;&#x4E5F;&#x662F;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x533A;&#x522B;&#x6240;&#x5728;&#xFF1A;</p>
<pre><code>protected ScalarSynchronousObservable(final T t) {
        super(new OnSubscribe&lt;T&gt;() {

            @Override
            public void call(Subscriber&lt;? super T&gt; s) {
                s.onNext(t);
                s.onCompleted();
            }

        });
        this.t = t;
    }
</code></pre>
<p>&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x8981;&#x70B9;&#x5728;lift()&#x51FD;&#x6570;&#x91CC;&#x9762;&#xFF0C;&#x90FD;&#x662F;&#x57FA;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x57FA;&#x7840;&#x7684;&#x53D8;&#x6362;&#x65B9;&#x6CD5;&#xFF1A; lift(Operator)</p>
<p>&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x5B83;&#x7684;&#x6E90;&#x7801;&#xFF1A;</p>
<pre><code>public final &lt;R&gt; Observable&lt;R&gt; lift(final Operator&lt;? extends R, ? super T&gt; operator) {
        return new Observable&lt;R&gt;(new OnSubscribe&lt;R&gt;() {
            @Override
            public void call(Subscriber&lt;? super R&gt; o) {
                try {
                    Subscriber&lt;? super T&gt; st = hook.onLift(operator).call(o);
                    try {
                        // new Subscriber created and being subscribed with so &apos;onStart&apos; it
                        st.onStart();
                        onSubscribe.call(st);
                    } catch (Throwable e) {
                        // localized capture of errors rather than it skipping all operators
                        // and ending up in the try/catch of the subscribe method which then
                        // prevents onErrorResumeNext and other similar approaches to error handling
                        if (e instanceof OnErrorNotImplementedException) {
                            throw (OnErrorNotImplementedException) e;
                        }
                        st.onError(e);
                    }
                } catch (Throwable e) {
                    if (e instanceof OnErrorNotImplementedException) {
                        throw (OnErrorNotImplementedException) e;
                    }
                    // if the lift function failed all we can do is pass the error to the final Subscriber
                    // as we don&apos;t have the operator available to us
                    o.onError(e);
                }
            }
        });
    }
</code></pre>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x8C03;&#x7528;lift()&#x65B9;&#x6CD5;&#x540E;&#xFF08;&#x5373;&#x6267;&#x884C;subscribeOn&#x6216;observeOn&#xFF09;&#xFF0C;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x7684;Observable&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x8C03;&#x7528;&#x8005;&#x7684;Observable&#xFF0C;&#x8FD9;&#x91CC;&#x540C;&#x6837;&#x662F;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;OnSubscribe&#xFF0C;&#x6682;&#x4E14;&#x53EB;&#x505A;2&#x53F7;OnSubscribe&#xFF0C;&#x6211;&#x4EEC;&#x518D;&#x56DE;&#x5934;&#x770B;&#x770B;&#xFF0C;<strong>&#x8FD9;&#x4E2A;OnSubscribe&#x4E0E;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;just()&#x65B9;&#x6CD5;&#x91CC;&#x9762;&#x8C03;&#x7528;&#x5230;&#x7684;OnSubscribe&#x4E0D;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;</strong>&#x3002;</p>
<p>&#x8FD9;&#x91CC;&#x662F;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x5173;&#x952E;&#x70B9;&#x3002;&#x5F53;&#x8C03;&#x7528;&#x94FE;&#x6765;&#x5230;lift()&#x65B9;&#x6CD5;&#x540E;&#xFF0C;&#x4F7F;&#x7528;&#x7684;&#x662F;lift()&#x6240;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x7684; Observable&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5B83;&#x6240;&#x89E6;&#x53D1;&#x7684;onSubscribe.call(subscriber)&#x4E5F;&#x662F;&#x7528;&#x65B0;&#x7684;Observable&#x4E2D;&#x7684;&#x65B0; OnSubscribe&#xFF0C;&#x5373;&#x6211;&#x4EEC;&#x4E0A;&#x9762;&#x547D;&#x540D;&#x7684;2&#x53F7;OnSubscribe&#x3002;</p>
<h2 id="operatorsubscribeon"><a class="header-anchor" href="#operatorsubscribeon"></a>OperatorSubscribeOn</h2>
<p>&#x518D;&#x6765;&#x770B;lift()&#x51FD;&#x6570;&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x5B83;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;try&#x65B9;&#x6CD5;&#x4F53;&#x91CC;&#x9762;&#x6709;&#x4E2A;onSubscribe&#xFF0C;&#x8FD9;&#x4E2A;OnSubscribe&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x524D;&#x9762;&#x5B9A;&#x4E49;&#x7684;1&#x53F7;onSubscribe&#xFF0C;&#x5B83;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x8C03;&#x7528;just()&#x65B9;&#x6CD5;&#x540E;&#x521B;&#x5EFA;&#x7684;&#x539F;&#x59CB;Observable&#x3002;</p>
<p>&#x90A3;&#x5B83;&#x662F;&#x600E;&#x4E48;&#x505A;&#x5230;&#x5207;&#x6362;&#x7EBF;&#x7A0B;&#x7684;&#x5462;&#xFF1F;&#x5982;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;subscribeOn(<a href="http://Schedulers.io" target="_blank" rel="external">Schedulers.io</a>())&#xFF0C;&#x5B83;&#x901A;&#x8FC7;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF08;&#x4E3E;&#x4F8B;&#xFF09;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;Subscriber&#xFF1A;</p>
<pre><code>Subscriber&lt;? super T&gt; st = hook.onLift(operator).call(o);//&#x5C06;&#x65B0;&#x7684;Subscriber&#x5BF9;&#x8C61;o&#x4F20;&#x9012;&#x7ED9;OperatorSubscribeOn&#xFF0C;&#x5B83;&#x91CC;&#x9762;&#x7684;call()&#x65B9;&#x6CD5;&#x53BB;&#x521B;&#x5EFA;&#x65B0;&#x7684;Worker&#x7EBF;&#x7A0B;

//OperatorSubscribeOn&#x7684;call(o)&#x65B9;&#x6CD5;
@Override
    public Subscriber&lt;? super Observable&lt;T&gt;&gt; call(final Subscriber&lt;? super T&gt; subscriber) {
        final Worker inner = scheduler.createWorker();//&#x65B0;&#x5EFA;&#x7EBF;&#x7A0B;
        subscriber.add(inner);
        return new Subscriber&lt;Observable&lt;T&gt;&gt;(subscriber) {

            @Override
            public void onCompleted() {
                // ignore because this is a nested Observable and we expect only 1 Observable&lt;T&gt; emitted to onNext
            }

            @Override
            public void onError(Throwable e) {
                subscriber.onError(e);
            }

            @Override
            public void onNext(final Observable&lt;T&gt; o) {
                inner.schedule(new Action0() {

                    @Override
                    public void call() {
                        final Thread t = Thread.currentThread();

                        o.unsafeSubscribe(new Subscriber&lt;T&gt;(subscriber) {

                            @Override
                            public void onCompleted() {
                                subscriber.onCompleted();
                            }

                            @Override
                            public void onError(Throwable e) {
                                subscriber.onError(e);
                            }

                            @Override
                            public void onNext(T t) {
                                subscriber.onNext(t);
                            }

                            @Override
                            public void setProducer(final Producer producer) {
                                subscriber.setProducer(new Producer() {

                                    @Override
                                    public void request(final long n) {
                                        if (Thread.currentThread() == t) {//&#x5982;&#x679C;&#x662F;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#xFF0C;&#x5219;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6267;&#x884C;
                                            // don&apos;t schedule if we&apos;re already on the thread (primarily for first setProducer call)
                                            // see unit test &apos;testSetProducerSynchronousRequest&apos; for more context on this
                                            producer.request(n);
                                        } else {//&#x4E0D;&#x662F;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#xFF0C;&#x5C06;&#x5728;&#x65B0;&#x521B;&#x5EFA;&#x7684;Worker&#x7EBF;&#x7A0B;inner&#x4E2D;&#x6267;&#x884C;
                                            inner.schedule(new Action0() {

                                                @Override
                                                public void call() {
                                                    producer.request(n);
                                                }
                                            });
                                        }
                                    }

                                });
                            }

                        });
                    }
                });
            }

        };
    }
</code></pre>
<p>&#x7136;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528;1&#x53F7;OnSubscribe&#x7684;call()&#x65B9;&#x6CD5; onSubscribe.call(st) &#x5C06;&#x65B0;&#x521B;&#x5EFA;&#x7684;Subscriber&#x4E0E;&#x539F;&#x59CB;&#x7684;Observable&#x5173;&#x8054;&#x8D77;&#x6765;&#xFF0C;&#x5373;&#x65B0;&#x7684;Subscriber&#x53BB;&#x8BA2;&#x9605;&#x539F;&#x59CB;&#x7684;Observable&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x751F;&#x4EA7;&#x8005;</p>
<p>&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;Scheduler&#x7C7B;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x8D1F;&#x8D23;&#x5F02;&#x6B65;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#xFF0C;&#x5B83;&#x53EA;&#x8D1F;&#x8D23;&#x901A;&#x8FC7;createWorker()&#x7C7B;&#x521B;&#x5EFA;&#x51FA;&#x4E00;&#x4E2A;Worker&#x5BF9;&#x8C61;&#xFF0C;&#x771F;&#x6B63;&#x8D1F;&#x8D23;&#x4EFB;&#x52A1;&#x7684;&#x5EF6;&#x65F6;&#x5904;&#x7406;&#x3002;</p>
<h2 id="operatorobserveon"><a class="header-anchor" href="#operatorobserveon"></a>OperatorObserveOn</h2>
<p>observeOn&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#x4E5F;&#x662F;&#x8C03;&#x7528;&#x4E86;lift()&#x65B9;&#x6CD5;&#xFF0C;&#x7136;&#x540E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;operator&#xFF0C;</p>
<pre><code>//OperatorObserveOn.java
@Override
    public Subscriber&lt;? super T&gt; call(Subscriber&lt;? super T&gt; child) {
        if (scheduler instanceof ImmediateScheduler) {
            // avoid overhead, execute directly
            return child;
        } else if (scheduler instanceof TrampolineScheduler) {
            // avoid overhead, execute directly
            return child;
        } else {
            ObserveOnSubscriber&lt;T&gt; parent = new ObserveOnSubscriber&lt;T&gt;(scheduler, child);
            parent.init();
            return parent;
        }
    }

public ObserveOnSubscriber(Scheduler scheduler, Subscriber&lt;? super T&gt; child) {
            this.child = child;
            this.recursiveScheduler = scheduler.createWorker();//&#x521B;&#x5EFA;&#x65B0;&#x7684;worker&#x7EBF;&#x7A0B;
            if (UnsafeAccess.isUnsafeAvailable()) {
                queue = new SpscArrayQueue&lt;Object&gt;(RxRingBuffer.SIZE);
            } else {
                queue = new SynchronizedQueue&lt;Object&gt;(RxRingBuffer.SIZE);
            }
            this.scheduledUnsubscribe = new ScheduledUnsubscribe(recursiveScheduler);
        }

protected void schedule() {
            if (COUNTER_UPDATER.getAndIncrement(this) == 0) {
                recursiveScheduler.schedule(action);//&#x7528;&#x76F8;&#x5E94;&#x7684;&#x7EBF;&#x7A0B;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x8F93;&#x51FA;&#x8C03;&#x5EA6;
            }
        }
</code></pre>
<p>&#x7ED3;&#x5408;&#x6254;&#x7269;&#x7EBF;&#x5927;&#x5927;&#x7684;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/11/24/rxjava-thread-switch-theory/1.jpg" class="lazy">
</div>
<br>
&#x672A;&#x5B8C;&#x5F85;&#x7EED;......
<p><a href="http://blog.piasy.com/AdvancedRxJava/" target="_blank" rel="external">RxJava&#x7CFB;&#x5217;&#x6587;&#x7AE0;</a></p>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="https://mcxiaoke.gitbooks.io/rxdocs/content/" target="_blank" rel="external">https://mcxiaoke.gitbooks.io/rxdocs/content/</a></li>
<li><a href="https://gank.io/post/560e15be2dca930e00da1083#toc_16" target="_blank" rel="external">https://gank.io/post/560e15be2dca930e00da1083#toc_16</a></li>
<li><a href="http://www.jianshu.com/p/1ab2b7b61100" target="_blank" rel="external">http://www.jianshu.com/p/1ab2b7b61100</a></li>
<li><a href="https://www.zhihu.com/question/41779170?sort=created" target="_blank" rel="external">https://www.zhihu.com/question/41779170?sort=created</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;a href=&quot;https://mcxiaoke.gitbooks.io/rxdocs/content/&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/11/24/rxjava-thread-switch-theory/2.jpg&quot; style=&quot;float:left; width:100px; height:56px; margin-right:16px&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;span&gt;RxJava&amp;#x5728;&amp;#x5708;&amp;#x5B50;&amp;#x91CC;&amp;#x8D8A;&amp;#x6765;&amp;#x8D8A;&amp;#x706B;&amp;#xFF0C;&amp;#x76F8;&amp;#x4FE1;&amp;#x5F88;&amp;#x5927;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x539F;&amp;#x56E0;&amp;#x5C31;&amp;#x662F;&amp;#x5B83;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x3002;&amp;#x5B83;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x4F18;&amp;#x96C5;&amp;#x6765;&amp;#x5F62;&amp;#x5BB9;&amp;#xFF0C;&amp;#x94FE;&amp;#x5F0F;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x7B80;&amp;#x5355;&amp;#x3001;&amp;#x65B9;&amp;#x4FBF;&amp;#x3002;&amp;#x4ECA;&amp;#x5929;&amp;#xFF0C;&amp;#x5C31;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x7AA5;&amp;#x63A2;&amp;#x4E00;&amp;#x4E0B;RxJava&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x539F;&amp;#x7406;&amp;#x3002;&amp;#x672C;&amp;#x6B21;&amp;#x62C6;&amp;#x8F6E;&amp;#x5B50;&amp;#xFF0C;&amp;#x8FD8;&amp;#x662F;&amp;#x6309;&amp;#x539F;&amp;#x6837;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x5C0F;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x7814;&amp;#x8BFB;RxJava&amp;#x6E90;&amp;#x7801;&amp;#x7B49;&amp;#x6765;&amp;#x7406;&amp;#x89E3;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3001;&amp;#x7ED3;&amp;#x6784;&amp;#x3001;&amp;#x539F;&amp;#x7406;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x5148;&amp;#x5BF9;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x7684;&amp;#x539F;&amp;#x7406;&amp;#x6709;&amp;#x4E2A;&amp;#x5168;&amp;#x5C40;&amp;#x7684;&amp;#x6982;&amp;#x89C8;&amp;#xFF0C;&amp;#x7EC6;&amp;#x8282;&amp;#x518D;&amp;#x6162;&amp;#x6162;&amp;#x6765;&amp;#x6DF1;&amp;#x5165;&amp;#x3002;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>响应式MVP架构todo-mvp-rxjava实践</title>
    <link href="http://ngudream.com/2016/11/21/android-mvp-rxjava-practice/"/>
    <id>http://ngudream.com/2016/11/21/android-mvp-rxjava-practice/</id>
    <published>2016-11-21T15:08:01.000Z</published>
    <updated>2017-02-05T14:41:31.732Z</updated>
    
    <content type="html"><![CDATA[<div><a href="https://github.com/googlesamples/android-architecture" target="_blank" rel="external"><img class="pic lazy" data-original="/2016/11/21/android-mvp-rxjava-practice/pain.jpg" style="float:left; width:100px; height:56px; margin-right:16px" alt=""></a>
<span>&#x5F88;&#x591A;&#x65F6;&#x5019;&#xFF0C;Activity&#x53EF;&#x80FD;&#x65E2;&#x627F;&#x62C5;UI&#x663E;&#x793A;&#x5DE5;&#x4F5C;&#xFF0C;&#x53C8;&#x627F;&#x62C5;&#x90E8;&#x5206;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5DE5;&#x4F5C;&#xFF0C;&#x751A;&#x81F3;&#x662F;&#x5404;&#x79CD;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x3001;&#x56DE;&#x8C03;&#x7B49;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;Activity&#x7684;&#x4EE3;&#x7801;&#x4F1A;&#x5FEB;&#x901F;&#x81A8;&#x80C0;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x51E0;&#x5343;&#x884C;&#x4EE3;&#x7801;&#x7684;Activity&#x3002;&#x4E00;&#x4E2A;&#x5230;&#x8FD9;&#x6837;&#x7684;&#x7C7B;&#x5C31;&#x662F;&#x6BD4;&#x8F83;&#x75DB;&#x82E6;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x90A3;&#x7528;&#x4EC0;&#x4E48;&#x529E;&#x6CD5;&#x89E3;&#x51B3;&#x5462;&#xFF1F;</span></div>
<a id="more"></a>
<p>&#x73B0;&#x5728;&#x57FA;&#x672C;&#x662F;&#x91C7;&#x53D6;&#x6A2A;&#x5411;&#x5207;&#x5272;&#x7EC6;&#x5206;&#x6216;&#x8005;&#x7EB5;&#x5411;&#x5C42;&#x6B21;&#x5316;&#xFF1A;</p>
<ul>
<li>&#x7B2C;&#x4E00;&#x79CD;&#x662F;&#x6A21;&#x5757;&#x5316;</li>
<li>&#x7B2C;&#x4E8C;&#x79CD;&#x662F;&#x5206;&#x5C42;</li>
</ul>
<p>&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x6700;&#x7EC8;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x90FD;&#x662F;&#x89E3;&#x8026;&#x3002;&#x5206;&#x5C42;&#x8BB2;&#x7684;&#x662F;&#x7EB5;&#x5411;&#x5C42;&#x9762;&#x4E0A;&#x7684;&#x89E3;&#x8026;&#xFF0C;&#x6A21;&#x5757;&#x5316;&#x5219;&#x662F;&#x6A2A;&#x5411;&#x4E0A;&#x7684;&#x89E3;&#x8026;&#x3002;</p>
<h2 id="mvp-rxjava"><a class="header-anchor" href="#mvp-rxjava"></a>MVP-RxJava</h2>
<p>&#x73B0;&#x5728;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x5B9E;&#x8DF5;&#x4E00;&#x4E0B;Google&#x5B98;&#x65B9;&#x63D0;&#x4F9B;&#x7684;MVP-RxJava&#x3002;</p>
<p>MVP&#x67B6;&#x6784;&#x4E2D;&#x5C06;&#x8FD9;&#x4E09;&#x5C42;&#x5206;&#x522B;&#x62BD;&#x8C61;&#x5230;&#x5404;&#x81EA;&#x7684;&#x63A5;&#x53E3;&#x5F53;&#x4E2D;&#xFF0C;&#x4ECE;&#x800C;&#x901A;&#x8FC7;&#x5206;&#x5C42;&#x6765;&#x8FDB;&#x884C;&#x89E3;&#x8026;&#x7684;&#x6846;&#x67B6;&#x3002;&#x901A;&#x8FC7;&#x63A5;&#x53E3;&#x5C06;&#x5C42;&#x6B21;&#x4E4B;&#x95F4;&#x8FDB;&#x884C;&#x9694;&#x79BB;&#xFF0C;&#x800C;Presenter&#x5BF9;View&#x548C;Model&#x7684;&#x76F8;&#x4E92;&#x4F9D;&#x8D56;&#x4E5F;&#x662F;&#x4F9D;&#x8D56;&#x4E8E;&#x5404;&#x81EA;&#x7684;&#x63A5;&#x53E3;&#x3002;&#x8FD9;&#x70B9;&#x7B26;&#x5408;&#x4E86;&#x63A5;&#x53E3;&#x9694;&#x79BB;&#x539F;&#x5219;&#xFF0C;&#x4E5F;&#x6B63;&#x662F;&#x9762;&#x5411;&#x63A5;&#x53E3;&#x7F16;&#x7A0B;&#x3002;&#x6BCF;&#x4E2A;&#x7C7B;&#x90FD;&#x5C3D;&#x91CF;&#x7B26;&#x5408;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x8BBE;&#x8BA1;&#x539F;&#x5219;&#xFF0C;&#x91C7;&#x7528;&#x5355;&#x4E00;&#x804C;&#x8D23;&#x539F;&#x5219;&#xFF0C;&#x4EE5;&#x4FBF;&#x6574;&#x4E2A;&#x9879;&#x76EE;&#x67B6;&#x6784;&#x6E05;&#x6670;&#x5206;&#x5DE5;&#x660E;&#x786E;&#x3002;</p>
<p>Google&#x63D0;&#x4F9B;&#x7684;Android&#x5B98;&#x65B9;MVP&#x6574;&#x4E2A;&#x9879;&#x76EE;&#x7684;&#x903B;&#x8F91;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/11/21/android-mvp-rxjava-practice/1.jpg" class="lazy">
</div>
<p>&#x4F7F;&#x7528;&#x8FD9;&#x6837;&#x7684;&#x67B6;&#x6784;&#x6709;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x7684;&#x597D;&#x5904;&#x5C31;&#x662F;&#x89E3;&#x8026;&#xFF0C;view&#x5C31;&#x53EA;&#x8D1F;&#x8D23;&#x66F4;&#x65B0;UI&#xFF0C;&#x663E;&#x793A;&#x63A7;&#x4EF6;&#xFF0C;&#x5B8C;&#x6210;&#x4E0E;&#x7528;&#x6237;&#x7684;&#x4EA4;&#x4E92;&#xFF1B;model&#x7684;&#x804C;&#x8D23;&#x5462;&#x5C31;&#x662F;&#x53BB;&#x52A0;&#x8F7D;&#x6570;&#x636E;&#xFF1B;&#x5177;&#x4F53;&#x7684;model&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x53BB;&#x83B7;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x83B7;&#x53D6;&#x5B8C;&#x4E86;&#x4E4B;&#x540E;ui&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x53BB;&#x66F4;&#x65B0;&#xFF0C;&#x8FD9;&#x4E00;&#x5207;&#x90FD;&#x662F;&#x7531;presenter&#x53BB;&#x5B8C;&#x6210;&#x3002;&#x8FD9;&#x6837;&#x505A;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x9002;&#x5408;&#x56E2;&#x961F;&#x534F;&#x4F5C;&#x53BB;&#x5F00;&#x53D1;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x4E5F;&#x65B9;&#x4FBF;&#x6D4B;&#x8BD5;&#xFF0C;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x4E92;&#x4E0D;&#x5E72;&#x6270;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x77E5;&#x9053;&#xFF0C;&#x5728;Android&#x4E2D;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x4E00;&#x822C;&#x4F7F;&#x7528;AsycTask&#x6765;&#x5B8C;&#x6210;&#xFF0C;&#x4F46;&#x662F;AsycTask&#x6709;&#x5F88;&#x591A;&#x7F3A;&#x70B9;&#xFF0C;&#x5982;&#x4E0D;&#x80FD;&#x65B9;&#x4FBF;&#x7684;&#x7EC8;&#x6B62;&#x4EFB;&#x52A1;&#x7684;&#x6267;&#x884C;&#x7B49;&#x3002;</p>
<p>RxAndroid&#x662F;&#x4E00;&#x4E2A;&#x5728; Java VM &#x4E0A;&#x4F7F;&#x7528;&#x53EF;&#x89C2;&#x6D4B;&#x7684;&#x5E8F;&#x5217;&#x6765;&#x7EC4;&#x6210;&#x5F02;&#x6B65;&#x7684;&#x3001;&#x57FA;&#x4E8E;&#x4E8B;&#x4EF6;&#x7684;&#x7A0B;&#x5E8F;&#x7684;&#x5E93;&#xFF0C;&#x5B83;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x66FF;&#x4EE3;AsycTask&#x6765;&#x5B8C;&#x6210;&#x5404;&#x79CD;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x6709;BindActivity&#x548C;BindFragment&#x65B9;&#x6CD5;&#xFF0C;&#x4F60;&#x6839;&#x672C;&#x4E0D;&#x9700;&#x8981;&#x8003;&#x8651;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x65F6;&#x7684;Activity&#x548C;Fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x95EE;&#x9898;&#x3002;</p>
<p>&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x5F88;&#x5173;&#x952E;&#x7684;&#x4E00;&#x70B9;&#x662F;&#x7A0B;&#x5E8F;&#x7684;&#x7B80;&#x6D01;&#x6027;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x8C03;&#x5EA6;&#x8FC7;&#x7A0B;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5F02;&#x6B65;&#x4EE3;&#x7801;&#x7ECF;&#x5E38;&#x4F1A;&#x65E2;&#x96BE;&#x5199;&#x4E5F;&#x96BE;&#x88AB;&#x8BFB;&#x61C2;&#x3002; Android &#x521B;&#x9020;&#x7684;AsyncTask&#xA0;&#x548C;Handler&#xA0;&#xFF0C;&#x5176;&#x5B9E;&#x90FD;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x5F02;&#x6B65;&#x4EE3;&#x7801;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x3002;RxJava &#x7684;&#x4F18;&#x52BF;&#x4E5F;&#x662F;&#x7B80;&#x6D01;&#xFF0C;&#x4F46;&#x5B83;&#x7684;&#x7B80;&#x6D01;&#x7684;&#x4E0E;&#x4F17;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#xFF0C;&#x968F;&#x7740;&#x7A0B;&#x5E8F;&#x903B;&#x8F91;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x590D;&#x6742;&#xFF0C;&#x5B83;&#x4F9D;&#x7136;&#x80FD;&#x591F;&#x4FDD;&#x6301;&#x7B80;&#x6D01;&#x3002;</p>
<p>&#x7ECF;&#x8FC7;&#x6280;&#x672F;&#x9009;&#x578B;&#x3001;&#x7A0B;&#x5E8F;&#x7ED3;&#x6784;&#x8BBE;&#x8BA1;&#xFF0C;&#x518D;&#x7ED3;&#x5408;&#x4E0A;&#x9762;&#x5217;&#x4E3E;&#x7684;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x4F18;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x9879;&#x76EE;&#x4E2D;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x67B6;&#x6784;&#x8FDB;&#x884C;&#x8BBE;&#x8BA1;&#x5B9E;&#x73B0;&#xFF0C;&#x5373;MVP+RxJava+Realm&#x7684;&#x6A21;&#x5F0F;&#x3002;</p>
<div align="center">
<img data-original="/2016/11/21/android-mvp-rxjava-practice/2.jpg" class="lazy">
</div>
<p>&#x5176;&#x4E2D;&#x7F51;&#x7EDC;&#x5C42;&#x4F7F;&#x7528;&#x4E86;OkHttp&#xFF0C;&#x901A;&#x8FC7;&#x54CD;&#x5E94;&#x5F0F;&#x7684;RxJava&#x4E0E;Presenter&#x4EA4;&#x4E92;&#xFF0C;&#x518D;&#x7531;Presenter&#x4E0E;&#x754C;&#x9762;&#x4EA4;&#x4E92;&#xFF0C;&#x5B9E;&#x73B0;&#x89E3;&#x85D5;&#xFF1B;&#x6570;&#x636E;&#x5E93;&#x5219;&#x9009;&#x62E9;&#x4E86;&#x6027;&#x80FD;&#x66F4;&#x9AD8;&#x3001;&#x7F16;&#x7A0B;&#x66F4;&#x7B80;&#x6D01;&#x4F18;&#x96C5;&#x7684;Realm&#xFF0C;&#x5B83;&#x4E0E;RxJava&#x914D;&#x5408;&#x4F7F;&#x7528;&#x4E5F;&#x66F4;&#x65B9;&#x4FBF;&#x5FEB;&#x6377;&#x3002;</p>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp-rxjava/" target="_blank" rel="external">TODO-MVP-RXJAVA</a></li>
<li><a href="https://labs.ribot.co.uk/android-application-architecture-8b6e34acda65#.roya5ayke" target="_blank" rel="external">Android Application Architecture</a></li>
<li><a href="https://github.com/googlesamples/android-architecture" target="_blank" rel="external">Android Architecture Blueprints</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;a href=&quot;https://github.com/googlesamples/android-architecture&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/11/21/android-mvp-rxjava-practice/pain.jpg&quot; style=&quot;float:left; width:100px; height:56px; margin-right:16px&quot; alt=&quot;&quot;&gt;&lt;/a&gt;
&lt;span&gt;&amp;#x5F88;&amp;#x591A;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;Activity&amp;#x53EF;&amp;#x80FD;&amp;#x65E2;&amp;#x627F;&amp;#x62C5;UI&amp;#x663E;&amp;#x793A;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF0C;&amp;#x53C8;&amp;#x627F;&amp;#x62C5;&amp;#x90E8;&amp;#x5206;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF0C;&amp;#x751A;&amp;#x81F3;&amp;#x662F;&amp;#x5404;&amp;#x79CD;&amp;#x7F51;&amp;#x7EDC;&amp;#x8BF7;&amp;#x6C42;&amp;#x3001;&amp;#x56DE;&amp;#x8C03;&amp;#x7B49;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x8BDD;Activity&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4F1A;&amp;#x5FEB;&amp;#x901F;&amp;#x81A8;&amp;#x80C0;&amp;#xFF0C;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#x51E0;&amp;#x5343;&amp;#x884C;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;Activity&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x5230;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x7C7B;&amp;#x5C31;&amp;#x662F;&amp;#x6BD4;&amp;#x8F83;&amp;#x75DB;&amp;#x82E6;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x3002;&amp;#x90A3;&amp;#x7528;&amp;#x4EC0;&amp;#x4E48;&amp;#x529E;&amp;#x6CD5;&amp;#x89E3;&amp;#x51B3;&amp;#x5462;&amp;#xFF1F;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>Glide的基本使用</title>
    <link href="http://ngudream.com/2016/11/06/android-glide-use/"/>
    <id>http://ngudream.com/2016/11/06/android-glide-use/</id>
    <published>2016-11-06T13:31:45.000Z</published>
    <updated>2017-01-15T07:58:44.330Z</updated>
    
    <content type="html"><![CDATA[<div><a href="https://github.com/bumptech/glide" target="_blank" rel="external"><img class="pic lazy" data-original="/2016/11/06/android-glide-use/glide_logo.png" style="float:left; width:100px; height:56px; margin-right:16px" alt="Picasso"></a>
<span>Glide&#x662F;google&#x63A8;&#x8350;&#x7684;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x5E93;&#xFF08;&#x975E;google&#x5B98;&#x65B9;&#x51FA;&#x54C1;&#xFF09;&#xFF0C;google&#x9996;&#x6B21;&#x516C;&#x5F00;&#x63D0;&#x5230;&#x5B83;&#x662F;&#x5728;&#x6CF0;&#x56FD;&#x4E3E;&#x884C;&#x7684;&#x8C37;&#x6B4C;&#x5F00;&#x53D1;&#x8005;&#x8BBA;&#x575B;&#x4E0A;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x8005;&#x662F;bumptech&#x3002;google&#x7684;&#x597D;&#x4E9B;&#x5F00;&#x6E90;&#x9879;&#x76EE;&#x4E5F;&#x662F;&#x7528;&#x7684;&#x8FD9;&#x4E2A;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x5E93;&#xFF0C;&#x50CF;2014&#x5E74;Google I/O&#x5927;&#x4F1A;&#x4E0A;&#x53D1;&#x5E03;&#x7684;&#x5B98;&#x65B9;App&#x3002;github&#x5730;&#x5740;&#x662F;&#xFF1A;<a href="https://github.com/bumptech/glide" target="_blank" rel="external">https://github.com/bumptech/glide</a></span></div>
<a id="more"></a>
<h2 id="&#x57FA;&#x672C;&#x914D;&#x7F6E;"><a class="header-anchor" href="#&#x57FA;&#x672C;&#x914D;&#x7F6E;"></a>&#x57FA;&#x672C;&#x914D;&#x7F6E;</h2>
<p>&#x5982;&#x679C;&#x5927;&#x5BB6;&#x4F7F;&#x7528;AndroidStudio&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;compile:</p>
<pre><code>repositories {
  mavenCentral() // jcenter() works as well because it pulls from Maven Central
}

dependencies {
  compile &apos;com.github.bumptech.glide:glide:3.7.0&apos;
  compile &apos;com.android.support:support-v4:24.1.0&apos;
}
</code></pre>
<p><strong>&#x56E0;&#x4E3A;Glide&#x9700;&#x8981;&#x4F9D;&#x8D56;Support Library v4&#xFF0C;&#x6240;&#x4EE5;&#x522B;&#x5FD8;&#x4E86;&#x5F15;&#x5165;&#x3002;</strong> &#x8FD9;&#x4E2A;library&#x7684;&#x7248;&#x672C;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x60C5;&#x51B5;&#x6765;&#x5B9A;&#xFF0C;&#x4E0D;&#x662F;&#x975E;&#x5F97;24.1.0&#x3002;</p>
<p>&#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;maven&#x7684;&#x65B9;&#x5F0F;&#xFF1A;</p>
<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;com.github.bumptech.glide&lt;/groupId&gt;
  &lt;artifactId&gt;glide&lt;/artifactId&gt;
  &lt;version&gt;3.7.0&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;com.google.android&lt;/groupId&gt;
  &lt;artifactId&gt;support-v4&lt;/artifactId&gt;
  &lt;version&gt;r7&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>&#x5982;&#x679C;&#x5BF9;&#x9879;&#x76EE;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x6DF7;&#x6DC6;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x6DFB;&#x52A0;ProGuard&#x89C4;&#x5219;&#xFF1A;</p>
<pre><code>-keep public class * implements com.bumptech.glide.module.GlideModule
-keep public enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}
-keepresourcexmlelements manifest/application/meta-data@value=GlideModule
</code></pre>
<h2 id="&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h2>
<h3 id="glide&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;"><a class="header-anchor" href="#glide&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;"></a>Glide&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;</h3>
<p>Glide&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;HttpUrlConnection&#x8FDB;&#x884C;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;APP&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x7684;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x5F62;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA9;Glide&#x4F7F;&#x7528;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x7684;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x5F62;&#x5F0F;&#x8BF7;&#x6C42;&#x7F51;&#x7EDC;&#x8D44;&#x6E90;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x9009;OkHttp</p>
<p>&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4E00;&#x53E5;&#x8BDD;&#xFF08;&#x4F7F;&#x7528;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#xFF09;&#xFF0C;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#xFF1A;</p>
<pre><code>Glide.with(imageView.getContext()).load(url).into(imageView);
</code></pre>
<p>&#x5B83;&#x7684;load&#x65B9;&#x6CD5;&#x63D0;&#x4F9B;&#x4E86;&#x56DB;&#x79CD;&#x5F62;&#x5F0F;&#xFF0C;&#x6BCF;&#x4E2A;&#x90FD;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;RequestCreator&#xFF1A;</p>
<ul>
<li>load(Uri uri)</li>
<li>load(String path)</li>
<li>load(File file)</li>
<li>load(int resourceId)</li>
<li>load(byte[] model)</li>
<li>load(T model)</li>
</ul>
<p>&#x4ECE;&#x53C2;&#x6570;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x52A0;&#x8F7D;&#x672C;&#x5730;&#x7684;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x4ECE;&#x7F51;&#x7EDC;&#x4E0A;&#x53D6;&#x7684;&#x3002;&#x5176;&#x4E2D;load&#x7684;&#x8D44;&#x6E90;&#x53EF;&#x4EE5;&#x662F;&#x672C;&#x5730;&#x89C6;&#x9891;&#x3002;</p>
<h3 id="glide&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;"><a class="header-anchor" href="#glide&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;"></a>Glide&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;</h3>
<p>&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5728;load&#x7684;&#x53C2;&#x6570;&#x91CC;&#x4F20;&#x5165;&#x4E00;&#x4E2A;url&#x5C31;&#x884C;&#xFF1A;</p>
<pre><code>Glide.with(imageView.getContext())
                 .load(url)
                 .error(R.drawable.photo_holder_72dp)
                 .into(imageView);
</code></pre>
<p>error&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x672C;&#x5730;&#x56FE;&#x7247;&#xFF0C;&#x5F53;&#x7F51;&#x7EDC;&#x52A0;&#x8F7D;&#x51FA;&#x9519;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x663E;&#x793A;&#x8FD9;&#x5F20;&#x672C;&#x5730;&#x7684;&#x56FE;&#x7247;&#x3002;</p>
<h3 id="&#x6E05;&#x9664;&#x5185;&#x5B58;&#x7F13;&#x5B58;"><a class="header-anchor" href="#&#x6E05;&#x9664;&#x5185;&#x5B58;&#x7F13;&#x5B58;"></a>&#x6E05;&#x9664;&#x5185;&#x5B58;&#x7F13;&#x5B58;</h3>
<pre><code>// &#x5FC5;&#x987B;&#x5728;UI&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;
    Glide.get(context).clearMemory();
</code></pre>
<h3 id="&#x6E05;&#x9664;&#x78C1;&#x76D8;&#x7F13;&#x5B58;"><a class="header-anchor" href="#&#x6E05;&#x9664;&#x78C1;&#x76D8;&#x7F13;&#x5B58;"></a>&#x6E05;&#x9664;&#x78C1;&#x76D8;&#x7F13;&#x5B58;</h3>
<pre><code> // &#x5FC5;&#x987B;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;&#xFF0C;&#x5EFA;&#x8BAE;&#x540C;&#x65F6;clearMemory()
   Glide.get(applicationContext).clearDiskCache();
</code></pre>
<h3 id="&#x786C;&#x76D8;&#x7F13;&#x5B58;"><a class="header-anchor" href="#&#x786C;&#x76D8;&#x7F13;&#x5B58;"></a>&#x786C;&#x76D8;&#x7F13;&#x5B58;</h3>
<ul>
<li>DiskCacheStrategy.NONE &#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x7F13;&#x5B58;&#xFF0C;&#x5C31;&#x50CF;&#x521A;&#x8BA8;&#x8BBA;&#x7684;&#x90A3;&#x6837;</li>
<li>DiskCacheStrategy.SOURCE &#x4EC5;&#x4EC5;&#x53EA;&#x7F13;&#x5B58;&#x539F;&#x6765;&#x7684;&#x5168;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x56FE;&#x50CF;</li>
<li>DiskCacheStrategy.RESULT &#x4EC5;&#x4EC5;&#x7F13;&#x5B58;&#x6700;&#x7EC8;&#x7684;&#x56FE;&#x50CF;&#xFF0C;&#x5373;&#x964D;&#x4F4E;&#x5206;&#x8FA8;&#x7387;&#x540E;&#x7684;&#xFF08;&#x6216;&#x8005;&#x662F;&#x8F6C;&#x6362;&#x540E;&#x7684;&#xFF09;</li>
<li>DiskCacheStrategy.ALL &#x7F13;&#x5B58;&#x6240;&#x6709;&#x7248;&#x672C;&#x7684;&#x56FE;&#x50CF;&#xFF08;&#x9ED8;&#x8BA4;&#x884C;&#x4E3A;&#xFF09;</li>
</ul>
<h3 id="&#x4F18;&#x5148;&#x7EA7;"><a class="header-anchor" href="#&#x4F18;&#x5148;&#x7EA7;"></a>&#x4F18;&#x5148;&#x7EA7;</h3>
<ul>
<li>Priority.LOW</li>
<li>Priority.NORMAL</li>
<li>Priority.HIGH</li>
<li>Priority.IMMEDIATE</li>
</ul>
<pre><code>Glide.with(this)
                .load(url)
                .priority(Priority.HIGH)
                .into(mIVTest);
</code></pre>
<p>&#x5176;&#x5B83;&#x7528;&#x6CD5;&#x4E24;&#x8005;&#x5927;&#x4F53;&#x76F8;&#x540C;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x7B14;&#x8005;&#x7684;&#x53E6;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#xFF1A;<br>
<a href="http://ngudream.com/2016/10/17/android-picasso-use/">Picasso&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;</a></p>
<h2 id="&#x4E0E;picasso&#x533A;&#x522B;"><a class="header-anchor" href="#&#x4E0E;picasso&#x533A;&#x522B;"></a>&#x4E0E;Picasso&#x533A;&#x522B;</h2>
<h3 id="&#x65B9;&#x6CD5;&#x533A;&#x522B;"><a class="header-anchor" href="#&#x65B9;&#x6CD5;&#x533A;&#x522B;"></a>&#x65B9;&#x6CD5;&#x533A;&#x522B;</h3>
<p>&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x4E3E;&#x4F8B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x51FA;Glide&#x7684;&#x7528;&#x6CD5;&#x548C;Picasso&#x7684;&#x57FA;&#x672C;&#x4E00;&#x81F4;&#xFF0C;&#x50CF;placeholder&#x3001;centerCrop&#x7B49;&#x7B49;&#x90FD;&#x6709;&#x3002;&#x4F46;&#x4E5F;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x533A;&#x522B;&#x7684;&#xFF1A;</p>
<ol>
<li>with()&#x65B9;&#x6CD5;<br>
with&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570;&#xFF0C;Glide&#x53EF;&#x4EE5;&#x662F;&#x591A;&#x79CD;&#xFF1A;
<ul>
<li>public static RequestManager with(Context context)</li>
<li>public static RequestManager with(Activity activity)</li>
<li>public static RequestManager with(FragmentActivity activity)</li>
<li>public static RequestManager with(android.app.Fragment fragment)</li>
<li>public static RequestManager with(Fragment fragment)</li>
</ul>
</li>
</ol>
<p>&#x5C06;Activity/Fragment&#x4F5C;&#x4E3A;with()&#x53C2;&#x6570;&#x7684;&#x597D;&#x5904;&#x662F;&#xFF1A;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x4F1A;&#x548C;Activity/Fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#xFF0C;&#x6BD4;&#x5982;Paused&#x72B6;&#x6001;&#x5728;&#x6682;&#x505C;&#x52A0;&#x8F7D;&#xFF0C;&#x5728;Resumed&#x7684;&#x65F6;&#x5019;&#x53C8;&#x81EA;&#x52A8;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x3002;</p>
<p>&#x800C;Picasso&#x53EA;&#x63A5;&#x53D7;Context&#xFF1A;<br>
	* public static Picasso with(Context context)</p>
<ol start="2">
<li>
<p>crossFade()&#x65B9;&#x6CD5;<br>
Glide&#x5E26;&#x4E86;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x52A8;&#x753B;&#xFF0C;&#x5373;&#x6DE1;&#x5165;&#x6DE1;&#x51FA;&#x6548;&#x679C;&#xFF0C;&#x9ED8;&#x8BA4;300ms&#xFF0C;&#x53EF;&#x4EE5;&#x4F20;&#x53C2;&#xFF1B;&#x800C;Picasso&#x662F;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x3002;</p>
</li>
<li>
<p>animate()&#x65B9;&#x6CD5;<br>
Glide&#x652F;&#x6301;&#x81EA;&#x5B9A;&#x4E49;&#x52A8;&#x753B;&#xFF0C;&#x800C;Picasso&#x4E0D;&#x63D0;&#x4F9B;&#x6B64;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x53EA;&#x6709;&#x4E00;&#x79CD;&#x52A8;&#x753B;&#xFF08;fading in&#xFF09;&#xFF0C;&#x8981;&#x8BBE;&#x7F6E;&#x52A8;&#x753B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7C7B;&#x4F3C;PicassoDrawable&#x90A3;&#x6837;&#x8BBE;&#x7F6E;&#x3002;</p>
</li>
<li>
<p>asGif()&#x3001;asBitmap()&#x65B9;&#x6CD5;<br>
Glide&#x53EF;&#x4EE5;&#x52A0;&#x8F7D;gif&#x56FE;&#x7247;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;asGif&#x6765;&#x5224;&#x65AD;&#x662F;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;gif&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x5219;&#x8D70;error()&#x7684;&#x903B;&#x8F91;&#xFF1B;&#x5982;&#x679C;&#x4F60;&#x52A0;&#x8F7D;&#x7684;&#x662F;&#x4E00;&#x4E2A;gif&#x56FE;&#x7247;&#x5730;&#x5740;&#xFF0C;&#x4F46;&#x53C8;&#x53EA;&#x60F3;&#x663E;&#x793A;&#x5B83;&#x7684;&#x7B2C;&#x4E00;&#x5E27;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;asBitmap()&#x65B9;&#x6CD5;&#x3002;</p>
</li>
</ol>
<p>asGif():</p>
<pre><code>Glide.with(this)
                .load(url)
                .asGif()
                .into(mIVTest);
</code></pre>
<p>asBitmap():</p>
<pre><code>Glide.with(this)
                .load(url)
                .asBitmap()
                .into(mIVTest);
</code></pre>
<ol start="5">
<li>
<p>skipMemoryCache()&#x65B9;&#x6CD5;<br>
Glide&#x8FD8;&#x63D0;&#x4F9B;skipMemoryCache()&#x65B9;&#x6CD5;&#x8DF3;&#x8FC7;&#x5185;&#x5B58;&#x7F13;&#x5B58;&#xFF0C;&#x4F46;&#x5728;Picasso&#x4E2D;&#x6B64;&#x65B9;&#x6CD5;&#x5DF2;&#x7ECF;&#x88AB;deprecated&#xFF0C;&#x5EFA;&#x8BAE;&#x6539;&#x6210;&#x4F7F;&#x7528;MemoryPolicy&#x3002;</p>
</li>
<li>
<p>&#x663E;&#x793A;&#x672C;&#x5730;&#x89C6;&#x9891;<br>
Glide&#x652F;&#x6301;&#x52A0;&#x8F7D;&#x672C;&#x5730;&#x89C6;&#x9891;&#xFF0C;&#x800C;Picasso&#x4E0D;&#x652F;&#x6301;&#x3002;</p>
</li>
</ol>
<pre><code>String filePath = &quot;/storage/emulated/0/Pictures/example_video.mp4&quot;;
Glide.with(context).load(Uri.fromFile(new File(filePath)))
.into(mIVVideo);
</code></pre>
<ol start="7">
<li>thumbnail()&#x65B9;&#x6CD5;<br>
Glide&#x63D0;&#x4F9B;thumbnail()&#x65B9;&#x6CD5;&#x7528;&#x4E8E;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x5F53;&#x524D;&#x6240;&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#x7684;thumbnail&#x3002;</li>
</ol>
<h3 id="&#x529F;&#x80FD;&#x533A;&#x522B;"><a class="header-anchor" href="#&#x529F;&#x80FD;&#x533A;&#x522B;"></a>&#x529F;&#x80FD;&#x533A;&#x522B;</h3>
<ol>
<li>
<p>&#x56FE;&#x7247;&#x8D28;&#x91CF;</p>
<ul>
<li>Glide&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;RGB_565&#x4F5C;&#x4E3A;bitmap&#x7684;&#x683C;&#x5F0F;</li>
<li>Picasso&#x5219;&#x4F7F;&#x7528;ARGB_8888&#x683C;&#x5F0F;&#xFF0C;&#x6240;&#x4EE5;&#x8D28;&#x91CF;&#x6BD4;Glide&#x597D;</li>
</ul>
</li>
<li>
<p>Glide&#x652F;&#x6301;gif&#x52A8;&#x753B;&#xFF0C;&#x800C;Picasso&#x4E0D;&#x652F;&#x6301;</p>
</li>
<li>
<p>glide load&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x4F20;&#x5165;&#x7A7A;&#x503C;&#xFF0C;&#x800C;picasso&#x4F20;&#x7A7A;&#x53C2;&#x6570;&#x7684;&#x8BDD;&#x4F1A;&#x76F4;&#x63A5;&#x62A5;&#x4EE5;&#x4E0B;&#x7684;&#x9519;&#x8BEF;&#xFF1A;</p>
</li>
</ol>
<pre><code>Caused by: java.lang.IllegalArgumentException: Path must not be empty.
at com.squareup.picasso.Picasso.load(Picasso.java:297)
at com.meizu.rxjava.example.MainActivity.onCreate(MainActivity.java:21)
at android.app.Activity.performCreate(Activity.java:6378)
at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1124)
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2656)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2774)&#xA0;
at android.app.ActivityThread.-wrap11(ActivityThread.java)&#xA0;
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1588)&#xA0;
at android.os.Handler.dispatchMessage(Handler.java:111)&#xA0;
at android.os.Looper.loop(Looper.java:207)&#xA0;
at android.app.ActivityThread.main(ActivityThread.java:5955)&#xA0;
at java.lang.reflect.Method.invoke(Native Method)
</code></pre>
<ol start="4">
<li>Glide&#x8FD8;&#x53EF;&#x4EE5;&#x5C06;&#x4EFB;&#x610F;&#x672C;&#x5730;&#x89C6;&#x9891;&#x89E3;&#x7801;&#x6210;&#x4E00;&#x5F20;&#x9759;&#x6001;&#x56FE;&#x7247;</li>
</ol>
<h3 id="&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x533A;&#x522B;"><a class="header-anchor" href="#&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x533A;&#x522B;"></a>&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x533A;&#x522B;</h3>
<ol>
<li>Picasso&#x7F13;&#x5B58;&#x7684;&#x662F;&#x5168;&#x5C3A;&#x5BF8;&#x7684;&#xFF0C;&#x800C;Glide&#x7F13;&#x5B58;&#x7684;&#x662F;&#x8DDF;ImageView&#x5C3A;&#x5BF8;&#x76F8;&#x540C;&#x7684;&#x3002;Picasso&#x53EA;&#x7F13;&#x5B58;&#x4E00;&#x4E2A;&#x5168;&#x5C3A;&#x5BF8;&#xFF0C;&#x800C;Glide&#x4F1A;&#x4E3A;&#x6BCF;&#x79CD;&#x5927;&#x5C0F;&#x7684;imageview&#x7F13;&#x5B58;&#x4E00;&#x6B21;&#x3002;</li>
</ol>
<h2 id="&#x603B;&#x7ED3;"><a class="header-anchor" href="#&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h2>
<ul>
<li>Glide&#x548C;Picasso&#x5728;&#x7528;&#x6CD5;&#x4E0A;&#x6709;&#x9AD8;&#x5EA6;&#x7684;&#x76F8;&#x4F3C;&#x6027;</li>
<li>Glide&#x8FDC;&#x6BD4;Picasso&#x5FEB;&#xFF0C;&#x4F46;&#x662F;&#x9700;&#x8981;&#x66F4;&#x5927;&#x7684;&#x7A7A;&#x95F4;&#x6765;&#x7F13;&#x5B58;&#x3002;</li>
<li>Glide&#x52A0;&#x8F7D;gif&#x56FE;&#x7247;&#x7684;&#x529F;&#x80FD;&#x548C;&#x6027;&#x80FD;&#x4E0D;&#x9519;</li>
<li>Glide&#x7684;with()&#x65B9;&#x6CD5;&#x4F20;&#x5165;Activity &#x6216; Fragment&#xFF0C;&#x5219;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x4F1A;&#x548C;&#x5B83;&#x4EEC;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x4E00;&#x81F4;&#xFF0C;&#x65B9;&#x4FBF;&#x7BA1;&#x7406;&#x3002;</li>
</ul>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="http://www.jb51.net/article/83152.htm" target="_blank" rel="external">http://www.jb51.net/article/83152.htm</a></li>
<li><a href="http://blog.csdn.net/shangmingchao/article/details/51125554" target="_blank" rel="external">http://blog.csdn.net/shangmingchao/article/details/51125554</a></li>
<li><a href="http://www.open-open.com/lib/view/open1456706971921.html" target="_blank" rel="external">http://www.open-open.com/lib/view/open1456706971921.html</a> &#x7CFB;&#x5217;&#x6587;&#x7AE0;</li>
</ul>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;a href=&quot;https://github.com/bumptech/glide&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/11/06/android-glide-use/glide_logo.png&quot; style=&quot;float:left; width:100px; height:56px; margin-right:16px&quot; alt=&quot;Picasso&quot;&gt;&lt;/a&gt;
&lt;span&gt;Glide&amp;#x662F;google&amp;#x63A8;&amp;#x8350;&amp;#x7684;&amp;#x56FE;&amp;#x7247;&amp;#x52A0;&amp;#x8F7D;&amp;#x5E93;&amp;#xFF08;&amp;#x975E;google&amp;#x5B98;&amp;#x65B9;&amp;#x51FA;&amp;#x54C1;&amp;#xFF09;&amp;#xFF0C;google&amp;#x9996;&amp;#x6B21;&amp;#x516C;&amp;#x5F00;&amp;#x63D0;&amp;#x5230;&amp;#x5B83;&amp;#x662F;&amp;#x5728;&amp;#x6CF0;&amp;#x56FD;&amp;#x4E3E;&amp;#x884C;&amp;#x7684;&amp;#x8C37;&amp;#x6B4C;&amp;#x5F00;&amp;#x53D1;&amp;#x8005;&amp;#x8BBA;&amp;#x575B;&amp;#x4E0A;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x4F5C;&amp;#x8005;&amp;#x662F;bumptech&amp;#x3002;google&amp;#x7684;&amp;#x597D;&amp;#x4E9B;&amp;#x5F00;&amp;#x6E90;&amp;#x9879;&amp;#x76EE;&amp;#x4E5F;&amp;#x662F;&amp;#x7528;&amp;#x7684;&amp;#x8FD9;&amp;#x4E2A;&amp;#x56FE;&amp;#x7247;&amp;#x52A0;&amp;#x8F7D;&amp;#x5E93;&amp;#xFF0C;&amp;#x50CF;2014&amp;#x5E74;Google I/O&amp;#x5927;&amp;#x4F1A;&amp;#x4E0A;&amp;#x53D1;&amp;#x5E03;&amp;#x7684;&amp;#x5B98;&amp;#x65B9;App&amp;#x3002;github&amp;#x5730;&amp;#x5740;&amp;#x662F;&amp;#xFF1A;&lt;a href=&quot;https://github.com/bumptech/glide&quot;&gt;https://github.com/bumptech/glide&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Glide" scheme="http://ngudream.com/tags/Glide/"/>
    
  </entry>
  
  <entry>
    <title>教你写Android网络框架之基本架构</title>
    <link href="http://ngudream.com/2016/11/01/android-network-base-structure/"/>
    <id>http://ngudream.com/2016/11/01/android-network-base-structure/</id>
    <published>2016-11-01T15:22:29.000Z</published>
    <updated>2017-01-15T07:58:44.343Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>&#x6587;&#x7AE0;&#x8F6C;&#x81EA;&#xFF1A;<a href="http://www.devtf.cn/?p=662" target="_blank" rel="external">http://www.devtf.cn/?p=662</a></p>
</blockquote>
<h2 id="&#x524D;&#x8A00;"><a class="header-anchor" href="#&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h2>
<p>&#x5728;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7F51;&#x7EDC;&#x662F;&#x6211;&#x4EEC;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x5C31;&#x4EE5;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#x6216;&#x8005;&#x8BF4;&#x7F51;&#x7EDC;&#x6A21;&#x5757;&#x5F00;&#x59CB;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x6846;&#x67B6;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x4F1A;&#x6574;&#x7406;&#x5F00;&#x53D1;&#x601D;&#x8DEF;&#x3001;&#x4EE5;&#x53CA;&#x9047;&#x5230;&#x4E00;&#x4E9B;&#x8BBE;&#x8BA1;&#x95EE;&#x9898;&#x65F6;&#x4F1A;&#x6709;&#x600E;&#x4E48;&#x6837;&#x7684;&#x8003;&#x8651;&#x3001;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x53EA;&#x662F;&#x6211;&#x4E2A;&#x4EBA;&#x7684;&#x89C2;&#x70B9;&#xFF0C;&#x5927;&#x5BB6;&#x4E5F;&#x53EF;&#x4EE5;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x5B9E;&#x73B0;&#x3002;&#x9664;&#x4E86;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#xFF0C;&#x540E;&#x7EED;&#x7684;&#x7CFB;&#x5217;&#x8FD8;&#x60F3;&#x66F4;&#x65B0;ImageLoader&#x6846;&#x67B6;&#x3001;ORM&#x6846;&#x67B6;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x65F6;&#x95F4;&#x4E5F;&#x4F1A;&#x589E;&#x52A0;&#x52A8;&#x753B;&#x6846;&#x67B6;&#x548C;&#x5FAE;&#x535A;&#x5F00;&#x53D1;&#x7684;&#x7CFB;&#x5217;&#x6587;&#x7AE0;&#x3002;</p>
<p>&#x5F53;&#x7136;&#x8FD9;&#x4E9B;&#x6846;&#x67B6;&#x53EA;&#x662F;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x7684;&#x6846;&#x67B6;&#x57FA;&#x7840;&#xFF0C;&#x672C;&#x4EBA;&#x6C34;&#x5E73;&#x3001;&#x65F6;&#x95F4;&#x6709;&#x9650;&#xFF0C;&#x800C;&#x4E14;&#x5DF2;&#x7ECF;&#x6709;&#x73B0;&#x6210;&#x3001;&#x6210;&#x719F;&#x7684;&#x5F88;&#x591A;&#x6846;&#x67B6;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x4EE5;&#x91CD;&#x590D;&#x9020;&#x8F6E;&#x5B50;&#x7684;&#x6001;&#x5EA6;&#x53BB;&#x5B66;&#x4E60;&#x8F6E;&#x5B50;&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#xFF0C;&#x4ECE;&#x800C;&#x8FBE;&#x5230;&#x80FD;&#x591F;&#x9020;&#x8F6E;&#x5B50;&#x7684;&#x5730;&#x6B65;&#x3002;&#x81F3;&#x4E8E;&#x5F88;&#x591A;&#x7EC6;&#x8282;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x8FC7;&#x591A;&#x8BA8;&#x8BBA;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5174;&#x8DA3;&#xFF0C;&#x5404;&#x4F4D;&#x53EF;&#x4EE5;&#x81EA;&#x884C;&#x7814;&#x7A76;&#x3002;</p>
<p>&#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x6682;&#x4E14;&#x628A;&#x8FD9;&#x4E2A;&#x6846;&#x67B6;&#x547D;&#x540D;&#x4E3A;SimpleNet&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x4E00;&#x8D77;&#x8FDB;&#x5165;&#x4E3B;&#x9898;&#x5427;&#x3002;</p>
<h2 id="&#x57FA;&#x672C;&#x7ED3;&#x6784;"><a class="header-anchor" href="#&#x57FA;&#x672C;&#x7ED3;&#x6784;"></a>&#x57FA;&#x672C;&#x7ED3;&#x6784;</h2>
<div align="center">
<img data-original="/2016/11/01/android-network-base-structure/20150115142804901.jpg" class="lazy">
<br>
<span>&#x56FE;1 &#xFF08; SimpleNet&#x7684;&#x57FA;&#x672C;&#x7ED3;&#x6784; &#xFF09;</span>
</div>
<p>SimpleNet&#x6846;&#x67B6;&#x7684;&#x57FA;&#x672C;&#x7ED3;&#x6784;&#x7C7B;&#x4F3C;&#x4E8E;Volley,&#x5305;&#x62EC;&#x4E00;&#x4E9B;&#x547D;&#x540D;&#x4E0A;&#x4E5F;&#x6709;&#x8DDF;Volley&#x4E00;&#x81F4;&#x3002;&#x5B83;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x56DB;&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x6700;&#x4E0A;&#x9762;&#x7684;&#x90E8;&#x5206;&#x4E3A;Request&#xFF0C;&#x5373;&#x5404;&#x79CD;&#x8BF7;&#x6C42;&#x7C7B;&#x578B;&#x3002;&#x4F8B;&#x5982;&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E3A;json&#x7684;&#x5BF9;&#x5E94;&#x4E3A;JsonRequest&#xFF0C;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4E3A;StringRequest&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x4E0A;&#x4F20;&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x9700;&#x8981;&#x4F7F;&#x7528;MultipartRequest&#xFF0C;&#x8BE5;&#x8BF7;&#x6C42;&#x53EA;&#x652F;&#x6301;&#x5C0F;&#x6587;&#x4EF6;&#x7684;&#x4E0A;&#x4F20;&#xFF0C;&#x5982;&#x679C;&#x4E0A;&#x4F20;&#x7684;&#x6587;&#x4EF6;&#x8FC7;&#x5927;&#x5219;&#x4F1A;&#x4EA7;&#x751F;OOM&#x3002;</p>
<p>&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x4E3A;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7EF4;&#x62A4;&#x4E86;&#x63D0;&#x4EA4;&#x7ED9;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#x7684;&#x8BF7;&#x6C42;&#x5217;&#x8868;&#xFF0C;&#x5E76;&#x4E14;&#x6839;&#x636E;&#x76F8;&#x5E94;&#x7684;&#x89C4;&#x5219;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x66F4;&#x5177;&#x4F18;&#x5148;&#x7EA7;&#x548C;&#x8FDB;&#x5165;&#x961F;&#x5217;&#x7684;&#x987A;&#x5E8F;&#x6765;&#x6267;&#x884C;&#xFF0C;&#x8BE5;&#x961F;&#x5217;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;PriorityBlockingQueue&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x961F;&#x5217;&#x4F1A;&#x88AB;&#x5E76;&#x53D1;&#x7684;&#x8BBF;&#x95EE;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x4FDD;&#x8BC1;&#x8BBF;&#x95EE;&#x7684;&#x539F;&#x5B50;&#x6027;&#x3002;</p>
<p>&#x7B2C;&#x4E09;&#x90E8;&#x5206;&#x662F;Executor&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7F51;&#x7EDC;&#x7684;&#x6267;&#x884C;&#x8005;&#x3002;&#x8BE5;Executor&#x7EE7;&#x627F;&#x81EA;Thread&#xFF0C;&#x5728;run&#x65B9;&#x6CD5;&#x4E2D;&#x5FAA;&#x73AF;&#x8BBF;&#x95EE;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x7684;&#x8BF7;&#x6C42;&#x961F;&#x5217;&#xFF0C;&#x8BF7;&#x6C42;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#x5C06;&#x7ED3;&#x679C;&#x6295;&#x9012;&#x7ED9;UI&#x7EBF;&#x7A0B;&#x3002;&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x63A7;&#x5236;&#x8BF7;&#x6C42;&#x961F;&#x5217;&#xFF0C;&#x4F8B;&#x5982;&#x8BF7;&#x6C42;&#x6392;&#x5E8F;&#x3001;&#x53D6;&#x6D88;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5E76;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x7EBF;&#x7A0B;&#x6C60;&#x6765;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x662F;&#x81EA;&#x884C;&#x7BA1;&#x7406;&#x961F;&#x5217;&#x548C;Thread&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x8FD9;&#x6837;&#x6574;&#x4E2A;&#x7ED3;&#x6784;&#x4E5F;&#x53D8;&#x5F97;&#x66F4;&#x4E3A;&#x7075;&#x6D3B;&#x3002;</p>
<p>&#x7B2C;&#x56DB;&#x90E8;&#x5206;&#x5219;&#x662F;Response&#x6295;&#x9012;&#x7C7B;&#xFF0C;&#x5728;&#x7B2C;&#x4E09;&#x90E8;&#x5206;&#x7684;Executor&#x4E2D;&#x6267;&#x884C;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#xFF0C;Executor&#x662F;Thread&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x80FD;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x66F4;&#x65B0;UI&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x4F7F;&#x7528;ResponseDelivery&#x6765;&#x5C01;&#x88C5;Response&#x7684;&#x6295;&#x9012;&#xFF0C;&#x4FDD;&#x8BC1;Response&#x6267;&#x884C;&#x5728;UI&#x7EBF;&#x7A0B;&#x3002;</p>
<p>&#x6BCF;&#x4E2A;&#x90E8;&#x5206;&#x804C;&#x8D23;&#x90FD;&#x76F8;&#x5BF9;&#x5355;&#x4E00;&#xFF0C;&#x8FD9;&#x6837;&#x4FBF;&#x4E8E;&#x65E5;&#x540E;&#x7684;&#x5347;&#x7EA7;&#x548C;&#x7EF4;&#x62A4;&#x3002;</p>
<h2 id="&#x6846;&#x67B6;&#x5206;&#x6790;"><a class="header-anchor" href="#&#x6846;&#x67B6;&#x5206;&#x6790;"></a>&#x6846;&#x67B6;&#x5206;&#x6790;</h2>
<div align="center">
<img data-original="/2016/11/01/android-network-base-structure/20150115144429294.jpg" class="lazy">
<br>
<span>&#x56FE;2</span>
</div>
<p>&#x4F46;&#x5728;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5F80;&#x5F80;&#x4F1A;&#x628A;UI&#x548C;&#x4E1A;&#x52A1;&#x5C42;&#x8026;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x7684;&#x5173;&#x7CFB;&#x592A;&#x5BC6;&#x5207;&#x4E86;&#xFF0C;&#x5206;&#x89E3;&#x8D77;&#x6765;&#x5E76;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x5BB9;&#x6613;&#x3002;&#x9AD8;&#x624B;&#x80FD;&#x591F;&#x628A;&#x590D;&#x6742;&#x7684;&#x4E8B;&#x60C5;&#x7B80;&#x5355;&#x5316;&#xFF0C;&#x800C;&#x5206;&#x89E3;&#x5C31;&#x662F;&#x7B80;&#x5355;&#x5316;&#x7684;&#x91CD;&#x8981;&#x624B;&#x6BB5;&#xFF0C;&#x5206;&#x89E3;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x5728;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#x6211;&#x4EEC;&#x6210;&#x4E3A;&#x91CD;&#x6784;&#x3002;</p>
<p>&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5C31;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x5206;&#x5C42;&#x6982;&#x5FF5;&#xFF0C;&#x4E3A;&#x4E86;&#x4FBF;&#x4E8E;&#x7406;&#x89E3;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x5982;&#x56FE;1&#x7684;&#x7ED3;&#x6784;&#x6765;&#x52A0;&#x6DF1;&#x7406;&#x89E3;&#x3002;&#x90A3;&#x4E48;&#x5206;&#x5C42;&#x6709;&#x4EC0;&#x4E48;&#x4F18;&#x7F3A;&#x70B9;&#x5462;&#xFF1F;</p>
<p><strong>&#x4F18;&#x70B9;&#xFF1A;</strong></p>
<ul>
<li>&#x590D;&#x6742;&#x95EE;&#x9898;&#x5206;&#x89E3;&#x7B80;&#x5355;&#x5316;&#xFF0C;&#x6BCF;&#x4E00;&#x5C42;&#x8D1F;&#x8D23;&#x81EA;&#x5DF1;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5E76;&#x5411;&#x5916;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#xFF1B;</li>
<li>&#x804C;&#x8D23;&#x5206;&#x79BB;&#xFF0C;&#x590D;&#x6742;&#x7684;&#x7CFB;&#x7EDF;&#x90FD;&#x6709;&#x5F88;&#x591A;&#x4EBA;&#x5458;&#x8FDB;&#x884C;&#x5F00;&#x53D1;&#xFF0C;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#x5F00;&#x53D1;&#x7684;&#x7BA1;&#x7406;&#x548C;&#x96C6;&#x6210;&#x662F;&#x4E2A;&#x5F88;&#x4E25;&#x91CD;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5206;&#x5C42;&#x8BBE;&#x8BA1;&#x5B9E;&#x73B0;&#x4E4B;&#x540E;&#xFF0C;&#x6BCF;&#x5C42;&#x53EA;&#x9700;&#x5B9A;&#x4E49;&#x597D;&#x81EA;&#x5DF1;&#x7684;&#x5BF9;&#x5916;&#x63A5;&#x53E3;&#xFF0C;&#x5176;&#x4ED6;&#x4F9D;&#x8D56;&#x5C42;&#x670D;&#x52A1;&#x7684;&#x5C31;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x5F00;&#x53D1;&#xFF1B;</li>
<li>&#x6BCF;&#x4E00;&#x5C42;&#x5BF9;&#x5176;&#x4ED6;&#x5C42;&#x90FD;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#xFF0C;&#x5BF9;&#x5916;&#x9690;&#x85CF;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#xFF0C;&#x4E0A;&#x5C42;&#x65E0;&#x9700;&#x77E5;&#x9053;&#x4E0B;&#x5C42;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x53EA;&#x9700;&#x8C03;&#x7528;&#x63A5;&#x53E3;&#x5373;&#x53EF;&#xFF1B;</li>
<li>&#x6709;&#x5229;&#x4E8E;&#x6807;&#x51C6;&#x5316;&#x3002;</li>
</ul>
<p><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong></p>
<ul>
<li>&#x5206;&#x5C42;&#x4E4B;&#x540E;&#x5BF9;&#x4E8E;&#x9886;&#x57DF;&#x4E1A;&#x52A1;&#x7684;&#x4FEE;&#x6539;&#x6709;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x5F88;&#x591A;&#x5C42;&#xFF1B;</li>
<li>&#x8FC7;&#x591A;&#x7684;&#x5C42;&#x6B21;&#x5F71;&#x54CD;&#x6027;&#x80FD;&#x3002;</li>
</ul>
<p>&#x5982;&#x4E0A;&#x6240;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x7684;SimpleNet&#x5E76;&#x4E0D;&#x662F;&#x5206;&#x5C42;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x7B80;&#x5355;&#x7684;&#x6A21;&#x5757;&#x5316;&#xFF0C;&#x4F46;&#x662F;&#x7406;&#x8BBA;&#x57FA;&#x7840;&#x90FD;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x4F9D;&#x8D56;&#x4E8E;&#x62BD;&#x8C61;&#x800C;&#x4E0D;&#x4F9D;&#x8D56;&#x4E8E;&#x5B9E;&#x73B0;&#x3001;&#x5355;&#x4E00;&#x804C;&#x8D23;&#x2026;&#x2026;&#x8FD9;&#x91CC;&#x5F15;&#x5165;&#x5206;&#x5C42;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x8FD9;&#x662F;&#x4FBF;&#x4E8E;&#x7406;&#x89E3;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x662F;&#x5E0C;&#x671B;&#x5927;&#x5BB6;&#x5728;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#x80FD;&#x591F;&#x5C3D;&#x91CF;&#x4FDD;&#x8BC1;&#x6A21;&#x5757;&#x7684;&#x5185;&#x805A;&#x6027;&#x3001;&#x8026;&#x5408;&#x6027;&#x3002;</p>
<p>&#x518D;&#x770B;SimpleNet&#xFF0C;Request&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7684;&#x6CDB;&#x578B;&#x7C7B;&#xFF0C;&#x6CDB;&#x578B;&#x7C7B;&#x578B;&#x5C31;&#x662F;&#x8FD4;&#x56DE;&#x7684;Response&#x7C7B;&#x578B;&#xFF0C;&#x4F8B;&#x5982;StringRequest&#x5C31;&#x662F;&#x7EE7;&#x627F;&#x81EA;Request&#x3002;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x7684;RequestQueue&#x4F9D;&#x8D56;&#x4E8E;Request&#xFF0C;Request&#x662F;&#x62BD;&#x8C61;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x4EFB;&#x4F55;Request&#x7684;&#x5B50;&#x7C7B;&#x90FD;&#x53EF;&#x4EE5;&#x4F20;&#x9012;&#x5230;&#x8BF7;&#x6C42;&#x961F;&#x5217;&#x4E2D;&#x6765;&#xFF0C;&#x5B83;&#x4F9D;&#x8D56;&#x7684;&#x662F;&#x62BD;&#x8C61;Request&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5177;&#x4F53;&#x7684;&#x67D0;&#x4E2A;&#x5B9E;&#x73B0;&#xFF0C;&#x56E0;&#x6B64;&#x4FDD;&#x8BC1;&#x4E86;&#x53EF;&#x6269;&#x5C55;&#x6027;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x6240;&#x9700;&#x7684;Request&#xFF0C;&#x4F8B;&#x5982;&#x5927;&#x6587;&#x4EF6;&#x7684;&#x4E0A;&#x4F20;Request&#x3002;&#x540C;&#x7406;&#xFF0C;&#x7B2C;&#x4E09;&#x90E8;&#x5206;&#x7684;NetworkExecutor&#x4E5F;&#x53EA;&#x662F;&#x4F9D;&#x8D56;&#x4E8E;Request&#x62BD;&#x8C61;&#xFF0C;&#x4F46;&#x8FD9;&#x91CC;&#x53C8;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;HttpStack&#xFF0C;&#x8FD9;&#x4E2A;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x7684;&#x771F;&#x6B63;&#x6267;&#x884C;&#x8005;&#xFF0C;&#x6709;HttpClientStack&#x548C;HttpUrlConnStack&#xFF0C;&#x4E24;&#x8005;&#x5206;&#x522B;&#x4E3A;Apache&#x7684;HttpClient&#x548C;java&#x7684;HttpURLConnection&#xFF0C;&#x5173;&#x4E8E;&#x8FD9;&#x4E24;&#x8005;&#x7684;&#x533A;&#x522B;&#x8BF7;&#x53C2;&#x8003;:Android&#x8BBF;&#x95EE;&#x7F51;&#x7EDC;&#xFF0C;&#x4F7F;&#x7528;HttpURLConnection&#x8FD8;&#x662F;HttpClient&#xFF1F;&#x3002;HttpStack&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#xFF0C;&#x5177;&#x4F53;&#x4F7F;&#x7528;HttpClient&#x8FD8;&#x662F;HttpURLConnection&#x5219;&#x7531;&#x8FD0;&#x884C;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x6765;&#x5B9A;&#xFF0C;HttpStackFactory&#x4F1A;&#x6839;&#x636E;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x7ED9;&#x6846;&#x67B6;&#x8FD4;&#x56DE;&#x5BF9;&#x5E94;&#x7684;HttpStack&#x3002;&#x6700;&#x540E;&#x7684;ResponseDelivery&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x53EA;&#x662F;&#x901A;&#x8FC7;Handler&#x5C06;&#x7ED3;&#x679C;&#x6295;&#x9012;&#x7ED9;UI&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6267;&#x884C;RequestListener&#x7684;onComplete&#x65B9;&#x6CD5;&#xFF0C;&#x6B64;&#x65F6;&#x7F51;&#x7EDC;&#x6267;&#x884C;&#x5B8C;&#x6210;&#xFF0C;&#x7528;&#x6237;&#x5373;&#x53EF;&#x5728;&#x8BE5;&#x65B9;&#x6CD5;&#x4E2D;&#x66F4;&#x65B0;UI&#x6216;&#x8005;&#x76F8;&#x5173;&#x7684;&#x5176;&#x4ED6;&#x7684;&#x64CD;&#x4F5C;&#x3002;</p>
<p>&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x518D;&#x770B;&#x770B;SimpleNet&#x7684;&#x5DE5;&#x7A0B;&#x7ED3;&#x6784;&#xFF0C;&#x5982;&#x56FE;3&#x6240;&#x793A;&#x3002;</p>
<div align="center">
<img data-original="/2016/11/01/android-network-base-structure/20150115164926687.jpg" class="lazy">
<br>
<span>&#x56FE;3</span>
</div>
<p>&#x8FD9;&#x5C31;&#x662F;SimpleNet&#x6846;&#x67B6;&#x7684;&#x57FA;&#x672C;&#x7ED3;&#x6784;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x671F;&#x5F85;&#x4E0B;&#x4E00;&#x7BC7;&#x535A;&#x5BA2;&#x7684;&#x66F4;&#x65B0;.</p>
<p><a href="https://github.com/hehonghui/simple_net_framework" target="_blank" rel="external">SimpleNet&#x7F51;&#x7EDC;&#x6846;&#x67B6;github&#x5730;&#x5740;</a></p>]]></content>
    
    <summary type="html">
    
      在开发过程中，网络是我们很重要的一部分，因此我们就以网络框架或者说网络模块开始。在这个框架开发过程中，笔者会整理开发思路、以及遇到一些设计问题时会有怎么样的考虑、解决方案，当然这只是笔者个人的观点，大家也可以有自己的实现。除了网络框架，后续的系列还想更新ImageLoader框架、ORM框架。如果有时间，笔者也会增加动画框架和微博开发的系列文章。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>RxJava线程切换</title>
    <link href="http://ngudream.com/2016/10/31/rxjava-thread-switch/"/>
    <id>http://ngudream.com/2016/10/31/rxjava-thread-switch/</id>
    <published>2016-10-31T12:56:42.000Z</published>
    <updated>2017-01-15T07:58:44.475Z</updated>
    
    <content type="html"><![CDATA[<h2 id="&#x524D;&#x8A00;"><a class="header-anchor" href="#&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h2>
<p>RxJava&#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x79CD;&#x7EBF;&#x7A0B;&#x8C03;&#x8BD5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;RxJava.Observable&#x53D6;&#x4EE3;AsyncTask&#x548C;AsyncTaskLoader&#x3002;</p>
<ul>
<li><strong>subscribeOn()</strong> &#x7528;&#x6765;&#x6307;&#x5B9A;Observable&#x4E2D;&#x7684;&#x903B;&#x8F91;&#x8FC7;&#x7A0B;&#x5728;&#x7279;&#x5B9A;&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x4E0A;&#x8C03;&#x7528;&#x3002;
<ul>
<li>create()</li>
<li>just()</li>
<li>flatmap()</li>
<li>map()</li>
<li>filter()</li>
<li>doOnSubscribe()</li>
<li>&#x7B49;&#x7B49;</li>
</ul>
</li>
</ul>
<div align="center">
<img data-original="/2016/10/31/rxjava-thread-switch/subscribeOn.jpg" class="lazy">
<br>
<span>subscribeOn() &#x539F;&#x7406;&#x56FE;</span>
</div>
<ul>
<li><strong>observeOn()</strong> &#x7528;&#x6765;&#x6307;&#x5B9A;Observable&#x7684;&#x7ED3;&#x679C;&#x6570;&#x636E;&#x5728;&#x7279;&#x5B9A;&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x4E0A;&#x8C03;&#x7528;&#x3002;
<ul>
<li>onNext()</li>
<li>onError()</li>
<li>onComplete()</li>
<li>doOnNext()</li>
<li>map()</li>
<li>&#x7B49;&#x7B49;</li>
</ul>
</li>
</ul>
<div align="center">
<img data-original="/2016/10/31/rxjava-thread-switch/observeOn.jpg" class="lazy">
<br>
<span>observeOn() &#x539F;&#x7406;&#x56FE;</span>
</div>
<p>RxJava&#x53EF;&#x4EE5;&#x5207;&#x6362;&#x591A;&#x79CD;&#x7EBF;&#x7A0B;&#xFF1A;</p>
<ul>
<li>Schedulers.immediate() &#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7ACB;&#x5373;&#x6267;&#x884C;</li>
<li>Schedulers.trampoline() &#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#xFF0C;&#x4F46;&#x5148;&#x7B49;&#x5F85;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x5F53;&#x524D;&#x4EFB;&#x52A1;</li>
<li>Schedulers.newThread() &#x5728;&#x65B0;&#x7684;&#x7EBF;&#x7A0B;&#x4E0A;&#x6267;&#x884C;</li>
<li>Schedulers.computation() &#x8BA1;&#x7B97;&#x6240;&#x4F7F;&#x7528;&#x7684; Scheduler&#x3002;&#x8FD9;&#x4E2A;&#x8BA1;&#x7B97;&#x6307;&#x7684;&#x662F; CPU &#x5BC6;&#x96C6;&#x578B;&#x8BA1;&#x7B97;&#xFF0C;&#x5373;&#x4E0D;&#x4F1A;&#x88AB; I/O &#x7B49;&#x64CD;&#x4F5C;&#x9650;&#x5236;&#x6027;&#x80FD;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x4F8B;&#x5982;&#x56FE;&#x5F62;&#x7684;&#x8BA1;&#x7B97;&#x3002;&#x8FD9;&#x4E2A; Scheduler &#x4F7F;&#x7528;&#x7684;&#x56FA;&#x5B9A;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x5927;&#x5C0F;&#x4E3A; CPU &#x6838;&#x6570;&#x3002;&#x4E0D;&#x8981;&#x628A; I/O &#x64CD;&#x4F5C;&#x653E;&#x5728; computation() &#x4E2D;&#xFF0C;&#x5426;&#x5219; I/O &#x64CD;&#x4F5C;&#x7684;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x4F1A;&#x6D6A;&#x8D39; CPU&#x3002;</li>
<li><a href="http://Schedulers.io" target="_blank" rel="external">Schedulers.io</a>() &#x5728;I/O&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x64CD;&#x4F5C;</li>
<li>AndroidSchedulers.mainThread() &#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x6267;&#x884C;</li>
</ul>
<h2 id="mainthread"><a class="header-anchor" href="#mainthread"></a>mainThread</h2>
<p>&#x6307;&#x5B9A;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#xFF1A;</p>
<pre><code>Observable.just(1)
                .subscribeOn(AndroidSchedulers.mainThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;map&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x548C;subscribe&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x5728;main&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x7684;&#x3002;</p>
<h2 id="i-o"><a class="header-anchor" href="#i-o"></a>I/O</h2>
<p>&#x6307;&#x5B9A;&#x5728;I/O&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x3002;</p>
<pre><code>Observable.just(1)
                .subscribeOn(Schedulers.io())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;map&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x548C;subscribe&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x5728;I/O&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x7684;&#x3002;</p>
<h2 id="newthread"><a class="header-anchor" href="#newthread"></a>newThread</h2>
<p>&#x6307;&#x5B9A;&#x5728;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x3002;</p>
<pre><code>Observable.just(1)
                .subscribeOn(Schedulers.newThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxNewThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: RxNewThreadScheduler-1
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;map&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x548C;subscribe&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x7684;&#x3002;</p>
<p>&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;subscribeOn&#x6216;observeOn&#x6307;&#x5B9A;&#x7EBF;&#x7A0B;&#xFF0C;&#x5219;&#x4F7F;&#x7528;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x3002;</p>
<pre><code>Log.d(TAG, &quot;[onCreate] cur_thread: &quot; + Thread.currentThread().getName());
        Observable.just(1)
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [onCreate] cur_thread: main
D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x662F;&#x4E3B;&#x7EBF;&#x7A0B;&#xFF0C;map&#x7684;&#x6267;&#x884C;&#x548C;subscribe&#x7684;&#x6267;&#x884C;&#x90FD;&#x662F;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x3002;</p>
<p>&#x5176;&#x5B83;&#x5404;&#x79CD;&#x7684;&#x6307;&#x5B9A;&#x7EBF;&#x7A0B;&#x7C7B;&#x4F3C;&#xFF0C;&#x5728;&#x6B64;&#x4E0D;&#x518D;&#x4E3E;&#x4F8B;&#x54C8;&#x3002;</p>
<h2 id="&#x7EBF;&#x7A0B;&#x5207;&#x6362;"><a class="header-anchor" href="#&#x7EBF;&#x7A0B;&#x5207;&#x6362;"></a>&#x7EBF;&#x7A0B;&#x5207;&#x6362;</h2>
<p>&#x5176;&#x5B9E;&#x524D;&#x9762;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x4F7F;&#x7528;&#x5230;&#x4E86;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#xFF0C;&#x5C31;&#x662F; Observable.just(1)&#x7684;&#x521B;&#x5EFA;&#x5176;&#x5B9E;&#x662F;&#x8FD0;&#x884C;&#x5728;Activity&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#xFF0C;&#x7D27;&#x63A5;&#x7740;&#x901A;&#x8FC7;subscribeOn(<a href="http://Schedulers.io" target="_blank" rel="external">Schedulers.io</a>())&#xFF0C;&#x5C06;&#x5B83;&#x5207;&#x6362;&#x5230;&#x4E86;I/O&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;map&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x3002;</p>
<h3 id="&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0E;io&#x7EBF;&#x7A0B;&#x5207;&#x6362;"><a class="header-anchor" href="#&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0E;io&#x7EBF;&#x7A0B;&#x5207;&#x6362;"></a>&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0E;IO&#x7EBF;&#x7A0B;&#x5207;&#x6362;</h3>
<p>&#x6211;&#x4EEC;&#x6765;&#x5B9E;&#x73B0;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0E;I/O&#x7EBF;&#x7A0B;&#x7684;&#x5207;&#x6362;&#xFF0C;I/O&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;map&#x64CD;&#x4F5C;&#xFF0C;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;subscribe&#x3002;</p>
<pre><code>Observable.just(1)
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>map&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x7531;&#x7D27;&#x8DDF;&#x7740;&#x5B83;&#x7684;&#x524D;&#x9762;&#x4E00;&#x4E2A;&#x6216;&#x8005;&#x5B83;&#x540E;&#x9762;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;subscribeOn&#x51B3;&#x5B9A;&#x3002;subscribe&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x5219;&#x7531;&#x7D27;&#x8DDF;&#x7740;&#x5B83;&#x7684;observeOn&#x51B3;&#x5B9A;&#x3002;</p>
<p>&#x518D;&#x6765;&#x53D8;&#x6362;&#x4E00;&#x4E0B;map&#x4E0E;subscribeOn&#x3001;observeOn&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x770B;&#x770B;&#x7ED3;&#x679C;&#xFF1A;</p>
<pre><code>new Thread(new Runnable() {
            @Override
            public void run() {
                Observable.just(1)
                        .subscribeOn(Schedulers.io())
                        .observeOn(AndroidSchedulers.mainThread())
                        .map(new Func1&lt;Integer, Integer&gt;() {
                            @Override
                            public Integer call(Integer in) {
                                Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                                Log.d(TAG, &quot;[call] input: &quot; + in);
                                int result = in * 2;
                                return result;
                            }
                        })
                        .subscribe(new Action1&lt;Integer&gt;() {
                            @Override
                            public void call(Integer result) {
                                Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                                Log.d(TAG, &quot;[call] output: &quot; + result);
                            }
                        });
            }
        }).start();
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x6211;&#x4EEC;&#x5728;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#x91CC;&#x9762;&#x521B;&#x5EFA; Observable.just(1)&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x6362;&#x4E86;map&#x4E0E;subscribeOn&#x3001;observeOn&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;map&#x53D7;&#x79BB;&#x5B83;&#x6700;&#x8FD1;&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x5F71;&#x54CD;observeOn(AndroidSchedulers.mainThread())&#xFF0C;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x5B83;&#x7684;&#x903B;&#x8F91;&#x3002;</p>
<p>&#x518D;&#x6765;&#x770B;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;</p>
<pre><code>Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                Log.d(TAG, &quot;[call] create_thread: &quot; + Thread.currentThread().getName());
                subscriber.onNext(1);
                subscriber.onCompleted();
            }
        })
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] create_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;create()&#x65B9;&#x6CD5;&#x6700;&#x8FD1;&#x7684;&#x4E00;&#x4E2A;subscribeOn&#x51B3;&#x5B9A;&#x4E86;&#x5B83;call()&#x6240;&#x5728;&#x7684;&#x7EBF;&#x7A0B;&#x3002;</p>
<blockquote>
<p>&#x8D75;&#x5F66;&#x519B; <a href="http://www.cnblogs.com/zhaoyanjun/p/5624395.html" target="_blank" rel="external">RxJava &#x548C; RxAndroid &#x4E94;&#xFF08;&#x7EBF;&#x7A0B;&#x8C03;&#x5EA6;&#xFF09;</a></p>
</blockquote>
<ol>
<li>
<p>&#x5BF9;&#x4E8E; create()&#xFF0C;just()&#xFF0C;from()&#xFF0C;doOnSubscribe() &#x7B49;&#x521B;&#x5EFA;Observable&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E3A;<strong>&#x4E8B;&#x4EF6;&#x4EA7;&#x751F;</strong></p>
</li>
<li>
<p>&#x5BF9;&#x4E8E; map()&#xFF0C;flapMap()&#xFF0C;scan()&#xFF0C;filter() &#x7B49;&#x5904;&#x7406;&#x903B;&#x8F91;&#x8FC7;&#x7A0B;&#xFF08;&#x53D1;&#x5C04;&#x6570;&#x636E;&#x548C;&#x901A;&#x77E5;&#xFF09;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E3A;<strong>&#x4E8B;&#x4EF6;&#x52A0;&#x5DE5;</strong></p>
</li>
<li>
<p>&#x5BF9;&#x4E8E;subscribe()&#x64CD;&#x4F5C;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E3A;<strong>&#x4E8B;&#x4EF6;&#x6D88;&#x8D39;</strong></p>
<ul>
<li>&#x4E8B;&#x4EF6;&#x4EA7;&#x751F;&#xFF1A;&#x9ED8;&#x8BA4;&#x8FD0;&#x884C;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#xFF0C;&#x53EF;&#x4EE5;&#x7531; subscribeOn() &#x81EA;&#x5B9A;&#x4E49;&#x7EBF;&#x7A0B;</li>
<li>&#x4E8B;&#x4EF6;&#x52A0;&#x5DE5;&#xFF1A;&#x9ED8;&#x8BA4;&#x8DDF;&#x4E8B;&#x4EF6;&#x4EA7;&#x751F;&#x7684;&#x7EBF;&#x7A0B;&#x4FDD;&#x6301;&#x4E00;&#x81F4;, &#x53EF;&#x4EE5;&#x7531; observeOn() &#x81EA;&#x5B9A;&#x4E49;&#x7EBF;&#x7A0B;</li>
<li>&#x4E8B;&#x4EF6;&#x6D88;&#x8D39;&#xFF1A;&#x9ED8;&#x8BA4;&#x8FD0;&#x884C;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#xFF0C;&#x53EF;&#x4EE5;&#x6709;observeOn() &#x81EA;&#x5B9A;&#x4E49;</li>
</ul>
</li>
</ol>
<h3 id="doonsubscribe"><a class="header-anchor" href="#doonsubscribe"></a>doOnSubscribe</h3>
<p>doOnSubscribe&#x6267;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#x7531;&#x5B83;&#x540E;&#x9762;&#x7D27;&#x6839;&#x7684;subscribeOn&#x51B3;&#x5B9A;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B83;&#x524D;&#x9762;&#x7684;&#x3002;</p>
<pre><code>Observable.just(1)
                .doOnSubscribe(new Action0() {
                    @Override
                    public void call() {
                        Log.d(TAG, &quot;[call] doOnSubscribe_thread: &quot; + Thread.currentThread().getName());
                    }
                })
                .subscribeOn(Schedulers.newThread())
                .observeOn(AndroidSchedulers.mainThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] doOnSubscribe_thread: RxNewThreadScheduler-1
D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06;subscribeOn(Schedulers.newThread())&#x79FB;&#x5230;.doOnSubscribe(new Action0())&#x524D;&#x9762;&#x53BB;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F1A;&#x770B;&#x5230;&#x4E0B;&#x9762;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;</p>
<pre><code>Observable.just(1)
                .subscribeOn(Schedulers.io())
                .doOnSubscribe(new Action0() {
                    @Override
                    public void call() {
                        Log.d(TAG, &quot;[call] doOnSubscribe_thread: &quot; + Thread.currentThread().getName());
                    }
                })

D/MainActivity: [call] doOnSubscribe_thread: main
</code></pre>
<p>&#x5373;doOnSubscribe&#x5E76;&#x6CA1;&#x6709;&#x53D7;&#x5230;&#x5B83;&#x524D;&#x9762;&#x7684;subscribeOn&#x5F71;&#x54CD;&#xFF0C;&#x8FD8;&#x662F;&#x5728;&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;&#x5373;&#x4E3B;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x3002;</p>
<h3 id="doonnext"><a class="header-anchor" href="#doonnext"></a>doOnNext</h3>
<p>doOnNext&#x6267;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#x7531;&#x5B83;&#x524D;&#x9762;&#x7D27;&#x8DDF;&#x7684;observeOn&#x51B3;&#x5B9A;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B83;&#x540E;&#x9762;&#x7684;&#x3002;</p>
<pre><code>Observable.just(1)
                .subscribeOn(Schedulers.newThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .observeOn(Schedulers.computation())
                .doOnNext(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer integer) {
                        Log.d(TAG, &quot;[call] doOnNext_thread: &quot; + Thread.currentThread().getName());
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxNewThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] doOnNext_thread: RxComputationThreadPool-3
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06;doOnNext&#x524D;&#x7684;observeOn&#x53BB;&#x6389;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F1A;&#x770B;&#x5230;&#x4E0B;&#x9762;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxNewThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] doOnNext_thread: RxNewThreadScheduler-1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<h3 id="&#x591A;&#x4E2A;subscribeon"><a class="header-anchor" href="#&#x591A;&#x4E2A;subscribeon"></a>&#x591A;&#x4E2A;subscribeOn</h3>
<p>&#x5B83;&#x662F;&#x5B9A;&#x4E49;&#x4E8B;&#x4EF6;&#x4EA7;&#x751F;&#x7EBF;&#x7A0B;&#x7684;</p>
<pre><code>Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                Log.d(TAG, &quot;[call] create_thread: &quot; + Thread.currentThread().getName());
                subscriber.onNext(1);
                subscriber.onCompleted();
            }
        })
                .subscribeOn(Schedulers.newThread())
                .subscribeOn(Schedulers.io())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map1_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] create_thread: RxNewThreadScheduler-1
D/MainActivity: [call] map1_thread: RxNewThreadScheduler-1
D/MainActivity: [call] subscribe_thread: RxNewThreadScheduler-1
</code></pre>
<p>&#x901A;&#x8FC7;&#x7ED3;&#x679C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x90FD;&#x8FD0;&#x884C;&#x5728;&#x4E86;&#x540C;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#x91CC;&#x9762;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5C31;&#x7B97;&#x94FE;&#x5F0F;&#x91CC;&#x9762;&#x5199;&#x4E86;&#x591A;&#x4E2A; subscribeOn&#xFF0C;&#x94FE;&#x63A5;&#x8FD8;&#x662F;&#x53EA;&#x53D7;&#x7B2C;&#x4E00;&#x4E2A; subscribeOn &#x7684;&#x5F71;&#x54CD;&#x3002;</p>
<h3 id="&#x591A;&#x4E2A;observeon"><a class="header-anchor" href="#&#x591A;&#x4E2A;observeon"></a>&#x591A;&#x4E2A;observeOn</h3>
<p>&#x5B83;&#x662F;&#x5B9A;&#x4E49;&#x4E8B;&#x4EF6;&#x6D88;&#x8D39;&#x7EBF;&#x7A0B;&#x7684;</p>
<pre><code>Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                Log.d(TAG, &quot;[call] create_thread: &quot; + Thread.currentThread().getName());
                subscriber.onNext(1);
                subscriber.onCompleted();
            }
        })
                .observeOn(Schedulers.io())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map1_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .observeOn(Schedulers.newThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer integer) {
                        Log.d(TAG, &quot;[call] map2_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + integer);
                        int result = integer * 2;
                        return result;
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] create_thread: main
D/MainActivity: [call] map1_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] map2_thread: RxNewThreadScheduler-1
D/MainActivity: [call] subscribe_thread: main
</code></pre>
<p>&#x901A;&#x8FC7;&#x7ED3;&#x679C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x7684;&#x8F6C;&#x5316;&#x90FD;&#x751F;&#x6548;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5728;&#x4E8B;&#x4EF6;&#x7684;&#x52A0;&#x5DE5;&#x3001;&#x6D88;&#x8D39;&#x4E0A;&#x662F;&#x53D7;&#x79BB;&#x5B83;&#x6700;&#x65B0;&#x7684; observeOn &#x5F71;&#x54CD;&#x3002;</p>
<h3 id="&#x6DF7;&#x5408;&#x8C03;&#x5EA6;"><a class="header-anchor" href="#&#x6DF7;&#x5408;&#x8C03;&#x5EA6;"></a>&#x6DF7;&#x5408;&#x8C03;&#x5EA6;</h3>
<p>&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x95F4;&#x7684;&#x6765;&#x56DE;&#x5207;&#x6362;</p>
<pre><code>Observable.just(1)
                .doOnSubscribe(new Action0() {
                    @Override
                    public void call() {
                        Log.d(TAG, &quot;[call] doOnSubscribe_thread: &quot; + Thread.currentThread().getName());
                    }
                })
                .subscribeOn(Schedulers.computation())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map1_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .observeOn(Schedulers.newThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer integer) {
                        Log.d(TAG, &quot;[call] map2_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + integer);
                        return integer * 2;
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                .doOnNext(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer integer) {
                        Log.d(TAG, &quot;[call] doOnNext_thread: &quot; + Thread.currentThread().getName());
                    }
                })
                .observeOn(Schedulers.io())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] doOnSubscribe_thread: RxComputationThreadPool-3
D/MainActivity: [call] map1_thread: RxComputationThreadPool-3
D/MainActivity: [call] input: 1
D/MainActivity: [call] map2_thread: RxNewThreadScheduler-1
D/MainActivity: [call] input: 2
D/MainActivity: [call] doOnNext_thread: main
D/MainActivity: [call] subscribe_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] output: 4
</code></pre>
<h2 id="&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;"><a class="header-anchor" href="#&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;"></a>&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;</h2>
<ul>
<li>observeOn &#x51B3;&#x5B9A;&#x4E0B;&#x6E38;&#x4EE3;&#x7801;&#x8FD0;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;observeOn &#x5982;&#x679C;&#x4E0D;&#x5B9A;&#x4E49;&#x5219;&#x662F;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x5F53;&#x524D;&#x8FD0;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#x3002;</li>
<li>observeOn &#x4E8B;&#x4EF6;&#x7684;&#x52A0;&#x5DE5;&#x3001;&#x6D88;&#x8D39;&#x4E0A;&#x662F;&#x53D7;&#x79BB;&#x5B83;&#x6700;&#x65B0;&#x7684; observeOn &#x5F71;&#x54CD;&#x3002;</li>
<li>subscribeOn &#x51B3;&#x5B9A;&#x6700;&#x539F;&#x59CB;&#x6570;&#x636E;&#x6E90;&#x53D1;&#x5C04;&#x6570;&#x636E;&#x4EE3;&#x7801;&#x8FD0;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x800C;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x53D1;&#x5C04;&#x6570;&#x636E;&#x4EE3;&#x7801;&#x662F;&#x7531; observeOn &#x51B3;&#x5B9A;&#x7684;&#x3002;</li>
<li>subscribeOn &#x5982;&#x679C;&#x5728;&#x94FE;&#x5F0F;&#x4E2D;&#x586B;&#x5199;&#x591A;&#x4E2A;&#xFF0C;&#x53EA;&#x4F1A;&#x53D7;&#x7B2C;&#x4E00;&#x4E2A;&#x7684;&#x5F71;&#x54CD;&#x3002;RxJava&#x5206;&#x914D;&#x7EBF;&#x7A0B;&#x65F6;&#x662F;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x94FE;&#x81EA;&#x4E0B;&#x800C;&#x4E0A;&#x5904;&#x7406;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x4E0A;&#x9762;&#x7684; subscribeOn &#x4F1A;&#x8986;&#x76D6;&#x4E0B;&#x9762;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4; subscribeOn &#x5728;&#x8C03;&#x7528;&#x94FE;&#x4E2D;&#x6700;&#x591A;&#x5B9A;&#x4E49;&#x4E00;&#x6B21;&#x5C31;&#x53EF;&#x4EE5;&#xFF0C;&#x4F4D;&#x7F6E;&#x4EFB;&#x610F;&#x3002;</li>
<li>doOnSubscribe &#x53D7;&#x5176;&#x540E;&#x7684; subscribeOn &#x5F71;&#x54CD;&#xFF0C;doOnNext&#x53D7;&#x5176;&#x524D;&#x7684; observeOn &#x5F71;&#x54CD;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;subcribe&#x53D1;&#x751F;&#x7684;&#x7EBF;&#x7A0B;&#x51B3;&#x5B9A;&#x4E86;&#xFF0C;doOnSubscribe()&#x6267;&#x884C;&#x6240;&#x5728;&#x7684;&#x7EBF;&#x7A0B;&#x3002;</li>
</ul>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="external">http://gank.io/post/560e15be2dca930e00da1083</a></li>
<li><a href="http://blog.csdn.net/xmxkf/article/details/51821940" target="_blank" rel="external">http://blog.csdn.net/xmxkf/article/details/51821940</a></li>
<li><a href="http://www.cnblogs.com/zhaoyanjun/p/5624395.html" target="_blank" rel="external">http://www.cnblogs.com/zhaoyanjun/p/5624395.html</a></li>
<li><a href="http://www.jianshu.com/p/6add06ae5dde" target="_blank" rel="external">http://www.jianshu.com/p/6add06ae5dde</a></li>
<li><a href="http://blog.csdn.net/yaoyasong/article/details/50666743" target="_blank" rel="external">http://blog.csdn.net/yaoyasong/article/details/50666743</a></li>
<li><a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="external">http://gank.io/post/560e15be2dca930e00da1083</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      RxJava线程的切换是通过lift方法来完成的，观察者切换线程使用observeOn()，即决定onNext, onError和onCompleted方法或者Action1&lt;Boolean&gt;、Action1&lt;Throwable&gt;在哪个线程执行；被观察者切换线程使用subscriberOn()，即决定Observable全部的处理过程在如个线程执行。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>Observable.map源码分析</title>
    <link href="http://ngudream.com/2016/10/25/rxjava-map/"/>
    <id>http://ngudream.com/2016/10/25/rxjava-map/</id>
    <published>2016-10-25T14:06:37.000Z</published>
    <updated>2017-01-15T07:58:44.456Z</updated>
    
    <content type="html"><![CDATA[<p>&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x4E0D;&#x9700;&#x8981;&#x8003;&#x8651;&#x51FD;&#x6570;&#x7684;&#x8C03;&#x7528;&#x987A;&#x5E8F;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8003;&#x8651;&#x63A5;&#x53E3;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5728;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x4E4B;&#x524D;&#xFF0C;&#x4F1A;&#x7ECF;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x4E8B;&#x4EF6;&#x7684;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x4E9B;&#x4E8B;&#x4EF6;&#x50CF;&#x6D41;&#x4E00;&#x6837;&#x7684;&#x4F20;&#x64AD;&#xFF08;&#x5E76;&#x4E14;&#x53EF;&#x80FD;&#x4E0D;&#x6309;&#x987A;&#x5E8F;&#xFF09;&#x51FA;&#x53BB;&#xFF0C;&#x7136;&#x540E;&#x5F71;&#x54CD;&#x7ED3;&#x679C;&#x3002;&#x6211;&#x4EEC;&#x63A5;&#x7740;&#x6765;&#x770B;&#x4E00;&#x4E0B;RxJava&#x7684;map&#x64CD;&#x4F5C;&#x7B26;&#x3002;</p>
<p>&#x5BF9;Observable&#x53D1;&#x5C04;&#x7684;&#x6BCF;&#x4E00;&#x9879;&#x6570;&#x636E;&#x5E94;&#x7528;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x6267;&#x884C;&#x53D8;&#x6362;&#x64CD;&#x4F5C;&#xFF1A;</p>
<div align="center">
<a href="https://github.com/ReactiveX/RxJava/blob/1.x/src/main/java/rx/Observable.java" target="_blank" rel="external">
<img data-original="/2016/10/25/rxjava-map/map.jpg" class="lazy"> </a>
</div>
<h2 id="&#x4F5C;&#x7528;&#x7B80;&#x4ECB;"><a class="header-anchor" href="#&#x4F5C;&#x7528;&#x7B80;&#x4ECB;"></a>&#x4F5C;&#x7528;&#x7B80;&#x4ECB;</h2>
<blockquote>
<p>Map&#x64CD;&#x4F5C;&#x7B26;&#x5BF9;&#x539F;&#x59CB;Observable&#x53D1;&#x5C04;&#x7684;&#x6BCF;&#x4E00;&#x9879;&#x6570;&#x636E;&#x5E94;&#x7528;&#x4E00;&#x4E2A;&#x4F60;&#x9009;&#x62E9;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x53D1;&#x5C04;&#x8FD9;&#x4E9B;&#x7ED3;&#x679C;&#x7684;Observable&#x3002;<br>
RxJava&#x5C06;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x7B26;&#x5B9E;&#x73B0;&#x4E3A;map&#x51FD;&#x6570;&#x3002;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x7B26;&#x9ED8;&#x8BA4;&#x4E0D;&#x5728;&#x4EFB;&#x4F55;&#x7279;&#x5B9A;&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x4E0A;&#x6267;&#x884C;&#x3002;</p>
</blockquote>
<p>&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x7528;&#x4E00;&#x4E2A;boolean&#x578B;&#x7684;input&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x8F93;&#x5165;&#x6765;&#x505A;&#x81EA;&#x5DF1;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x7136;&#x540E;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;boolean&#x578B;&#x7684;&#x7ED3;&#x679C;&#x3002;</p>
<pre><code>boolean input = true;
Observable.just(input)
                .map(new Func1&lt;Boolean, Boolean&gt;() {
                    @Override
                    public Boolean call(Boolean in) {
                        boolean result = false;
                        if(in){
                            //&#x81EA;&#x5DF1;&#x7684;&#x52A8;&#x4F5C;
                        } else {
                            //&#x81EA;&#x5DF1;&#x7684;&#x52A8;&#x4F5C;
                        }
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Boolean&gt;() {
                    @Override
                    public void call(Boolean aBoolean) {

                    }
                }, new Action1&lt;Throwable&gt;() {
                    @Override
                    public void call(Throwable throwable) {

                    }
                });
</code></pre>
<h2 id="map&#x7684;&#x521B;&#x5EFA;"><a class="header-anchor" href="#map&#x7684;&#x521B;&#x5EFA;"></a>map&#x7684;&#x521B;&#x5EFA;</h2>
<p>map&#x5E76;&#x6CA1;&#x6709;&#x76F4;&#x63A5;Observable.map()&#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#xFF0C;&#x90FD;&#x662F;&#x9700;&#x8981;&#x5148;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;Observable&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8C03;&#x7528;map()&#x65B9;&#x6CD5;&#x3002;&#x5B83;&#x4EEC;&#x7684;&#x8F93;&#x5165;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x90FD;&#x662F;Object&#x3002;</p>
<pre><code>Observable.create(new Observable.OnSubscribe&lt;Object&gt;() {
            @Override
            public void call(Subscriber&lt;? super Object&gt; subscriber) {

            }
        })
                .map(new Func1&lt;Object, Object&gt;() {
                    @Override
                    public Object call(Object o) {
                        return null;
                    }
                });
</code></pre>
<p>map&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#x662F;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x7684;lift()&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4E0D;&#x50CF;flatMap&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#x8FD8;&#x8C03;&#x7528;ScalarSynchronousObservable&#x6216;&#x8005;merge&#x65B9;&#x6CD5;&#x3002;&#x5E76;&#x4E14;&#x53C2;&#x6570;Func1&#x4E5F;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;map&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#xFF0C;flatMap&#x5219;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;Observable&#x3002;&#x901A;&#x8FC7;<a href="http://ngudream.com/2016/10/01/rxjava-flatmap/">&#x6587;&#x7AE0;</a>&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;flatMap&#x5185;&#x90E8;&#x8C03;&#x7528;&#x7684;merge&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570;&#x5C31;&#x662F;&#x8C03;&#x7528;map&#x65B9;&#x6CD5;&#x3002;</p>
<pre><code>/**
     * Returns an Observable that applies a specified function to each item emitted by the source Observable and
     * emits the results of these function applications.
     */
    public final &lt;R&gt; Observable&lt;R&gt; map(Func1&lt;? super T, ? extends R&gt; func) {
        return lift(new OperatorMap&lt;T, R&gt;(func));
    }
</code></pre>
<p>&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#xFF0C;map&#x8C03;&#x7528;lift&#x65B9;&#x6CD5;&#x65F6;&#x5C31;&#x4E0D;&#x50CF;flatmap&#x90A3;&#x6837;&#x53EF;&#x4EE5;&#x6709;&#x591A;&#x79CD;Operator&#xFF0C;&#x5B83;&#x662F;&#x76F4;&#x63A5;&#x4F20;&#x5165;&#x4E00;&#x4E2A;OperatorMap&#xFF1A;</p>
<pre><code>/**
 * Applies a function of your choosing to every item emitted by an {@code Observable}, and emits the results of
 * this transformation as a new {@code Observable}.
 */
public final class OperatorMap&lt;T, R&gt; implements Operator&lt;R, T&gt; {

    private final Func1&lt;? super T, ? extends R&gt; transformer;

    public OperatorMap(Func1&lt;? super T, ? extends R&gt; transformer) {
        this.transformer = transformer;
    }

    @Override
    public Subscriber&lt;? super T&gt; call(final Subscriber&lt;? super R&gt; o) {
        return new Subscriber&lt;T&gt;(o) {

            @Override
            public void onCompleted() {
                o.onCompleted();
            }

            @Override
            public void onError(Throwable e) {
                o.onError(e);
            }

            @Override
            public void onNext(T t) {
                try {
                    o.onNext(transformer.call(t));
                } catch (Throwable e) {
                    Exceptions.throwIfFatal(e);
                    onError(OnErrorThrowable.addValueAsLastCause(e, t));
                }
            }

        };
    }

}
</code></pre>
<p>lift()&#x51FD;&#x6570;&#x7684;&#x5177;&#x4F53;&#x4ECB;&#x7ECD;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x6587;&#x7AE0;<a href="http://blog.csdn.net/lzyzsd/article/details/50110355" target="_blank" rel="external"> RxJava&#x57FA;&#x672C;&#x6D41;&#x7A0B;&#x548C;lift&#x6E90;&#x7801;&#x5206;&#x6790;</a></p>
<pre><code>/**
     * Lifts a function to the current Observable and returns a new Observable that when subscribed to will pass
     * the values of the current Observable through the Operator function.
     */
    public final &lt;R&gt; Observable&lt;R&gt; lift(final Operator&lt;? extends R, ? super T&gt; operator) {
        return new Observable&lt;R&gt;(new OnSubscribe&lt;R&gt;() {
            @Override
            public void call(Subscriber&lt;? super R&gt; o) {
                try {
                    Subscriber&lt;? super T&gt; st = hook.onLift(operator).call(o);//&#x4EA7;&#x751F;&#x64CD;&#x4F5C;&#x7684;&#x5173;&#x952E;
                    try {
                        // new Subscriber created and being subscribed with so &apos;onStart&apos; it
                        st.onStart();
                        onSubscribe.call(st);
                    } catch (Throwable e) {
                        // localized capture of errors rather than it skipping all operators
                        // and ending up in the try/catch of the subscribe method which then
                        // prevents onErrorResumeNext and other similar approaches to error handling
                        if (e instanceof OnErrorNotImplementedException) {
                            throw (OnErrorNotImplementedException) e;
                        }
                        st.onError(e);
                    }
                } catch (Throwable e) {
                    if (e instanceof OnErrorNotImplementedException) {
                        throw (OnErrorNotImplementedException) e;
                    }
                    // if the lift function failed all we can do is pass the error to the final Subscriber
                    // as we don&apos;t have the operator available to us
                    o.onError(e);
                }
            }
        });
    }
</code></pre>
<h2 id="&#x603B;&#x7ED3;"><a class="header-anchor" href="#&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h2>
<p>map &#x4E3A;&#x4E00;&#x5BF9;&#x4E00;&#x53D8;&#x6362;&#x3002;&#x5373;&#x8F93;&#x5165;&#x4E00;&#x4E2A;Object&#x5E76;&#x8F93;&#x51FA;&#x4E00;&#x4E2A;Object&#xFF0C;&#x8FD9;&#x4E2A;Object&#x53EF;&#x4EE5;&#x662F;&#x5355;&#x5BF9;&#x8C61;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x5BF9;&#x8C61;&#x6570;&#x7EC4;&#xFF0C;&#x8FD9;&#x4E2A;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x628A;&#x63E1;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x81EA;&#x7531;&#x7684;&#x5BF9;&#x8F93;&#x5165;&#x8FDB;&#x884C;&#x76F8;&#x5E94;&#x7684;&#x53D8;&#x6362;&#x5904;&#x7406;&#x7136;&#x540E;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x5BF9;&#x8C61;&#x5373;&#x53EF;&#x3002;</p>
<p><a href="http://ngudream.com/2016/10/01/rxjava-flatmap/">Observable.flatmap&#x6E90;&#x7801;&#x5206;&#x6790;</a></p>]]></content>
    
    <summary type="html">
    
      响应式编程思想就是不需要考虑函数的调用顺序，只需要考虑接口的结果，在返回结果之前，会经过一系列事件的链式调用，这些事件像流一样的传播（并且可能不按顺序）出去，然后影响结果。我们接着来看一下RxJava的map操作符。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>Android网络开源库</title>
    <link href="http://ngudream.com/2016/10/19/android-network-library/"/>
    <id>http://ngudream.com/2016/10/19/android-network-library/</id>
    <published>2016-10-19T15:19:08.000Z</published>
    <updated>2017-01-15T07:58:44.345Z</updated>
    
    <content type="html"><![CDATA[<p>&#x672C;&#x6587;&#x4E3B;&#x8981;&#x6536;&#x96C6;&#x7B14;&#x8005;&#x9047;&#x5230;&#x7684;&#x3001;&#x5B66;&#x4E60;&#x4F7F;&#x7528;&#x8FC7;&#x7684;&#x7F51;&#x7EDC;&#x7BA1;&#x7406;&#x5F00;&#x6E90;&#x5E93;&#x3002;&#x8FD9;&#x4E9B;&#x7B2C;&#x4E09;&#x65B9;&#x7684;&#x5F00;&#x6E90;&#x5E93;&#xFF0C;&#x4E3A;&#x6211;&#x4EEC;&#x7A0B;&#x5E8F;&#x733F;&#x5C01;&#x88C5;&#x4E86;http&#x6570;&#x636E;&#x901A;&#x4FE1;&#x7684;&#x5404;&#x79CD;&#x5E95;&#x5C42;&#x5904;&#x7406;&#xFF0C;&#x5305;&#x62EC;&#x540C;&#x6B65;&#x5F02;&#x6B65;&#x3001;&#x591A;&#x7EA7;&#x7F13;&#x5B58;&#x3001;&#x6570;&#x636E;&#x8F6C;&#x6362;&#x3001;&#x6587;&#x4EF6;&#x5206;&#x6BB5;&#x4E0B;&#x8F7D;&#x3001;&#x8BF7;&#x6C42;&#x961F;&#x5217;&#x7BA1;&#x7406;&#x7B49;&#xFF0C;&#x4F7F;&#x7528;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x5C06;&#x7CBE;&#x529B;&#x66F4;&#x96C6;&#x4E2D;&#x4E8E;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x3002;</p>
<h2 id="&#x7F51;&#x7EDC;&#x5E93;"><a class="header-anchor" href="#&#x7F51;&#x7EDC;&#x5E93;"></a>&#x7F51;&#x7EDC;&#x5E93;</h2>
<ul>
<li><a href="https://github.com/yanzhenjie/NoHttp" target="_blank" rel="external">NoHttp</a>
<ul>
<li>github: <a href="https://github.com/yanzhenjie/NoHttp" target="_blank" rel="external">https://github.com/yanzhenjie/NoHttp</a></li>
<li>&#x6559;&#x7A0B;&#xFF1A; <a href="http://www.nohttp.net/" target="_blank" rel="external">http://www.nohttp.net/</a></li>
<li>&#x4F8B;&#x5B50;: <a href="http://blog.csdn.net/yanzhenjie1003/article/details/50679905" target="_blank" rel="external">http://blog.csdn.net/yanzhenjie1003/article/details/50679905</a></li>
</ul>
</li>
</ul>
<p>NoHttp&#x4E00;&#x4E2A;&#x6709;&#x60C5;&#x6000;&#x7684;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#xFF0C;&#x652F;&#x6301;&#x4E0E;RxJava&#x5B8C;&#x7F8E;&#x7ED3;&#x5408;&#x3001;&#x652F;&#x6301;&#x4E00;&#x53E5;&#x8BDD;&#x5207;&#x6362;&#x5E95;&#x5C42;OkHttp&#x3001;URLConnection&#xFF0C;&#x652F;&#x6301;&#x7F13;&#x5B58;&#x6570;&#x636E;&#x5230;DB&#x6216;&#x8005;SD&#x5361;&#xFF0C;&#x652F;&#x6301;Cookie&#x7684;&#x81EA;&#x52A8;&#x7EF4;&#x62A4;&#xFF0C;&#x5B8C;&#x7F8E;&#x652F;&#x6301;Restful&#x98CE;&#x683C;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x6BD4;Retrofit&#x66F4;&#x7B80;&#x5355;&#x6613;&#x7528;&#x3002;</p>
<ul>
<li><a href="https://github.com/square/okhttp" target="_blank" rel="external">OkHttp</a>
<ul>
<li>github: <a href="https://github.com/square/okhttp" target="_blank" rel="external">https://github.com/square/okhttp</a></li>
<li>&#x6559;&#x7A0B;&#xFF1A; <a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0106/2275.html" target="_blank" rel="external">http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0106/2275.html</a></li>
<li>&#x4F8B;&#x5B50;: <a href="http://forlan.iteye.com/blog/2256443" target="_blank" rel="external">http://forlan.iteye.com/blog/2256443</a></li>
</ul>
</li>
</ul>
<p>OkHttp&#x662F;&#x4E00;&#x6B3E;&#x4F18;&#x79C0;&#x7684;HTTP&#x6846;&#x67B6;&#xFF0C;&#x5B83;&#x652F;&#x6301;get&#x8BF7;&#x6C42;&#x548C;post&#x8BF7;&#x6C42;&#xFF0C;&#x652F;&#x6301;&#x57FA;&#x4E8E;Http&#x7684;&#x6587;&#x4EF6;&#x4E0A;&#x4F20;&#x548C;&#x4E0B;&#x8F7D;&#xFF0C;&#x652F;&#x6301;&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#xFF0C;&#x652F;&#x6301;&#x4E0B;&#x8F7D;&#x6587;&#x4EF6;&#xFF0C;&#x652F;&#x6301;GZIP&#x538B;&#x7F29;&#xFF0C;&#x652F;&#x6301;&#x54CD;&#x5E94;&#x7F13;&#x5B58;&#x907F;&#x514D;&#x91CD;&#x590D;&#x7684;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#xFF0C;&#x652F;&#x6301;&#x4F7F;&#x7528;&#x8FDE;&#x63A5;&#x6C60;&#x6765;&#x964D;&#x4F4E;&#x54CD;&#x5E94;&#x5EF6;&#x8FDF;&#x95EE;&#x9898;&#x3002;</p>
<ul>
<li><a href="https://github.com/AsyncHttpClient/async-http-client" target="_blank" rel="external">Async-Http-Client</a>
<ul>
<li>github: <a href="https://github.com/AsyncHttpClient/async-http-client" target="_blank" rel="external">https://github.com/AsyncHttpClient/async-http-client</a></li>
<li>&#x6559;&#x7A0B;&#xFF1A; <a href="http://loopj.com/android-async-http/" target="_blank" rel="external">http://loopj.com/android-async-http/</a></li>
<li>&#x4F8B;&#x5B50;: <a href="https://my.oschina.net/u/725054/blog/494494" target="_blank" rel="external">https://my.oschina.net/u/725054/blog/494494</a></li>
</ul>
</li>
</ul>
<p>The Async Http Client library&#x2019;s purpose is to allow Java applications to easily execute HTTP requests and asynchronously process the HTTP responses. The library also supports the WebSocket Protocol. The Async HTTP Client library is simple to use.</p>
<ul>
<li><a href="https://github.com/mcxiaoke/android-volley" target="_blank" rel="external">Volley</a>
<ul>
<li>github: <a href="https://github.com/mcxiaoke/android-volley" target="_blank" rel="external">https://github.com/mcxiaoke/android-volley</a></li>
<li>&#x6559;&#x7A0B;&#xFF1A; <a href="https://developer.android.com/training/volley/index.html" target="_blank" rel="external">https://developer.android.com/training/volley/index.html</a></li>
<li>&#x4F8B;&#x5B50;: <a href="http://blog.csdn.net/jjwwmlp456/article/details/41247223" target="_blank" rel="external">http://blog.csdn.net/jjwwmlp456/article/details/41247223</a></li>
</ul>
</li>
</ul>
<p>Volley&#x662F;&#x4E00;&#x4E2A;&#x7531;Google&#x5B98;&#x65B9;&#x63A8;&#x51FA;&#x7684;&#x7F51;&#x7EDC;&#x901A;&#x4FE1;&#x5E93;&#xFF0C;&#x5B83;&#x4F7F;&#x5F97;Android&#x8FDB;&#x884C;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x65F6;&#x66F4;&#x52A0;&#x65B9;&#x4FBF;&#x3001;&#x5FEB;&#x901F;&#x3001;&#x5065;&#x58EE;&#xFF0C;&#x540C;&#x65F6;&#x5BF9;&#x7F51;&#x7EDC;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x826F;&#x597D;&#x7684;&#x652F;&#x6301;&#x3002;</p>
<h2 id="&#x76F8;&#x5173;&#x6587;&#x7AE0;"><a class="header-anchor" href="#&#x76F8;&#x5173;&#x6587;&#x7AE0;"></a>&#x76F8;&#x5173;&#x6587;&#x7AE0;</h2>
<ul>
<li><a href="https://www.zhihu.com/question/41736156" target="_blank" rel="external">Nohttp&#x4E0E;Okhttp&#x7684;&#x533A;&#x522B;</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      本文主要收集笔者遇到的、学习使用过的网络管理开源库。这些第三方的开源库，为我们程序猿封装了http数据通信的各种底层处理，包括同步异步、多级缓存、数据转换、文件分段下载、请求队列管理等，使用我们能够将精力更集中于业务逻辑。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>响应式编程思想</title>
    <link href="http://ngudream.com/2016/10/17/response-programming-idea/"/>
    <id>http://ngudream.com/2016/10/17/response-programming-idea/</id>
    <published>2016-10-17T11:10:33.000Z</published>
    <updated>2017-01-15T07:58:44.452Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>&#x539F;&#x6587;&#x94FE;&#x63A5; : <a href="https://gist.github.com/staltz/868e7e9bc2a7b8c1f754" target="_blank" rel="external">The introduction to Reactive Programming you&#x2019;ve been missing</a><br>
&#x4F5C;&#x8005; : <a href="https://twitter.com/andrestaltz" target="_blank" rel="external">@andrestaltz</a><br>
&#x8BD1;&#x8005; : <a href="https://github.com/yaoqinwei" target="_blank" rel="external">yaoqinwei</a><br>
&#x6821;&#x5BF9;&#x8005;: <a href="https://github.com/bboyfeiyu" target="_blank" rel="external">bboyfeiyu</a>&#x3001;<a href="https://github.com/chaossss" target="_blank" rel="external">chaossss</a><br>
&#x72B6;&#x6001; : &#x5B8C;&#x6210;</p>
</blockquote>
<p>&#x76F8;&#x4FE1;&#x4F60;&#x4EEC;&#x5728;&#x5B66;&#x4E60;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x8FD9;&#x4E2A;&#x65B0;&#x6280;&#x672F;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x4F1A;&#x5145;&#x6EE1;&#x4E86;&#x597D;&#x5947;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x5B83;&#x7684;&#x4E00;&#x4E9B;&#x53D8;&#x4F53;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;Rx&#x7CFB;&#x5217;&#x3001;Bacon.js&#x3001;RAC&#x7B49;&#x7B49;&#x2026;&#x2026;</p>
<p>&#x5728;&#x7F3A;&#x4E4F;&#x4F18;&#x79C0;&#x8D44;&#x6599;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x5C06;&#x6EE1;&#x662F;&#x8346;&#x68D8;&#x3002;&#x8D77;&#x521D;&#xFF0C;&#x6211;&#x8BD5;&#x56FE;&#x5BFB;&#x627E;&#x4E00;&#x4E9B;&#x6559;&#x7A0B;&#xFF0C;&#x5374;&#x53EA;&#x627E;&#x5230;&#x5C11;&#x91CF;&#x7684;&#x5B9E;&#x8DF5;&#x6307;&#x5357;&#xFF0C;&#x800C;&#x4E14;&#x5B83;&#x4EEC;&#x8BB2;&#x7684;&#x90FD;&#x975E;&#x5E38;&#x6D45;&#x663E;&#xFF0C;&#x4ECE;&#x6765;&#x6CA1;&#x4EBA;&#x63A5;&#x53D7;&#x56F4;&#x7ED5;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x77E5;&#x8BC6;&#x4F53;&#x7CFB;&#x7684;&#x6311;&#x6218;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x901A;&#x5E38;&#x4E5F;&#x4E0D;&#x80FD;&#x5F88;&#x597D;&#x5730;&#x5E2E;&#x52A9;&#x4F60;&#x7406;&#x89E3;&#x67D0;&#x4E9B;&#x51FD;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x901A;&#x5E38;&#x770B;&#x8D77;&#x6765;&#x5F88;&#x7ED5;&#xFF0C;&#x4E0D;&#x4FE1;&#x8BF7;&#x770B;&#x8FD9;&#x91CC;&#xFF1A;</p>
<blockquote>
<p>Rx.Observable.prototype.flatMapLatest(selector, [thisArg])<br>
&#x6839;&#x636E;&#x5143;&#x7D20;&#x4E0B;&#x6807;&#xFF0C;&#x5C06;&#x53EF;&#x89C2;&#x5BDF;&#x5E8F;&#x5217;&#x4E2D;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x4E00;&#x4E00;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x53EF;&#x89C2;&#x5BDF;&#x5E8F;&#x5217;&#x5F53;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x2026;%&#x2026;&#x2026;&#x2026;&#x2026;%&amp;&#xFFE5;#@@&#x2026;&#x2026;&amp;**(&#x6655;&#x4E86;)</p>
</blockquote>
<p>&#x5929;&#x5450;&#xFF0C;&#x8FD9;&#x7B80;&#x76F4;&#x592A;&#x7ED5;&#x4E86;&#xFF01;</p>
<p>&#x6211;&#x8BFB;&#x8FC7;&#x4E24;&#x672C;&#x76F8;&#x5173;&#x7684;&#x4E66;&#xFF0C;&#x4E00;&#x672C;&#x53EA;&#x662F;&#x5728;&#x7ED9;&#x4F60;&#x63CF;&#x7ED8;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x4F1F;&#x5927;&#x666F;&#x8C61;&#xFF0C;&#x800C;&#x53E6;&#x4E00;&#x672C;&#x5374;&#x53EA;&#x662F;&#x6DF1;&#x5165;&#x5230;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x54CD;&#x5E94;&#x5F0F;&#x5E93;&#x800C;&#x5DF2;&#x3002;&#x6211;&#x5728;&#x4E0D;&#x65AD;&#x7684;&#x6784;&#x5EFA;&#x9879;&#x76EE;&#x8FC7;&#x7A0B;&#x4E2D;&#x628A;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x4E86;&#x89E3;&#x7684;&#x900F;&#x5F7B;&#x4E86;&#x4E00;&#x4E9B;&#xFF0C;&#x6700;&#x540E;&#x4EE5;&#x8FD9;&#x79CD;&#x8270;&#x96BE;&#x7684;&#x65B9;&#x5F0F;&#x5B66;&#x5B8C;&#x4E86;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x3002;&#x5728;&#x6211;&#x5DE5;&#x4F5C;&#x516C;&#x53F8;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x9645;&#x9879;&#x76EE;&#x4E2D;&#x6211;&#x4F1A;&#x7528;&#x5230;&#x5B83;&#xFF0C;&#x5F53;&#x6211;&#x9047;&#x5230;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x540C;&#x4E8B;&#x7684;&#x652F;&#x6301;&#x3002;</p>
<p>&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x4E2D;&#x6700;&#x96BE;&#x7684;&#x90E8;&#x5206;&#x662F;&#x5982;&#x4F55;&#x4EE5;&#x54CD;&#x5E94;&#x5F0F;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x601D;&#x8003;&#xFF0C;&#x66F4;&#x591A;&#x7684;&#x610F;&#x5473;&#x7740;&#x8981;&#x6452;&#x5F03;&#x90A3;&#x4E9B;&#x8001;&#x65E7;&#x7684;&#x547D;&#x4EE4;&#x5F0F;&#x548C;&#x72B6;&#x6001;&#x5F0F;&#x7684;&#x5178;&#x578B;&#x7F16;&#x7A0B;&#x4E60;&#x60EF;&#xFF0C;&#x5E76;&#x4E14;&#x5F3A;&#x8FEB;&#x81EA;&#x5DF1;&#x7684;&#x5927;&#x8111;&#x4EE5;&#x4E0D;&#x540C;&#x7684;&#x8303;&#x5F0F;&#x6765;&#x8FD0;&#x4F5C;&#x3002;&#x6211;&#x8FD8;&#x6CA1;&#x6709;&#x5728;&#x7F51;&#x7EDC;&#x4E0A;&#x627E;&#x5230;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x6559;&#x7A0B;&#x662F;&#x4ECE;&#x8FD9;&#x4E2A;&#x5C42;&#x9762;&#x6765;&#x5256;&#x6790;&#x7684;&#xFF0C;&#x6211;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x4E16;&#x754C;&#x975E;&#x5E38;&#x503C;&#x5F97;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x4F18;&#x79C0;&#x7684;&#x5B9E;&#x8DF5;&#x6559;&#x7A0B;&#x6765;&#x6559;&#x4F60;&#x5982;&#x4F55;&#x4EE5;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x601D;&#x8003;&#xFF0C;&#x65B9;&#x4FBF;&#x5F15;&#x5BFC;&#x4F60;&#x5F00;&#x59CB;&#x5B66;&#x4E60;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x3002;&#x7136;&#x540E;&#x770B;&#x5404;&#x79CD;&#x5E93;&#x6587;&#x6863;&#x624D;&#x53EF;&#x4EE5;&#x7ED9;&#x4F60;&#x66F4;&#x591A;&#x7684;&#x6307;&#x5F15;&#x3002;&#x5E0C;&#x671B;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x80FD;&#x591F;&#x5E2E;&#x52A9;&#x4F60;&#x5FEB;&#x901F;&#x5730;&#x8FDB;&#x5165;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x4E16;&#x754C;&#x3002;</p>
<h2 id="&#x4EC0;&#x662F;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;"><a class="header-anchor" href="#&#x4EC0;&#x662F;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;"></a>&#x201C;&#x4EC0;&#x662F;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;?&#x201D;</h2>
<p>&#x7F51;&#x7EDC;&#x4E0A;&#x6709;&#x4E00;&#x5927;&#x5806;&#x7CDF;&#x7CD5;&#x7684;&#x89E3;&#x91CA;&#x548C;&#x5B9A;&#x4E49;&#xFF0C;&#x5982;<a href="https://en.wikipedia.org/wiki/Reactive_programming" target="_blank" rel="external">Wikipedia</a>&#x4E0A;&#x901A;&#x5E38;&#x90FD;&#x662F;&#x4E9B;&#x975E;&#x5E38;&#x7B3C;&#x7EDF;&#x548C;&#x7406;&#x8BBA;&#x6027;&#x7684;&#x89E3;&#x91CA;&#xFF0C;&#x800C;<a href="http://stackoverflow.com/questions/1028250/what-is-functional-reactive-programming" target="_blank" rel="external">Stackoverflow</a>&#x4E0A;&#x7684;&#x4E00;&#x4E9B;&#x89C4;&#x8303;&#x7684;&#x56DE;&#x7B54;&#x663E;&#x7136;&#x4E5F;&#x4E0D;&#x9002;&#x5408;&#x65B0;&#x624B;&#x6765;&#x53C2;&#x8003;&#xFF0C;<a href="http://www.reactivemanifesto.org/" target="_blank" rel="external">Reactive Manifesto</a>&#x770B;&#x8D77;&#x6765;&#x4E5F;&#x53EA;&#x50CF;&#x662F;&#x62FF;&#x7ED9;&#x4F60;&#x7684;PM&#x6216;&#x8005;&#x8001;&#x677F;&#x770B;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x5FAE;&#x8F6F;&#x7684;<a href="https://rx.codeplex.com/" target="_blank" rel="external">Rx&#x672F;&#x8BED;</a>&quot;Rx = Observables + LINQ + Schedulers&quot; &#x4E5F;&#x663E;&#x5F97;&#x592A;&#x8FC7;&#x6C89;&#x91CD;&#xFF0C;&#x800C;&#x4E14;&#x5145;&#x6EE1;&#x4E86;&#x592A;&#x591A;&#x5FAE;&#x8F6F;&#x5F0F;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x53CD;&#x800C;&#x7ED9;&#x6211;&#x4EEC;&#x5E26;&#x6765;&#x66F4;&#x591A;&#x7591;&#x60D1;&#x3002;&#x76F8;&#x5BF9;&#x4E8E;&#x4F60;&#x4F7F;&#x7528;&#x7684;MV*&#x6846;&#x67B6;&#x4EE5;&#x53CA;&#x4F60;&#x949F;&#x7231;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#xFF0C;&#x201C;Reactive&#x201D; &#x548C;&quot;Propagation of change&quot;&#x8FD9;&#x6837;&#x7684;&#x672F;&#x8BED;&#x5E76;&#x6CA1;&#x6709;&#x4F20;&#x8FBE;&#x4EFB;&#x4F55;&#x6709;&#x610F;&#x4E49;&#x7684;&#x6982;&#x5FF5;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x6211;&#x7684;view&#x6846;&#x67B6;&#x80FD;&#x591F;&#x4ECE;model&#x505A;&#x51FA;&#x53CD;&#x5E94;&#xFF0C;&#x6211;&#x7684;&#x6539;&#x53D8;&#x5F53;&#x7136;&#x4E5F;&#x4F1A;&#x4F20;&#x64AD;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x8FD9;&#x4E9B;&#xFF0C;&#x6211;&#x7684;&#x754C;&#x9762;&#x6839;&#x672C;&#x5C31;&#x6CA1;&#x6709;&#x4E1C;&#x897F;&#x53EF;&#x6E32;&#x67D3;&#x3002;</p>
<p>&#x6240;&#x4EE5;&#xFF0C;&#x4E0D;&#x8981;&#x518D;&#x626F;&#x8FD9;&#x4E9B;&#x5E9F;&#x8BDD;&#x4E86;&#x3002;</p>
<p>&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x5C31;&#x662F;&#x4E0E;&#x5F02;&#x6B65;&#x6570;&#x636E;&#x6D41;&#x4EA4;&#x4E92;&#x7684;&#x7F16;&#x7A0B;&#x8303;&#x5F0F;</p>
<p>&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x8FD9;&#x5DF2;&#x7ECF;&#x4E0D;&#x662F;&#x4EC0;&#x4E48;&#x65B0;&#x4E8B;&#x7269;&#x4E86;&#x3002;&#x4E8B;&#x4EF6;&#x603B;&#x7EBF;(Event Buses)&#x6216;&#x4E00;&#x4E9B;&#x5178;&#x578B;&#x7684;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x4E8B;&#x4EF6;&#x6D41;(asynchronous event stream)&#xFF0C;&#x8FD9;&#x6837;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x89C2;&#x5BDF;&#x5B83;&#x7684;&#x53D8;&#x5316;&#x5E76;&#x4F7F;&#x5176;&#x505A;&#x51FA;&#x4E00;&#x4E9B;&#x53CD;&#x5E94;(do some side effects)&#x3002;&#x54CD;&#x5E94;&#x5F0F;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x601D;&#x8DEF;&#xFF1A;&#x9664;&#x4E86;&#x70B9;&#x51FB;&#x548C;&#x60AC;&#x505C;(hover)&#x7684;&#x4E8B;&#x4EF6;&#x5916;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x7ED9;&#x4EFB;&#x4F55;&#x4E8B;&#x7269;&#x521B;&#x5EFA;&#x6570;&#x636E;&#x6D41;&#x3002;&#x6570;&#x636E;&#x6D41;&#x65E0;&#x5904;&#x4E0D;&#x5728;&#xFF0C;&#x4EFB;&#x4F55;&#x4E1C;&#x897F;&#x90FD;&#x53EF;&#x4EE5;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x4F8B;&#x5982;&#x53D8;&#x91CF;&#x3001;&#x7528;&#x6237;&#x8F93;&#x5165;&#x3001;&#x5C5E;&#x6027;&#x3001;&#x7F13;&#x5B58;&#x3001;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7B49;&#x7B49;&#x3002;&#x4E3E;&#x4E2A;&#x6817;&#x5B50;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x4F60;&#x7684;&#x5FAE;&#x535A;&#x8BA2;&#x9605;&#x529F;&#x80FD;&#x60F3;&#x8C61;&#x6210;&#x8DDF;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x4E00;&#x6837;&#x7684;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x76D1;&#x542C;&#x8FD9;&#x6837;&#x7684;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x5E76;&#x505A;&#x51FA;&#x76F8;&#x5E94;&#x7684;&#x53CD;&#x5E94;&#x3002;</p>
<p>&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x4F60;&#x4F1A;&#x62E5;&#x6709;&#x4E00;&#x4E9B;&#x4EE4;&#x4EBA;&#x60CA;&#x8273;&#x7684;&#x51FD;&#x6570;&#x53BB;&#x7ED3;&#x5408;&#x3001;&#x521B;&#x5EFA;&#x548C;&#x8FC7;&#x6EE4;&#x4EFB;&#x4F55;&#x4E00;&#x7EC4;&#x6570;&#x636E;&#x6D41;&#x3002; &#x8FD9;&#x5C31;&#x662F;&quot;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&quot;&#x7684;&#x9B54;&#x529B;&#x6240;&#x5728;&#x3002;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x53E6;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x751A;&#x81F3;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x4E5F;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x53E6;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x7684;&#x8F93;&#x5165;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FC7;&#x6EE4;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x5F97;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x53EA;&#x5305;&#x542B;&#x4F60;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x4E8B;&#x4EF6;&#x7684;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x6620;&#x5C04;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x7684;&#x503C;&#x5230;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6570;&#x636E;&#x6D41;&#x91CC;&#x3002;</p>
<p>&#x6570;&#x636E;&#x6D41;&#x662F;&#x6574;&#x4E2A;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x4F53;&#x7CFB;&#x4E2D;&#x7684;&#x6838;&#x5FC3;&#xFF0C;&#x8981;&#x60F3;&#x5B66;&#x4E60;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#xFF0C;&#x5F53;&#x7136;&#x8981;&#x5148;&#x8D70;&#x8FDB;&#x6570;&#x636E;&#x6D41;&#x4E00;&#x63A2;&#x7A76;&#x7ADF;&#x4E86;&#x3002;&#x90A3;&#x73B0;&#x5728;&#x5C31;&#x8BA9;&#x6211;&#x4EEC;&#x5148;&#x4ECE;&#x719F;&#x6089;&#x7684;&quot;&#x70B9;&#x51FB;&#x4E00;&#x4E2A;&#x6309;&#x94AE;&quot;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x5F00;&#x59CB;</p>
<div align="center">
<img data-original="/2016/10/17/response-programming-idea/event-flow.jpg" class="lazy">
</div>
<p>&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x662F;&#x4E00;&#x4E2A;&#x6309;&#x65F6;&#x95F4;&#x6392;&#x5E8F;&#x7684;&#x5373;&#x5C06;&#x53D1;&#x751F;&#x7684;&#x4E8B;&#x4EF6;(Ongoing events ordered in time)&#x7684;&#x5E8F;&#x5217;&#x3002;&#x5982;&#x4E0A;&#x56FE;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x53D1;&#x51FA;3&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x4E8B;&#x4EF6;(&#x4E0A;&#x4E00;&#x53E5;&#x5DF2;&#x7ECF;&#x628A;&#x5B83;&#x4EEC;&#x53EB;&#x505A;&#x4E8B;&#x4EF6;)&#xFF1A;&#x4E00;&#x4E2A;&#x67D0;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x4E8B;&#x4EF6;&#x548C;&#x4E00;&#x4E2A;&#x5B8C;&#x6210;&#x4E8B;&#x4EF6;&#x3002;&#x5F53;&#x4E00;&#x4E2A;&#x5B8C;&#x6210;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x4F1A;&#x505A;&#x8FD9;&#x6837;&#x7684;&#x64CD;&#x4F5C;&#xFF1A;&#x5173;&#x95ED;&#x5305;&#x542B;&#x90A3;&#x4E2A;&#x6309;&#x94AE;&#x7684;&#x7A97;&#x53E3;&#x6216;&#x8005;&#x89C6;&#x56FE;&#x7EC4;&#x4EF6;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x53EA;&#x80FD;&#x5F02;&#x6B65;&#x6355;&#x6349;&#x88AB;&#x53D1;&#x51FA;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x4F7F;&#x5F97;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;&#x503C;&#x4E8B;&#x4EF6;&#x65F6;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x53D1;&#x51FA;&#x9519;&#x8BEF;&#x4E8B;&#x4EF6;&#x65F6;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x53D1;&#x51FA;&#x5B8C;&#x6210;&#x4E8B;&#x4EF6;&#x65F6;&#x6267;&#x884C;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x3002;&#x6709;&#x65F6;&#x5019;&#x4F60;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x540E;&#x4E24;&#x4E2A;&#x4E8B;&#x4EF6;&#xFF0C;&#x53EA;&#x9700;&#x805A;&#x7126;&#x4E8E;&#x5982;&#x4F55;&#x5B9A;&#x4E49;&#x548C;&#x8BBE;&#x8BA1;&#x5728;&#x53D1;&#x51FA;&#x503C;&#x4E8B;&#x4EF6;&#x65F6;&#x8981;&#x6267;&#x884C;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x76D1;&#x542C;&#x8FD9;&#x4E2A;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x8FC7;&#x7A0B;&#x53EB;&#x505A;&#x8BA2;&#x9605;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x7684;&#x51FD;&#x6570;&#x53EB;&#x505A;&#x89C2;&#x5BDF;&#x8005;&#xFF0C;&#x800C;&#x4E8B;&#x4EF6;&#x6D41;&#x5C31;&#x53EF;&#x4EE5;&#x53EB;&#x505A;&#x88AB;&#x89C2;&#x5BDF;&#x7684;&#x4E3B;&#x9898;(&#x6216;&#x8005;&#x53EB;&#x88AB;&#x89C2;&#x5BDF;&#x8005;)&#x3002;&#x4F60;&#x5E94;&#x8BE5;&#x5BDF;&#x89C9;&#x5230;&#x4E86;&#xFF0C;&#x5BF9;&#x7684;&#xFF0C;&#x5B83;&#x5C31;&#x662F;<a href="https://en.wikipedia.org/wiki/Observer_pattern" target="_blank" rel="external">&#x89C2;&#x5BDF;&#x8005;&#x6A21;&#x5F0F;</a>&#x3002;</p>
<p>&#x4E0A;&#x9762;&#x7684;&#x793A;&#x610F;&#x56FE;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;ASCII&#x7801;&#x7684;&#x5F62;&#x5F0F;&#x91CD;&#x65B0;&#x753B;&#x4E00;&#x904D;&#xFF0C;&#x8BF7;&#x6CE8;&#x610F;&#xFF0C;&#x4E0B;&#x9762;&#x7684;&#x90E8;&#x5206;&#x6559;&#x7A0B;&#x4E2D;&#x6211;&#x4EEC;&#x4F1A;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;&#x8FD9;&#x5E45;&#x56FE;&#xFF1A;</p>
<pre><code>--a---b-c---d---X---|-&gt;

a, b, c, d &#x662F;&#x503C;&#x4E8B;&#x4EF6;
X &#x662F;&#x9519;&#x8BEF;&#x4E8B;&#x4EF6;
| &#x662F;&#x5B8C;&#x6210;&#x4E8B;&#x4EF6;
---&gt; &#x662F;&#x65F6;&#x95F4;&#x7EBF;(&#x8F74;)
</code></pre>
<p>&#x73B0;&#x5728;&#x4F60;&#x5BF9;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x4E8B;&#x4EF6;&#x6D41;&#x5E94;&#x8BE5;&#x975E;&#x5E38;&#x719F;&#x6089;&#x4E86;&#xFF0C;&#x4E3A;&#x4E86;&#x4E0D;&#x8BA9;&#x4F60;&#x611F;&#x5230;&#x65E0;&#x804A;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x505A;&#x4E00;&#x4E9B;&#x65B0;&#x7684;&#x5C1D;&#x8BD5;&#x5427;&#xFF1A;&#x6211;&#x4EEC;&#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7531;&#x539F;&#x59CB;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x6D41;&#x6F14;&#x53D8;&#x800C;&#x6765;&#x7684;&#x4E00;&#x79CD;&#x65B0;&#x7684;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x6D41;&#x3002;</p>
<p>&#x9996;&#x5148;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8BB0;&#x5F55;&#x6309;&#x94AE;&#x70B9;&#x51FB;&#x6B21;&#x6570;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x3002;&#x5728;&#x5E38;&#x7528;&#x7684;&#x54CD;&#x5E94;&#x5F0F;&#x5E93;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x4E8B;&#x4EF6;&#x6D41;&#x90FD;&#x4F1A;&#x9644;&#x6709;&#x4E00;&#x4E9B;&#x51FD;&#x6570;&#xFF0C;&#x4F8B;&#x5982;map,filter,scan&#x7B49;&#xFF0C;&#x5F53;&#x4F60;&#x8C03;&#x7528;&#x8FD9;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x6BD4;&#x5982;clickStream.map(f)&#xFF0C;&#x5B83;&#x4F1A;&#x8FD4;&#x56DE;&#x57FA;&#x4E8E;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x4E00;&#x4E2A;&#x65B0;&#x4E8B;&#x4EF6;&#x6D41;&#x3002;&#x5B83;&#x4E0D;&#x4F1A;&#x5BF9;&#x539F;&#x6765;&#x7684;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x6D41;&#x505A;&#x4EFB;&#x4F55;&#x7684;&#x4FEE;&#x6539;&#x3002;&#x8FD9;&#x79CD;&#x7279;&#x6027;&#x53EB;&#x505A;&#x4E0D;&#x53EF;&#x53D8;&#x6027;(immutability)&#xFF0C;&#x800C;&#x4E14;&#x5B83;&#x53EF;&#x4EE5;&#x548C;&#x54CD;&#x5E94;&#x5F0F;&#x4E8B;&#x4EF6;&#x6D41;&#x642D;&#x914D;&#x5728;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#xFF0C;&#x5C31;&#x50CF;&#x8C46;&#x6D46;&#x548C;&#x6CB9;&#x6761;&#x4E00;&#x6837;&#x5B8C;&#x7F8E;&#x7684;&#x642D;&#x914D;&#x3002;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;&#x94FE;&#x5F0F;&#x51FD;&#x6570;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x8C03;&#x7528;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;clickStream.map(f).scan(g):</p>
<pre><code>clickStream: ---c----c--c----c------c--&gt;
               vvvvv map(c becomes 1) vvvv
               ---1----1--1----1------1--&gt;
               vvvvvvvvv scan(+) vvvvvvvvv
counterStream: ---1----2--3----4------5--&gt;
</code></pre>
<p>map(f)&#x51FD;&#x6570;&#x4F1A;&#x6839;&#x636E;&#x4F60;&#x63D0;&#x4F9B;&#x7684;f&#x51FD;&#x6570;&#x628A;&#x539F;&#x4E8B;&#x4EF6;&#x6D41;&#x4E2D;&#x6BCF;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x503C;&#x5206;&#x522B;&#x6620;&#x5C04;&#x5230;&#x65B0;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x4E2D;&#x3002;&#x5728;&#x4E0A;&#x56FE;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x628A;&#x6BCF;&#x4E00;&#x6B21;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x90FD;&#x6620;&#x5C04;&#x6210;&#x6570;&#x5B57;1&#xFF0C;scan(g)&#x51FD;&#x6570;&#x5219;&#x628A;&#x4E4B;&#x524D;&#x6620;&#x5C04;&#x7684;&#x503C;&#x805A;&#x96C6;&#x8D77;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x6839;&#x636E;x = g(accumulated, current)&#x7B97;&#x6CD5;&#x6765;&#x4F5C;&#x76F8;&#x5E94;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x800C;&#x672C;&#x4F8B;&#x7684;g&#x51FD;&#x6570;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x7B80;&#x5355;&#x7684;&#x52A0;&#x6CD5;&#x51FD;&#x6570;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x5F53;&#x4E00;&#x4E2A;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x65F6;&#xFF0C;counterStream&#x51FD;&#x6570;&#x5219;&#x4E0A;&#x62A5;&#x5F53;&#x524D;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x603B;&#x6570;&#x3002;</p>
<p>&#x4E3A;&#x4E86;&#x5C55;&#x793A;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x771F;&#x6B63;&#x7684;&#x9B45;&#x529B;&#xFF0C;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x4F60;&#x6709;&#x4E00;&#x4E2A;&quot;&#x53CC;&#x51FB;&quot;&#x4E8B;&#x4EF6;&#x6D41;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;&#x5B83;&#x66F4;&#x6709;&#x8DA3;&#xFF0C;&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x8FD9;&#x4E2A;&#x4E8B;&#x4EF6;&#x6D41;&#x540C;&#x65F6;&#x5904;&#x7406;&quot;&#x4E09;&#x6B21;&#x70B9;&#x51FB;&quot;&#x6216;&#x8005;&quot;&#x591A;&#x6B21;&#x70B9;&#x51FB;&quot;&#x4E8B;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x6DF1;&#x5438;&#x4E00;&#x53E3;&#x6C14;&#x60F3;&#x60F3;&#x5982;&#x4F55;&#x7528;&#x4F20;&#x7EDF;&#x7684;&#x547D;&#x4EE4;&#x5F0F;&#x548C;&#x72B6;&#x6001;&#x5F0F;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5904;&#x7406;&#xFF0C;&#x6211;&#x6562;&#x6253;&#x8D4C;&#xFF0C;&#x8FD9;&#x4E48;&#x505A;&#x4F1A;&#x76F8;&#x5F53;&#x7684;&#x8BA8;&#x538C;&#xFF0C;&#x5176;&#x4E2D;&#x8FD8;&#x8981;&#x6D89;&#x53CA;&#x5230;&#x4E00;&#x4E9B;&#x53D8;&#x91CF;&#x6765;&#x4FDD;&#x5B58;&#x72B6;&#x6001;&#xFF0C;&#x5E76;&#x4E14;&#x8FD8;&#x5F97;&#x505A;&#x4E00;&#x4E9B;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x7684;&#x8C03;&#x6574;&#x3002;</p>
<p>&#x800C;&#x7528;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x65B9;&#x5F0F;&#x5904;&#x7406;&#x4F1A;&#x975E;&#x5E38;&#x7684;&#x7B80;&#x6D01;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x903B;&#x8F91;&#x5904;&#x7406;&#x90E8;&#x5206;&#x53EA;&#x9700;&#x8981;<a href="http://jsfiddle.net/staltz/4gGgs/27/" target="_blank" rel="external">&#x56DB;&#x884C;&#x4EE3;&#x7801;</a>&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x524D;&#x9636;&#x6BB5;&#x8BA9;&#x6211;&#x4EEC;&#x73B0;&#x5FFD;&#x7565;&#x4EE3;&#x7801;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x65E0;&#x8BBA;&#x4F60;&#x662F;&#x65B0;&#x624B;&#x8FD8;&#x662F;&#x4E13;&#x5BB6;&#xFF0C;&#x770B;&#x7740;&#x56FE;&#x8868;&#x601D;&#x8003;&#x6765;&#x7406;&#x89E3;&#x548C;&#x5EFA;&#x7ACB;&#x4E8B;&#x4EF6;&#x6D41;&#x5C06;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x68D2;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p>
<div align="center">
<img data-original="/2016/10/17/response-programming-idea/click-stream.jpg" class="lazy">
</div>
<p>&#x56FE;&#x4E2D;&#xFF0C;&#x7070;&#x8272;&#x76D2;&#x5B50;&#x8868;&#x793A;&#x5C06;&#x4E0A;&#x9762;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x8F6C;&#x6362;&#x4E0B;&#x9762;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x51FD;&#x6570;&#x8FC7;&#x7A0B;&#xFF0C;&#x9996;&#x5148;&#x6839;&#x636E;250&#x6BEB;&#x79D2;&#x7684;&#x95F4;&#x9694;&#x65F6;&#x95F4;(event silence, &#x8BD1;&#x8005;&#x6CE8;&#xFF1A;&#x65E0;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x7684;&#x65F6;&#x95F4;&#x6BB5;&#xFF0C;&#x4E0A;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x7684;&#x95F4;&#x9694;&#x65F6;&#x95F4;)&#x628A;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x6D41;&#x4E00;&#x6BB5;&#x4E00;&#x9694;&#x5F00;&#xFF0C;&#x518D;&#x5C06;&#x6BCF;&#x4E00;&#x6BB5;&#x7684;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x6DFB;&#x52A0;&#x5230;&#x5217;&#x8868;&#x4E2D;(&#x8FD9;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF1A;buffer(stream.throttle(250ms))&#x6240;&#x505A;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x5F53;&#x524D;&#x6211;&#x4EEC;&#x5148;&#x4E0D;&#x8981;&#x6025;&#x7740;&#x53BB;&#x7406;&#x89E3;&#x7EC6;&#x8282;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x4E13;&#x6CE8;&#x54CD;&#x5E94;&#x5F0F;&#x7684;&#x90E8;&#x5206;&#x5148;)&#x3002;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5F97;&#x5230;&#x7684;&#x662F;&#x591A;&#x4E2A;&#x542B;&#x6709;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E86;map()&#x4E2D;&#x7684;&#x51FD;&#x6570;&#x6765;&#x7B97;&#x51FA;&#x6BCF;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#x957F;&#x5EA6;&#x7684;&#x6574;&#x6570;&#x6570;&#x503C;&#x6620;&#x5C04;&#x5230;&#x4E0B;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x6D41;&#x5F53;&#x4E2D;&#x3002;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E86;&#x8FC7;&#x6EE4;filter(x &gt;= 2)&#x51FD;&#x6570;&#x5FFD;&#x7565;&#x6389;&#x4E86;&#x5C0F;&#x4E8E;1&#x7684;&#x6574;&#x6570;&#x3002;&#x5C31;&#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x7528;&#x4E86;3&#x6B65;&#x64CD;&#x4F5C;&#x751F;&#x6210;&#x4E86;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x8BA2;&#x9605;(&#x201C;&#x76D1;&#x542C;&#x201D;)&#x8FD9;&#x4E2A;&#x4E8B;&#x4EF6;&#x5E76;&#x4F5C;&#x51FA;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x7684;&#x64CD;&#x4F5C;&#x4E86;&#x3002;</p>
<p>&#x6211;&#x5E0C;&#x671B;&#x4F60;&#x80FD;&#x611F;&#x53D7;&#x5230;&#x8FD9;&#x4E2A;&#x793A;&#x4F8B;&#x7684;&#x4F18;&#x96C5;&#x4E4B;&#x5904;&#x3002;&#x5F53;&#x7136;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x793A;&#x4F8B;&#x4E5F;&#x53EA;&#x662F;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x9B54;&#x529B;&#x7684;&#x51B0;&#x5C71;&#x4E00;&#x89D2;&#x800C;&#x5DF2;&#xFF0C;&#x4F60;&#x540C;&#x6837;&#x53EF;&#x4EE5;&#x5C06;&#x8FD9;3&#x6B65;&#x64CD;&#x4F5C;&#x5E94;&#x7528;&#x5230;&#x4E0D;&#x540C;&#x79CD;&#x7C7B;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x4E2D;&#x53BB;&#xFF0C;&#x4F8B;&#x5982;&#xFF0C;&#x4E00;&#x4E32;API&#x54CD;&#x5E94;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x3002;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x4F60;&#x8FD8;&#x6709;&#x975E;&#x5E38;&#x591A;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x3002;</p>
<h2 id="&#x6211;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x91C7;&#x7528;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#xFF1F;"><a class="header-anchor" href="#&#x6211;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x91C7;&#x7528;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#xFF1F;"></a>&#x201C;&#x6211;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x91C7;&#x7528;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#xFF1F;&#x201D;</h2>
<p>&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x53EF;&#x4EE5;&#x52A0;&#x6DF1;&#x4F60;&#x4EE3;&#x7801;&#x62BD;&#x8C61;&#x7684;&#x7A0B;&#x5EA6;&#xFF0C;&#x8BA9;&#x4F60;&#x53EF;&#x4EE5;&#x66F4;&#x4E13;&#x6CE8;&#x4E8E;&#x5B9A;&#x4E49;&#x4E0E;&#x4E8B;&#x4EF6;&#x76F8;&#x4E92;&#x4F9D;&#x8D56;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x628A;&#x5927;&#x91CF;&#x7CBE;&#x529B;&#x653E;&#x5728;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x4E0A;&#xFF0C;&#x540C;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x8FD8;&#x80FD;&#x8BA9;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x3002;</p>
<p>&#x7279;&#x522B;&#x5BF9;&#x4E8E;&#x73B0;&#x5728;&#x6D41;&#x884C;&#x7684;webapps&#x548C;mobile apps&#xFF0C;&#x5B83;&#x4EEC;&#x7684; UI &#x4E8B;&#x4EF6;&#x4E0E;&#x6570;&#x636E;&#x9891;&#x7E41;&#x5730;&#x4EA7;&#x751F;&#x4EA4;&#x4E92;&#xFF0C;&#x5728;&#x5F00;&#x53D1;&#x8FD9;&#x4E9B;&#x5E94;&#x7528;&#x65F6;&#x4F7F;&#x7528;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x4F18;&#x70B9;&#x5C06;&#x66F4;&#x52A0;&#x660E;&#x663E;&#x3002;&#x5341;&#x5E74;&#x524D;&#xFF0C;web&#x9875;&#x9762;&#x7684;&#x4EA4;&#x4E92;&#x662F;&#x901A;&#x8FC7;&#x63D0;&#x4EA4;&#x4E00;&#x4E2A;&#x5F88;&#x957F;&#x7684;&#x8868;&#x5355;&#x6570;&#x636E;&#x5230;&#x540E;&#x7AEF;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x505A;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x7684;&#x524D;&#x7AEF;&#x6E32;&#x67D3;&#x64CD;&#x4F5C;&#x3002;&#x800C;&#x73B0;&#x5728;&#x7684;Apps&#x5219;&#x6F14;&#x53D8;&#x7684;&#x66F4;&#x5177;&#x6709;&#x5B9E;&#x65F6;&#x6027;&#xFF1A;&#x4EC5;&#x4EC5;&#x4FEE;&#x6539;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x8868;&#x5355;&#x57DF;&#x5C31;&#x80FD;&#x81EA;&#x52A8;&#x7684;&#x89E6;&#x53D1;&#x4FDD;&#x5B58;&#x5230;&#x540E;&#x7AEF;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5C31;&#x50CF;&#x67D0;&#x4E2A;&#x7528;&#x6237;&#x5BF9;&#x4E00;&#x4E9B;&#x5185;&#x5BB9;&#x70B9;&#x4E86;&#x8D5E;&#xFF0C;&#x5C31;&#x80FD;&#x591F;&#x5B9E;&#x65F6;&#x53CD;&#x6620;&#x5230;&#x5176;&#x4ED6;&#x5DF2;&#x8FDE;&#x63A5;&#x7684;&#x7528;&#x6237;&#x4E00;&#x6837;&#xFF0C;&#x7B49;&#x7B49;&#x3002;</p>
<p>&#x5F53;&#x4ECA;&#x7684;Apps&#x90FD;&#x542B;&#x6709;&#x4E30;&#x5BCC;&#x7684;&#x5B9E;&#x65F6;&#x4E8B;&#x4EF6;&#x6765;&#x4FDD;&#x8BC1;&#x4E00;&#x4E2A;&#x9AD8;&#x6548;&#x7684;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x9700;&#x8981;&#x91C7;&#x7528;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;&#x5DE5;&#x5177;&#x6765;&#x5904;&#x7406;&#xFF0C;&#x90A3;&#x4E48;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x5C31;&#x6B63;&#x597D;&#x662F;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x7684;&#x7B54;&#x6848;&#x3002;</p>
<h2 id="&#x4EE5;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x65B9;&#x5F0F;&#x601D;&#x8003;&#x7684;&#x4F8B;&#x5B50;"><a class="header-anchor" href="#&#x4EE5;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x65B9;&#x5F0F;&#x601D;&#x8003;&#x7684;&#x4F8B;&#x5B50;"></a>&#x4EE5;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x65B9;&#x5F0F;&#x601D;&#x8003;&#x7684;&#x4F8B;&#x5B50;</h2>
<p>&#x8BA9;&#x6211;&#x4EEC;&#x6DF1;&#x5165;&#x5230;&#x4E00;&#x4E9B;&#x771F;&#x5B9E;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x4E00;&#x4E2A;&#x80FD;&#x591F;&#x4E00;&#x6B65;&#x4E00;&#x6B65;&#x6559;&#x4F60;&#x5982;&#x4F55;&#x4EE5;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x65B9;&#x5F0F;&#x601D;&#x8003;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x6CA1;&#x6709;&#x865A;&#x6784;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x6CA1;&#x6709;&#x4E00;&#x77E5;&#x534A;&#x89E3;&#x7684;&#x6982;&#x5FF5;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x6559;&#x7A0B;&#x7684;&#x672B;&#x5C3E;&#x6211;&#x4EEC;&#x5C06;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x771F;&#x5B9E;&#x7684;&#x51FD;&#x6570;&#x4EE3;&#x7801;&#xFF0C;&#x5E76;&#x80FD;&#x591F;&#x77E5;&#x6653;&#x6BCF;&#x4E00;&#x6B65;&#x4E3A;&#x4EC0;&#x4E48;&#x90A3;&#x6837;&#x505A;&#x7684;&#x539F;&#x56E0;(&#x77E5;&#x5176;&#x7136;&#xFF0C;&#x77E5;&#x5176;&#x6240;&#x4EE5;&#x7136;)&#x3002;</p>
<p>&#x6211;&#x9009;&#x4E86;JavaScript&#x548C;<a href="https://github.com/Reactive-Extensions/RxJS" target="_blank" rel="external">RxJS</a>&#x6765;&#x4F5C;&#x4E3A;&#x672C;&#x6559;&#x7A0B;&#x7684;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#xFF0C;&#x539F;&#x56E0;&#x662F;&#xFF1A;JavaScript&#x662F;&#x76EE;&#x524D;&#x6700;&#x591A;&#x4EBA;&#x719F;&#x6089;&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x800C;Rx&#x7CFB;&#x5217;&#x7684;&#x5E93;&#x5BF9;&#x4E8E;&#x5F88;&#x591A;&#x8BED;&#x8A00;&#x548C;&#x5E73;&#x53F0;&#x7684;&#x8FD0;&#x7528;&#x662F;&#x975E;&#x5E38;&#x5E7F;&#x6CDB;&#x7684;&#xFF0C;&#x4F8B;&#x5982;(<a href="https://rx.codeplex.com/" target="_blank" rel="external">.NET</a>, <a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">Java</a>, <a href="https://github.com/ReactiveX/RxJava/tree/master/language-adaptors/rxjava-scala" target="_blank" rel="external">Scala</a>, <a href="https://github.com/ReactiveX/RxJava/tree/master/language-adaptors/rxjava-clojure" target="_blank" rel="external">Clojure</a>, <a href="https://github.com/Reactive-Extensions/RxJS" target="_blank" rel="external">JavaScript</a>, <a href="https://github.com/ReactiveX/RxRuby" target="_blank" rel="external">Ruby</a>, <a href="https://github.com/Reactive-Extensions/RxPy" target="_blank" rel="external">Python</a>, <a href="https://github.com/Reactive-Extensions/RxCpp" target="_blank" rel="external">C++</a>, <a href="https://github.com/ReactiveCocoa/ReactiveCocoa" target="_blank" rel="external">Objective-C/Cocoa</a>, <a href="https://github.com/ReactiveX/RxJava/tree/master/language-adaptors/rxjava-groovy" target="_blank" rel="external">Groovy</a>&#x7B49;&#x7B49;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x65E0;&#x8BBA;&#x4F60;&#x7528;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x8BED;&#x8A00;&#x3001;&#x5E93;&#x3001;&#x5DE5;&#x5177;&#xFF0C;&#x4F60;&#x90FD;&#x80FD;&#x4ECE;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x6559;&#x7A0B;&#x4E2D;&#x5B66;&#x5230;&#x4E1C;&#x897F;(&#x4ECE;&#x4E2D;&#x53D7;&#x76CA;)&#x3002;</p>
<h2 id="&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x63A8;&#x8350;&#x5173;&#x6CE8;-who-to-follow-&#x7684;&#x529F;&#x80FD;"><a class="header-anchor" href="#&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x63A8;&#x8350;&#x5173;&#x6CE8;-who-to-follow-&#x7684;&#x529F;&#x80FD;"></a>&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x63A8;&#x8350;&#x5173;&#x6CE8;(Who to follow)&#x7684;&#x529F;&#x80FD;</h2>
<p>&#x5728;Twitter&#x91CC;&#x6709;&#x4E00;&#x4E2A;UI&#x5143;&#x7D20;&#x5411;&#x4F60;&#x63A8;&#x8350;&#x4F60;&#x53EF;&#x4EE5;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/10/17/response-programming-idea/who-to-follow.jpg" class="lazy">
</div>
<p>&#x6211;&#x4EEC;&#x5C06;&#x805A;&#x7126;&#x4E8E;&#x6A21;&#x4EFF;&#x5B83;&#x7684;&#x4E3B;&#x8981;&#x529F;&#x80FD;&#xFF0C;&#x5B83;&#x4EEC;&#x662F;&#xFF1A;</p>
<ul>
<li>&#x5F00;&#x59CB;&#x9636;&#x6BB5;&#xFF0C;&#x4ECE;API&#x52A0;&#x8F7D;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;&#x8D26;&#x6237;&#x6570;&#x636E;&#xFF0C;&#x7136;&#x540E;&#x663E;&#x793A;&#x4E09;&#x4E2A;&#x63A8;&#x8350;&#x7528;&#x6237;</li>
<li>&#x70B9;&#x51FB;&#x5237;&#x65B0;&#xFF0C;&#x52A0;&#x8F7D;&#x53E6;&#x5916;&#x4E09;&#x4E2A;&#x63A8;&#x8350;&#x7528;&#x6237;&#x5230;&#x5F53;&#x524D;&#x7684;&#x4E09;&#x884C;&#x4E2D;&#x663E;&#x793A;</li>
<li>&#x70B9;&#x51FB;&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x63A8;&#x8350;&#x7528;&#x6237;&#x4E0A;&#x7684;&#x2019;x&#x2019;&#x6309;&#x94AE;&#xFF0C;&#x6E05;&#x695A;&#x5F53;&#x524D;&#x88AB;&#x70B9;&#x51FB;&#x7684;&#x7528;&#x6237;&#xFF0C;&#x5E76;&#x663E;&#x793A;&#x65B0;&#x7684;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x5230;&#x5F53;&#x524D;&#x884C;</li>
<li>&#x6BCF;&#x4E00;&#x884C;&#x663E;&#x793A;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x7684;&#x5934;&#x50CF;&#x5E76;&#x4E14;&#x5728;&#x70B9;&#x51FB;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x94FE;&#x63A5;&#x5230;&#x4ED6;&#x4EEC;&#x7684;&#x4E3B;&#x9875;&#x3002;</li>
</ul>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5148;&#x4E0D;&#x7BA1;&#x5176;&#x4ED6;&#x7684;&#x529F;&#x80FD;&#x548C;&#x6309;&#x94AE;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x662F;&#x6B21;&#x8981;&#x7684;&#x3002;&#x56E0;&#x4E3A;Twitter&#x6700;&#x8FD1;&#x5173;&#x95ED;&#x4E86;&#x672A;&#x7ECF;&#x6388;&#x6743;&#x7684;&#x516C;&#x5171;API&#x8C03;&#x7528;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x7528;Github&#x83B7;&#x53D6;&#x7528;&#x6237;&#x7684;API&#x4EE3;&#x66FF;&#xFF0C;&#x5E76;&#x4E14;&#x4EE5;&#x6B64;&#x6765;&#x6784;&#x5EFA;&#x6211;&#x4EEC;&#x7684;UI&#x3002;</p>
<p>&#x5982;&#x679C;&#x4F60;&#x60F3;&#x5148;&#x770B;&#x4E00;&#x4E0B;&#x6700;&#x7EC8;&#x6548;&#x679C;&#xFF0C;&#x8FD9;&#x91CC;&#x6709;&#x5B8C;&#x6210;&#x540E;&#x7684;&#x4EE3;&#x7801;&#x3002;</p>
<h2 id="request&#x548C;response"><a class="header-anchor" href="#request&#x548C;response"></a>Request&#x548C;Response</h2>
<p>&#x5728;Rx&#x4E2D;&#x662F;&#x600E;&#x4E48;&#x5904;&#x7406;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5462;&#xFF1F;&#xFF0C;&#x5728;&#x5F00;&#x59CB;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x660E;&#x767D;&#xFF0C;(&#x51E0;&#x4E4E;)&#x4E00;&#x5207;&#x90FD;&#x53EF;&#x4EE5;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x6D41;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;Rx&#x7684;&#x51C6;&#x5219;(mantra)&#x3002;&#x8BA9;&#x6211;&#x4EEC;&#x4ECE;&#x6700;&#x7B80;&#x5355;&#x7684;&#x529F;&#x80FD;&#x5F00;&#x59CB;&#xFF1A;&#x201C;&#x5F00;&#x59CB;&#x9636;&#x6BB5;&#xFF0C;&#x4ECE;API&#x52A0;&#x8F7D;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;&#x8D26;&#x6237;&#x6570;&#x636E;&#xFF0C;&#x7136;&#x540E;&#x663E;&#x793A;&#x4E09;&#x4E2A;&#x63A8;&#x8350;&#x7528;&#x6237;&#x201D;&#x3002;&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x529F;&#x80FD;&#x6CA1;&#x4EC0;&#x4E48;&#x7279;&#x6B8A;&#x7684;&#xFF0C;&#x7B80;&#x5355;&#x7684;&#x6B65;&#x9AA4;&#x5206;&#x4E3A;&#xFF1A; (1)&#x53D1;&#x51FA;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;(2)&#x83B7;&#x53D6;&#x54CD;&#x5E94;&#x6570;&#x636E;&#xFF0C;(3)&#x6E32;&#x67D3;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002;ok&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x628A;&#x8BF7;&#x6C42;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x6D41;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x4F60;&#x53EF;&#x80FD;&#x4F1A;&#x89C9;&#x5F97;&#x8FD9;&#x6837;&#x505A;&#x6709;&#x4E9B;&#x5938;&#x5F20;&#xFF0C;&#x4F46;&#x522B;&#x6025;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x5F97;&#x4ECE;&#x6700;&#x57FA;&#x672C;&#x7684;&#x5F00;&#x59CB;&#xFF0C;&#x4E0D;&#x662F;&#x5417;&#xFF1F;</p>
<p>&#x5F00;&#x59CB;&#x65F6;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x505A;&#x4E00;&#x6B21;&#x8BF7;&#x6C42;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x628A;&#x5B83;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x7684;&#x8BDD;&#xFF0C;&#x5B83;&#x53EA;&#x80FD;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x4EC5;&#x4EC5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x503C;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x800C;&#x5DF2;&#x3002;&#x4E00;&#x4F1A;&#x513F;&#x6211;&#x4EEC;&#x8FD8;&#x4F1A;&#x6709;&#x5F88;&#x591A;&#x8BF7;&#x6C42;&#x8981;&#x505A;&#xFF0C;&#x4F46;&#x5F53;&#x524D;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x3002;</p>
<pre><code>--a------|-&gt;

a&#x5C31;&#x662F;&#x5B57;&#x7B26;&#x4E32;&#xFF1A;&apos;https://api.github.com/users&apos;
</code></pre>
<p>&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x6211;&#x4EEC;&#x8981;&#x8BF7;&#x6C42;&#x7684;URL&#x4E8B;&#x4EF6;&#x6D41;&#x3002;&#x6BCF;&#x5F53;&#x53D1;&#x751F;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x5B83;&#x5C06;&#x544A;&#x8BC9;&#x6211;&#x4EEC;&#x4E24;&#x4EF6;&#x4E8B;&#xFF1A;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x548C;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#x4E8B;(when and what)&#x3002;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x8BF7;&#x6C42;&#x88AB;&#x6267;&#x884C;&#xFF0C;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x4E8B;&#x4EF6;&#x5C31;&#x88AB;&#x53D1;&#x51FA;&#x3002;&#x800C;&#x505A;&#x4E86;&#x4EC0;&#x4E48;&#x5C31;&#x662F;&#x8BF7;&#x6C42;&#x4E86;&#x4EC0;&#x4E48;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF7;&#x6C42;&#x7684;URL&#x5B57;&#x7B26;&#x4E32;&#x3002;</p>
<p>&#x5728;Rx&#x4E2D;&#xFF0C;&#x521B;&#x5EFA;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x503C;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x662F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x7684;&#x3002;&#x5176;&#x5B9E;&#x4E8B;&#x4EF6;&#x6D41;&#x5728;Rx&#x91CC;&#x7684;&#x672F;&#x8BED;&#x662F;&#x53EB;&quot;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&quot;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x88AB;&#x89C2;&#x5BDF;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x53D1;&#x73B0;&#x8FD9;&#x540D;&#x5B57;&#x6BD4;&#x8F83;&#x50BB;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x66F4;&#x559C;&#x6B22;&#x628A;&#x5B83;&#x53EB;&#x505A;&#x4E8B;&#x4EF6;&#x6D41;&#x3002;</p>
<pre><code>var requestStream = Rx.Observable.just(&apos;https://api.github.com/users&apos;);
</code></pre>
<p>&#x4F46;&#x73B0;&#x5728;&#xFF0C;&#x8FD9;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x800C;&#x5DF2;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x505A;&#x5176;&#x4ED6;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728;&#x53D1;&#x51FA;&#x8FD9;&#x4E2A;&#x503C;&#x7684;&#x65F6;&#x5019;&#x505A;&#x4E00;&#x4E9B;&#x6211;&#x4EEC;&#x8981;&#x505A;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;<a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypesubscribeobserver--onnext-onerror-oncompleted" target="_blank" rel="external">&#x8BA2;&#x9605;(subscribing)</a>&#x8FD9;&#x4E2A;&#x4E8B;&#x4EF6;&#x6765;&#x5B9E;&#x73B0;&#x3002;</p>
<pre><code>requestStream.subscribe(function(requestUrl) { // execute the request jQuery.getJSON(requestUrl, function(responseData) { // ... });
}
</code></pre>
<p>&#x6CE8;&#x610F;&#x5230;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x7684;&#x662F;JQuery&#x7684;AJAX&#x56DE;&#x8C03;&#x65B9;&#x6CD5;(&#x6211;&#x4EEC;&#x5047;&#x8BBE;&#x4F60;<a href="http://devdocs.io/jquery/jquery.getjson" target="_blank" rel="external">&#x5DF2;&#x7ECF;&#x5F88;&#x4E86;&#x89E3;JQuery&#x548C;AJAX&#x4E86;</a>)&#x6765;&#x7684;&#x5904;&#x7406;&#x8FD9;&#x4E2A;&#x5F02;&#x6B65;&#x7684;&#x8BF7;&#x6C42;&#x64CD;&#x4F5C;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x8BF7;&#x7A0D;&#x7B49;&#x4E00;&#x4E0B;&#xFF0C;Rx&#x5C31;&#x662F;&#x7528;&#x6765;&#x5904;&#x7406;&#x5F02;&#x6B65;&#x6570;&#x636E;&#x6D41;&#x7684;&#xFF0C;&#x96BE;&#x9053;&#x5B83;&#x5C31;&#x4E0D;&#x80FD;&#x5904;&#x7406;&#x6765;&#x81EA;&#x8BF7;&#x6C42;(request)&#x5728;&#x672A;&#x6765;&#x67D0;&#x4E2A;&#x65F6;&#x95F4;&#x54CD;&#x5E94;(response)&#x7684;&#x6570;&#x636E;&#x6D41;&#x5417;&#xFF1F;&#x597D;&#x5427;&#xFF0C;&#x7406;&#x8BBA;&#x4E0A;&#x662F;&#x53EF;&#x4EE5;&#x7684;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x5C1D;&#x8BD5;&#x4E00;&#x4E0B;&#x3002;</p>
<pre><code>requestStream.subscribe(function(requestUrl) { // execute the request var responseStream = Rx.Observable.create(function (observer) {
    jQuery.getJSON(requestUrl)
    .done(function(response) { observer.onNext(response); })
    .fail(function(jqXHR, status, error) { observer.onError(error); })
    .always(function() { observer.onCompleted(); });
  });

  responseStream.subscribe(function(response) { // do something with the response });
}
</code></pre>
<p><a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservablecreatesubscribe" target="_blank" rel="external">Rx.Observable.create()</a>&#x64CD;&#x4F5C;&#x5C31;&#x662F;&#x5728;&#x521B;&#x5EFA;&#x81EA;&#x5DF1;&#x5B9A;&#x5236;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#xFF0C;&#x4E14;&#x5BF9;&#x4E8E;&#x6570;&#x636E;&#x4E8B;&#x4EF6;(onNext())&#x548C;&#x9519;&#x8BEF;&#x4E8B;&#x4EF6;(onError())&#x90FD;&#x4F1A;&#x663E;&#x793A;&#x7684;&#x901A;&#x77E5;&#x8BE5;&#x4E8B;&#x4EF6;&#x6BCF;&#x4E00;&#x4E2A;&#x89C2;&#x5BDF;&#x8005;(&#x6216;&#x8BA2;&#x9605;&#x8005;)&#x3002;&#x6211;&#x4EEC;&#x505A;&#x7684;&#x53EA;&#x662F;&#x5C0F;&#x5C0F;&#x7684;&#x5C01;&#x88C5;&#x4E00;&#x4E0B;jQuery Ajax Promise&#x800C;&#x5DF2;&#x3002;&#x7B49;&#x7B49;&#xFF0C;&#x8FD9;&#x662F;&#x5426;&#x610F;&#x5473;&#x8005;jQuery Ajax Promise&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&#x5462;(Observable)&#xFF1F;</p>
<div align="center">
<img data-original="/2016/10/17/response-programming-idea/kuku.jpg" class="lazy">
</div>
<p>&#x662F;&#x7684;&#x3002;</p>
<p>Promise++&#x5C31;&#x662F;&#x88AB;&#x89C2;&#x5BDF;&#x8005;(Observable)&#xFF0C;&#x5728;Rx&#x91CC;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8FD9;&#x6837;&#x7684;&#x64CD;&#x4F5C;&#xFF1A;var stream = Rx.Observable.fromPromise(promise)&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5F88;&#x8F7B;&#x677E;&#x7684;&#x5C06;Promise&#x8F6C;&#x6362;&#x6210;&#x4E00;&#x4E2A;&#x88AB;&#x89C2;&#x5BDF;&#x8005;(Observable)&#xFF0C;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x7684;&#x64CD;&#x4F5C;&#x5C31;&#x80FD;&#x8BA9;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x5C31;&#x5F00;&#x59CB;&#x4F7F;&#x7528;&#x5B83;&#x3002;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x4E9B;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&#x90FD;&#x4E0D;&#x80FD;&#x517C;&#x5BB9;<a href="http://promises-aplus.github.io/promises-spec/" target="_blank" rel="external">Promises/A+</a>&#xFF0C;&#x4F46;&#x7406;&#x8BBA;&#x4E0A;&#x5E76;&#x4E0D;&#x51B2;&#x7A81;&#x3002;&#x4E00;&#x4E2A;Promise&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x7B80;&#x5355;&#x7684;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&#xFF0C;&#x800C;Rx&#x5C31;&#x8FDC;&#x8D85;&#x4E8E;Promise&#xFF0C;&#x5B83;&#x5141;&#x8BB8;&#x591A;&#x4E2A;&#x503C;&#x8FD4;&#x56DE;&#x3002;</p>
<p>&#x8FD9;&#x6837;&#x66F4;&#x597D;&#xFF0C;&#x8FD9;&#x6837;&#x66F4;&#x7A81;&#x51FA;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&#x81F3;&#x5C11;&#x6BD4;Promise&#x5F3A;&#x5927;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x4F60;&#x76F8;&#x4FE1;Promise&#x5BA3;&#x4F20;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x90A3;&#x4E48;&#x4E5F;&#x8BF7;&#x7559;&#x610F;&#x4E00;&#x4E0B;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x80FD;&#x80DC;&#x4EFB;&#x4E9B;&#x4EC0;&#x4E48;&#x3002;</p>
<p>&#x73B0;&#x5728;&#x56DE;&#x5230;&#x793A;&#x4F8B;&#x5F53;&#x4E2D;&#xFF0C;&#x4F60;&#x5E94;&#x8BE5;&#x80FD;&#x5FEB;&#x901F;&#x53D1;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x5728;subscribe()&#x65B9;&#x6CD5;&#x7684;&#x5185;&#x90E8;&#x518D;&#x6B21;&#x8C03;&#x7528;&#x4E86;subscribe()&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x6709;&#x70B9;&#x7C7B;&#x4F3C;&#x4E8E;&#x56DE;&#x8C03;&#x5730;&#x72F1;(callback hell)&#xFF0C;&#x800C;&#x4E14;responseStream&#x7684;&#x521B;&#x5EFA;&#x4E5F;&#x662F;&#x4F9D;&#x8D56;&#x4E8E;requestStream&#x7684;&#x3002;&#x5728;&#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x8BF4;&#x8FC7;&#xFF0C;&#x5728;Rx&#x91CC;&#xFF0C;&#x6709;&#x5F88;&#x591A;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x673A;&#x5236;&#x6765;&#x4ECE;&#x5176;&#x4ED6;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x8F6C;&#x5316;&#x5E76;&#x521B;&#x5EFA;&#x51FA;&#x4E00;&#x4E9B;&#x65B0;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x5E94;&#x8BE5;&#x8FD9;&#x6837;&#x505A;&#x8BD5;&#x8BD5;&#x3002;</p>
<p>&#x73B0;&#x5728;&#x4F60;&#x9700;&#x8981;&#x4E86;&#x89E3;&#x7684;&#x4E00;&#x4E2A;&#x6700;&#x57FA;&#x672C;&#x7684;&#x51FD;&#x6570;&#x662F;<a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypemapselector-thisarg" target="_blank" rel="external">map(f)</a>&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x4ECE;&#x4E8B;&#x4EF6;&#x6D41;A&#x4E2D;&#x53D6;&#x51FA;&#x6BCF;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x5E76;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x503C;&#x6267;&#x884C;f()&#x51FD;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x4EA7;&#x751F;&#x7684;&#x65B0;&#x503C;&#x586B;&#x5145;&#x5230;&#x4E8B;&#x4EF6;&#x6D41;B&#x3002;&#x5982;&#x679C;&#x5C06;&#x5B83;&#x5E94;&#x7528;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#x4E8B;&#x4EF6;&#x6D41;&#x5F53;&#x4E2D;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5C06;&#x8BF7;&#x6C42;&#x7684;URL&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x54CD;&#x5E94;Promises&#x4E0A;&#x4E86;(&#x4F2A;&#x88C5;&#x6210;&#x6570;&#x636E;&#x6D41;)&#x3002;</p>
<pre><code>var responseMetastream = requestStream
  .map(function(requestUrl) { return Rx.Observable.fromPromise(jQuery.getJSON(requestUrl));
  });
</code></pre>
<p>&#x7136;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x521B;&#x9020;&#x4E86;&#x4E00;&#x4E2A;&#x53EB;&#x505A;&quot;metastream&quot;&#x7684;&#x602A;&#x517D;&#xFF1A;&#x4E00;&#x4E2A;&#x88C5;&#x8F7D;&#x4E86;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x3002;&#x5148;&#x522B;&#x60CA;&#x614C;&#xFF0C;metastream&#x5C31;&#x662F;&#x6BCF;&#x4E00;&#x4E2A;&#x53D1;&#x51FA;&#x7684;&#x503C;&#x90FD;&#x662F;&#x53E6;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#xFF0C;&#x4F60;&#x770B;&#x628A;&#x5B83;&#x60F3;&#x8C61;&#x6210;&#x4E00;&#x4E2A;[&#x6307;&#x9488;pointers](<a href="https://en.wikipedia.org" target="_blank" rel="external">https://en.wikipedia.org</a> /wiki/Pointer_computer_programming)&#x6570;&#x7EC4;&#xFF1A;&#x6BCF;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x53D1;&#x51FA;&#x7684;&#x503C;&#x5C31;&#x662F;&#x4E00;&#x4E2A;_&#x6307;&#x9488;_&#xFF0C;&#x5B83;&#x6307;&#x5411;&#x53E6;&#x4E00;&#x4E2A;&#x4E8B;&#x4EF6;&#x6D41;&#x3002;&#x5728;&#x6211;&#x4EEC;&#x7684;&#x793A;&#x4F8B;&#x91CC;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;URL&#x90FD;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x5305;&#x542B;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x7684;promise&#x6570;&#x636E;&#x6D41;&#x3002;</p>
<div align="center">
<img data-original="/2016/10/17/response-programming-idea/request-stream.jpg" class="lazy">
</div>
<p>&#x4E00;&#x4E2A;&#x54CD;&#x5E94;&#x7684;metastream&#xFF0C;&#x770B;&#x8D77;&#x6765;&#x786E;&#x5B9E;&#x8BA9;&#x4EBA;&#x5BB9;&#x6613;&#x56F0;&#x60D1;&#xFF0C;&#x770B;&#x6837;&#x5B50;&#x5BF9;&#x6211;&#x4EEC;&#x4E00;&#x70B9;&#x5E2E;&#x52A9;&#x4E5F;&#x6CA1;&#x6709;&#x3002;&#x6211;&#x4EEC;&#x53EA;&#x60F3;&#x8981;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x53D1;&#x51FA;&#x7684;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;JSON&#x5BF9;&#x8C61;&#x5C31;&#x884C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x2019;Promise&#x2019; &#x7684;JSON&#x5BF9;&#x8C61;&#x3002;ok&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x89C1;&#x8BC6;&#x4E00;&#x4E0B;&#x53E6;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF1A;<a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypeflatmapselector-resultselector" target="_blank" rel="external">Flatmap</a>&#xFF0C;&#x5B83;&#x662F;map()&#x51FD;&#x6570;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#xFF0C;&#x5B83;&#x6BD4;metastream&#x66F4;&#x6241;&#x5E73;&#x3002;&#x4E00;&#x5207;&#x5728;&quot;&#x4E3B;&#x8EAF;&#x5E72;&quot;&#x4E8B;&#x4EF6;&#x6D41;&#x53D1;&#x51FA;&#x7684;&#x4E8B;&#x4EF6;&#x90FD;&#x5C06;&#x5728;&quot;&#x5206;&#x652F;&quot;&#x4E8B;&#x4EF6;&#x6D41;&#x4E2D;&#x53D1;&#x51FA;&#x3002;Flatmap&#x5E76;&#x4E0D;&#x662F;metastreams&#x7684;&#x4FEE;&#x590D;&#x7248;&#xFF0C;metastreams&#x4E5F;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;bug&#x3002;&#x5B83;&#x4FE9;&#x5728;Rx&#x4E2D;&#x90FD;&#x662F;&#x5904;&#x7406;&#x5F02;&#x6B65;&#x54CD;&#x5E94;&#x4E8B;&#x4EF6;&#x7684;&#x597D;&#x5DE5;&#x5177;&#x3001;&#x597D;&#x5E2E;&#x624B;&#x3002;</p>
<pre><code>var responseStream = requestStream
  .flatMap(function(requestUrl) { return Rx.Observable.fromPromise(jQuery.getJSON(requestUrl));
  });
</code></pre>
<div align="center">
<img data-original="/2016/10/17/response-programming-idea/response-stream.jpg" class="lazy">
</div>
<p>&#x5F88;&#x8D5E;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x54CD;&#x5E94;&#x4E8B;&#x4EF6;&#x6D41;&#x662F;&#x6839;&#x636E;&#x8BF7;&#x6C42;&#x4E8B;&#x4EF6;&#x6D41;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4EE5;&#x540E;&#x6709;&#x66F4;&#x591A;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x5728;&#x8BF7;&#x6C42;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x5C06;&#x4F1A;&#x5728;&#x76F8;&#x5E94;&#x7684;&#x54CD;&#x5E94;&#x4E8B;&#x4EF6;&#x6D41;&#x6536;&#x5230;&#x54CD;&#x5E94;&#x4E8B;&#x4EF6;&#xFF0C;&#x5C31;&#x5982;&#x6240;&#x671F;&#x5F85;&#x7684;&#x90A3;&#x6837;&#xFF1A;</p>
<pre><code>requestStream:  --a-----b--c------------|-&gt;;
responseStream: -----A--------B-----C---|-&gt;;
(&#x5C0F;&#x5199;&#x7684;&#x662F;&#x8BF7;&#x6C42;&#x4E8B;&#x4EF6;&#x6D41;, &#x5927;&#x5199;&#x7684;&#x662F;&#x54CD;&#x5E94;&#x4E8B;&#x4EF6;&#x6D41;)
</code></pre>
<p>&#x73B0;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x7EC8;&#x4E8E;&#x6709;&#x54CD;&#x5E94;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x4E86;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x7528;&#x6211;&#x4EEC;&#x6536;&#x5230;&#x7684;&#x6570;&#x636E;&#x6765;&#x6E32;&#x67D3;&#x4E86;&#xFF1A;</p>
<pre><code>responseStream.subscribe(function(response) { // render `response` to the DOM however you wish });
</code></pre>
<p>&#x8BA9;&#x6211;&#x4EEC;&#x628A;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x770B;&#x4E00;&#x4E0B;&#xFF1A;</p>
<pre><code>var requestStream = Rx.Observable.just(&apos;https://api.github.com/users&apos;); var responseStream = requestStream
  .flatMap(function(requestUrl) { return Rx.Observable.fromPromise(jQuery.getJSON(requestUrl));
  });

responseStream.subscribe(function(response) { // render `response` to the DOM however you wish });
</code></pre>
<h2 id="&#x5237;&#x65B0;&#x6309;&#x94AE;"><a class="header-anchor" href="#&#x5237;&#x65B0;&#x6309;&#x94AE;"></a>&#x5237;&#x65B0;&#x6309;&#x94AE;</h2>
<p>&#x6211;&#x8FD8;&#x6CA1;&#x63D0;&#x5230;&#x672C;&#x6B21;&#x54CD;&#x5E94;&#x7684;JSON&#x6570;&#x636E;&#x662F;&#x542B;&#x6709;100&#x4E2A;&#x7528;&#x6237;&#x6570;&#x636E;&#x7684;list&#xFF0C;&#x8FD9;&#x4E2A;API&#x53EA;&#x5141;&#x8BB8;&#x6307;&#x5B9A;&#x9875;&#x9762;&#x504F;&#x79FB;&#x91CF;(page offset)&#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x6307;&#x5B9A;&#x6BCF;&#x9875;&#x5927;&#x5C0F;(page size)&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x7528;&#x5230;&#x4E86;3&#x4E2A;&#x7528;&#x6237;&#x6570;&#x636E;&#x800C;&#x6D6A;&#x8D39;&#x4E86;&#x5176;&#x4ED6;97&#x4E2A;&#xFF0C;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x5148;&#x5FFD;&#x7565;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x7A0D;&#x540E;&#x6211;&#x4EEC;&#x5C06;&#x5B66;&#x4E60;&#x5982;&#x4F55;&#x7F13;&#x5B58;&#x54CD;&#x5E94;&#x7684;&#x6570;&#x636E;&#x3002;</p>
<p>&#x6BCF;&#x5F53;&#x5237;&#x65B0;&#x6309;&#x94AE;&#x88AB;&#x70B9;&#x51FB;&#xFF0C;&#x8BF7;&#x6C42;&#x4E8B;&#x4EF6;&#x6D41;&#x5C31;&#x4F1A;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;URL&#x503C;&#xFF0C;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x65B0;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E24;&#x4E2A;&#x4E1C;&#x897F;&#xFF1A;&#x70B9;&#x51FB;&#x5237;&#x65B0;&#x6309;&#x94AE;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;(&#x51C6;&#x5219;&#xFF1A;&#x4E00;&#x5207;&#x90FD;&#x80FD;&#x4F5C;&#x4E3A;&#x4E8B;&#x4EF6;&#x6D41;)&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5C06;&#x70B9;&#x51FB;&#x5237;&#x65B0;&#x6309;&#x94AE;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x4F5C;&#x4E3A;&#x8BF7;&#x6C42;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x4F9D;&#x8D56;(&#x5373;&#x70B9;&#x51FB;&#x5237;&#x65B0;&#x4E8B;&#x4EF6;&#x6D41;&#x4F1A;&#x5F15;&#x8D77;&#x8BF7;&#x6C42;&#x4E8B;&#x4EF6;&#x6D41;)&#x3002;&#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;RxJS&#x5DF2;&#x7ECF;&#x6709;&#x4E86;&#x53EF;&#x4EE5;&#x4ECE;&#x4E8B;&#x4EF6;&#x76D1;&#x542C;&#x8005;&#x8F6C;&#x6362;&#x6210;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&#x7684;&#x65B9;&#x6CD5;&#x4E86;&#x3002;</p>
<pre><code>var refreshButton = document.querySelector(&apos;.refresh&apos;); var refreshClickStream = Rx.Observable.fromEvent(refreshButton, &apos;click&apos;);
</code></pre>
<p>&#x56E0;&#x4E3A;&#x5237;&#x65B0;&#x6309;&#x94AE;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x4E0D;&#x4F1A;&#x643A;&#x5E26;&#x5C06;&#x8981;&#x8BF7;&#x6C42;&#x7684;API&#x7684;URL&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5C06;&#x6BCF;&#x6B21;&#x7684;&#x70B9;&#x51FB;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x5B9E;&#x9645;&#x7684;URL&#x4E0A;&#xFF0C;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5C06;&#x8BF7;&#x6C42;&#x4E8B;&#x4EF6;&#x6D41;&#x8F6C;&#x6362;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x6D41;&#xFF0C;&#x5E76;&#x5C06;&#x6BCF;&#x6B21;&#x7684;&#x70B9;&#x51FB;&#x6620;&#x5C04;&#x6210;&#x4E00;&#x4E2A;&#x968F;&#x673A;&#x7684;&#x9875;&#x9762;&#x504F;&#x79FB;&#x91CF;(offset)&#x53C2;&#x6570;&#x6765;&#x7EC4;&#x6210;API&#x7684;URL&#x3002;</p>
<pre><code>var requestStream = refreshClickStream
  .map(function() { var randomOffset = Math.floor(Math.random()*500); return &apos;https://api.github.com/users?since=&apos; + randomOffset;
  });
</code></pre>
<p>&#x56E0;&#x4E3A;&#x6211;&#x6BD4;&#x8F83;&#x7B28;&#x800C;&#x4E14;&#x4E5F;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x81EA;&#x52A8;&#x5316;&#x6D4B;&#x8BD5;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x521A;&#x628A;&#x4E4B;&#x524D;&#x505A;&#x597D;&#x7684;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#x641E;&#x70C2;&#x4E86;&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x8BF7;&#x6C42;&#x5728;&#x4E00;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4E0D;&#x4F1A;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x53EA;&#x6709;&#x5728;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x65F6;&#x624D;&#x4F1A;&#x6267;&#x884C;&#x3002;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x662F;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x90FD;&#x8981;&#x6267;&#x884C;&#xFF1A;&#x521A;&#x5F00;&#x59CB;&#x6253;&#x5F00;&#x7F51;&#x9875;&#x548C;&#x70B9;&#x51FB;&#x5237;&#x65B0;&#x6309;&#x94AE;&#x90FD;&#x4F1A;&#x6267;&#x884C;&#x7684;&#x8BF7;&#x6C42;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x5982;&#x4F55;&#x4E3A;&#x6BCF;&#x4E00;&#x79CD;&#x60C5;&#x51B5;&#x505A;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#xFF1A;</p>
<pre><code>var requestOnRefreshStream = refreshClickStream
  .map(function() { var randomOffset = Math.floor(Math.random()*500); return &apos;https://api.github.com/users?since=&apos; + randomOffset;
  }); var startupRequestStream = Rx.Observable.just(&apos;https://api.github.com/users&apos;);
</code></pre>
<p>&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x5C06;&#x8FD9;&#x4E24;&#x4E2A;&#x5408;&#x5E76;&#x6210;&#x4E00;&#x4E2A;&#x5462;&#xFF1F;&#x6CA1;&#x9519;&#xFF0C;&#x662F;&#x53EF;&#x4EE5;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;merge()&#x65B9;&#x6CD5;&#x6765;&#x5B9E;&#x73B0;&#x3002;&#x4E0B;&#x56FE;&#x53EF;&#x4EE5;&#x89E3;&#x91CA;merge()&#x51FD;&#x6570;&#x7684;&#x7528;&#x5904;&#xFF1A;</p>
<pre><code>stream A: ---a--------e-----o-----&gt;
stream B: -----B---C-----D--------&gt;
          vvvvvvvvv merge vvvvvvvvv
          ---a-B---C--e--D--o-----&gt;
</code></pre>
<p>&#x73B0;&#x5728;&#x505A;&#x8D77;&#x6765;&#x5E94;&#x8BE5;&#x5F88;&#x7B80;&#x5355;&#xFF1A;</p>
<pre><code>var requestOnRefreshStream = refreshClickStream
  .map(function() { var randomOffset = Math.floor(Math.random()*500); return &apos;https://api.github.com/users?since=&apos; + randomOffset;
  }); var startupRequestStream = Rx.Observable.just(&apos;https://api.github.com/users&apos;); var requestStream = Rx.Observable.merge(
  requestOnRefreshStream, startupRequestStream
);
</code></pre>
<p>&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x66F4;&#x5E72;&#x51C0;&#x7684;&#x5199;&#x6CD5;&#xFF0C;&#x7701;&#x53BB;&#x4E86;&#x4E2D;&#x95F4;&#x4E8B;&#x4EF6;&#x6D41;&#x53D8;&#x91CF;&#xFF1A;</p>
<pre><code>var requestStream = refreshClickStream
  .map(function() { var randomOffset = Math.floor(Math.random()*500); return &apos;https://api.github.com/users?since=&apos; + randomOffset;
  })
  .merge(Rx.Observable.just(&apos;https://api.github.com/users&apos;));
</code></pre>
<p>&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x66F4;&#x7B80;&#x77ED;&#xFF0C;&#x66F4;&#x5177;&#x6709;&#x53EF;&#x8BFB;&#x6027;&#xFF1A;</p>
<pre><code>var requestStream = refreshClickStream
  .map(function() { var randomOffset = Math.floor(Math.random()*500); return &apos;https://api.github.com/users?since=&apos; + randomOffset;
  })
  .startWith(&apos;https://api.github.com/users&apos;);
</code></pre>
<p><a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypestartwithscheduler-args" target="_blank" rel="external">startWith()</a>&#x51FD;&#x6570;&#x505A;&#x7684;&#x4E8B;&#x548C;&#x4F60;&#x9884;&#x671F;&#x7684;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#x3002;&#x65E0;&#x8BBA;&#x4F60;&#x7684;&#x8F93;&#x5165;&#x4E8B;&#x4EF6;&#x6D41;&#x662F;&#x600E;&#x6837;&#x7684;&#xFF0C;&#x4F7F;&#x7528;startWith(x)&#x51FD;&#x6570;&#x5904;&#x7406;&#x8FC7;&#x540E;&#x8F93;&#x51FA;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x4E00;&#x5B9A;&#x662F;&#x4E00;&#x4E2A;x&#x5F00;&#x5934;&#x7684;&#x7ED3;&#x679C;&#x3002;&#x4F46;&#x662F;&#x6211;&#x6CA1;&#x6709;&#x603B;&#x662F;<a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" target="_blank" rel="external">&#x91CD;&#x590D;&#x4EE3;&#x7801;(DRY)</a>&#xFF0C;&#x6211;&#x53EA;&#x662F;&#x5728;&#x91CD;&#x590D;API&#x7684;URL&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6539;&#x8FDB;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x5C06;startWith()&#x51FD;&#x6570;&#x632A;&#x5230;refreshClickStream&#x90A3;&#x91CC;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x6A21;&#x62DF;&#x4E00;&#x4E2A;&#x5237;&#x65B0;&#x6309;&#x94AE;&#x7684;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x4E86;&#x3002;</p>
<pre><code>var requestStream = refreshClickStream.startWith(&apos;startup click&apos;)
  .map(function() { var randomOffset = Math.floor(Math.random()*500); return &apos;https://api.github.com/users?since=&apos; + randomOffset;
  });
</code></pre>
<p>&#x4E0D;&#x9519;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x5012;&#x56DE;&#x5230;&quot;&#x641E;&#x70C2;&#x4E86;&#x7684;&#x81EA;&#x52A8;&#x6D4B;&#x8BD5;&quot;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5BF9;&#x6BD4;&#x8FD9;&#x4E24;&#x4E2A;&#x5730;&#x65B9;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x6211;&#x4EC5;&#x4EC5;&#x662F;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;startWith()&#x51FD;&#x6570;&#x800C;&#x5DF2;&#x3002;</p>
<h2 id="&#x7528;&#x4E8B;&#x4EF6;&#x6D41;&#x5C06;3&#x4E2A;&#x63A8;&#x8350;&#x7684;&#x7528;&#x6237;&#x6570;&#x636E;&#x6A21;&#x578B;&#x5316;"><a class="header-anchor" href="#&#x7528;&#x4E8B;&#x4EF6;&#x6D41;&#x5C06;3&#x4E2A;&#x63A8;&#x8350;&#x7684;&#x7528;&#x6237;&#x6570;&#x636E;&#x6A21;&#x578B;&#x5316;"></a>&#x7528;&#x4E8B;&#x4EF6;&#x6D41;&#x5C06;3&#x4E2A;&#x63A8;&#x8350;&#x7684;&#x7528;&#x6237;&#x6570;&#x636E;&#x6A21;&#x578B;&#x5316;</h2>
<p>&#x76F4;&#x5230;&#x73B0;&#x5728;&#xFF0C;&#x5728;&#x54CD;&#x5E94;&#x4E8B;&#x4EF6;&#x6D41;(responseStream)&#x7684;&#x8BA2;&#x9605;(subscribe())&#x51FD;&#x6570;&#x53D1;&#x751F;&#x7684;&#x6E32;&#x67D3;&#x6B65;&#x9AA4;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x662F;&#x7A0D;&#x5FAE;&#x63D0;&#x53CA;&#x4E86;&#x4E00;&#x4E0B;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;UI&#x3002;&#x73B0;&#x5728;&#x6709;&#x4E86;&#x5237;&#x65B0;&#x6309;&#x94AE;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;&#x5F53;&#x4F60;&#x70B9;&#x51FB;&#x4E86;&#x5237;&#x65B0;&#x6309;&#x94AE;&#xFF0C;&#x5F53;&#x524D;&#x7684;&#x4E09;&#x4E2A;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7528;&#x6237;&#x6CA1;&#x6709;&#x88AB;&#x6E05;&#x695A;&#xFF0C;&#x800C;&#x53EA;&#x8981;&#x54CD;&#x5E94;&#x7684;&#x6570;&#x636E;&#x8FBE;&#x5230;&#x540E;&#x6211;&#x4EEC;&#x5C31;&#x62FF;&#x5230;&#x4E86;&#x65B0;&#x7684;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;&#x6570;&#x636E;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;UI&#x770B;&#x8D77;&#x6765;&#x66F4;&#x6F02;&#x4EAE;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728;&#x70B9;&#x51FB;&#x5237;&#x65B0;&#x6309;&#x94AE;&#x7684;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x7684;&#x65F6;&#x5019;&#x6E05;&#x695A;&#x5F53;&#x524D;&#x7684;&#x4E09;&#x4E2A;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;&#x3002;</p>
<pre><code>refreshClickStream.subscribe(function() { // clear the 3 suggestion DOM elements  });
</code></pre>
<p>&#x4E0D;&#xFF0C;&#x8001;&#x5144;&#xFF0C;&#x8FD8;&#x6CA1;&#x90A3;&#x4E48;&#x5FEB;&#x3002;&#x6211;&#x4EEC;&#x53C8;&#x51FA;&#x73B0;&#x4E86;&#x65B0;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x6709;&#x4E24;&#x4E2A;&#x8BA2;&#x9605;&#x8005;&#x5728;&#x5F71;&#x54CD;&#x7740;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;UI DOM&#x5143;&#x7D20;(&#x53E6;&#x4E00;&#x4E2A;&#x662F;responseStream.subscribe())&#xFF0C;&#x8FD9;&#x770B;&#x8D77;&#x6765;&#x5E76;&#x4E0D;&#x7B26;&#x5408;&#x5173;&#x6CE8;&#x5206;&#x79BB;(<a href="https://en.wikipedia.org/wiki/Separation_of_concerns" target="_blank" rel="external">Separation of concerns</a>)&#x539F;&#x5219;&#xFF0C;&#x8FD8;&#x8BB0;&#x5F97;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x7684;&#x539F;&#x5219;&#x4E48;&#xFF1F;</p>
<div align="center">
<img data-original="/2016/10/17/response-programming-idea/everything-is-a-stream.jpg" class="lazy">
</div>
<p>&#x73B0;&#x5728;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x628A;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;&#x6570;&#x636E;&#x6A21;&#x578B;&#x5316;&#x6210;&#x4E8B;&#x4EF6;&#x6D41;&#x5F62;&#x5F0F;&#xFF0C;&#x6BCF;&#x4E2A;&#x88AB;&#x53D1;&#x51FA;&#x7684;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x4E86;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7528;&#x6237;&#x6570;&#x636E;&#x7684;JSON&#x5BF9;&#x8C61;&#x3002;&#x6211;&#x4EEC;&#x5C06;&#x628A;&#x8FD9;&#x4E09;&#x4E2A;&#x7528;&#x6237;&#x6570;&#x636E;&#x5206;&#x5F00;&#x5904;&#x7406;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;1&#x53F7;&#x7528;&#x6237;&#x6570;&#x636E;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#xFF1A;</p>
<pre><code>var suggestion1Stream = responseStream
  .map(function(listUsers) { // get one random user from the list return listUsers[Math.floor(Math.random()*listUsers.length)];
  });
</code></pre>
<p>&#x5176;&#x4ED6;&#x7684;&#xFF0C;&#x5982;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;2&#x53F7;&#x7528;&#x6237;&#x6570;&#x636E;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;suggestion2Stream&#x548C;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;3&#x53F7;&#x7528;&#x6237;&#x6570;&#x636E;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;suggestion3Stream&#x90FD;&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x4ECE;suggestion1Stream&#x590D;&#x5236;&#x7C98;&#x8D34;&#x5C31;&#x597D;&#x3002;&#x8FD9;&#x91CC;&#x5E76;&#x4E0D;&#x662F;&#x91CD;&#x590D;&#x4EE3;&#x7801;&#xFF0C;&#x53EA;&#x662F;&#x4E3A;&#x8BA9;&#x6211;&#x4EEC;&#x7684;&#x793A;&#x4F8B;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#xFF0C;&#x800C;&#x4E14;&#x6211;&#x8BA4;&#x4E3A;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x601D;&#x8003;&#x5982;&#x4F55;&#x907F;&#x514D;&#x91CD;&#x590D;&#x4EE3;&#x7801;&#x7684;&#x597D;&#x6848;&#x4F8B;&#x3002;</p>
<p>Instead of having the rendering happen in responseStream&#x2019;s subscribe(), we do that here:</p>
<pre><code>suggestion1Stream.subscribe(function(suggestion) { // render the 1st suggestion to the DOM });
</code></pre>
<p>&#x6211;&#x4EEC;&#x4E0D;&#x5728;responseStream&#x7684;subscribe()&#x4E2D;&#x5904;&#x7406;&#x6E32;&#x67D3;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x8FD9;&#x6837;&#x5904;&#x7406;&#xFF1A;</p>
<pre><code>suggestion1Stream.subscribe(function(suggestion) { // render the 1st suggestion to the DOM });
</code></pre>
<p>&#x56DE;&#x5230;&quot;&#x5F53;&#x5237;&#x65B0;&#x65F6;&#xFF0C;&#x6E05;&#x695A;&#x6389;&#x5F53;&#x524D;&#x7684;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;&quot;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x628A;&#x5237;&#x65B0;&#x70B9;&#x51FB;&#x6620;&#x5C04;&#x4E3A;&#x6CA1;&#x6709;&#x63A8;&#x8350;&#x6570;&#x636E;(nullsuggestion data)&#xFF0C;&#x5E76;&#x4E14;&#x5728;suggestion1Stream&#x4E2D;&#x5305;&#x542B;&#x8FDB;&#x6765;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>var suggestion1Stream = responseStream
  .map(function(listUsers) { // get one random user from the list return listUsers[Math.floor(Math.random()*listUsers.length)];
  })
  .merge(
    refreshClickStream.map(function(){ return null; })
  );
</code></pre>
<p>&#x5F53;&#x6E32;&#x67D3;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;null&#x89E3;&#x91CA;&#x4E3A;&quot;&#x6CA1;&#x6709;&#x6570;&#x636E;&quot;&#xFF0C;&#x7136;&#x540E;&#x628A;UI&#x5143;&#x7D20;&#x9690;&#x85CF;&#x8D77;&#x6765;&#x3002;</p>
<pre><code>suggestion1Stream.subscribe(function(suggestion) {
  if (suggestion === null) {
    // hide the first suggestion DOM element
  }
  else {
    // show the first suggestion DOM element
    // and render the data
  }
});
</code></pre>
<p>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5927;&#x6982;&#x7684;&#x793A;&#x610F;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>refreshClickStream: ----------o--------o----&gt;
     requestStream: -r--------r--------r----&gt;
    responseStream: ----R---------R------R--&gt;   
 suggestion1Stream: ----s-----N---s----N-s--&gt;
 suggestion2Stream: ----q-----N---q----N-q--&gt;
 suggestion3Stream: ----t-----N---t----N-t--&gt;
</code></pre>
<p>N&#x4EE3;&#x8868;null</p>
<p>&#x4F5C;&#x4E3A;&#x4E00;&#x79CD;&#x8865;&#x5145;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x4E00;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x6E32;&#x67D3;&#x7A7A;&#x7684;&#x63A8;&#x8350;&#x5185;&#x5BB9;&#x3002;&#x8FD9;&#x901A;&#x8FC7;&#x628A;startWith(null)&#x6DFB;&#x52A0;&#x5230;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x4E8B;&#x4EF6;&#x6D41;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF1A;</p>
<pre><code>var suggestion1Stream = responseStream
  .map(function(listUsers) { // get one random user from the list return listUsers[Math.floor(Math.random()*listUsers.length)];
  })
  .merge(
    refreshClickStream.map(function(){ return null; })
  )
  .startWith(null);
</code></pre>
<p>&#x7ED3;&#x679C;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p>
<pre><code>refreshClickStream: ----------o---------o----&gt;
     requestStream: -r--------r---------r----&gt;
    responseStream: ----R----------R------R--&gt;   
 suggestion1Stream: -N--s-----N----s----N-s--&gt;
 suggestion2Stream: -N--q-----N----q----N-q--&gt;
 suggestion3Stream: -N--t-----N----t----N-t--&gt;
</code></pre>
<h2 id="&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x5173;&#x95ED;&#x548C;&#x4F7F;&#x7528;&#x5DF2;&#x7F13;&#x5B58;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;-responses"><a class="header-anchor" href="#&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x5173;&#x95ED;&#x548C;&#x4F7F;&#x7528;&#x5DF2;&#x7F13;&#x5B58;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;-responses"></a>&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x5173;&#x95ED;&#x548C;&#x4F7F;&#x7528;&#x5DF2;&#x7F13;&#x5B58;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;(responses)</h2>
<p>&#x53EA;&#x5269;&#x8FD9;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x4E86;&#xFF0C;&#x6BCF;&#x4E2A;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;UI&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x2019;x&#x2019;&#x6309;&#x94AE;&#x6765;&#x5173;&#x95ED;&#x81EA;&#x5DF1;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x5F53;&#x524D;&#x7684;&#x7528;&#x6237;&#x6570;&#x636E;UI&#x4E2D;&#x52A0;&#x8F7D;&#x53E6;&#x4E00;&#x4E2A;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;&#x3002;&#x6700;&#x521D;&#x7684;&#x60F3;&#x6CD5;&#x662F;&#xFF1A;&#x70B9;&#x51FB;&#x4EFB;&#x4F55;&#x5173;&#x95ED;&#x6309;&#x94AE;&#x65F6;&#x90FD;&#x9700;&#x8981;&#x53D1;&#x8D77;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8BF7;&#x6C42;&#xFF1A;</p>
<pre><code>var close1Button = document.querySelector(&apos;.close1&apos;);
var close1ClickStream = Rx.Observable.fromEvent(close1Button, &apos;click&apos;);
// and the same for close2Button and close3Button

var requestStream = refreshClickStream.startWith(&apos;startup click&apos;)
  .merge(close1ClickStream) // we added this
  .map(function() {
    var randomOffset = Math.floor(Math.random()*500);
    return &apos;https://api.github.com/users?since=&apos; + randomOffset;
  });
</code></pre>
<p>&#x8FD9;&#x6837;&#x6CA1;&#x4EC0;&#x4E48;&#x6548;&#x679C;&#xFF0C;&#x8FD9;&#x6837;&#x4F1A;&#x5173;&#x95ED;&#x548C;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x5168;&#x90E8;&#x7684;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7528;&#x6237;&#xFF0C;&#x800C;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x5904;&#x7406;&#x6211;&#x4EEC;&#x70B9;&#x51FB;&#x7684;&#x90A3;&#x4E00;&#x4E2A;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x51E0;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x4E14;&#x8BA9;&#x5B83;&#x53D8;&#x5F97;&#x6709;&#x8DA3;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x91CD;&#x7528;&#x4E4B;&#x524D;&#x7684;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x8FD9;&#x4E2A;API&#x54CD;&#x5E94;&#x7684;&#x6BCF;&#x9875;&#x6570;&#x636E;&#x5927;&#x5C0F;&#x662F;100&#x4E2A;&#x7528;&#x6237;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x53EA;&#x4F7F;&#x7528;&#x4E86;&#x5176;&#x4E2D;&#x4E09;&#x4E2A;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x6709;&#x4E00;&#x5927;&#x5806;&#x672A;&#x4F7F;&#x7528;&#x7684;&#x6570;&#x636E;&#x53EF;&#x4EE5;&#x62FF;&#x6765;&#x7528;&#xFF0C;&#x4E0D;&#x7528;&#x53BB;&#x8BF7;&#x6C42;&#x66F4;&#x591A;&#x6570;&#x636E;&#x4E86;&#x3002;</p>
<p>ok&#xFF0C;&#x518D;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x7EE7;&#x7EED;&#x7528;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x601D;&#x8003;&#x3002;&#x5F53;&#x2019;close1&#x2019;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x4F7F;&#x7528;&#x6700;&#x8FD1;&#x53D1;&#x51FA;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x6267;&#x884C;responseStream&#x51FD;&#x6570;&#x6765;&#x4ECE;&#x54CD;&#x5E94;&#x5217;&#x8868;&#x91CC;&#x968F;&#x673A;&#x7684;&#x62BD;&#x51FA;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x6570;&#x636E;&#x6765;&#xFF0C;&#x5C31;&#x50CF;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#xFF1A;</p>
<pre><code>requestStream: --r---------------&gt;
   responseStream: ------R-----------&gt;
close1ClickStream: ------------c-----&gt;
suggestion1Stream: ------s-----s-----&gt;
</code></pre>
<p>&#x5728;Rx&#x4E2D;&#x4E00;&#x4E2A;&#x7EC4;&#x5408;&#x51FD;&#x6570;&#x53EB;&#x505A;<a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#rxobservableprototypecombinelatestargs-resultselector" target="_blank" rel="external">combineLatest</a>&#xFF0C;&#x5E94;&#x8BE5;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4F1A;&#x628A;&#x6570;&#x636E;&#x6D41;A&#x548C;&#x6570;&#x636E;&#x6D41;B&#x4F5C;&#x4E3A;&#x8F93;&#x5165;&#xFF0C;&#x5E76;&#x4E14;&#x65E0;&#x8BBA;&#x54EA;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;&#x503C;&#x4E86;&#xFF0C;combineLatest&#x51FD;&#x6570;&#x5C31;&#x4F1A;&#x5C06;&#x4ECE;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x6700;&#x8FD1;&#x53D1;&#x51FA;&#x7684;&#x503C;a&#x548C;b&#x4F5C;&#x4E3A;f&#x51FD;&#x6570;&#x7684;&#x8F93;&#x5165;&#xFF0C;&#x8BA1;&#x7B97;&#x540E;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x503C;(c = f(x,y))&#xFF0C;&#x4E0B;&#x9762;&#x7684;&#x56FE;&#x8868;&#x4F1A;&#x8BA9;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x8FC7;&#x7A0B;&#x770B;&#x8D77;&#x6765;&#x4F1A;&#x66F4;&#x52A0;&#x6E05;&#x6670;&#xFF1A;</p>
<pre><code>stream A: --a-----------e--------i--------&gt;
stream B: -----b----c--------d-------q----&gt;
          vvvvvvvv combineLatest(f) vvvvvvv
          ----AB---AC--EC---ED--ID--IQ----&gt;

f&#x662F;&#x8F6C;&#x6362;&#x6210;&#x5927;&#x5199;&#x7684;&#x51FD;&#x6570;
</code></pre>
<p>&#x8FD9;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x628A;combineLatest()&#x51FD;&#x6570;&#x7528;&#x5728;close1ClickStream&#x548C;responseStream&#x4E0A;&#x4E86;&#xFF0C;&#x53EA;&#x8981;&#x5173;&#x95ED;&#x6309;&#x94AE;&#x88AB;&#x70B9;&#x51FB;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x6700;&#x8FD1;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x5728;suggestion1Stream&#x4E0A;&#x4EA7;&#x751F;&#x51FA;&#x4E00;&#x4E2A;&#x65B0;&#x503C;&#x3002;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;combineLatest()&#x51FD;&#x6570;&#x4E5F;&#x662F;&#x76F8;&#x5BF9;&#x7684;&#xFF1A;&#x6BCF;&#x5F53;&#x5728;responseStream&#x4E0A;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x54CD;&#x5E94;&#xFF0C;&#x5B83;&#x5C06;&#x4F1A;&#x7ED3;&#x5408;&#x4E00;&#x6B21;&#x65B0;&#x7684;&#x70B9;&#x51FB;&#x5173;&#x95ED;&#x6309;&#x94AE;&#x4E8B;&#x4EF6;&#x6765;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x63A8;&#x8350;&#x5173;&#x6CE8;&#x7684;&#x7528;&#x6237;&#x6570;&#x636E;&#xFF0C;&#x8FD9;&#x975E;&#x5E38;&#x6709;&#x8DA3;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x53EF;&#x4EE5;&#x7ED9;&#x6211;&#x4EEC;&#x7684;suggestion1Stream&#x7B80;&#x5316;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>var suggestion1Stream = close1ClickStream
  .combineLatest(responseStream, function(click, listUsers) { return listUsers[Math.floor(Math.random()*listUsers.length)];
    }
  )
  .merge(
    refreshClickStream.map(function(){ return null; })
  )
  .startWith(null);
</code></pre>
<p>&#x73B0;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x62FC;&#x56FE;&#x8FD8;&#x7F3A;&#x4E00;&#x5C0F;&#x5757;&#x5730;&#x65B9;&#x3002;combineLatest()&#x51FD;&#x6570;&#x4F7F;&#x7528;&#x4E86;&#x6700;&#x8FD1;&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x6E90;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x67D0;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6E90;&#x8FD8;&#x6CA1;&#x6709;&#x53D1;&#x51FA;&#x4EFB;&#x4F55;&#x4E1C;&#x897F;&#xFF0C;combineLatest()&#x51FD;&#x6570;&#x5C31;&#x4E0D;&#x80FD;&#x5728;&#x8F93;&#x51FA;&#x6D41;&#x4E0A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x4E8B;&#x4EF6;&#x3002;&#x5982;&#x679C;&#x4F60;&#x770B;&#x4E86;&#x4E0A;&#x9762;&#x7684;ASCII&#x56FE;&#x8868;(&#x6587;&#x7AE0;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x56FE;&#x8868;)&#xFF0C;&#x4F60;&#x4F1A;&#x660E;&#x767D;&#x5F53;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;&#x503C;a&#x65F6;&#x5E76;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x7684;&#x8F93;&#x51FA;&#xFF0C;&#x53EA;&#x6709;&#x5F53;&#x7B2C;&#x4E8C;&#x4E2A;&#x6570;&#x636E;&#x6D41;&#x53D1;&#x51FA;&#x4E00;&#x4E2A;&#x503C;b&#x7684;&#x65F6;&#x5019;&#x624D;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x8F93;&#x51FA;&#x503C;&#x3002;</p>
<p>&#x8FD9;&#x91CC;&#x6709;&#x5F88;&#x591A;&#x79CD;&#x65B9;&#x6CD5;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x6700;&#x7B80;&#x5355;&#x7684;&#x4E00;&#x79CD;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x6A21;&#x62DF;&#x2019;close 1&#x2019;&#x7684;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#xFF1A;</p>
<pre><code>var suggestion1Stream = close1ClickStream.startWith(&apos;startup click&apos;) // we added this
  .combineLatest(responseStream,             
    function(click, listUsers) {l
      return listUsers[Math.floor(Math.random()*listUsers.length)];
    }
  )
  .merge(
    refreshClickStream.map(function(){ return null; })
  )
  .startWith(null);
</code></pre>
<h2 id="&#x5C01;&#x88C5;&#x8D77;&#x6765;"><a class="header-anchor" href="#&#x5C01;&#x88C5;&#x8D77;&#x6765;"></a>&#x5C01;&#x88C5;&#x8D77;&#x6765;</h2>
<p>&#x6211;&#x4EEC;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x5C01;&#x88C5;&#x597D;&#x7684;&#x5B8C;&#x6574;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>var refreshButton = document.querySelector(&apos;.refresh&apos;);
var refreshClickStream = Rx.Observable.fromEvent(refreshButton, &apos;click&apos;);

var closeButton1 = document.querySelector(&apos;.close1&apos;);
var close1ClickStream = Rx.Observable.fromEvent(closeButton1, &apos;click&apos;);
// and the same logic for close2 and close3

var requestStream = refreshClickStream.startWith(&apos;startup click&apos;)
  .map(function() {
    var randomOffset = Math.floor(Math.random()*500);
    return &apos;https://api.github.com/users?since=&apos; + randomOffset;
  });

var responseStream = requestStream
  .flatMap(function (requestUrl) {
    return Rx.Observable.fromPromise($.ajax({url: requestUrl}));
  });

var suggestion1Stream = close1ClickStream.startWith(&apos;startup click&apos;)
  .combineLatest(responseStream,             
    function(click, listUsers) {
      return listUsers[Math.floor(Math.random()*listUsers.length)];
    }
  )
  .merge(
    refreshClickStream.map(function(){ return null; })
  )
  .startWith(null);
// and the same logic for suggestion2Stream and suggestion3Stream

suggestion1Stream.subscribe(function(suggestion) {
  if (suggestion === null) {
    // hide the first suggestion DOM element
  }
  else {
    // show the first suggestion DOM element
    // and render the data
  }
});
</code></pre>
<p>&#x4F60;&#x53EF;&#x4EE5;&#x5728;<a href="http://jsfiddle.net/staltz/8jFJH/48/" target="_blank" rel="external">&#x8FD9;&#x91CC;</a>&#x770B;&#x5230;&#x53EF;&#x6F14;&#x793A;&#x7684;&#x793A;&#x4F8B;&#x5DE5;&#x7A0B;</p>
<p>&#x4EE5;&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#x7247;&#x6BB5;&#x867D;&#x5C0F;&#x4F46;&#x505A;&#x5230;&#x5F88;&#x591A;&#x4E8B;&#xFF1A;&#x5B83;&#x9002;&#x5F53;&#x7684;&#x4F7F;&#x7528;&#x5173;&#x6CE8;&#x5206;&#x79BB;(separation of concerns)&#x539F;&#x5219;&#x7684;&#x5B9E;&#x73B0;&#x4E86;&#x5BF9;&#x591A;&#x4E2A;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x7BA1;&#x7406;&#xFF0C;&#x751A;&#x81F3;&#x505A;&#x5230;&#x4E86;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x7684;&#x7F13;&#x5B58;&#x3002;&#x8FD9;&#x79CD;&#x51FD;&#x6570;&#x5F0F;&#x7684;&#x98CE;&#x683C;&#x4F7F;&#x5F97;&#x4EE3;&#x7801;&#x770B;&#x8D77;&#x6765;&#x66F4;&#x50CF;&#x662F;&#x58F0;&#x660E;&#x5F0F;&#x7F16;&#x7A0B;&#x800C;&#x975E;&#x547D;&#x4EE4;&#x5F0F;&#x7F16;&#x7A0B;&#xFF1A;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x662F;&#x5728;&#x7ED9;&#x4E00;&#x7EC4;&#x6307;&#x4EE4;&#x53BB;&#x6267;&#x884C;&#xFF0C;&#x53EA;&#x662F;&#x5B9A;&#x4E49;&#x4E86;&#x4E8B;&#x4EF6;&#x6D41;&#x4E4B;&#x95F4;&#x5173;&#x7CFB;&#x6765;&#x544A;&#x8BC9;&#x5B83;&#x8FD9;&#x662F;&#x4EC0;&#x4E48;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x4EEC;&#x7528;Rx&#x6765;&#x544A;&#x8BC9;&#x8BA1;&#x7B97;&#x673A;suggestion1Stream&#x662F;&#x2019;close 1&#x2019;&#x4E8B;&#x4EF6;&#x7ED3;&#x5408;&#x4ECE;&#x6700;&#x65B0;&#x7684;&#x54CD;&#x5E94;&#x6570;&#x636E;&#x4E2D;&#x62FF;&#x5230;&#x7684;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x6570;&#x636E;&#x7684;&#x6570;&#x636E;&#x6D41;&#xFF0C;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x5F53;&#x5237;&#x65B0;&#x4E8B;&#x4EF6;&#x53D1;&#x751F;&#x65F6;&#x548C;&#x7A0B;&#x5E8F;&#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x5B83;&#x5C31;&#x662F;null&#x3002;</p>
<p>&#x7559;&#x610F;&#x4E00;&#x4E0B;&#x4EE3;&#x7801;&#x4E2D;&#x5E76;&#x672A;&#x51FA;&#x73B0;&#x4F8B;&#x5982;if,for,while&#x7B49;&#x6D41;&#x7A0B;&#x63A7;&#x5236;&#x8BED;&#x53E5;&#xFF0C;&#x6216;&#x8005;&#x50CF;JavaScript&#x90A3;&#x6837;&#x5178;&#x578B;&#x7684;&#x57FA;&#x4E8E;&#x56DE;&#x8C03;(callback-based)&#x7684;&#x6D41;&#x7A0B;&#x63A7;&#x5236;&#x3002;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x7684;&#x8BDD;(&#x7A0D;&#x5019;&#x4F1A;&#x7ED9;&#x4F60;&#x7559;&#x4E00;&#x4E9B;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x6765;&#x4F5C;&#x4E3A;&#x7EC3;&#x4E60;)&#xFF0C;&#x4F60;&#x751A;&#x81F3;&#x53EF;&#x4EE5;&#x5728;subscribe()&#x4E0A;&#x4F7F;&#x7528;filter()&#x51FD;&#x6570;&#x6765;&#x6446;&#x8131;if&#x548C;else&#x3002;&#x5728;Rx&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x4F8B;&#x5982;&#xFF1A;map,filter,scan,merge,combineLatest,startWith&#x7B49;&#x6570;&#x636E;&#x6D41;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x63A7;&#x5236;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x7F16;&#x7A0B;(event-driven program)&#x7684;&#x6D41;&#x7A0B;&#x3002;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x7684;&#x96C6;&#x5408;&#x53EF;&#x4EE5;&#x8BA9;&#x4F60;&#x4F7F;&#x7528;&#x66F4;&#x5C11;&#x7684;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x66F4;&#x5F3A;&#x5927;&#x7684;&#x529F;&#x80FD;&#x3002;</p>
<h2 id="&#x63A5;&#x4E0B;&#x6765;"><a class="header-anchor" href="#&#x63A5;&#x4E0B;&#x6765;"></a>&#x63A5;&#x4E0B;&#x6765;</h2>
<p>&#x5982;&#x679C;&#x4F60;&#x8BA4;&#x4E3A;Rx&#x5C06;&#x4F1A;&#x6210;&#x4E3A;&#x4F60;&#x9996;&#x9009;&#x7684;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x5E93;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x9700;&#x8981;&#x82B1;&#x4E00;&#x4E9B;&#x65F6;&#x95F4;&#x6765;&#x719F;&#x6089;<a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md" target="_blank" rel="external">&#x4E00;&#x5927;&#x6279;&#x7684;&#x51FD;&#x6570;</a>&#x7528;&#x6765;&#x53D8;&#x5F62;&#x3001;&#x8054;&#x5408;&#x548C;&#x521B;&#x5EFA;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&#x3002;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x5728;&#x4E8B;&#x4EF6;&#x6D41;&#x7684;&#x56FE;&#x8868;&#x5F53;&#x4E2D;&#x719F;&#x6089;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x5C31;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#xFF1A;<a href="https://github.com/Netflix/RxJava/wiki/Creating-Observables" target="_blank" rel="external">RxJava&#x2019;s very useful documentation with marble diagrams</a>&#x3002;&#x8BF7;&#x8BB0;&#x4F4F;&#xFF0C;&#x65E0;&#x8BBA;&#x4F55;&#x65F6;&#x4F60;&#x9047;&#x5230;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x753B;&#x4E00;&#x4E0B;&#x8FD9;&#x4E9B;&#x56FE;&#xFF0C;&#x601D;&#x8003;&#x4E00;&#x4E0B;&#xFF0C;&#x770B;&#x4E00;&#x770B;&#x8FD9;&#x4E00;&#x5927;&#x4E32;&#x51FD;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x7EE7;&#x7EED;&#x601D;&#x8003;&#x3002;&#x4EE5;&#x6211;&#x4E2A;&#x4EBA;&#x7ECF;&#x9A8C;&#xFF0C;&#x8FD9;&#x6837;&#x6548;&#x679C;&#x5F88;&#x6709;&#x6548;&#x3002;</p>
<p>&#x4E00;&#x65E6;&#x4F60;&#x5F00;&#x59CB;&#x4F7F;&#x7528;&#x4E86;Rx&#x7F16;&#x7A0B;&#xFF0C;&#x8BF7;&#x8BB0;&#x4F4F;&#xFF0C;&#x7406;&#x89E3;<a href="https://github.com/Reactive-Extensions/RxJS/blob/master/doc/gettingstarted/creating.md#cold-vs-hot-observables" target="_blank" rel="external">Cold vs Hot Observables</a>&#x7684;&#x6982;&#x5FF5;&#x662F;&#x975E;&#x5E38;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x5FFD;&#x89C6;&#x4E86;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x53CD;&#x5F39;&#x56DE;&#x6765;&#x5E76;&#x6B8B;&#x5FCD;&#x7684;&#x53CD;&#x54AC;&#x4F60;&#x4E00;&#x53E3;&#x3002;&#x6211;&#x8FD9;&#x91CC;&#x5DF2;&#x7ECF;&#x8B66;&#x544A;&#x4F60;&#x4E86;&#xFF0C;&#x5B66;&#x4E60;&#x51FD;&#x6570;&#x5F0F;&#x7F16;&#x7A0B;&#x53EF;&#x4EE5;&#x63D0;&#x9AD8;&#x4F60;&#x7684;&#x6280;&#x80FD;&#xFF0C;&#x719F;&#x6089;&#x4E00;&#x4E9B;&#x5E38;&#x89C1;&#x95EE;&#x9898;&#xFF0C;&#x4F8B;&#x5982;Rx&#x4F1A;&#x5E26;&#x6765;&#x7684;&#x526F;&#x4F5C;&#x7528;</p>
<p>&#x4F46;&#x662F;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x5E93;&#x5E76;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;Rx&#xFF0C;&#x8FD8;&#x6709;&#x76F8;&#x5BF9;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x7684;&#xFF0C;&#x6CA1;&#x6709;Rx&#x90A3;&#x4E9B;&#x602A;&#x7656;&#x7684;<a href="http://baconjs.github.io/" target="_blank" rel="external">Bacon.js</a>&#x3002;<a href="http://elm-lang.org/" target="_blank" rel="external">Elm Language</a>&#x5219;&#x4EE5;&#x5B83;&#x81EA;&#x5DF1;&#x7684;&#x65B9;&#x5F0F;&#x652F;&#x6301;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#xFF1A;&#x5B83;&#x662F;&#x4E00;&#x95E8;&#x4F1A;&#x7F16;&#x8BD1;&#x6210;Javascript + HTML + CSS&#x7684;&#x54CD;&#x5E94;&#x5F0F;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#xFF0C;&#x5E76;&#x6709;&#x4E00;&#x4E2A;<a href="http://debug.elm-lang.org/" target="_blank" rel="external">time travelling debugger</a>&#x529F;&#x80FD;&#xFF0C;&#x5F88;&#x68D2;&#x5427;&#x3002;</p>
<p>&#x800C;Rx&#x5BF9;&#x4E8E;&#x50CF;&#x524D;&#x7AEF;&#x548C;App&#x8FD9;&#x6837;&#x9700;&#x8981;&#x5904;&#x7406;&#x5927;&#x91CF;&#x7684;&#x7F16;&#x7A0B;&#x6548;&#x679C;&#x662F;&#x975E;&#x5E38;&#x68D2;&#x7684;&#x3002;&#x4F46;&#x662F;&#x5B83;&#x4E0D;&#x53EA;&#x662F;&#x53EF;&#x4EE5;&#x7528;&#x5728;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x7528;&#x5728;&#x540E;&#x7AEF;&#x6216;&#x8005;&#x63A5;&#x8FD1;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5730;&#x65B9;&#x3002;&#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;<a href="http://techblog.netflix.com/2013/02/rxjava-netflix-api.html" target="_blank" rel="external">RxJava&#x5C31;&#x662F;Netflix&#x670D;&#x52A1;&#x7AEF;API&#x7528;&#x6765;&#x5904;&#x7406;&#x5E76;&#x884C;&#x7684;&#x7EC4;&#x4EF6;</a>&#x3002;Rx&#x5E76;&#x4E0D;&#x662F;&#x5C40;&#x9650;&#x4E8E;&#x67D0;&#x79CD;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6216;&#x8005;&#x7F16;&#x7A0B;&#x8BED;&#x8A00;&#x7684;&#x6846;&#x67B6;&#xFF0C;&#x5B83;&#x771F;&#x7684;&#x662F;&#x4F60;&#x7F16;&#x5199;&#x4EFB;&#x4F55;&#x4E8B;&#x4EF6;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#xFF0C;&#x53EF;&#x4EE5;&#x9075;&#x5FAA;&#x7684;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x68D2;&#x7684;&#x7F16;&#x7A0B;&#x8303;&#x5F0F;&#x3002;</p>
<p>&#x5982;&#x679C;&#x8FD9;&#x7BC7;&#x6559;&#x7A0B;&#x5BF9;&#x4F60;&#x6709;&#x5E2E;&#x52A9;, <a href="https://twitter.com/intent/tweet?original_referer=https%3A%2F%2Fgist.github.com%2Fstaltz%2F868e7e9bc2a7b8c1f754%2F&amp;text=The%20introduction%20to%20Reactive%20Programming%20you%27ve%20been%20missing&amp;tw_p=tweetbutton&amp;url=https%3A%2F%2Fgist.github.com%2Fstaltz%2F868e7e9bc2a7b8c1f754&amp;via=andrestaltz" target="_blank" rel="external">&#x90A3;&#x4E48;&#x5C31;&#x8BF7;&#x6765;&#x8F6C;&#x53D1;&#x4E00;&#x4E0B;&#x5427;(tweet it forward)</a>.</p>]]></content>
    
    <summary type="html">
    
      相信你们在学习响应式编程这个新技术的时候都会充满了好奇，特别是它的一些变体，例如：Rx系列、Bacon.js、RAC等等。在缺乏优秀资料的前提下，响应式编程的学习过程将满是荆棘。起初，我试图寻找一些教程，却只找到少量的实践指南，而且它们讲的都非常浅显，从来没人接受围绕响应式编程建立一个完整知识体系的挑战。此外，官方文档通常也不能很好地帮助你理解某些函数，因为它们通常看起来很绕，不信请看这里：
    
    </summary>
    
      <category term="晨读" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/"/>
    
      <category term="编程" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>Java编译时与运行时</title>
    <link href="http://ngudream.com/2016/10/12/java-compile-running/"/>
    <id>http://ngudream.com/2016/10/12/java-compile-running/</id>
    <published>2016-10-12T14:50:17.000Z</published>
    <updated>2017-01-15T07:58:44.409Z</updated>
    
    <content type="html"><![CDATA[<div style="margin-top:-16px"><img class="pic lazy" data-original="/2016/10/12/java-compile-running/javacompiler.png" style="float:left; width:100px; height:56px; margin-right:16px" alt="">
<span>&#x5728;&#x5F00;&#x53D1;&#x548C;&#x8BBE;&#x8BA1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8003;&#x8651;&#x7F16;&#x8BD1;&#x65F6;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;&#x4EE5;&#x53CA;&#x6784;&#x5EFA;&#x65F6;&#x8FD9;&#x4E09;&#x4E2A;&#x6982;&#x5FF5;&#x3002;&#x7406;&#x89E3;&#x8FD9;&#x51E0;&#x4E2A;&#x6982;&#x5FF5;&#x53EF;&#x4EE5;&#x66F4;&#x597D;&#x5730;&#x5E2E;&#x52A9;&#x4F60;&#x53BB;&#x4E86;&#x89E3;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x7684;&#x539F;&#x7406;&#x3002;&#x4E0B;&#x9762;&#x662F;&#x521D;&#x5B66;&#x8005;&#x664B;&#x7EA7;&#x4E2D;&#x7EA7;&#x6C34;&#x5E73;&#x9700;&#x8981;&#x77E5;&#x9053;&#x7684;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x3002;</span></div>
<a id="more"></a>
<blockquote>
<p>&#x6765;&#x6E90;&#xFF1A;<a href="">Java&#x540E;&#x7AEF;&#x6280;&#x672F;</a><br>
&#x6587;&#x7AE0;&#x94FE;&#x63A5;&#xFF1A;<a href="http://www.toutiao.com/a6340200038689407490/?tt_from=mobile_qq&amp;utm_campaign=client_share&amp;app=news_article&amp;utm_source=mobile_qq&amp;iid=5662400977&amp;utm_medium=toutiao_android" target="_blank" rel="external">Java &#x9762;&#x8BD5;&#x9898;&#x95EE;&#x4E0E;&#x7B54;&#xFF1A;&#x7F16;&#x8BD1;&#x65F6;&#x4E0E;&#x8FD0;&#x884C;&#x65F6;</a></p>
</blockquote>
<div align="center">
<img data-original="/2016/10/12/java-compile-running/640.jpg" class="lazy">
</div>
<p><strong>Q.&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x7247;&#x6BB5;&#x4E2D;&#xFF0C;&#x884C;A&#x548C;&#x884C;B&#x6240;&#x6807;&#x8BC6;&#x7684;&#x4EE3;&#x7801;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x5462;&#xFF1F;</strong></p>
<pre><code>public class ConstantFolding {
    static final int number1 = 5;
    static final int number2 = 6;
    static int number3 = 5;
    static int number4= 6;
    public static void main(String[ ] args) {
        int product1 = number1 * number2; //line A
        int product2 = number3 * number4; //line B
    }
}
</code></pre>
<p>A.&#x5728;&#x884C;A&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;product&#x7684;&#x503C;&#x662F;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x8BA1;&#x7B97;&#x7684;&#xFF0C;&#x884C;B&#x5219;&#x662F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x8BA1;&#x7B97;&#x7684;&#x3002;&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528;Java&#x53CD;&#x7F16;&#x8BD1;&#x5668;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;jd-gui&#xFF09;&#x6765;&#x53CD;&#x7F16;&#x8BD1;ConstantFolding.class&#x6587;&#x4EF6;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x5C31;&#x4F1A;&#x4ECE;&#x4E0B;&#x9762;&#x7684;&#x7ED3;&#x679C;&#x91CC;&#x5F97;&#x5230;&#x7B54;&#x6848;&#x3002;</p>
<pre><code>public class ConstantFolding{
    static final int number1 = 5;
    static final int number2 = 6;
    static int number3 = 5;
    static int number4 = 6;
    public static void main(String[ ] args)
    {
        int product1 = 30;
        int product2 = number3 * number4;
    }
}
</code></pre>
<p>&#x5E38;&#x91CF;&#x6298;&#x53E0;&#x662F;&#x4E00;&#x79CD;Java&#x7F16;&#x8BD1;&#x5668;&#x4F7F;&#x7528;&#x7684;&#x4F18;&#x5316;&#x6280;&#x672F;&#x3002;&#x7531;&#x4E8E;final&#x53D8;&#x91CF;&#x7684;&#x503C;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#xFF0C;&#x56E0;&#x6B64;&#x5C31;&#x53EF;&#x4EE5;&#x5BF9;&#x5B83;&#x4EEC;&#x4F18;&#x5316;&#x3002;Java&#x53CD;&#x7F16;&#x8BD1;&#x5668;&#x548C;javap&#x547D;&#x4EE4;&#x90FD;&#x662F;&#x67E5;&#x770B;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x4EE3;&#x7801;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5B57;&#x8282;&#x7801;&#xFF09;&#x7684;&#x5229;&#x5668;&#x3002;</p>
<p><strong>Q.&#x4F60;&#x80FD;&#x60F3;&#x51FA;&#x9664;&#x4E86;&#x4EE3;&#x7801;&#x4F18;&#x5316;&#x5916;&#xFF0C;&#x5728;&#x4EC0;&#x4E48;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x67E5;&#x770B;&#x7F16;&#x8BD1;&#x8FC7;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x5F88;&#x6709;&#x5E2E;&#x52A9;&#x7684;&#xFF1F;</strong></p>
<p>A.Java&#x91CC;&#x7684;&#x6CDB;&#x578B;&#x662F;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x6784;&#x9020;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x7F16;&#x8BD1;&#x540E;&#x7684;class&#x6587;&#x4EF6;&#x6765;&#x7406;&#x89E3;&#x6CDB;&#x578B;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x5B83;&#x6765;&#x89E3;&#x51B3;&#x6CDB;&#x578B;&#x76F8;&#x5173;&#x7684;&#x95EE;&#x9898;&#x3002;</p>
<p><strong>Q.&#x4E0B;&#x9762;&#x54EA;&#x4E9B;&#x662F;&#x53D1;&#x751F;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x6216;&#x8005;&#x4E24;&#x8005;&#x90FD;&#x6709;&#xFF1F;</strong></p>
<p>1&#x3001;&#x65B9;&#x6CD5;&#x91CD;&#x8F7D;</p>
<p>&#x8FD9;&#x4E2A;&#x662F;&#x53D1;&#x751F;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x7684;&#x3002;&#x65B9;&#x6CD5;&#x91CD;&#x8F7D;&#x4E5F;&#x88AB;&#x79F0;&#x4E3A;&#x7F16;&#x8BD1;&#x65F6;&#x591A;&#x6001;&#xFF0C;&#x56E0;&#x4E3A;&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x6765;&#x9009;&#x62E9;&#x4F7F;&#x7528;&#x54EA;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;</p>
<pre><code>public class{
    // method #1
    public static void evaluate(String param1);
    // method #2
    public static void evaluate(int param1);
}
</code></pre>
<p>&#x5982;&#x679C;&#x7F16;&#x8BD1;&#x5668;&#x8981;&#x7F16;&#x8BD1;&#x4E0B;&#x9762;&#x7684;&#x8BED;&#x53E5;&#x7684;&#x8BDD;&#xFF1A;</p>
<p>evaluate(&#x201C;My Test Argument passed to param1&#x201D;);</p>
<p>&#x5B83;&#x4F1A;&#x6839;&#x636E;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#x662F;&#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x91CF;&#xFF0C;&#x751F;&#x6210;&#x8C03;&#x7528;#1&#x65B9;&#x6CD5;&#x7684;&#x5B57;&#x8282;&#x7801;</p>
<p>2&#x3001;&#x65B9;&#x6CD5;&#x8986;&#x76D6;</p>
<p>&#x8FD9;&#x4E2A;&#x662F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x53D1;&#x751F;&#x7684;&#x3002;&#x65B9;&#x6CD5;&#x91CD;&#x8F7D;&#x88AB;&#x79F0;&#x4E3A;&#x8FD0;&#x884C;&#x65F6;&#x591A;&#x6001;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x7F16;&#x8BD1;&#x5668;&#x4E0D;&#x77E5;&#x9053;&#x5E76;&#x4E14;&#x6CA1;&#x6CD5;&#x77E5;&#x9053;&#x8BE5;&#x53BB;&#x8C03;&#x7528;&#x54EA;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;JVM&#x4F1A;&#x5728;&#x4EE3;&#x7801;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#x505A;&#x51FA;&#x51B3;&#x5B9A;&#x3002;</p>
<pre><code>public class A {
    public int compute(int input) { //method #3
        return 3 * input;
    }
}
public class B extends A {
    @Override
    public int compute(int input) { //method #4
        return 4 * input;
    }
}
</code></pre>
<p>&#x5B50;&#x7C7B;B&#x4E2D;&#x7684;compute(&#x2026;)&#x65B9;&#x6CD5;&#x91CD;&#x5199;&#x4E86;&#x7236;&#x7C7B;&#x7684;compute(&#x2026;)&#x65B9;&#x6CD5;&#x3002;&#x5982;&#x679C;&#x7F16;&#x8BD1;&#x5668;&#x9047;&#x5230;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>public int evaluate(A reference, int arg2) {
    int result = reference.compute(arg2);
}
</code></pre>
<p>&#x7F16;&#x8BD1;&#x5668;&#x662F;&#x6CA1;&#x6CD5;&#x77E5;&#x9053;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;reference&#x7684;&#x7C7B;&#x578B;&#x662F;A&#x8FD8;&#x662F;B&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x53EA;&#x80FD;&#x591F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x6839;&#x636E;&#x8D4B;&#x7ED9;&#x8F93;&#x5165;&#x53D8;&#x91CF;&#x201C;reference&#x201D;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x7C7B;&#x578B;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;A&#x6216;&#x8005;B&#x7684;&#x5B9E;&#x4F8B;&#xFF09;&#x6765;&#x51B3;&#x5B9A;&#x8C03;&#x7528;&#x65B9;&#x6CD5;#3&#x8FD8;&#x662F;&#x65B9;&#x6CD5;#4.</p>
<p>3&#x3001;&#x6CDB;&#x578B;&#xFF08;&#x53C8;&#x79F0;&#x7C7B;&#x578B;&#x68C0;&#x9A8C;&#xFF09;</p>
<p>&#x8FD9;&#x4E2A;&#x662F;&#x53D1;&#x751F;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x7684;&#x3002;&#x7F16;&#x8BD1;&#x5668;&#x8D1F;&#x8D23;&#x68C0;&#x67E5;&#x7A0B;&#x5E8F;&#x4E2D;&#x7C7B;&#x578B;&#x7684;&#x6B63;&#x786E;&#x6027;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x4F7F;&#x7528;&#x4E86;&#x6CDB;&#x578B;&#x7684;&#x4EE3;&#x7801;&#x7FFB;&#x8BD1;&#x6216;&#x8005;&#x91CD;&#x5199;&#x6210;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#x5728;&#x5F53;&#x524D;JVM&#x4E0A;&#x7684;&#x975E;&#x6CDB;&#x578B;&#x4EE3;&#x7801;&#x3002;&#x8FD9;&#x4E2A;&#x6280;&#x672F;&#x88AB;&#x79F0;&#x4E3A;&#x201C;&#x7C7B;&#x578B;&#x64E6;&#x9664;&#x201C;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x6765;&#x8BF4;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x64E6;&#x9664;&#x6240;&#x6709;&#x5728;&#x5C16;&#x62EC;&#x53F7;&#x91CC;&#x7684;&#x7C7B;&#x578B;&#x4FE1;&#x606F;&#xFF0C;&#x6765;&#x4FDD;&#x8BC1;&#x548C;&#x7248;&#x672C;1.4.0&#x6216;&#x8005;&#x66F4;&#x65E9;&#x7248;&#x672C;&#x7684;JRE&#x7684;&#x517C;&#x5BB9;&#x6027;&#x3002;</p>
<pre><code>List&lt;String&gt; myList = new ArrayList&lt;String&gt;(10);
</code></pre>
<p>&#x7F16;&#x8BD1;&#x540E;&#x6210;&#x4E3A;&#x4E86;&#xFF1A;</p>
<pre><code>List myList = new ArrayList(10);
</code></pre>
<p>4&#x3001;&#x6CE8;&#x89E3;&#xFF08;Annotation&#xFF09;</p>
<p>&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8FD0;&#x884C;&#x65F6;&#x6216;&#x8005;&#x7F16;&#x8BD1;&#x65F6;&#x7684;&#x6CE8;&#x89E3;&#x3002;</p>
<pre><code>public class B extends A {
    @Override
    public int compute(int input){
        return 4 * input;
    }
}
</code></pre>
<p>@Override&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x7F16;&#x8BD1;&#x65F6;&#x6CE8;&#x89E3;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6355;&#x83B7;&#x7C7B;&#x4F3C;&#x4E8E;&#x5728;&#x5B50;&#x7C7B;&#x4E2D;&#x628A;toString()&#x5199;&#x6210;tostring()&#x8FD9;&#x6837;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x5728;Java 5&#x4E2D;&#xFF0C;&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6CE8;&#x89E3;&#x53EF;&#x4EE5;&#x7528;&#x6CE8;&#x89E3;&#x5904;&#x7406;&#x5DE5;&#x5177;(Anotation Process Tool &#x2014;&#x2014;APT)&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;&#x5230;&#x4E86;Java 6&#xFF0C;&#x8FD9;&#x4E2A;&#x529F;&#x80FD;&#x5DF2;&#x7ECF;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x4E86;&#x3002;</p>
<pre><code>public class MyTest{
    @Test
    public void testEmptyness( ){
        org.junit.Assert.assertTrue(getList( ).isEmpty( ));
    }
    private List getList( ){
    }
}
</code></pre>
<p>@Test&#x662F;JUnit&#x6846;&#x67B6;&#x7528;&#x6765;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x6765;&#x51B3;&#x5B9A;&#x8C03;&#x7528;&#x6D4B;&#x8BD5;&#x7C7B;&#x7684;&#x54EA;&#x4E2A;&#xFF08;&#x4E9B;&#xFF09;&#x65B9;&#x6CD5;&#x7684;&#x6CE8;&#x89E3;&#x3002;</p>
<pre><code>@Test (timeout=100)
public void testTimeout( ) {
    while(true);
}
</code></pre>
<p>&#x5982;&#x679C;&#x8FD0;&#x884C;&#x65F6;&#x95F4;&#x8D85;&#x8FC7;100ms&#x7684;&#x8BDD;&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x5C31;&#x4F1A;&#x5931;&#x8D25;&#x3002;</p>
<pre><code>@Test (expected=IndexOutOfBoundsException.class)
public void testOutOfBounds( ) {
    new ArrayList&lt;Object&gt;( ).get(1);
}
</code></pre>
<p>&#x5982;&#x679C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x6CA1;&#x6709;&#x629B;&#x51FA;IndexOutOfBoundsException&#x6216;&#x8005;&#x629B;&#x51FA;&#x7684;&#x662F;&#x5176;&#x4ED6;&#x7684;&#x5F02;&#x5E38;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x7528;&#x4F8B;&#x5C31;&#x4F1A;&#x5931;&#x8D25;&#x3002;&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6CE8;&#x89E3;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x901A;&#x8FC7;Java&#x53CD;&#x5C04;API&#x91CC;&#x65B0;&#x589E;&#x7684;AnnotatedElement&#x548C;&#x201D;Annotation&#x201D;&#x5143;&#x7D20;&#x63A5;&#x53E3;&#x6765;&#x5904;&#x7406;&#x3002;</p>
<p>5&#x3001;&#x5F02;&#x5E38;&#xFF08;Exception&#xFF09;</p>
<p>&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x8FD0;&#x884C;&#x65F6;&#x5F02;&#x5E38;&#x6216;&#x8005;&#x7F16;&#x8BD1;&#x65F6;&#x5F02;&#x5E38;&#x3002;</p>
<p>5.1&#x3001;&#x8FD0;&#x884C;&#x65F6;&#x5F02;&#x5E38;&#xFF08;RuntimeException&#xFF09;</p>
<p>&#x4E5F;&#x79F0;&#x4F5C;&#x672A;&#x68C0;&#x6D4B;&#x7684;&#x5F02;&#x5E38;&#xFF08;unchecked exception&#xFF09;&#xFF0C;&#x8FD9;&#x8868;&#x793A;&#x8FD9;&#x79CD;&#x5F02;&#x5E38;&#x4E0D;&#x9700;&#x8981;&#x7F16;&#x8BD1;&#x5668;&#x6765;&#x68C0;&#x6D4B;&#x3002;RuntimeException&#x662F;&#x6240;&#x6709;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x629B;&#x51FA;&#x7684;&#x5F02;&#x5E38;&#x7684;&#x7236;&#x7C7B;&#x3002;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x9664;&#x8981;&#x6355;&#x83B7;&#x5F02;&#x5E38;&#x5916;&#xFF0C;&#x5982;&#x679C;&#x5B83;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x80FD;&#x4F1A;&#x629B;&#x51FA;RuntimeException&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x7528;throw&#x8BED;&#x53E5;&#x6765;&#x58F0;&#x660E;&#x629B;&#x51FA;&#x7684;&#x5F02;&#x5E38;&#x3002;<br>
&#x4F8B;&#x5982;&#xFF1A;NullPointerException&#xFF0C;ArrayIndexOutOfBoundsException&#xFF0C;&#x7B49;&#x7B49;</p>
<p>5.2&#x3001;&#x53D7;&#x68C0;&#x67E5;&#x5F02;&#x5E38;&#xFF08;checked exception&#xFF09;</p>
<p>&#x90FD;&#x662F;&#x7F16;&#x8BD1;&#x5668;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#x7684;&#xFF0C;&#x901A;&#x8FC7;throws&#x8BED;&#x53E5;&#x6216;&#x8005;try{}cathch{} &#x8BED;&#x53E5;&#x5757;&#x6765;&#x5904;&#x7406;&#x68C0;&#x6D4B;&#x5F02;&#x5E38;&#x3002;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x5206;&#x6790;&#x54EA;&#x4E9B;&#x5F02;&#x5E38;&#x4F1A;&#x5728;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x6216;&#x8005;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#x629B;&#x51FA;&#x3002;</p>
<p>6&#x3001;&#x9762;&#x5411;&#x5207;&#x9762;&#x7684;&#x7F16;&#x7A0B;&#xFF08;Aspect Oriented Programming-AOP&#xFF09;</p>
<p>&#x5207;&#x9762;&#x53EF;&#x4EE5;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;&#x6216;&#xFF0C;&#x52A0;&#x8F7D;&#x65F6;&#x6216;&#x8005;&#x8FD0;&#x884C;&#x65F6;&#x7EC7;&#x5165;&#x3002;</p>
<p>6.1&#x3001;&#x7F16;&#x8BD1;&#x671F;</p>
<p>&#x7F16;&#x8BD1;&#x671F;&#x7EC7;&#x5165;&#x662F;&#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#x3002;&#x5982;&#x679C;&#x4F60;&#x62E5;&#x6709;&#x5E94;&#x7528;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;AOP&#x7F16;&#x8BD1;&#x5668;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;ajc &#x2013; AspectJ&#x7F16;&#x8BD1;&#x5668;&#xFF09;&#x5BF9;&#x6E90;&#x7801;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x7136;&#x540E;&#x8F93;&#x51FA;&#x7EC7;&#x5165;&#x5B8C;&#x6210;&#x7684;class&#x6587;&#x4EF6;&#x3002;AOP&#x7F16;&#x8BD1;&#x7684;&#x8FC7;&#x7A0B;&#x5305;&#x542B;&#x4E86;waver&#x7684;&#x8C03;&#x7528;&#x3002;&#x5207;&#x9762;&#x7684;&#x5F62;&#x5F0F;&#x53EF;&#x4EE5;&#x662F;&#x6E90;&#x7801;&#x7684;&#x5F62;&#x5F0F;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#x5F62;&#x5F0F;&#x3002;&#x5982;&#x679C;&#x5207;&#x9762;&#x9700;&#x8981;&#x9488;&#x5BF9;&#x53D7;&#x5F71;&#x54CD;&#x7684;&#x7C7B;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x5C31;&#x9700;&#x8981;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x7EC7;&#x5165;&#x4E86;&#x3002;</p>
<p>6.2&#x3001;&#x7F16;&#x8BD1;&#x540E;</p>
<p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6709;&#x65F6;&#x5019;&#x4E5F;&#x88AB;&#x79F0;&#x4E3A;&#x4E8C;&#x8FDB;&#x5236;&#x7EC7;&#x5165;&#xFF0C;&#x5B83;&#x88AB;&#x7528;&#x6765;&#x7EC7;&#x5165;&#x5DF2;&#x6709;&#x7684;class&#x6587;&#x4EF6;&#x548C;jar&#x6587;&#x4EF6;&#x3002;&#x548C;&#x7F16;&#x8BD1;&#x65F6;&#x7EC7;&#x5165;&#x65B9;&#x5F0F;&#x76F8;&#x540C;&#xFF0C;&#x7528;&#x6765;&#x7EC7;&#x5165;&#x7684;&#x5207;&#x9762;&#x53EF;&#x4EE5;&#x662F;&#x6E90;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x4E8C;&#x8FDB;&#x5236;&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x4EEC;&#x81EA;&#x5DF1;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x7EC7;&#x5165;&#x5207;&#x9762;&#x3002;</p>
<p>6.3&#x3001;&#x88C5;&#x8F7D;&#x671F;</p>
<p>&#x8FD9;&#x79CD;&#x7EC7;&#x5165;&#x662F;&#x4E00;&#x79CD;&#x4E8C;&#x8FDB;&#x5236;&#x7EC7;&#x5165;&#xFF0C;&#x5B83;&#x88AB;&#x5EF6;&#x8FDF;&#x5230;JVM&#x52A0;&#x8F7D;class&#x6587;&#x4EF6;&#x548C;&#x5B9A;&#x4E49;&#x7C7B;&#x7684;&#x65F6;&#x5019;&#x3002;&#x4E3A;&#x4E86;&#x652F;&#x6301;&#x8FD9;&#x79CD;&#x7EC7;&#x5165;&#x65B9;&#x5F0F;&#xFF0C;&#x9700;&#x8981;&#x663E;&#x5F0F;&#x5730;&#x7531;&#x8FD0;&#x884C;&#x65F6;&#x73AF;&#x5883;&#x6216;&#x8005;&#x901A;&#x8FC7;&#x4E00;&#x79CD;&#x201C;&#x7EC7;&#x5165;&#x4EE3;&#x7406;&#xFF08;weaving agent&#xFF09;&#x201C;&#x6765;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x6216;&#x8005;&#x591A;&#x4E2A;&#x201C;&#x7EC7;&#x5165;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#xFF08;weaving class loader&#xFF09;&#x201D;&#x3002;</p>
<p>6.4&#x3001;&#x8FD0;&#x884C;&#x65F6;</p>
<p>&#x5BF9;&#x5DF2;&#x7ECF;&#x52A0;&#x8F7D;&#x5230;JVM&#x91CC;&#x7684;&#x7C7B;&#x8FDB;&#x884C;&#x7EC7;&#x5165;</p>
<p>7&#x3001;&#x5176;&#x4ED6;&#x5206;&#x7C7B;</p>
<p>&#x7EE7;&#x627F; &#x2013; &#x53D1;&#x751F;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x662F;&#x9759;&#x6001;&#x7684;</p>
<p>&#x4EE3;&#x7406;&#x6216;&#x8005;&#x7EC4;&#x5408; &#x2013; &#x53D1;&#x751F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x66F4;&#x52A0;&#x5177;&#x6709;&#x52A8;&#x6001;&#x6027;&#x548C;&#x7075;&#x6D3B;&#x6027;&#x3002;</p>
<p><strong>Q.&#x4F60;&#x6709;&#x6CA1;&#x6709;&#x542C;&#x8BF4;&#x8FC7;&#x201C;&#x7EC4;&#x5408;&#x4F18;&#x4E8E;&#x7EE7;&#x627F;&#x201D;&#x8FD9;&#x6837;&#x7684;&#x8BF4;&#x6CD5;&#x5462;&#xFF1F;&#x5982;&#x679C;&#x542C;&#x8BF4;&#x8FC7;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x662F;&#x600E;&#x4E48;&#x7406;&#x89E3;&#x7684;&#x5462;&#xFF1F;</strong></p>
<p>A.&#x7EE7;&#x627F;&#x662F;&#x4E00;&#x79CD;&#x591A;&#x6001;&#x5DE5;&#x5177;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x79CD;&#x4EE3;&#x7801;&#x590D;&#x7528;&#x5DE5;&#x5177;&#x3002;&#x6709;&#x4E9B;&#x5F00;&#x53D1;&#x8005;&#x559C;&#x6B22;&#x7528;&#x7EE7;&#x627F;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x590D;&#x7528;&#xFF0C;&#x5373;&#x4F7F;&#x662F;&#x5728;&#x6CA1;&#x6709;&#x591A;&#x6001;&#x5173;&#x7CFB;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x3002;&#x662F;&#x5426;&#x4F7F;&#x7528;&#x7EE7;&#x627F;&#x7684;&#x89C4;&#x5219;&#x662F;&#x7EE7;&#x627F;&#x53EA;&#x80FD;&#x7528;&#x5728;&#x7C7B;&#x4E4B;&#x95F4;&#x6709;&#x201C;&#x7236;&#x5B50;&#x201D;&#x5173;&#x7CFB;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x3002;</p>
<ol>
<li>
<p>&#x4E0D;&#x8981;&#x4EC5;&#x4EC5;&#x4E3A;&#x4E86;&#x4EE3;&#x7801;&#x590D;&#x7528;&#x800C;&#x7EE7;&#x627F;&#x3002;&#x5F53;&#x4F60;&#x4F7F;&#x7528;&#x7EC4;&#x5408;&#x6765;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x590D;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x4E0D;&#x4F1A;&#x4EA7;&#x751F;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x7684;&#x3002;&#x8FC7;&#x5EA6;&#x4F7F;&#x7528;&#x7EE7;&#x627F;&#xFF08;&#x901A;&#x8FC7;&#x201C;extends&#x201D;&#x5173;&#x952E;&#x5B57;&#xFF09;&#x7684;&#x8BDD;&#xFF0C;&#x5982;&#x679C;&#x4FEE;&#x6539;&#x4E86;&#x7236;&#x7C7B;&#xFF0C;&#x4F1A;&#x635F;&#x574F;&#x6240;&#x6709;&#x7684;&#x5B50;&#x7C7B;&#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x5B50;&#x7C7B;&#x548C;&#x7236;&#x7C7B;&#x7684;&#x7D27;&#x8026;&#x5408;&#x5173;&#x7CFB;&#x662F;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x4EA7;&#x751F;&#x7684;&#x3002;</p>
</li>
<li>
<p>&#x4E0D;&#x8981;&#x4EC5;&#x4EC5;&#x4E3A;&#x4E86;&#x591A;&#x6001;&#x800C;&#x7EE7;&#x627F;&#x3002;&#x5982;&#x679C;&#x4F60;&#x7684;&#x7C7B;&#x4E4B;&#x95F4;&#x6CA1;&#x6709;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#xFF0C;&#x5E76;&#x4E14;&#x4F60;&#x60F3;&#x8981;&#x5B9E;&#x73B0;&#x591A;&#x6001;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x63A5;&#x53E3;&#x548C;&#x7EC4;&#x5408;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x6837;&#x4E0D;&#x4EC5;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x91CD;&#x7528;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x8FD0;&#x884C;&#x65F6;&#x7684;&#x7075;&#x6D3B;&#x6027;&#x3002;</p>
</li>
</ol>
<p>&#x8FD9;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#xFF08;Gang of Four&#xFF09;&#x7684;&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;&#x91CC;&#x66F4;&#x503E;&#x5411;&#x4E8E;&#x4F7F;&#x7528;&#x7EC4;&#x5408;&#x800C;&#x4E0D;&#x662F;&#x7EE7;&#x627F;&#x7684;&#x539F;&#x56E0;&#x3002;&#x9762;&#x8BD5;&#x8005;&#x4F1A;&#x5728;&#x4F60;&#x7684;&#x7B54;&#x6848;&#x91CC;&#x7740;&#x91CD;&#x5173;&#x6CE8;&#x8FD9;&#x51E0;&#x4E2A;&#x8BCD;&#x8BED;&#x2014;&#x2014;&#x201C;&#x8026;&#x5408;&#x201D;&#xFF0C;&#x201C;&#x9759;&#x6001;&#x8FD8;&#x662F;&#x52A8;&#x6001;&#x201D;&#xFF0C;&#x4EE5;&#x53CA;&#x201C;&#x53D1;&#x751F;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x8FD8;&#x662F;&#x8FD0;&#x884C;&#x65F6;&#x201D;&#x3002;&#x8FD0;&#x884C;&#x65F6;&#x7684;&#x7075;&#x6D3B;&#x6027;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7EC4;&#x5408;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x56E0;&#x4E3A;&#x7C7B;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x52A8;&#x6001;&#x5730;&#x6839;&#x636E;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#x6709;&#x6761;&#x4EF6;&#x6216;&#x8005;&#x65E0;&#x6761;&#x4EF6;&#x5730;&#x8FDB;&#x884C;&#x7EC4;&#x5408;&#x3002;&#x4F46;&#x662F;&#x7EE7;&#x627F;&#x5374;&#x662F;&#x9759;&#x6001;&#x7684;&#x3002;</p>
<p><strong>Q.&#x4F60;&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x5B9E;&#x4F8B;&#x6765;&#x533A;&#x522B;&#x7F16;&#x8BD1;&#x671F;&#x7EE7;&#x627F;&#x548C;&#x8FD0;&#x884C;&#x65F6;&#x7EE7;&#x627F;&#xFF0C;&#x4EE5;&#x53CA;&#x6307;&#x51FA;Java&#x652F;&#x6301;&#x54EA;&#x79CD;&#x5417;&#xFF1F;</strong></p>
<p>A.&#x201C;&#x7EE7;&#x627F;&#x201D;&#x8868;&#x793A;&#x52A8;&#x4F5C;&#x548C;&#x5C5E;&#x6027;&#x4ECE;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x4F20;&#x9012;&#x5230;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x573A;&#x666F;&#x3002;Java&#x8BED;&#x8A00;&#x672C;&#x8EAB;&#x53EA;&#x652F;&#x6301;&#x7F16;&#x8BD1;&#x671F;&#x7EE7;&#x627F;&#xFF0C;&#x5B83;&#x662F;&#x901A;&#x8FC7;&#x201C;extends&#x201D;&#x5173;&#x952E;&#x5B57;&#x6765;&#x4EA7;&#x751F;&#x5B50;&#x7C7B;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A;</p>
<pre><code>public class Parent {
    public String saySomething( ) { return &#x201C;Parent is called&#x201D;;
    }
}
public class Child extends Parent {
    @Override
    public String saySomething( ) {
    return super.saySomething( ) + &#x201C;, Child is called&#x201D;;
    }
}
</code></pre>
<p>&#x201C;Child&#x201D;&#x7C7B;&#x7684;saySomething()&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x4F1A;&#x8FD4;&#x56DE;&#x201C;Parent is called&#xFF0C;Child is Called&#x201D;&#xFF0C;&#x56E0;&#x4E3A;&#xFF0C;&#x5B50;&#x7C7B;&#x7684;&#x8C03;&#x7528;&#x7EE7;&#x627F;&#x4E86;&#x7236;&#x7C7B;&#x7684;&#x201C;Parenet is called&#x201D;&#x3002;&#x5173;&#x952E;&#x5B57;&#x201C;super&#x201D;&#x662F;&#x7528;&#x6765;&#x8C03;&#x7528;&#x201C;Parent&#x201D;&#x7C7B;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x8FD0;&#x884C;&#x65F6;&#x7EE7;&#x627F;&#x8868;&#x793A;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x6784;&#x5EFA;&#x7236;/&#x5B50;&#x7C7B;&#x5173;&#x7CFB;&#x3002;Java&#x8BED;&#x8A00;&#x672C;&#x8EAB;&#x4E0D;&#x652F;&#x6301;&#x8FD0;&#x884C;&#x65F6;&#x7EE7;&#x627F;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x4E00;&#x79CD;&#x66FF;&#x4EE3;&#x7684;&#x65B9;&#x6848;&#x53EB;&#x505A;&#x201C;&#x4EE3;&#x7406;&#x201D;&#x6216;&#x8005;&#x201C;&#x7EC4;&#x5408;&#x201D;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x7EC4;&#x4EF6;&#x4E00;&#x4E2A;&#x5C42;&#x6B21;&#x5BF9;&#x8C61;&#x7684;&#x5B50;&#x7C7B;&#x3002;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x6A21;&#x62DF;&#x8FD0;&#x884C;&#x65F6;&#x7EE7;&#x627F;&#x7684;&#x5B9E;&#x73B0;&#x3002;&#x5728;Java&#x91CC;&#xFF0C;&#x4EE3;&#x7406;&#x7684;&#x5178;&#x578B;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public class Parent {
    public String saySomething( ) {
        return &#x201C;Parent is called&#x201D;;
    }
}
public class Child {
    public String saySomething( ) {
        return new Parent( ).saySomething( ) + &#x201C;, Child is called&#x201D;;
    }
}
</code></pre>
<p>&#x5B50;&#x7C7B;&#x4EE3;&#x7406;&#x4E86;&#x7236;&#x7C7B;&#x7684;&#x8C03;&#x7528;&#x3002;&#x7EC4;&#x5408;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B9E;&#x73B0;&#xFF1A;</p>
<pre><code>public class Child {
    private Parent parent = null;
    public Child( ){ this.parent = new Parent( );
    }
    public String saySomething( ) {
        return this.parent.saySomething( ) + &#x201C;, Child is called&#x201D;;
    }
}
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;div style=&quot;margin-top:-16px&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/10/12/java-compile-running/javacompiler.png&quot; style=&quot;float:left; width:100px; height:56px; margin-right:16px&quot; alt=&quot;&quot;&gt;
&lt;span&gt;&amp;#x5728;&amp;#x5F00;&amp;#x53D1;&amp;#x548C;&amp;#x8BBE;&amp;#x8BA1;&amp;#x7684;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x9700;&amp;#x8981;&amp;#x8003;&amp;#x8651;&amp;#x7F16;&amp;#x8BD1;&amp;#x65F6;&amp;#xFF0C;&amp;#x8FD0;&amp;#x884C;&amp;#x65F6;&amp;#x4EE5;&amp;#x53CA;&amp;#x6784;&amp;#x5EFA;&amp;#x65F6;&amp;#x8FD9;&amp;#x4E09;&amp;#x4E2A;&amp;#x6982;&amp;#x5FF5;&amp;#x3002;&amp;#x7406;&amp;#x89E3;&amp;#x8FD9;&amp;#x51E0;&amp;#x4E2A;&amp;#x6982;&amp;#x5FF5;&amp;#x53EF;&amp;#x4EE5;&amp;#x66F4;&amp;#x597D;&amp;#x5730;&amp;#x5E2E;&amp;#x52A9;&amp;#x4F60;&amp;#x53BB;&amp;#x4E86;&amp;#x89E3;&amp;#x4E00;&amp;#x4E9B;&amp;#x57FA;&amp;#x672C;&amp;#x7684;&amp;#x539F;&amp;#x7406;&amp;#x3002;&amp;#x4E0B;&amp;#x9762;&amp;#x662F;&amp;#x521D;&amp;#x5B66;&amp;#x8005;&amp;#x664B;&amp;#x7EA7;&amp;#x4E2D;&amp;#x7EA7;&amp;#x6C34;&amp;#x5E73;&amp;#x9700;&amp;#x8981;&amp;#x77E5;&amp;#x9053;&amp;#x7684;&amp;#x4E00;&amp;#x4E9B;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="编程" scheme="http://ngudream.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://ngudream.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>MySql删除重复记录</title>
    <link href="http://ngudream.com/2016/10/11/mysql-delete-repeat-data/"/>
    <id>http://ngudream.com/2016/10/11/mysql-delete-repeat-data/</id>
    <published>2016-10-11T13:54:36.000Z</published>
    <updated>2017-01-15T07:58:44.425Z</updated>
    
    <content type="html"><![CDATA[<p>1&#x3001; &#x67E5;&#x627E;&#x8868;&#x4E2D;&#x591A;&#x4F59;&#x7684;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#xFF0C;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#x662F;&#x6839;&#x636E;&#x5355;&#x4E2A;&#x5B57;&#x6BB5;&#xFF08;peopleId&#xFF09;&#x6765;&#x5224;&#x65AD;</p>
<pre><code>select&#xA0;*&#xA0;from&#xA0;people
where&#xA0;peopleId&#xA0;in&#xA0;(select&#xA0;&#xA0; peopleId&#xA0;&#xA0;from&#xA0;&#xA0; people&#xA0;&#xA0;group&#xA0;&#xA0;by&#xA0;&#xA0; peopleId&#xA0;&#xA0;having&#xA0;&#xA0;count(peopleId)&#xA0;&gt;&#xA0;1)
</code></pre>
<p>2&#x3001; &#x5220;&#x9664;&#x8868;&#x4E2D;&#x591A;&#x4F59;&#x7684;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#xFF0C;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#x662F;&#x6839;&#x636E;&#x5355;&#x4E2A;&#x5B57;&#x6BB5;&#xFF08;peopleId&#xFF09;&#x6765;&#x5224;&#x65AD;&#xFF0C;&#x53EA;&#x7559;&#x6709;rowid&#x6700;&#x5C0F;&#x7684;&#x8BB0;&#x5F55;</p>
<pre><code>delete&#xA0;from&#xA0;people&#xA0;
where&#xA0;peopleId&#xA0;&#xA0;in&#xA0;(select&#xA0;&#xA0; peopleId&#xA0;&#xA0;from&#xA0;people&#xA0;&#xA0;group&#xA0;&#xA0;by&#xA0;&#xA0; peopleId&#xA0;&#xA0;&#xA0;having&#xA0;&#xA0;count(peopleId)&#xA0;&gt;&#xA0;1)
and&#xA0;rowid&#xA0;not&#xA0;in&#xA0;(select&#xA0;min(rowid)&#xA0;from&#xA0;&#xA0; people&#xA0;&#xA0;group&#xA0;by&#xA0;peopleId&#xA0;&#xA0;having&#xA0;count(peopleId )&gt;1)
</code></pre>
<p>3&#x3001;&#x67E5;&#x627E;&#x8868;&#x4E2D;&#x591A;&#x4F59;&#x7684;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#xFF08;&#x591A;&#x4E2A;&#x5B57;&#x6BB5;&#xFF09;</p>
<pre><code>select&#xA0;*&#xA0;from&#xA0;vitae a
where&#xA0;(a.peopleId,a.seq)&#xA0;in&#xA0;&#xA0; (select&#xA0;peopleId,seq&#xA0;from&#xA0;vitae&#xA0;group&#xA0;by&#xA0;peopleId,seq&#xA0;&#xA0;having&#xA0;count(*)&#xA0;&gt;&#xA0;1)
</code></pre>
<p>4&#x3001;&#x5220;&#x9664;&#x8868;&#x4E2D;&#x591A;&#x4F59;&#x7684;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#xFF08;&#x591A;&#x4E2A;&#x5B57;&#x6BB5;&#xFF09;&#xFF0C;&#x53EA;&#x7559;&#x6709;rowid&#x6700;&#x5C0F;&#x7684;&#x8BB0;&#x5F55;</p>
<pre><code>delete&#xA0;from&#xA0;vitae a
where&#xA0;(a.peopleId,a.seq)&#xA0;in&#xA0;&#xA0; (select&#xA0;peopleId,seq&#xA0;from&#xA0;vitae&#xA0;group&#xA0;by&#xA0;peopleId,seq&#xA0;having&#xA0;count(*)&#xA0;&gt;&#xA0;1)
and&#xA0;rowid&#xA0;not&#xA0;in&#xA0;(select&#xA0;min(rowid)&#xA0;from&#xA0;vitae&#xA0;group&#xA0;by&#xA0;peopleId,seq&#xA0;having&#xA0;count(*)&gt;1)
</code></pre>
<p>5&#x3001;&#x67E5;&#x627E;&#x8868;&#x4E2D;&#x591A;&#x4F59;&#x7684;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#xFF08;&#x591A;&#x4E2A;&#x5B57;&#x6BB5;&#xFF09;&#xFF0C;&#x4E0D;&#x5305;&#x542B;rowid&#x6700;&#x5C0F;&#x7684;&#x8BB0;&#x5F55;</p>
<pre><code>select&#xA0;*&#xA0;from&#xA0;vitae a
where&#xA0;(a.peopleId,a.seq)&#xA0;in&#xA0;&#xA0; (select&#xA0;peopleId,seq&#xA0;from&#xA0;vitae&#xA0;group&#xA0;by&#xA0;peopleId,seq&#xA0;having&#xA0;count(*)&#xA0;&gt;&#xA0;1)
and&#xA0;rowid&#xA0;not&#xA0;in&#xA0;(select&#xA0;min(rowid)&#xA0;from&#xA0;vitae&#xA0;group&#xA0;by&#xA0;peopleId,seq&#xA0;having&#xA0;count(*)&gt;1)
</code></pre>
<p>6&#x3001; &#x6BD4;&#x65B9;&#x8BF4;&#xFF0C;&#x5728;A&#x8868;&#x4E2D;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x201C;name&#x201D;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x540C;&#x8BB0;&#x5F55;&#x4E4B;&#x95F4;&#x7684;&#x201C;name&#x201D;&#x503C;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x76F8;&#x540C;&#xFF0C;&#x73B0;&#x5728;&#x5C31;&#x662F;&#x9700;&#x8981;&#x67E5;&#x8BE2;&#x51FA;&#x5728;&#x8BE5;&#x8868;&#x4E2D;&#x7684;&#x5404;&#x8BB0;&#x5F55;&#x4E4B;&#x95F4;&#xFF0C;&#x201C;name&#x201D;&#x503C;&#x5B58;&#x5728;&#x91CD;&#x590D;&#x7684;&#x9879;&#xFF1B;</p>
<pre><code>Select&#xA0;Name,Count(*)&#xA0;From&#xA0;A&#xA0;Group&#xA0;By&#xA0;Name&#xA0;Having&#xA0;Count(*)&#xA0;&gt;&#xA0;1
</code></pre>
<p>&#x5982;&#x679C;&#x8FD8;&#x67E5;&#x6027;&#x522B;&#x4E5F;&#x76F8;&#x540C;&#x5927;&#x5219;&#x5982;&#x4E0B;:</p>
<pre><code>Select&#xA0;Name,sex,Count(*)&#xA0;From&#xA0;A&#xA0;Group&#xA0;By&#xA0;Name,sex&#xA0;Having&#xA0;Count(*)&#xA0;&gt;&#xA0;1
</code></pre>
<p>&#x6709;&#x4E24;&#x4E2A;&#x610F;&#x4E49;&#x4E0A;&#x7684;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#xFF0C;&#x4E00;&#x662F;&#x5B8C;&#x5168;&#x91CD;&#x590D;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x4E5F;&#x5373;&#x6240;&#x6709;&#x5B57;&#x6BB5;&#x5747;&#x91CD;&#x590D;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x4E8C;&#x662F;&#x90E8;&#x5206;&#x5173;&#x952E;&#x5B57;&#x6BB5;&#x91CD;&#x590D;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x6BD4;&#x5982;Name&#x5B57;&#x6BB5;&#x91CD;&#x590D;&#xFF0C;&#x800C;&#x5176;&#x4ED6;&#x5B57;&#x6BB5;&#x4E0D;&#x4E00;&#x5B9A;&#x91CD;&#x590D;&#x6216;&#x90FD;&#x91CD;&#x590D;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x3002;</p>
<p>&#xFF08;1&#xFF09;&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x79CD;&#x91CD;&#x590D;&#xFF0C;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x89E3;&#x51B3;&#xFF0C;&#x4F7F;&#x7528;</p>
<pre><code>select&#xA0;distinct&#xA0;*&#xA0;from&#xA0;tableName
</code></pre>
<p>&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x65E0;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#x7684;&#x7ED3;&#x679C;&#x96C6;&#x3002;</p>
<p>&#x5982;&#x679C;&#x8BE5;&#x8868;&#x9700;&#x8981;&#x5220;&#x9664;&#x91CD;&#x590D;&#x7684;&#x8BB0;&#x5F55;&#xFF08;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#x4FDD;&#x7559;1&#x6761;&#xFF09;&#xFF0C;&#x53EF;&#x4EE5;&#x6309;&#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;&#x5220;&#x9664;</p>
<pre><code>select&#xA0;distinct&#xA0;*&#xA0;into&#xA0;#Tmp&#xA0;from&#xA0;tableName
drop&#xA0;table&#xA0;tableName
select&#xA0;*&#xA0;into&#xA0;tableName&#xA0;from&#xA0;#Tmp
drop&#xA0;table&#xA0;#Tmp
</code></pre>
<p>&#x53D1;&#x751F;&#x8FD9;&#x79CD;&#x91CD;&#x590D;&#x7684;&#x539F;&#x56E0;&#x662F;&#x8868;&#x8BBE;&#x8BA1;&#x4E0D;&#x5468;&#x4EA7;&#x751F;&#x7684;&#xFF0C;&#x589E;&#x52A0;&#x552F;&#x4E00;&#x7D22;&#x5F15;&#x5217;&#x5373;&#x53EF;&#x89E3;&#x51B3;&#x3002;</p>
<p>&#xFF08;2&#xFF09;&#x8FD9;&#x7C7B;&#x91CD;&#x590D;&#x95EE;&#x9898;&#x901A;&#x5E38;&#x8981;&#x6C42;&#x4FDD;&#x7559;&#x91CD;&#x590D;&#x8BB0;&#x5F55;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#xFF0C;&#x64CD;&#x4F5C;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;</p>
<p>&#x5047;&#x8BBE;&#x6709;&#x91CD;&#x590D;&#x7684;&#x5B57;&#x6BB5;&#x4E3A;Name,Address&#xFF0C;&#x8981;&#x6C42;&#x5F97;&#x5230;&#x8FD9;&#x4E24;&#x4E2A;&#x5B57;&#x6BB5;&#x552F;&#x4E00;&#x7684;&#x7ED3;&#x679C;&#x96C6;</p>
<pre><code>select&#xA0;identity(int,1,1)&#xA0;as&#xA0;autoID,&#xA0;*&#xA0;into&#xA0;#Tmp&#xA0;from&#xA0;tableName
select&#xA0;min(autoID)&#xA0;as&#xA0;autoID&#xA0;into&#xA0;#Tmp2&#xA0;from&#xA0;#Tmp&#xA0;group&#xA0;by&#xA0;Name,autoID
select&#xA0;*&#xA0;from&#xA0;#Tmp&#xA0;where&#xA0;autoID&#xA0;in(select&#xA0;autoID&#xA0;from&#xA0;#tmp2)
</code></pre>
<p>&#x6700;&#x540E;&#x4E00;&#x4E2A;select&#x5373;&#x5F97;&#x5230;&#x4E86;Name&#xFF0C;Address&#x4E0D;&#x91CD;&#x590D;&#x7684;&#x7ED3;&#x679C;&#x96C6;&#xFF08;&#x4F46;&#x591A;&#x4E86;&#x4E00;&#x4E2A;autoID&#x5B57;&#x6BB5;&#xFF0C;&#x5B9E;&#x9645;&#x5199;&#x65F6;&#x53EF;&#x4EE5;&#x5199;&#x5728;select&#x5B50;&#x53E5;&#x4E2D;&#x7701;&#x53BB;&#x6B64;&#x5217;&#xFF09;</p>
<p>7&#x3001; &#x67E5;&#x8BE2;&#x91CD;&#x590D;</p>
<pre><code>select&#xA0;*&#xA0;from&#xA0;tablename&#xA0;where&#xA0;id&#xA0;in&#xA0;(
select&#xA0;id&#xA0;from&#xA0;tablename&#xA0;
group&#xA0;by&#xA0;id&#xA0;
having&#xA0;count(id)&#xA0;&gt;&#xA0;1
)
</code></pre>]]></content>
    
    <summary type="html">
    
      查找表中多余的重复记录、查找表中多余的重复记录（多个字段）、查找表中多余的重复记录（多个字段），不包含rowid最小的记录、删除表中多余的重复记录、删除表中多余的重复记录（多个字段），只留有rowid最小的记录。
    
    </summary>
    
      <category term="数据库" scheme="http://ngudream.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySql" scheme="http://ngudream.com/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>Picasso的基本使用</title>
    <link href="http://ngudream.com/2016/10/10/android-picasso-use/"/>
    <id>http://ngudream.com/2016/10/10/android-picasso-use/</id>
    <published>2016-10-10T11:39:48.000Z</published>
    <updated>2017-01-15T07:58:44.348Z</updated>
    
    <content type="html"><![CDATA[<div><a href="https://github.com/square/picasso" target="_blank" rel="external"><img class="pic lazy" data-original="/2016/10/10/android-picasso-use/picasso-mainimage.jpg" style="float:left; width:100px; height:56px; margin-right:16px" alt="Picasso"></a>
<span>&#x7B14;&#x8005;&#x5728;&#x9879;&#x76EE;&#x91CC;&#x9762;&#xFF0C;&#x5BF9;&#x56FE;&#x7247;&#x7684;&#x52A0;&#x8F7D;&#x4E00;&#x822C;&#x4F7F;&#x7528;&#x7684;&#x662F;Picasso&#x6216;&#x8005;Glide&#xFF0C;&#x4ECA;&#x5929;&#x9996;&#x5148;&#x4ECB;&#x7ECD;&#x7684;&#x662F;Picasso&#xFF0C;&#x540E;&#x7EED;&#x518D;&#x4ECB;&#x7ECD;Glide&#x3002;Picasso&#x662F;Square&#x516C;&#x53F8;&#x5F00;&#x6E90;&#x7684;&#x4E00;&#x4E2A;Android&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x548C;&#x7F13;&#x5B58;&#x5E93;&#xFF0C;&#x901A;&#x8FC7;&#x5B83;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x7B80;&#x5355;&#x7684;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x5373;&#x53EF;&#x5B9E;&#x73B0;&#x56FE;&#x7247;&#x4E0B;&#x8F7D;&#x548C;&#x7F13;&#x5B58;&#x529F;&#x80FD;&#x3002;&#x5B83;&#x7684;github&#x9879;&#x76EE;&#x5730;&#x5740;&#x4E3A;&#xFF1A;<a href="https://github.com/square/picasso" target="_blank" rel="external">https://github.com/square/picasso</a></span></div>
<a id="more"></a>
<p>Picass&#x6D41;&#x7A0B;&#x56FE;&#xFF1A;</p>
<div style="text-align:center">
<img data-original="/2016/10/10/android-picasso-use/picasso.jpg" class="lazy">
</div>
<h2 id="&#x57FA;&#x672C;&#x914D;&#x7F6E;"><a class="header-anchor" href="#&#x57FA;&#x672C;&#x914D;&#x7F6E;"></a>&#x57FA;&#x672C;&#x914D;&#x7F6E;</h2>
<p>&#x5982;&#x679C;&#x5927;&#x5BB6;&#x4F7F;&#x7528;AndroidStudio&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;compile:</p>
<pre><code>compile &apos;com.squareup.picasso:picasso:2.5.2&apos;
</code></pre>
<p>&#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x5728;&#x4F7F;&#x7528;eclipse&#xFF0C;&#x5B83;&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x76F8;&#x5E94;&#x7684;jar&#x5305;&#x4E0B;&#x8F7D;&#xFF1A;<br>
<a href="https://search.maven.org/remote_content?g=com.squareup.picasso&amp;a=picasso&amp;v=LATEST" target="_blank" rel="external">Picasso Jar</a></p>
<p>&#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;maven&#x7684;&#x65B9;&#x5F0F;&#xFF1A;</p>
<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;com.squareup.picasso&lt;/groupId&gt;
  &lt;artifactId&gt;picasso&lt;/artifactId&gt;
  &lt;version&gt;2.5.2&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>&#x56E0;&#x4E3A;&#x5728;Picasso&#x8FDB;&#x884C;build&#x65F6;&#xFF0C;&#x521B;&#x5EFA;Downloader&#x65F6;&#xFF0C;&#x4F1A;&#x7528;&#x53CD;&#x5C04;&#x53BB;&#x68C0;&#x6D4B;&#x662F;&#x5426;&#x9879;&#x76EE;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;okhttp&#xFF0C;&#x5982;&#x679C;&#x9879;&#x76EE;&#x96C6;&#x6210;&#x4E86;okhttp&#xFF0C;&#x5219;&#x7528;okhttp&#x53BB;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;OkHttpDownloader.java&#x4E0B;&#x8F7D;&#x5668;&#xFF0C;&#x6240;&#x4EE5;&#x5F53;&#x4F60;&#x5BF9;&#x9879;&#x76EE;&#x4EE3;&#x7801;&#x6DF7;&#x6DC6;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x6DFB;&#x52A0;ProGuard&#x89C4;&#x5219;&#xFF1A;</p>
<pre><code>-dontwarn com.squareup.okhttp.**
</code></pre>
<p>&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x770B;<a href="https://github.com/square/picasso/blob/master/picasso/src/main/java/com/squareup/picasso/OkHttp3Downloader.java" target="_blank" rel="external">OkHttp3Downloader.java</a></p>
<h2 id="&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h2>
<h3 id="picasso&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;"><a class="header-anchor" href="#picasso&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;"></a>Picasso&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;</h3>
<p>&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4E00;&#x53E5;&#x8BDD;&#xFF08;&#x4F7F;&#x7528;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#xFF09;&#xFF0C;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#xFF1A;</p>
<pre><code>Picasso.with(imageView.getContext()).load(url).into(imageView);
</code></pre>
<p>&#x5B83;&#x7684;load&#x65B9;&#x6CD5;&#x63D0;&#x4F9B;&#x4E86;&#x56DB;&#x79CD;&#x5F62;&#x5F0F;&#xFF0C;&#x6BCF;&#x4E2A;&#x90FD;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;RequestCreator&#xFF1A;</p>
<ul>
<li>load(Uri uri)</li>
<li>load(String path)</li>
<li>load(File file)</li>
<li>load(int resourceId)</li>
</ul>
<p>&#x4ECE;&#x53C2;&#x6570;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x52A0;&#x8F7D;&#x672C;&#x5730;&#x7684;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x4ECE;&#x7F51;&#x7EDC;&#x4E0A;&#x53D6;&#x7684;&#x3002;</p>
<h3 id="picasso&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;"><a class="header-anchor" href="#picasso&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;"></a>Picasso&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;</h3>
<p>&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5728;load&#x7684;&#x53C2;&#x6570;&#x91CC;&#x4F20;&#x5165;&#x4E00;&#x4E2A;url&#x5C31;&#x884C;&#xFF1A;</p>
<pre><code>Picasso.with(imageView.getContext())
                 .load(url)
                 .error(R.drawable.photo_holder_72dp)
                 .into(imageView);
</code></pre>
<p>error&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x672C;&#x5730;&#x56FE;&#x7247;&#xFF0C;&#x5F53;&#x7F51;&#x7EDC;&#x52A0;&#x8F7D;&#x51FA;&#x9519;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x663E;&#x793A;&#x8FD9;&#x5F20;&#x672C;&#x5730;&#x7684;&#x56FE;&#x7247;&#x3002;</p>
<p>&#x8FD9;&#x6837;&#x7684;&#x52A0;&#x8F7D;&#xFF0C;&#x4E00;&#x8FDB;&#x5165;&#x9875;&#x9762;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x662F;&#x770B;&#x4E0D;&#x5230;imageview&#x4E0A;&#x663E;&#x793A;&#x6709;&#x56FE;&#x7247;&#x7684;&#xFF0C;&#x4E3A;&#x4E86;&#x66F4;&#x53CB;&#x597D;&#x7684;&#x663E;&#x793A;&#x6548;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B83;&#x7684;placeholder&#x65B9;&#x6CD5;&#xFF0C;&#x5148;&#x8BBE;&#x7F6E;&#x4E00;&#x5F20;&#x9ED8;&#x8BA4;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x7B49;&#x7F51;&#x7EDC;&#x52A0;&#x8F7D;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x663E;&#x793A;&#x65B0;&#x7684;&#x56FE;&#x7247;&#x3002;</p>
<pre><code>Picasso.with(imageView.getContext())
                        .load(url)
                        .placeholder(R.drawable.photo_holder_72dp)
                        .error(R.drawable.photo_holder_72dp)
                        .networkPolicy(NetworkPolicy.NO_CACHE, NetworkPolicy.NO_STORE)
                        .into(imageView);
</code></pre>
<p>&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;&#xFF0C;&#x5E76;&#x4E14;&#x8BBE;&#x7F6E;&#x4E86;&#x4E0D;&#x68C0;&#x67E5;&#x786C;&#x76D8;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x4E0B;&#x8F7D;&#x56FE;&#x7247;&#x7ED3;&#x679C;&#x4E5F;&#x4E0D;&#x4FDD;&#x5B58;&#x5728;&#x786C;&#x76D8;&#x4E2D;&#x3002;&#x5BF9;&#x4E8E;&#x672C;&#x5730;&#x786C;&#x76D8;&#x7F13;&#x5B58;&#xFF0C;&#x5982;&#x679C;&#x7528;okhttp&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x8FD9;&#x4E24;&#x8005;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x9ED8;&#x8BA4;&#x7684;downloader&#xFF0C;&#x53EA;&#x80FD;&#x8BBE;&#x7F6E;NO_CACHE&#xFF1A;</p>
<pre><code>/** Skips checking the disk cache and forces loading through the network. */
  NO_CACHE(1 &lt;&lt; 0),

  /**
   * Skips storing the result into the disk cache.
   * &lt;p&gt;
   * &lt;em&gt;Note&lt;/em&gt;: At this time this is only supported if you are using OkHttp.
   */
  NO_STORE(1 &lt;&lt; 1),

  /** Forces the request through the disk cache only, skipping network. */
  OFFLINE(1 &lt;&lt; 2);
</code></pre>
<h3 id="picasso&#x5E38;&#x7528;&#x8BBE;&#x7F6E;"><a class="header-anchor" href="#picasso&#x5E38;&#x7528;&#x8BBE;&#x7F6E;"></a>Picasso&#x5E38;&#x7528;&#x8BBE;&#x7F6E;</h3>
<p>1&#x3001; &#x5982;&#x679C;&#x60F3;&#x6309;&#x7B49;&#x6BD4;&#x4F8B;&#x7684;&#x538B;&#x7F29;&#x56FE;&#x7247;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;fit()&#x65B9;&#x6CD5;&#x3002;</p>
<pre><code>Picasso.with(imageView.getContext())
                        .load(url)
                        .fit()
                        .into(imageView);
</code></pre>
<p>2&#x3001; &#x5982;&#x679C;&#x60F3;&#x6309;&#x7279;&#x5B9A;&#x503C;&#x53BB;&#x538B;&#x7F29;&#x56FE;&#x7247;&#xFF0C;&#x53EF;&#x7528;&#x4F7F;&#x7528;resize()&#x65B9;&#x6CD5;&#x3002;</p>
<pre><code>Picasso.with(imageView.getContext())
                        .load(url)
                        .resize(100, 100)
                        .into(imageView);
</code></pre>
<p>3&#x3001; &#x5982;&#x679C;&#x60F3;&#x65CB;&#x8F6C;&#x56FE;&#x7247;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;rotate()&#x65B9;&#x6CD5;&#x3002;</p>
<pre><code>Picasso.with(imageView.getContext())
                        .load(url)
                        .rotate(180)
                        .into(imageView);
</code></pre>
<p>4&#x3001; &#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x56FE;&#x7247;&#x7684;&#x663E;&#x793A;&#x62C9;&#x4F38;&#x6837;&#x5F0F;&#x4E3A;&#x7531;&#x4E2D;&#x95F4;&#x5411;&#x5916;&#xFF0C;&#x5373;ImageView&#x7684;scaleType&#x7684;centerCrop&#x3002;</p>
<pre><code>Picasso.with(imageView.getContext())
                        .load(url)
                        .centerCrop()
                        .into(imageView);
</code></pre>
<p>5&#x3001; Picasso&#x5E76;&#x6CA1;&#x6709;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x4F20;&#x5165;&#x7684;context&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;&#x5B83;&#x83B7;&#x53D6;ApplicationContext&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x4E86;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x9632;&#x6B62;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x3002;</p>
<pre><code>public static Picasso with(Context context) {
    if (singleton == null) {
      synchronized (Picasso.class) {
        if (singleton == null) {
          singleton = new Builder(context).build();
        }
      }
    }
    return singleton;
  }

// Start building a new {@link Picasso} instance.
    public Builder(Context context) {
      if (context == null) {
        throw new IllegalArgumentException(&quot;Context must not be null.&quot;);
      }
      this.context = context.getApplicationContext();
    }
</code></pre>
<p>6&#x3001; Picasso&#x8FD8;&#x53EF;&#x4EE5;&#x8C03;&#x8282;&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#x7684;&#x4F18;&#x5148;&#x987A;&#x5E8F;</p>
<p>&#x5B83;&#x63D0;&#x4F9B;&#x4E86;&#x4E09;&#x79CD;&#x4F18;&#x5148;&#x7EA7;&#xFF1A;HIGH&#xFF0C;MEDIUM&#xFF0C;LOW&#x3002;&#x9ED8;&#x8BA4;&#x4E0D;&#x8BBE;&#x7F6E;&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x662F;MEDIUM&#x7EA7;&#x522B;&#x3002;</p>
<pre><code>Picasso.with(imageView.getContext())
                        .load(url)
                        .priority(Picasso.Priority.HIGH)
                        .into(imageView);
</code></pre>
<h3 id="picasso&#x5B9E;&#x4F8B;"><a class="header-anchor" href="#picasso&#x5B9E;&#x4F8B;"></a>Picasso&#x5B9E;&#x4F8B;</h3>
<p>&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF1A;</p>
<pre><code>
@Override
        public View getView(final int position, View convertView, ViewGroup container) {
            // TODO Auto-generated method stub
            final ViewHolder holder;
            final BannerItem item = getItem(position);
            if (convertView == null) {
                holder = new ViewHolder();
                convertView = LayoutInflater.from(container.getContext()).inflate(R.layout.account_banner, container, false);
                holder.mImageView = (ImageView)convertView.findViewById(R.id.iv_banner);
                convertView.setTag(holder);
            } else {
                holder = (ViewHolder) convertView.getTag();
            }
            if (mImageLoader != null) {
                mImageLoader.loadImage(holder.mImageView, item.getUrl());//&#x4E0B;&#x8F7D;&#x56FE;&#x7247;
            }
            holder.mImageView.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View v) {
                    // TODO Auto-generated method stub
                }
            });
            return convertView;
        }

//&#x4E0B;&#x8F7D;&#x56FE;&#x7247;&#x63A5;&#x53E3;
public interface ImageLoader {
        void loadImage(ImageView imageView, String url);
    }

//&#x8BBE;&#x7F6E;imageview&#x7684;&#x56FE;&#x7247;&#x4E0B;&#x8F7D;&#x5668;
setImageLoadder(new ImageLoader(){
            @Override
            public void loadImage(ImageView imageView, String url) {
                Picasso.with(imageView.getContext())
                        .load(url)
						.placeholder(R.drawable.photo_holder_72dp)
                        .error(R.drawable.photo_holder_72dp)
                        .centerCrop()
                        .into(imageView);

            }
        });
</code></pre>
<h2 id="picasso-&#x5185;&#x5B58;"><a class="header-anchor" href="#picasso-&#x5185;&#x5B58;"></a>Picasso &#x5185;&#x5B58;</h2>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4F7F;&#x7528;&#x4EE5;&#x4E0B;&#x51E0;&#x70B9;&#x6765;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x51CF;&#x5C11;&#x5185;&#x5B58;&#x6D88;&#x8017;&#x3002;</p>
<h3 id="&#x5927;&#x56FE;&#x4E0D;&#x4F7F;&#x7528;memory-cache"><a class="header-anchor" href="#&#x5927;&#x56FE;&#x4E0D;&#x4F7F;&#x7528;memory-cache"></a>&#x5927;&#x56FE;&#x4E0D;&#x4F7F;&#x7528;memory cache</h3>
<p>&#x7531;&#x4E8E;Picasso&#x9ED8;&#x8BA4;&#x4F1A;&#x4F7F;&#x7528;&#x8BBE;&#x5907;&#x7684;15%&#x7684;&#x5185;&#x5B58;&#x4F5C;&#x4E3A;&#x5185;&#x5B58;&#x56FE;&#x7247;&#x7F13;&#x5B58;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x4E0D;&#x5C06;&#x5B83;&#x7F13;&#x5B58;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x7528;&#x5B8C;&#x5C31;&#x53CA;&#x65F6;&#x56DE;&#x6536;&#xFF0C;&#x9700;&#x8981;&#x7528;&#x7684;&#x65F6;&#x5019;&#x518D;&#x52A0;&#x8F7D;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x51CF;&#x5C11;&#x5185;&#x5B58;&#x6D88;&#x8017;&#x3002;</p>
<blockquote>
<p>Android&#x4E2D;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#xFF08;BitMap&#xFF09;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x4E3B;&#x8981;&#x548C;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x56E0;&#x6570;&#x6709;&#x5173;&#xFF1A;&#x56FE;&#x7247;&#x957F;&#x5EA6;&#xFF0C;&#x56FE;&#x7247;&#x5BBD;&#x5EA6;&#xFF0C;&#x5355;&#x4F4D;&#x50CF;&#x7D20;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#xFF08;BitMap&#xFF09;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;=&#x56FE;&#x7247;&#x957F;&#x5EA6;<em>&#x56FE;&#x7247;&#x5BBD;&#x5EA6;</em>&#x5355;&#x4F4D;&#x50CF;&#x7D20;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;</p>
</blockquote>
<p>&#x867D;&#x7136;Picasso&#x4F7F;&#x7528;&#x4E86;LruCache&#xFF0C;&#x4F46;&#x662F;&#x5927;&#x56FE;&#x5B58;&#x5728;&#x5185;&#x5B58;&#x8FD8;&#x662F;&#x6CA1;&#x5FC5;&#x8981;&#x7684;&#x3002;<br>
<a href="https://github.com/square/picasso/blob/master/picasso/src/main/java/com/squareup/picasso/LruCache.java" target="_blank" rel="external">LruCache.java</a></p>
<pre><code>Picasso.with(imageView.getContext())
                        .load(url)
                        .memoryPolicy(MemoryPolicy.NO_CACHE, MemoryPolicy.NO_STORE)
                        .into(imageView);
</code></pre>
<p>&#x5BF9;&#x4E8E;&#x5927;&#x56FE;&#x8BF7;&#x6C42;&#xFF0C;memoryPolicy&#x5185;&#x5B58;&#x5B58;&#x50A8;&#x89C4;&#x5219;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#xFF0C;&#x5982;&#x4E0A;&#x8BBE;&#x7F6E;&#x4E86;&#x4E0D;&#x5728;&#x5185;&#x5B58;&#x7F13;&#x5B58;&#x4E2D;&#x67E5;&#x627E;&#xFF0C;&#x4E5F;&#x4E0D;&#x5C06;&#x6700;&#x7EC8;&#x7ED3;&#x679C;&#x5B58;&#x50A8;&#x4E8E;&#x5185;&#x5B58;&#x3002;</p>
<pre><code>/** Skips memory cache lookup when processing a request. */
  NO_CACHE(1 &lt;&lt; 0),
  /**
   * Skips storing the final result into memory cache. Useful for one-off requests
   * to avoid evicting other bitmaps from the cache.
   */
  NO_STORE(1 &lt;&lt; 1);
</code></pre>
<h3 id="&#x5217;&#x8868;&#x9875;&#x6ED1;&#x52A8;&#x4F18;&#x5316;"><a class="header-anchor" href="#&#x5217;&#x8868;&#x9875;&#x6ED1;&#x52A8;&#x4F18;&#x5316;"></a>&#x5217;&#x8868;&#x9875;&#x6ED1;&#x52A8;&#x4F18;&#x5316;</h3>
<p>tag(Object object) &#x53EF;&#x4EE5;&#x63A5;&#x53D7;java&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x3002;&#x56E0;&#x800C;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x4EFB;&#x4F55;&#x903B;&#x8F91;&#x6765;build your image groups&#x3002;&#x4F60;&#x6709;&#x4EE5;&#x4E0B;&#x9009;&#x62E9;&#xFF1A;</p>
<ul>
<li>&#x4F7F;&#x7528;pauseTag()pause &#x8BF7;&#x6C42;</li>
<li>&#x4F7F;&#x7528;resumeTag() resume&#x8BF7;&#x6C42;</li>
<li>&#x4F7F;&#x7528;cancelTag() cancel&#x8BF7;&#x6C42;</li>
</ul>
<p>&#x57FA;&#x672C;&#x4E0A;&#xFF0C;&#x65E0;&#x8BBA;&#x4F60;&#x4F55;&#x65F6;&#x9700;&#x8981;pause &#x6216;&#x8005;cancel&#x52A0;&#x8F7D;&#x4E00;&#x5F20;&#x6216;&#x591A;&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x4F7F;&#x7528;tag&#xFF0C;&#x5E76;&#x4E14;&#x8C03;&#x7528;&#x76F8;&#x5E94;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x542C;&#x8D77;&#x6765;&#x53EF;&#x80FD;&#x6709;&#x70B9;&#x62BD;&#x8C61;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x770B;&#x4E2A;&#x4F8B;&#x5B50;&#x3002;</p>
<p>picasso&#x53EF;&#x4EE5;&#x5BF9;&#x591A;&#x4E2A;&#x52A0;&#x8F7D;&#x8BF7;&#x6C42;&#x8BBE;&#x7F6E;&#x76F8;&#x540C;&#x7684;tag&#xFF0C;&#x5373;</p>
<pre><code>Object tag = new Object();
</code></pre>
<pre><code>Picasso.with(imageView.getContext())
                        .load(url)
                        .tag(tag)
                        .into(imageView);
</code></pre>
<p>&#x4F8B;&#x5982;&#x5728;RecyclerView&#x6ED1;&#x52A8;&#x65F6;&#x76D1;&#x542C;&#xFF0C;&#x5904;&#x7406;&#x4E0D;&#x540C;&#x7684;&#x8868;&#x73B0;&#xFF1A;</p>
<pre><code>mRecyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {
                    @Override
                    public void onScrollStateChanged(RecyclerView recyclerView, int newState) {
                        if (newState == RecyclerView.SCROLL_STATE_IDLE) {
                            Picasso.with(context).resumeTag(tag);
                        } else {
                            Picasso.with(context).pauseTag(tag);
                        }
                    }
                });
</code></pre>
<p>&#x7528;&#x6237;&#x901A;&#x8FC7;&#x5FEB;&#x901F;&#x7684;&#x4E0B;&#x6ED1;&#x5217;&#x8868;&#x6765;&#x67E5;&#x627E;&#x4E00;&#x6761;&#x65E7;&#x7684;&#x6D88;&#x606F;&#x3002;RecyclerView &#x662F;&#x5FEB;&#x901F;&#x7684;&#x56DE;&#x6536;&#x5229;&#x7528;items&#x7684;&#x3002;&#x5982;&#x679C;&#x4F60;&#x80FD;&#x6B63;&#x786E;&#x7684;&#x5B9E;&#x73B0;adapter&#xFF0C;&#x6ED1;&#x52A8;RecyclerView&#x7684;&#x65F6;&#x5019;&#x90A3;&#x5C06;&#x975E;&#x5E38;&#x6D41;&#x7545;&#x3002;&#x7136;&#x800C;&#xFF0C;Picasso&#x5C06;&#x4F1A;&#x5C1D;&#x8BD5;&#x4E3A;&#x6BCF;&#x4E00;&#x884C;&#x90FD;&#x5F00;&#x59CB;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x53C8;&#x7ACB;&#x5373;&#x53D6;&#x6D88;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x3002;&#x56E0;&#x4E3A;&#x7528;&#x6237;&#x6ED1;&#x52A8;listview&#x592A;&#x5FEB;&#x4E86;&#x3002;</p>
<p>&#x5F53;RecyclerView&#x7684;&#x6ED1;&#x52A8;&#x72B6;&#x6001;&#x53D8;&#x6210;fling&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4ED6;&#x5C06;&#x4F1A;&#x53D6;&#x6D88;&#x6240;&#x6709;&#x7684;&#x8BF7;&#x6C42;,&#x8FD9;&#x5C06;&#x662F;&#x975E;&#x5E38;&#x9AD8;&#x6548;&#x7684;&#x3002;&#x7528;&#x6237;&#x4E0D;&#x4F1A;&#x6CE8;&#x610F;&#x5230;&#x4EFB;&#x4F55;&#x53D8;&#x5316;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x7684;app&#x5374;&#x6709;&#x6548;&#x7684;&#x51CF;&#x5C11;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x8BF7;&#x6C42;&#x3002;</p>
<p>&#x5F53;RecyclerView&#x7684;&#x6ED1;&#x52A8;&#x72B6;&#x6001;&#x53D8;&#x6210;fling&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4ED6;&#x5C06;&#x4F1A;&#x53D6;&#x6D88;&#x6240;&#x6709;&#x7684;&#x8BF7;&#x6C42;&#x3002;&#x5F53;&#x6ED1;&#x52A8;&#x72B6;&#x6001;&#x53D8;&#x6210;idle&#x6216;&#x8005;&#x6B63;&#x5E38;&#x7684;&#x6ED1;&#x52A8;&#x4F4D;&#x7F6E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4ED6;&#x91CD;&#x65B0;&#x5F00;&#x59CB;&#x8BF7;&#x6C42;&#x3002;&#xFF08;resume the request&#xFF09;</p>
<h3 id="recyclableimageview"><a class="header-anchor" href="#recyclableimageview"></a>RecyclableImageView</h3>
<p>&#x91CD;&#x5199;ImageView&#x7684;onDetachedFromWindow&#x65B9;&#x6CD5;&#xFF0C;&#x5728;&#x5B83;&#x4ECE;&#x5C4F;&#x5E55;&#x4E2D;&#x6D88;&#x5931;&#x65F6;&#x56DE;&#x8C03;&#xFF0C;&#x53BB;&#x6389;drawable&#x5F15;&#x7528;&#xFF0C;&#x80FD;&#x52A0;&#x5FEB;&#x5185;&#x5B58;&#x7684;&#x56DE;&#x6536;&#x3002;</p>
<pre><code>public class RecyclerImageView extends ImageView {
        @Override
        protected void onDetachedFromWindow() {
            super.onDetachedFromWindow();
            setImageDrawable(null);
        }
    }
</code></pre>
<h3 id="rgb-565"><a class="header-anchor" href="#rgb-565"></a>RGB_565</h3>
<p>&#x56E0;&#x4E3A;RGB_565&#x5448;&#x73B0;&#x7ED3;&#x679C;&#x4E0E;ARGB_8888&#x63A5;&#x8FD1;&#xFF0C;&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;&#x4E0D;&#x900F;&#x660E;&#x7684;&#x56FE;&#x7247;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;RGB_565&#x6765;&#x4F18;&#x5316;&#x5185;&#x5B58;&#x3002;</p>
<pre><code>Picasso.with(imageView.getContext())
                        .load(url)
                        .config(Bitmap.Config.RGB_565)
                        .into(imageView);
</code></pre>
<p>&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;Android&#x4F7F;&#x7528;ARGB_8888</p>
<pre><code>Android&#x4E2D;&#x6709;&#x56DB;&#x79CD;&#xFF0C;&#x5206;&#x522B;&#x662F;&#xFF1A;
ALPHA_8&#xFF1A;&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x5360;&#x7528;1byte&#x5185;&#x5B58;
ARGB_4444:&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x5360;&#x7528;2byte&#x5185;&#x5B58;
ARGB_8888:&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x5360;&#x7528;4byte&#x5185;&#x5B58;
RGB_565:&#x6BCF;&#x4E2A;&#x50CF;&#x7D20;&#x5360;&#x7528;2byte&#x5185;&#x5B58;
</code></pre>
<h2 id="picasso&#x6E05;&#x7F13;&#x5B58;"><a class="header-anchor" href="#picasso&#x6E05;&#x7F13;&#x5B58;"></a>Picasso&#x6E05;&#x7F13;&#x5B58;</h2>
<p>&#x65B0;&#x7248;&#x672C;&#x7684;Picasso&#x5DF2;&#x7ECF;&#x4E0D;&#x652F;&#x6301;&#x4EE5;&#x4E0B;&#x65B9;&#x6CD5;&#x6E05;&#x7F13;&#x5B58;&#x4E86;&#xFF1A;</p>
<pre><code>Picasso.with(context).invalidate(imagePath);
</code></pre>
<p>&#x4F46;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x6E05;&#x7F13;&#x5B58;</p>
<p><strong>1&#x3001;&#x6E05;&#x9664;&#x81EA;&#x5DF1;&#x5E94;&#x7528;&#x7684;cache&#x76EE;&#x5F55;</strong></p>
<pre><code>/**
 * Deletes a directory tree recursively.
 */
public static void deleteDirectoryTree(File fileOrDirectory) {
    if (fileOrDirectory.isDirectory()) {
        for (File child : fileOrDirectory.listFiles()) {
            deleteDirectoryTree(child);
        }
    }

    fileOrDirectory.delete();
}
</code></pre>
<p><strong>2&#x3001;&#x901A;&#x8FC7;&#x81EA;&#x5DF1;&#x8BBE;&#x7F6E;downloader&#xFF0C;&#x4EE5;&#x4FBF;&#x8C03;&#x7528;&#x5B83;&#x7684;shutdown&#x65B9;&#x6CD5;&#xFF0C;&#x8FBE;&#x5230;&#x6E05;&#x9664;&#x7F13;&#x5B58;&#x7684;&#x76EE;&#x7684;&#x3002;</strong></p>
<pre><code>public static class PicassoUtil {
        private static Picasso sInstance;
        private static OkHttpDownloader sDownloader;
        public  static Picasso getPicasso(Context context){
            if(sInstance == null) {
                sDownloader = new OkHttpDownloader(context);
                Picasso.Builder builder = new Picasso.Builder(context);
                builder.downloader(sDownloader);
                sInstance = builder.build();
            }
            return sInstance;
        }
        public static void clearCache(){
            if(sDownloader != null){
                sDownloader.shutdown();
            }
        }
    }
</code></pre>
<p><strong>3&#x3001;&#x81EA;&#x5DF1;&#x8BBE;&#x7F6E;Picasso.LruCache</strong></p>
<pre><code>Picasso.Builder builder = new Picasso.Builder(this);
LruCache picassoCache = new LruCache(this);
builder.memoryCache(picassoCache);
Picasso.setSingletonInstance(builder.build());
//&#x9700;&#x8981;&#x6E05;&#x9664;&#x7F13;&#x5B58;&#x65F6;&#x8C03;&#x7528;
picassoCache.clear();
</code></pre>
<p><strong>4&#x3001;&#x7F51;&#x53CB;&#x63D0;&#x4F9B;&#x7684;&#x901A;&#x8FC7;&#x81EA;&#x5B9A;&#x4E49;&#x7684;LurCache&#x6765;&#x7BA1;&#x7406;&#x5185;&#x5B58;&#xFF0C;&#x652F;&#x6301;&#x6839;&#x636E;bitmap&#x7684;key&#x5220;&#x9664;&#x6307;&#x5B9A;bitmap&#x3002;</strong></p>
<p>PicassoTools:</p>
<pre><code>public class PicassoTools {
    private static Picasso picasso = null;
    private static CustomLruCache lruCache = null;

    private static CustomLruCache getCache() {
        if (lruCache == null)
            lruCache = new CustomLruCache(MainApp.getAppContext());
        return lruCache;
    }

    public static Picasso getPicasso() {
        if (picasso == null)
            picasso = new Picasso.Builder(MainApp.getAppContext()).memoryCache(getCache()).build();
        return picasso;
    }

    public static void clear(Uri uri) {
        getCache().remove(getKey(uri));
    }

    public static void clearCache() {
        getCache().clear();
        // Picasso.with(MainApp.getAppContext()).cache.clear();
    }

    public static void clearCache(Context c) {
        getCache().clear();
        // Picasso.with(c).cache.clear();
    }

    private static final int KEY_PADDING = 50; // Determined by exact science.

    private static String getKey(Uri uri) {
        return getKey(uri, null, 0, 0, false, false, null);
    }

    private static String getKey(Uri uri, Integer resourceId, int targetWidth, int targetHeight, boolean centerCrop, boolean centerInside, List&lt;Transformation&gt; transformations) {
        StringBuilder builder = new StringBuilder();
        if (uri != null) {
            String path = uri.toString();
            builder.ensureCapacity(path.length() + KEY_PADDING);
            builder.append(path);
        } else {
            builder.ensureCapacity(KEY_PADDING);
            builder.append(resourceId);
        }
        builder.append(&apos;\n&apos;);

        if (targetWidth != 0) {
            builder.append(&quot;resize:&quot;).append(targetWidth).append(&apos;x&apos;).append(targetHeight);
            builder.append(&apos;\n&apos;);
        }
        if (centerCrop) {
            builder.append(&quot;centerCrop\n&quot;);
        } else if (centerInside) {
            builder.append(&quot;centerInside\n&quot;);
        }

        if (transformations != null) {
            // noinspection ForLoopReplaceableByForEach
            for (int i = 0, count = transformations.size(); i &lt; count; i++) {
                builder.append(transformations.get(i).key());
                builder.append(&apos;\n&apos;);
            }
        }

        return builder.toString();
    }
}
</code></pre>
<p>CustomLruCache:</p>
<pre><code>public class CustomLruCache extends LruCache {
    public CustomLruCache(Context context) {
        super(context);
    }

    public CustomLruCache(int value) {
        super(value);
    }

    @Override
    public Bitmap get(String key) {
        L.d(this, key);
        return super.get(key);
    }

    public void remove(String key) {
        try {
            Bitmap value = map.remove(key);

            Field fieldSize = LruCache.class.getDeclaredField(&quot;size&quot;);
            fieldSize.setAccessible(true);
            Integer size = (Integer) fieldSize.get(this);
            size -= Utils.getBitmapBytes(value);
            fieldSize.set(this, size);

            Field fieldEvictionCount = LruCache.class.getDeclaredField(&quot;evictionCount&quot;);
            fieldEvictionCount.setAccessible(true);
            Integer evictionCount = (Integer) fieldEvictionCount.get(this);
            evictionCount++;
            fieldEvictionCount.set(this, evictionCount);

        } catch (IllegalArgumentException e) {
            L.e(this, e);
        } catch (IllegalAccessException e) {
            L.e(this, e);
        } catch (NoSuchFieldException e) {
            L.e(this, e);
        }
    }
}
</code></pre>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ol>
<li><a href="http://blog.csdn.net/u011337574/article/details/51586714" target="_blank" rel="external">http://blog.csdn.net/u011337574/article/details/51586714</a></li>
<li><a href="http://www.jianshu.com/p/6b746c904a49" target="_blank" rel="external">http://www.jianshu.com/p/6b746c904a49</a></li>
<li><a href="http://stackoverflow.com/questions/27502659/clear-cache-memory-of-picasso" target="_blank" rel="external">Clear Cache memory of Picasso</a></li>
<li><a href="https://github.com/square/picasso/issues/1104" target="_blank" rel="external">JakeWharton&#x7684;&#x907F;&#x514D;OOM&#x5EFA;&#x8BAE;</a></li>
<li><a href="http://stackoverflow.com/questions/23928019/picasso-and-context" target="_blank" rel="external">Picasso and Context</a></li>
<li><a href="http://stackoverflow.com/questions/27502659/clear-cache-memory-of-picasso" target="_blank" rel="external">clear-cache-memory-of-picasso</a></li>
<li><a href="http://stackoverflow.com/questions/22243417/android-picasso-clear-cache" target="_blank" rel="external">android-picasso-clear-cache</a></li>
</ol>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;a href=&quot;https://github.com/square/picasso&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/10/10/android-picasso-use/picasso-mainimage.jpg&quot; style=&quot;float:left; width:100px; height:56px; margin-right:16px&quot; alt=&quot;Picasso&quot;&gt;&lt;/a&gt;
&lt;span&gt;&amp;#x7B14;&amp;#x8005;&amp;#x5728;&amp;#x9879;&amp;#x76EE;&amp;#x91CC;&amp;#x9762;&amp;#xFF0C;&amp;#x5BF9;&amp;#x56FE;&amp;#x7247;&amp;#x7684;&amp;#x52A0;&amp;#x8F7D;&amp;#x4E00;&amp;#x822C;&amp;#x4F7F;&amp;#x7528;&amp;#x7684;&amp;#x662F;Picasso&amp;#x6216;&amp;#x8005;Glide&amp;#xFF0C;&amp;#x4ECA;&amp;#x5929;&amp;#x9996;&amp;#x5148;&amp;#x4ECB;&amp;#x7ECD;&amp;#x7684;&amp;#x662F;Picasso&amp;#xFF0C;&amp;#x540E;&amp;#x7EED;&amp;#x518D;&amp;#x4ECB;&amp;#x7ECD;Glide&amp;#x3002;Picasso&amp;#x662F;Square&amp;#x516C;&amp;#x53F8;&amp;#x5F00;&amp;#x6E90;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;Android&amp;#x56FE;&amp;#x7247;&amp;#x52A0;&amp;#x8F7D;&amp;#x548C;&amp;#x7F13;&amp;#x5B58;&amp;#x5E93;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x5B83;&amp;#xFF0C;&amp;#x53EA;&amp;#x9700;&amp;#x8981;&amp;#x7B80;&amp;#x5355;&amp;#x7684;&amp;#x4E00;&amp;#x884C;&amp;#x4EE3;&amp;#x7801;&amp;#x5373;&amp;#x53EF;&amp;#x5B9E;&amp;#x73B0;&amp;#x56FE;&amp;#x7247;&amp;#x4E0B;&amp;#x8F7D;&amp;#x548C;&amp;#x7F13;&amp;#x5B58;&amp;#x529F;&amp;#x80FD;&amp;#x3002;&amp;#x5B83;&amp;#x7684;github&amp;#x9879;&amp;#x76EE;&amp;#x5730;&amp;#x5740;&amp;#x4E3A;&amp;#xFF1A;&lt;a href=&quot;https://github.com/square/picasso&quot;&gt;https://github.com/square/picasso&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Picasso" scheme="http://ngudream.com/tags/Picasso/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 大数据量快速插入方法和语句优化</title>
    <link href="http://ngudream.com/2016/10/09/mysql-quick-insert/"/>
    <id>http://ngudream.com/2016/10/09/mysql-quick-insert/</id>
    <published>2016-10-09T15:38:39.000Z</published>
    <updated>2017-01-15T07:58:44.429Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>&#x4F5C;&#x8005;&#xFF1A;lyd518<br>
&#x94FE;&#x63A5;&#xFF1A;<a href="http://blog.csdn.net/lyd518/article/details/6690419" target="_blank" rel="external">blog.csdn.net/lyd518/article/details/6690419</a></p>
</blockquote>
<p>MySQL&#x5927;&#x6570;&#x636E;&#x91CF;&#x5FEB;&#x901F;&#x63D2;&#x5165;&#x65B9;&#x6CD5;&#x548C;&#x8BED;&#x53E5;&#x4F18;&#x5316;&#x662F;&#x672C;&#x6587;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x8981;&#x4ECB;&#x7ECD;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x5C31;&#x6765;&#x4E00;&#x4E00;&#x4ECB;&#x7ECD;&#xFF0C;&#x5E0C;&#x671B;&#x80FD;&#x591F;&#x8BA9;&#x60A8;&#x6709;&#x6240;&#x6536;&#x83B7;&#xFF01;</p>
<h2 id="insert&#x8BED;&#x53E5;&#x7684;&#x901F;&#x5EA6;"><a class="header-anchor" href="#insert&#x8BED;&#x53E5;&#x7684;&#x901F;&#x5EA6;"></a>INSERT&#x8BED;&#x53E5;&#x7684;&#x901F;&#x5EA6;</h2>
<p>&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x8BB0;&#x5F55;&#x9700;&#x8981;&#x7684;&#x65F6;&#x95F4;&#x7531;&#x4E0B;&#x5217;&#x56E0;&#x7D20;&#x7EC4;&#x6210;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6570;&#x5B57;&#x8868;&#x793A;&#x5927;&#x7EA6;&#x6BD4;&#x4F8B;&#xFF1A;</p>
<p>&#x8FDE;&#x63A5;&#xFF1A;&#xFF08;3&#xFF09;</p>
<p>&#x53D1;&#x9001;&#x67E5;&#x8BE2;&#x7ED9;&#x670D;&#x52A1;&#x5668;&#xFF1A;&#xFF08;2&#xFF09;</p>
<p>&#x5206;&#x6790;&#x67E5;&#x8BE2;&#xFF1A;&#xFF08;2&#xFF09;</p>
<p>&#x63D2;&#x5165;&#x8BB0;&#x5F55;&#xFF1A;&#xFF08;1x&#x8BB0;&#x5F55;&#x5927;&#x5C0F;&#xFF09;</p>
<p>&#x63D2;&#x5165;&#x7D22;&#x5F15;&#xFF1A;&#xFF08;1x&#x7D22;&#x5F15;&#xFF09;</p>
<p>&#x5173;&#x95ED;&#xFF1A;&#xFF08;1&#xFF09;</p>
<p>&#x8FD9;&#x4E0D;&#x8003;&#x8651;&#x6253;&#x5F00;&#x8868;&#x7684;&#x521D;&#x59CB;&#x5F00;&#x9500;&#xFF0C;&#x6BCF;&#x4E2A;&#x5E76;&#x53D1;&#x8FD0;&#x884C;&#x7684;&#x67E5;&#x8BE2;&#x6253;&#x5F00;&#x3002;</p>
<p>&#x8868;&#x7684;&#x5927;&#x5C0F;&#x4EE5;logN &#xFF08;B&#x6811;&#xFF09;&#x7684;&#x901F;&#x5EA6;&#x51CF;&#x6162;&#x7D22;&#x5F15;&#x7684;&#x63D2;&#x5165;&#x3002;</p>
<h2 id="&#x52A0;&#x5FEB;&#x63D2;&#x5165;&#x7684;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x52A0;&#x5FEB;&#x63D2;&#x5165;&#x7684;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5;"></a>&#x52A0;&#x5FEB;&#x63D2;&#x5165;&#x7684;&#x4E00;&#x4E9B;&#x65B9;&#x6CD5;</h2>
<p>&#x5982;&#x679C;&#x540C;&#x65F6;&#x4ECE;&#x540C;&#x4E00;&#x4E2A;&#x5BA2;&#x6237;&#x7AEF;&#x63D2;&#x5165;&#x5F88;&#x591A;&#x884C;&#xFF0C;&#x4F7F;&#x7528;&#x542B;&#x591A;&#x4E2A;VALUE&#x7684;INSERT&#x8BED;&#x53E5;&#x540C;&#x65F6;&#x63D2;&#x5165;&#x51E0;&#x884C;&#x3002;&#x8FD9;&#x6BD4;&#x4F7F;&#x7528;&#x5355;&#x884C;INSERT&#x8BED;&#x53E5;&#x5FEB;&#xFF08;&#x5728;&#x67D0;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#x5FEB;&#x51E0;&#x500D;&#xFF09;&#x3002;&#x5982;&#x679C;&#x4F60;&#x6B63;&#x5411;&#x4E00;&#x4E2A;&#x975E;&#x7A7A;&#x8868;&#x6DFB;&#x52A0;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x8282;bulk_insert_buffer_size&#x53D8;&#x91CF;&#xFF0C;&#x4F7F;&#x6570;&#x636E;&#x63D2;&#x5165;&#x66F4;&#x5FEB;&#x3002;</p>
<p>&#x5982;&#x679C;&#x4F60;&#x4ECE;&#x4E0D;&#x540C;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x63D2;&#x5165;&#x5F88;&#x591A;&#x884C;&#xFF0C;&#x80FD;&#x901A;&#x8FC7;INSERT DELAYED&#x8BED;&#x53E5;&#x52A0;&#x5FEB;&#x901F;&#x5EA6;&#x3002;</p>
<p>&#x7528;MyISAM&#xFF0C;&#x5982;&#x679C;&#x5728;&#x8868;&#x4E2D;&#x6CA1;&#x6709;&#x5220;&#x9664;&#x7684;&#x884C;&#xFF0C;&#x80FD;&#x5728;SELECT&#x8BED;&#x53E5;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;&#x540C;&#x65F6;&#x63D2;&#x5165;&#x884C;&#x3002;</p>
<p>&#x5F53;&#x4ECE;&#x4E00;&#x4E2A;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x88C5;&#x8F7D;&#x4E00;&#x4E2A;&#x8868;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;LOAD DATA INFILE&#x3002;&#x8FD9;&#x901A;&#x5E38;&#x6BD4;&#x4F7F;&#x7528;&#x5F88;&#x591A;INSERT&#x8BED;&#x53E5;&#x5FEB;20&#x500D;&#x3002;&#x53C2;&#x89C1;13.2.5&#x8282;&#xFF0C;&#x201C;LOAD DATA INFILE&#x8BED;&#x6CD5;&#x201D;&#x3002;</p>
<p>&#x5F53;&#x8868;&#x6709;&#x5F88;&#x591A;&#x7D22;&#x5F15;&#x65F6;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x8981;&#x591A;&#x505A;&#x4E9B;&#x5DE5;&#x4F5C;&#x4F7F;&#x5F97;LOAD DATA INFILE&#x66F4;&#x5FEB;&#x4E9B;&#x3002;&#x4F7F;&#x7528;&#x4E0B;&#x5217;&#x8FC7;&#x7A0B;&#xFF1A;</p>
<h2 id="&#x6709;&#x9009;&#x62E9;&#x5730;&#x7528;create-table&#x521B;&#x5EFA;&#x8868;"><a class="header-anchor" href="#&#x6709;&#x9009;&#x62E9;&#x5730;&#x7528;create-table&#x521B;&#x5EFA;&#x8868;"></a>&#x6709;&#x9009;&#x62E9;&#x5730;&#x7528;CREATE TABLE&#x521B;&#x5EFA;&#x8868;</h2>
<p>&#x6267;&#x884C;FLUSH TABLES&#x8BED;&#x53E5;&#x6216;&#x547D;&#x4EE4;mysqladmin flush-tables&#x3002;&#x4F7F;&#x7528;myisamchk &#x2013;keys-used=0 -rq /path/to/db/tbl_name&#x3002;&#x8FD9;&#x5C06;&#x4ECE;&#x8868;&#x4E2D;&#x53D6;&#x6D88;&#x6240;&#x6709;&#x7D22;&#x5F15;&#x7684;&#x4F7F;&#x7528;&#x3002;</p>
<p>&#x7528;LOAD DATA INFILE&#x628A;&#x6570;&#x636E;&#x63D2;&#x5165;&#x5230;&#x8868;&#x4E2D;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x66F4;&#x65B0;&#x4EFB;&#x4F55;&#x7D22;&#x5F15;&#xFF0C;&#x56E0;&#x6B64;&#x5F88;&#x5FEB;&#x3002; &#x5982;&#x679C;&#x53EA;&#x60F3;&#x5728;&#x4EE5;&#x540E;&#x8BFB;&#x53D6;&#x8868;&#xFF0C;&#x4F7F;&#x7528;myisampack&#x538B;&#x7F29;&#x5B83;&#x3002;&#x53C2;&#x89C1;15.1.3.3&#x8282;&#xFF0C;&#x201C;&#x538B;&#x7F29;&#x8868;&#x7279;&#x6027;&#x201D;&#x3002;</p>
<p>&#x7528;myisamchk -r -q /path/to/db/tbl_name&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x7D22;&#x5F15;&#x3002;&#x8FD9;&#x5C06;&#x5728;&#x5199;&#x5165;&#x78C1;&#x76D8;&#x524D;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x521B;&#x5EFA;&#x7D22;&#x5F15;&#x6811;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x66F4;&#x5FEB;&#xFF0C;&#x56E0;&#x4E3A;&#x907F;&#x514D;&#x4E86;&#x5927;&#x91CF;&#x78C1;&#x76D8;&#x641C;&#x7D22;&#x3002;&#x7ED3;&#x679C;&#x7D22;&#x5F15;&#x6811;&#x4E5F;&#x88AB;&#x5B8C;&#x7F8E;&#x5730;&#x5E73;&#x8861;&#x3002; &#x6267;&#x884C;FLUSH TABLES&#x8BED;&#x53E5;&#x6216;mysqladmin flush-tables&#x547D;&#x4EE4;&#x3002;</p>
<p>&#x8BF7;&#x6CE8;&#x610F;&#x5982;&#x679C;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x7A7A;MyISAM&#x8868;&#xFF0C;LOAD DATA INFILE&#x4E5F;&#x53EF;&#x4EE5;&#x6267;&#x884C;&#x524D;&#x9762;&#x7684;&#x4F18;&#x5316;&#xFF1B;&#x4E3B;&#x8981;&#x4E0D;&#x540C;&#x5904;&#x662F;&#x53EF;&#x4EE5;&#x8BA9;myisamchk&#x4E3A;&#x521B;&#x5EFA;&#x7D22;&#x5F15;&#x5206;&#x914D;&#x66F4;&#x591A;&#x7684;&#x4E34;&#x65F6;&#x5185;&#x5B58;&#xFF0C;&#x6BD4;&#x6267;&#x884C;LOAD DATA INFILE&#x8BED;&#x53E5;&#x65F6;&#x4E3A;&#x670D;&#x52A1;&#x5668;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x7D22;&#x5F15;&#x5206;&#x914D;&#x5F97;&#x8981;&#x591A;&#x3002;</p>
<p>&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;ALTER TABLE tbl_name DISABLE KEYS&#x4EE3;&#x66FF;myisamchk &#x2013;keys-used=0 -rq/path/to/db/tbl_name&#xFF0C;&#x4F7F;&#x7528;ALTER TABLE tbl_name ENABLE KEYS&#x4EE3;&#x66FF;myisamchk -r -q/path/to/db/tbl_name&#x3002;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x8DF3;&#x8FC7;FLUSH TABLES&#x3002;</p>
<p>&#x9501;&#x5B9A;&#x8868;&#x53EF;&#x4EE5;&#x52A0;&#x901F;&#x7528;&#x591A;&#x4E2A;&#x8BED;&#x53E5;&#x6267;&#x884C;&#x7684;INSERT&#x64CD;&#x4F5C;&#xFF1A;</p>
<pre><code>LOCK TABLES a WRITE;
INSERT INTO a VALUES (1,23),(2,34),(4,33);
INSERT INTO a VALUES (8,26),(6,29);
UNLOCK TABLES;
</code></pre>
<p>&#x8FD9;&#x6837;&#x6027;&#x80FD;&#x4F1A;&#x63D0;&#x9AD8;&#xFF0C;&#x56E0;&#x4E3A;&#x7D22;&#x5F15;&#x7F13;&#x5B58;&#x533A;&#x4EC5;&#x5728;&#x6240;&#x6709;INSERT&#x8BED;&#x53E5;&#x5B8C;&#x6210;&#x540E;&#x5237;&#x65B0;&#x5230;&#x78C1;&#x76D8;&#x4E0A;&#x4E00;&#x6B21;&#x3002;&#x4E00;&#x822C;&#x6709;&#x591A;&#x5C11;INSERT&#x8BED;&#x53E5;&#x5373;&#x6709;&#x591A;&#x5C11;&#x7D22;&#x5F15;&#x7F13;&#x5B58;&#x533A;&#x5237;&#x65B0;&#x3002;&#x5982;&#x679C;&#x80FD;&#x7528;&#x4E00;&#x4E2A;&#x8BED;&#x53E5;&#x63D2;&#x5165;&#x6240;&#x6709;&#x7684;&#x884C;&#xFF0C;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x9501;&#x5B9A;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;&#x4E8B;&#x52A1;&#x8868;&#xFF0C;&#x5E94;&#x4F7F;&#x7528;BEGIN&#x548C;COMMIT&#x4EE3;&#x66FF;LOCK TABLES&#x6765;&#x52A0;&#x5FEB;&#x63D2;&#x5165;&#x3002;</p>
<p>&#x9501;&#x5B9A;&#x4E5F;&#x5C06;&#x964D;&#x4F4E;&#x591A;&#x8FDE;&#x63A5;&#x6D4B;&#x8BD5;&#x7684;&#x6574;&#x4F53;&#x65F6;&#x95F4;&#xFF0C;&#x5C3D;&#x7BA1;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x7B49;&#x5019;&#x9501;&#x5B9A;&#x6700;&#x5927;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x5C06;&#x4E0A;&#x5347;&#x3002;&#x4F8B;&#x5982;&#xFF1A;</p>
<pre><code>Connection 1 does 1000 inserts 
Connections 2, 3, and 4 do 1 insert 
Connection 5 does 1000 inserts
</code></pre>
<p>&#x5982;&#x679C;&#x4E0D;&#x4F7F;&#x7528;&#x9501;&#x5B9A;&#xFF0C;2&#x3001;3&#x548C;4&#x5C06;&#x5728;1&#x548C;5&#x524D;&#x5B8C;&#x6210;&#x3002;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x9501;&#x5B9A;&#xFF0C;2&#x3001;3&#x548C;4&#x5C06;&#x53EF;&#x80FD;&#x4E0D;&#x5728;1&#x6216;5&#x524D;&#x5B8C;&#x6210;&#xFF0C;&#x4F46;&#x662F;&#x6574;&#x4F53;&#x65F6;&#x95F4;&#x5E94;&#x8BE5;&#x5FEB;&#x5927;&#x7EA6;40%&#x3002;</p>
<p>INSERT&#x3001;UPDATE&#x548C;DELETE&#x64CD;&#x4F5C;&#x5728;MySQL&#x4E2D;&#x662F;&#x5F88;&#x5FEB;&#x7684;&#xFF0C;&#x901A;&#x8FC7;&#x4E3A;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x591A;&#x4E8E;&#x5927;&#x7EA6;5&#x6B21;&#x8FDE;&#x7EED;&#x4E0D;&#x65AD;&#x5730;&#x63D2;&#x5165;&#x6216;&#x66F4;&#x65B0;&#x7684;&#x64CD;&#x4F5C;&#x52A0;&#x9501;&#xFF0C;&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x66F4;&#x597D;&#x7684;&#x6574;&#x4F53;&#x6027;&#x80FD;&#x3002;&#x5982;&#x679C;&#x5728;&#x4E00;&#x884C;&#x4E2D;&#x8FDB;&#x884C;&#x591A;&#x6B21;&#x63D2;&#x5165;&#xFF0C;&#x53EF;&#x4EE5;&#x6267;&#x884C;LOCK TABLES&#xFF0C;&#x968F;&#x540E;&#x7ACB;&#x5373;&#x6267;&#x884C;UNLOCK TABLES(&#x5927;&#x7EA6;&#x6BCF;1000&#x884C;)&#x4EE5;&#x5141;&#x8BB8;&#x5176;&#x5B83;&#x7684;&#x7EBF;&#x7A0B;&#x8BBF;&#x95EE;&#x8868;&#x3002;&#x8FD9;&#x4E5F;&#x4F1A;&#x83B7;&#x5F97;&#x597D;&#x7684;&#x6027;&#x80FD;&#x3002;</p>
<p>INSERT&#x88C5;&#x8F7D;&#x6570;&#x636E;&#x6BD4;LOAD DATA INFILE&#x8981;&#x6162;&#x5F97;&#x591A;&#xFF0C;&#x5373;&#x4F7F;&#x662F;&#x4F7F;&#x7528;&#x4E0A;&#x8FF0;&#x7684;&#x7B56;&#x7565;&#x3002;</p>
<p>&#x4E3A;&#x4E86;&#x5BF9;LOAD DATA INFILE&#x548C;INSERT&#x5728;MyISAM&#x8868;&#x5F97;&#x5230;&#x66F4;&#x5FEB;&#x7684;&#x901F;&#x5EA6;&#xFF0C;&#x901A;&#x8FC7;&#x589E;&#x52A0;key_buffer_size&#x7CFB;&#x7EDF;&#x53D8;&#x91CF;&#x6765;&#x6269;&#x5927; &#x952E;&#x9AD8;&#x901F;&#x7F13;&#x51B2;&#x533A;&#x3002;</p>
<p>INSERT&#x8BED;&#x6CD5;</p>
<pre><code>INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] 
[INTO] tbl_name [(col_name,...)] 
VALUES ({expr | DEFAULT},...),(...),... 
[ ON DUPLICATE KEY UPDATE col_name=expr, ... ]
</code></pre>
<p>&#x6216;</p>
<pre><code>INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] 
[INTO] tbl_name 
SET col_name={expr | DEFAULT}, ... 
[ ON DUPLICATE KEY UPDATE col_name=expr, ... ]
</code></pre>
<p>&#x6216;</p>
<pre><code>INSERT [LOW_PRIORITY | HIGH_PRIORITY] [IGNORE] 
[INTO] tbl_name [(col_name,...)] 
SELECT ... 
[ ON DUPLICATE KEY UPDATE col_name=expr, ... ]
</code></pre>
<h2 id="delayed-&#x7684;&#x4F7F;&#x7528;"><a class="header-anchor" href="#delayed-&#x7684;&#x4F7F;&#x7528;"></a>DELAYED &#x7684;&#x4F7F;&#x7528;</h2>
<p>&#x4F7F;&#x7528;&#x5EF6;&#x8FDF;&#x63D2;&#x5165;&#x64CD;&#x4F5C;DELAYED&#x8C03;&#x8282;&#x7B26;&#x5E94;&#x7528;&#x4E8E;INSERT&#x548C;REPLACE&#x8BED;&#x53E5;&#x3002;&#x5F53;DELAYED&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x5230;&#x8FBE;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x628A;&#x6570;&#x636E;&#x884C;&#x653E;&#x5165;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x5E76;&#x7ACB;&#x5373;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x72B6;&#x6001;&#x4FE1;&#x606F;&#xFF0C;&#x8FD9;&#x6837;&#x5BA2;&#x6237;&#x7AEF;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x6570;&#x636E;&#x8868;&#x88AB;&#x771F;&#x6B63;&#x5730;&#x63D2;&#x5165;&#x8BB0;&#x5F55;&#x4E4B;&#x524D;&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x4E86;&#x3002;&#x5982;&#x679C;&#x8BFB;&#x53D6;&#x8005;&#x4ECE;&#x8BE5;&#x6570;&#x636E;&#x8868;&#x4E2D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5C31;&#x4F1A;&#x88AB;&#x4FDD;&#x6301;&#x7740;&#xFF0C;&#x76F4;&#x5230;&#x6CA1;&#x6709;&#x8BFB;&#x53D6;&#x8005;&#x4E3A;&#x6B62;&#x3002;</p>
<p>&#x63A5;&#x7740;&#x670D;&#x52A1;&#x5668;&#x5F00;&#x59CB;&#x63D2;&#x5165;&#x5EF6;&#x8FDF;&#x6570;&#x636E;&#x884C;&#xFF08;delayed-row&#xFF09;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x884C;&#x3002;&#x5728;&#x63D2;&#x5165;&#x64CD;&#x4F5C;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x8FD8;&#x8981;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x6709;&#x65B0;&#x7684;&#x8BFB;&#x53D6;&#x8BF7;&#x6C42;&#x5230;&#x8FBE;&#x548C;&#x7B49;&#x5F85;&#x3002;&#x5982;&#x679C;&#x6709;&#xFF0C;&#x5EF6;&#x8FDF;&#x6570;&#x636E;&#x884C;&#x961F;&#x5217;&#x5C31;&#x88AB;&#x6302;&#x8D77;&#xFF0C;&#x5141;&#x8BB8;&#x8BFB;&#x53D6;&#x8005;&#x7EE7;&#x7EED;&#x64CD;&#x4F5C;&#x3002;&#x5F53;&#x6CA1;&#x6709;&#x8BFB;&#x53D6;&#x8005;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x518D;&#x6B21;&#x5F00;&#x59CB;&#x63D2;&#x5165;&#x5EF6;&#x8FDF;&#x7684;&#x6570;&#x636E;&#x884C;&#x3002;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E00;&#x76F4;&#x8FDB;&#x884C;&#xFF0C;&#x76F4;&#x5230;&#x961F;&#x5217;&#x7A7A;&#x4E86;&#x4E3A;&#x6B62;&#x3002;</p>
<p><strong>&#x51E0;&#x70B9;&#x8981;&#x6CE8;&#x610F;&#x4E8B;&#x9879;</strong></p>
<p>INSERT DELAYED&#x5E94;&#x8BE5;&#x4EC5;&#x7528;&#x4E8E;&#x6307;&#x5B9A;&#x503C;&#x6E05;&#x5355;&#x7684;INSERT&#x8BED;&#x53E5;&#x3002;&#x670D;&#x52A1;&#x5668;&#x5FFD;&#x7565;&#x7528;&#x4E8E;INSERT DELAYED&#x2026;SELECT&#x8BED;&#x53E5;&#x7684;DELAYED&#x3002;&#x670D;&#x52A1;&#x5668;&#x5FFD;&#x7565;&#x7528;&#x4E8E;INSERT DELAYED&#x2026;ON DUPLICATE UPDATE&#x8BED;&#x53E5;&#x7684;DELAYED&#x3002;</p>
<p>&#x56E0;&#x4E3A;&#x5728;&#x884C;&#x88AB;&#x63D2;&#x5165;&#x524D;&#xFF0C;&#x8BED;&#x53E5;&#x7ACB;&#x523B;&#x8FD4;&#x56DE;&#xFF0C;&#x6240;&#x4EE5;&#x60A8;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;LAST_INSERT_ID()&#x6765;&#x83B7;&#x53D6;AUTO_INCREMENT&#x503C;&#x3002;AUTO_INCREMENT&#x503C;&#x53EF;&#x80FD;&#x7531;&#x8BED;&#x53E5;&#x751F;&#x6210;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;SELECT&#x8BED;&#x53E5;&#xFF0C;DELAYED&#x884C;&#x4E0D;&#x53EF;&#x89C1;&#xFF0C;&#x76F4;&#x5230;&#x8FD9;&#x4E9B;&#x884C;&#x786E;&#x5B9E;&#x88AB;&#x63D2;&#x5165;&#x4E86;&#x4E3A;&#x6B62;&#x3002;</p>
<p>DELAYED&#x5728;&#x4ECE;&#x5C5E;&#x590D;&#x5236;&#x670D;&#x52A1;&#x5668;&#x4E2D;&#x88AB;&#x5FFD;&#x7565;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;DELAYED&#x4E0D;&#x4F1A;&#x5728;&#x4ECE;&#x5C5E;&#x670D;&#x52A1;&#x5668;&#x4E2D;&#x4EA7;&#x751F;&#x4E0E;&#x4E3B;&#x670D;&#x52A1;&#x5668;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x6570;&#x636E;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x76EE;&#x524D;&#x5728;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x5404;&#x884C;&#x53EA;&#x4FDD;&#x5B58;&#x5728;&#x5B58;&#x50A8;&#x5668;&#x4E2D;&#xFF0C;&#x76F4;&#x5230;&#x5B83;&#x4EEC;&#x88AB;&#x63D2;&#x5165;&#x5230;&#x8868;&#x4E2D;&#x4E3A;&#x6B62;&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#xFF0C;&#x5982;&#x679C;&#x60A8;&#x5F3A;&#x884C;&#x4E2D;&#x6B62;&#x4E86;mysqld(&#x4F8B;&#x5982;&#xFF0C;&#x4F7F;&#x7528;kill -9)&#x6216;&#x8005;&#x5982;&#x679C;mysqld&#x610F;&#x5916;&#x505C;&#x6B62;&#xFF0C;&#x5219;&#x6240;&#x6709;&#x6CA1;&#x6709;&#x88AB;&#x5199;&#x5165;&#x78C1;&#x76D8;&#x7684;&#x884C;&#x90FD;&#x4F1A;&#x4E22;&#x5931;&#x3002;</p>
<h2 id="ignore&#x7684;&#x4F7F;&#x7528;"><a class="header-anchor" href="#ignore&#x7684;&#x4F7F;&#x7528;"></a>IGNORE&#x7684;&#x4F7F;&#x7528;</h2>
<p>IGNORE&#x662F;MySQL&#x76F8;&#x5BF9;&#x4E8E;&#x6807;&#x51C6;SQL&#x7684;&#x6269;&#x5C55;&#x3002;&#x5982;&#x679C;&#x5728;&#x65B0;&#x8868;&#x4E2D;&#x6709;&#x91CD;&#x590D;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x6216;&#x8005;&#x5F53;STRICT&#x6A21;&#x5F0F;&#x542F;&#x52A8;&#x540E;&#x51FA;&#x73B0;&#x8B66;&#x544A;&#xFF0C;&#x5219;&#x4F7F;&#x7528;IGNORE&#x63A7;&#x5236;ALTER TABLE&#x7684;&#x8FD0;&#x884C;&#x3002;</p>
<p>&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;IGNORE&#xFF0C;&#x5F53;&#x91CD;&#x590D;&#x5173;&#x952E;&#x5B57;&#x9519;&#x8BEF;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x590D;&#x5236;&#x64CD;&#x4F5C;&#x88AB;&#x653E;&#x5F03;&#xFF0C;&#x8FD4;&#x56DE;&#x524D;&#x4E00;&#x6B65;&#x9AA4;&#x3002;</p>
<p>&#x5982;&#x679C;&#x6307;&#x5B9A;&#x4E86;IGNORE&#xFF0C;&#x5219;&#x5BF9;&#x4E8E;&#x6709;&#x91CD;&#x590D;&#x5173;&#x952E;&#x5B57;&#x7684;&#x884C;&#xFF0C;&#x53EA;&#x4F7F;&#x7528;&#x7B2C;&#x4E00;&#x884C;&#xFF0C;&#x5176;&#x5B83;&#x6709;&#x51B2;&#x7A81;&#x7684;&#x884C;&#x88AB;&#x5220;&#x9664;&#x3002;&#x5E76;&#x4E14;&#xFF0C;&#x5BF9;&#x9519;&#x8BEF;&#x503C;&#x8FDB;&#x884C;&#x4FEE;&#x6B63;&#xFF0C;&#x4F7F;&#x4E4B;&#x5C3D;&#x91CF;&#x63A5;&#x8FD1;&#x6B63;&#x786E;&#x503C;&#x3002;insert ignore into tb(&#x2026;) value(&#x2026;)&#x8FD9;&#x6837;&#x4E0D;&#x7528;&#x6821;&#x9A8C;&#x662F;&#x5426;&#x5B58;&#x5728;&#x4E86;&#xFF0C;&#x6709;&#x5219;&#x5FFD;&#x7565;&#xFF0C;&#x65E0;&#x5219;&#x6DFB;&#x52A0;&#x3002;</p>
<h2 id="on-duplicate-key-update&#x7684;&#x4F7F;&#x7528;"><a class="header-anchor" href="#on-duplicate-key-update&#x7684;&#x4F7F;&#x7528;"></a>ON DUPLICATE KEY UPDATE&#x7684;&#x4F7F;&#x7528;</h2>
<p>&#x5982;&#x679C;&#x60A8;&#x6307;&#x5B9A;&#x4E86;ON DUPLICATE KEY UPDATE&#xFF0C;&#x5E76;&#x4E14;&#x63D2;&#x5165;&#x884C;&#x540E;&#x4F1A;&#x5BFC;&#x81F4;&#x5728;&#x4E00;&#x4E2A;UNIQUE&#x7D22;&#x5F15;&#x6216;PRIMARY KEY&#x4E2D;&#x51FA;&#x73B0;&#x91CD;&#x590D;&#x503C;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x65E7;&#x884C;UPDATE&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x5217;a&#x88AB;&#x5B9A;&#x4E49;&#x4E3A;UNIQUE&#xFF0C;&#x5E76;&#x4E14;&#x5305;&#x542B;&#x503C;1&#xFF0C;&#x5219;&#x4EE5;&#x4E0B;&#x4E24;&#x4E2A;&#x8BED;&#x53E5;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7684;&#x6548;&#x679C;&#xFF1A;</p>
<pre><code>mysql&gt; INSERT INTO table (a,b,c) VALUES (1,2,3) 
-&gt; ON DUPLICATE KEY UPDATE cc=c+1; 
mysql&gt; UPDATE table SET cc=c+1 WHERE a=1;
</code></pre>
<p>&#x5982;&#x679C;&#x884C;&#x4F5C;&#x4E3A;&#x65B0;&#x8BB0;&#x5F55;&#x88AB;&#x63D2;&#x5165;&#xFF0C;&#x5219;&#x53D7;&#x5F71;&#x54CD;&#x884C;&#x7684;&#x503C;&#x4E3A;1&#xFF1B;&#x5982;&#x679C;&#x539F;&#x6709;&#x7684;&#x8BB0;&#x5F55;&#x88AB;&#x66F4;&#x65B0;&#xFF0C;&#x5219;&#x53D7;&#x5F71;&#x54CD;&#x884C;&#x7684;&#x503C;&#x4E3A;2&#x3002;</p>
<p>&#x6CE8;&#x91CA;&#xFF1A;&#x5982;&#x679C;&#x5217;b&#x4E5F;&#x662F;&#x552F;&#x4E00;&#x5217;&#xFF0C;&#x5219;INSERT&#x4E0E;&#x6B64;UPDATE&#x8BED;&#x53E5;&#x76F8;&#x5F53;&#xFF1A;</p>
<pre><code>mysql&gt; UPDATE table SET cc=c+1 WHERE a=1 OR b=2 LIMIT 1;
</code></pre>
<p>&#x5982;&#x679C;a=1 OR b=2&#x4E0E;&#x591A;&#x4E2A;&#x884C;&#x5411;&#x5339;&#x914D;&#xFF0C;&#x5219;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x884C;&#x88AB;&#x66F4;&#x65B0;&#x3002;&#x901A;&#x5E38;&#xFF0C;&#x60A8;&#x5E94;&#x8BE5;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x5BF9;&#x5E26;&#x6709;&#x591A;&#x4E2A;&#x552F;&#x4E00;&#x5173;&#x952E;&#x5B57;&#x7684;&#x8868;&#x4F7F;&#x7528;ON DUPLICATE KEY&#x5B50;&#x53E5;&#x3002;&#x60A8;&#x53EF;&#x4EE5;&#x5728;UPDATE&#x5B50;&#x53E5;&#x4E2D;&#x4F7F;&#x7528;VALUES(col_name)&#x51FD;&#x6570;&#x4ECE;INSERT&#x2026;UPDATE&#x8BED;&#x53E5;&#x7684;INSERT&#x90E8;&#x5206;&#x5F15;&#x7528;&#x5217;&#x503C;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x91CD;&#x590D;&#x5173;&#x952E;&#x5B57;&#x51B2;&#x7A81;&#xFF0C;&#x5219;UPDATE&#x5B50;&#x53E5;&#x4E2D;&#x7684;VALUES(col_name)&#x53EF;&#x4EE5;&#x5F15;&#x7528;&#x88AB;&#x63D2;&#x5165;&#x7684;col_name&#x7684;&#x503C;&#x3002;&#x672C;&#x51FD;&#x6570;&#x7279;&#x522B;&#x9002;&#x7528;&#x4E8E;&#x591A;&#x884C;&#x63D2;&#x5165;&#x3002;VALUES()&#x51FD;&#x6570;&#x53EA;&#x5728;INSERT&#x2026;UPDATE&#x8BED;&#x53E5;&#x4E2D;&#x6709;&#x610F;&#x4E49;&#xFF0C;&#x5176;&#x5B83;&#x65F6;&#x5019;&#x4F1A;&#x8FD4;&#x56DE;NULL&#x3002;</p>
<p>&#x793A;&#x4F8B;&#xFF1A;</p>
<pre><code>mysql&gt; INSERT INTO table (a,b,c) VALUES (1,2,3),(4,5,6)
 
-&gt; ON DUPLICATE KEY UPDATE c=VALUES(a)+VALUES(b);
</code></pre>
<p>&#x672C;&#x8BED;&#x53E5;&#x4E0E;&#x4EE5;&#x4E0B;&#x4E24;&#x4E2A;&#x8BED;&#x53E5;&#x4F5C;&#x7528;&#x76F8;&#x540C;&#xFF1A;</p>
<pre><code>mysql&gt; INSERT INTO table (a,b,c) VALUES (1,2,3) 
-&gt; ON DUPLICATE KEY UPDATE c=3; 
mysql&gt; INSERT INTO table (a,b,c) VALUES (4,5,6) 
-&gt; ON DUPLICATE KEY UPDATE c=9;
</code></pre>
<p>&#x5F53;&#x60A8;&#x4F7F;&#x7528;ON DUPLICATE KEY UPDATE&#x65F6;&#xFF0C;DELAYED&#x9009;&#x9879;&#x88AB;&#x5FFD;&#x7565;&#x3002;</p>
<p>&#x5173;&#x4E8E;MySQL&#x5927;&#x6570;&#x636E;&#x91CF;&#x5FEB;&#x901F;&#x63D2;&#x5165;&#x65B9;&#x6CD5;&#x548C;&#x8BED;&#x53E5;&#x4F18;&#x5316;&#x7684;&#x64CD;&#x4F5C;&#x5C31;&#x4ECB;&#x7ECD;&#x5230;&#x8FD9;&#x91CC;&#x4E86;&#xFF0C;&#x5E0C;&#x671B;&#x672C;&#x6B21;&#x7684;&#x4ECB;&#x7ECD;&#x80FD;&#x591F;&#x5BF9;&#x60A8;&#x6709;&#x6240;&#x6536;&#x83B7;&#xFF01;</p>]]></content>
    
    <summary type="html">
    
      MySQL大数据量快速插入方法和语句优化是本文我们主要要介绍的内容，接下来我们就来一一介绍，希望能够让您有所收获！
    
    </summary>
    
      <category term="晨读" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/"/>
    
      <category term="数据库" scheme="http://ngudream.com/categories/%E6%99%A8%E8%AF%BB/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySql" scheme="http://ngudream.com/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>Gradle常用命令收录</title>
    <link href="http://ngudream.com/2016/10/09/gradle-common-command/"/>
    <id>http://ngudream.com/2016/10/09/gradle-common-command/</id>
    <published>2016-10-09T15:35:39.000Z</published>
    <updated>2017-01-15T07:58:44.377Z</updated>
    
    <content type="html"><![CDATA[<p>gradlew&#x4EE3;&#x8868; gradle wrapper&#xFF0C;&#x610F;&#x601D;&#x662F;gradle&#x7684;&#x4E00;&#x5C42;&#x5305;&#x88C5;&#x3002;</p>
<p>&#x4F7F;&#x7528;Android Studio&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x5DE5;&#x7A0B;&#x4E4B;&#x540E;&#xFF0C;&#x5176;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p>
<pre><code>&#x251C;&#x2500;&#x2500; app #Android App&#x76EE;&#x5F55;
&#x2502;   &#x251C;&#x2500;&#x2500; app.iml
&#x2502;   &#x251C;&#x2500;&#x2500; build #&#x6784;&#x5EFA;&#x8F93;&#x51FA;&#x76EE;&#x5F55;
&#x2502;   &#x251C;&#x2500;&#x2500; build.gradle #&#x6784;&#x5EFA;&#x811A;&#x672C;
&#x2502;   &#x251C;&#x2500;&#x2500; libs #so&#x76F8;&#x5173;&#x5E93;
&#x2502;   &#x251C;&#x2500;&#x2500; proguard-rules.pro #proguard&#x6DF7;&#x6DC6;&#x914D;&#x7F6E;
&#x2502;   &#x2514;&#x2500;&#x2500; src #&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x8D44;&#x6E90;&#x7B49;
&#x251C;&#x2500;&#x2500; build
&#x2502;   &#x2514;&#x2500;&#x2500; intermediates
&#x251C;&#x2500;&#x2500; build.gradle #&#x5DE5;&#x7A0B;&#x6784;&#x5EFA;&#x6587;&#x4EF6;
&#x251C;&#x2500;&#x2500; gradle
&#x2502;   &#x2514;&#x2500;&#x2500; wrapper
&#x251C;&#x2500;&#x2500; gradle.properties #gradle&#x7684;&#x914D;&#x7F6E;
&#x251C;&#x2500;&#x2500; gradlew #gradle wrapper linux shell&#x811A;&#x672C;
&#x251C;&#x2500;&#x2500; gradlew.bat
&#x251C;&#x2500;&#x2500; LibSqlite.iml
&#x251C;&#x2500;&#x2500; local.properties #&#x914D;&#x7F6E;Androod SDK&#x4F4D;&#x7F6E;&#x6587;&#x4EF6;
&#x2514;&#x2500;&#x2500; settings.gradle #&#x5DE5;&#x7A0B;&#x914D;&#x7F6E;
</code></pre>
<h2 id="&#x5E38;&#x7528;"><a class="header-anchor" href="#&#x5E38;&#x7528;"></a>&#x5E38;&#x7528;</h2>
<p>&#x4E0B;&#x9762;&#x4ECB;&#x7ECD;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x547D;&#x4EE4;&#xFF1A;</p>
<pre><code>./gradlew -v &#x67E5;&#x770B;gradle&#x7248;&#x672C;&#x53F7;
./gradlew clean &#x6E05;&#x9664;&#x9879;&#x76EE;/app&#x76EE;&#x5F55;&#x4E0B;&#x7684;build&#x6587;&#x4EF6;&#x5939;
./gradlew build &#x68C0;&#x67E5;&#x4F9D;&#x8D56;&#x5E76;&#x7F16;&#x8BD1;&#x6253;&#x5305;
</code></pre>
<p>&#x8BD5;&#x8FD0;&#x884C;build&#x3002;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x77E5;&#x9053;&#x67D0;&#x4E2A;task&#x6267;&#x884C;&#x65F6;&#x90A3;&#x4E9B;task&#x4F1A;&#x88AB;&#x4E00;&#x8D77;&#x6267;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x53C8;&#x4E0D;&#x60F3;&#x771F;&#x6B63;&#x7684;&#x6267;&#x884C;&#x8FD9;&#x4E9B;task&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;-m&#x6765;&#x8BD5;&#x8FD0;&#x884C;&#x3002;</p>
<pre><code>gradle -m build
</code></pre>
<p><strong>build &#x67D0;&#x4E2A;&#x6307;&#x5B9A; module</strong></p>
<pre><code>$ ./gradlew -p app clean build
</code></pre>
<p><strong>&#x660E;&#x786E;&#x6307;&#x5B9A;&#x4E0D;&#x6267;&#x884C;&#x67D0;&#x4E2A; task</strong></p>
<pre><code>$ ./gradlew build -x test -x lint
</code></pre>
<h2 id="&#x6253;&#x5305;"><a class="header-anchor" href="#&#x6253;&#x5305;"></a>&#x6253;&#x5305;</h2>
<pre><code>./gradlew assembleDebug &#x7F16;&#x8BD1;&#x5E76;&#x6253;Debug&#x5305;
./gradlew assembleRelease &#x7F16;&#x8BD1;&#x5E76;&#x6253;Release&#x7684;&#x5305;
./gradlew installRelease Release&#x6A21;&#x5F0F;&#x6253;&#x5305;&#x5E76;&#x5B89;&#x88C5;
./gradlew uninstallRelease &#x5378;&#x8F7D;Release&#x6A21;&#x5F0F;&#x5305;
</code></pre>
<h2 id="&#x4F9D;&#x8D56;&#x5173;&#x7CFB;"><a class="header-anchor" href="#&#x4F9D;&#x8D56;&#x5173;&#x7CFB;"></a>&#x4F9D;&#x8D56;&#x5173;&#x7CFB;</h2>
<p><strong>&#x663E;&#x793A;tasks&#x4EFB;&#x52A1;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;</strong></p>
<pre><code>gradle tasks --all
</code></pre>
<p><strong>&#x67E5;&#x770B;&#x6307;&#x5B9A;&#x9636;&#x6BB5;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;</strong></p>
<p>&#x4F7F;&#x7528;gradle dependencies &#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x9879;&#x76EE;&#x4E2D;&#x5305;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002;&#x4E0D;&#x8FC7;&#x662F;&#x5217;&#x51FA;&#x4E86;&#x6240;&#x6709;&#x9636;&#x6BB5;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x5982;&#x679C;&#x9879;&#x76EE;&#x4E2D;&#x4F9D;&#x8D56;&#x590D;&#x6742;&#x7684;&#x8BDD;&#x770B;&#x8D77;&#x6765;&#x6709;&#x70B9;&#x5934;&#x75DB;&#x3002;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x2013;configuration&#x6765;&#x67E5;&#x770B;&#x6307;&#x5B9A;&#x9636;&#x6BB5;&#x7684;&#x4F9D;&#x8D56;&#x60C5;&#x51B5;&#x3002;</p>
<pre><code>gradle -q dependencies
</code></pre>
<p><strong>&#x9879;&#x76EE;&#x4F9D;&#x8D56;&#x6E05;&#x5355;</strong></p>
<p>&#x8FD0;&#x884C;&#x547D;&#x4EE4; gradle dependencies project:dependencies &#xFF0C;&#x591A;&#x4E2A;&#x9879;&#x76EE;&#x4EE5;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x663E;&#x793A;&#x9879;&#x76EE;&#x7684;&#x4F9D;&#x8D56;&#x5217;&#x8868;&#xFF0C;&#x6811;&#x72B6;&#x663E;&#x793A;&#x3002;</p>
<pre><code>gradle -q dependencies test1:dependencies test2:dependencies
</code></pre>
<p>&#x67E5;&#x770B;testComiple&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;</p>
<pre><code>gradle -q dependencies --configuration testCompile
</code></pre>
<p>&#x67E5;&#x770B;&#x6307;&#x5B9A;dependency&#x7684;&#x4F9D;&#x8D56;&#x60C5;&#x51B5;&#x3002; &#x5047;&#x5982;&#x6211;&#x60F3;&#x67E5;&#x770B;&#x9879;&#x76EE;&#x4E2D;&#x6709;&#x6CA1;&#x6709;&#x5F15;&#x5165;junit&#xFF0C;&#x90A3;&#x4E9B;&#x9636;&#x6BB5;&#x5F15;&#x5165;&#x4E86;junit&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;dependecyInsight&#x6765;&#x67E5;&#x770B;&#x3002;</p>
<pre><code>gradle dependencyInsight --dependency junit --configuration testCompile
</code></pre>
<p>&#x6CE8;&#x610F;dependencyInsight&#x9ED8;&#x8BA4;&#x53EA;&#x4F1A;&#x67E5;&#x770B;compile&#x9636;&#x6BB5;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x67E5;&#x770B;&#x5176;&#x4ED6;&#x9636;&#x6BB5;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x2013;configuration&#x6765;&#x6307;&#x5B9A;&#x3002;</p>
<p>&#x6267;&#x884C; gradle -q webapp:dependencyInsight --dependency groovy --configuration compile &#x8F93;&#x51FA;</p>
<pre><code>&gt; gradle -q webapp:dependencyInsight --dependency groovy --configuration compile
    org.codehaus.groovy:groovy-all:2.3.6
    \--- project :api
         \--- compile
</code></pre>
<p><strong>&#x9879;&#x76EE;&#x5C5E;&#x6027;&#x6E05;&#x5355;</strong></p>
<p>&#x8FD0;&#x884C;&#x547D;&#x4EE4; gradle properties&#xFF0C;&#x8F93;&#x51FA;api&#x6240;&#x6709;&#x9879;&#x76EE;&#x5C5E;&#x6027;&#x5217;&#x8868;</p>
<pre><code>gradle -q api:properties
</code></pre>
<h2 id="&#x52A0;&#x901F;&#x7F16;&#x8BD1;"><a class="header-anchor" href="#&#x52A0;&#x901F;&#x7F16;&#x8BD1;"></a>&#x52A0;&#x901F;&#x7F16;&#x8BD1;</h2>
<p>&#xFF08;1&#xFF09;&#x6709;&#x4E00;&#x4E2A;&#x51CF;&#x5C11;&#x65F6;&#x95F4;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5C3D;&#x65E9;&#x7684;&#x8BA9;gradle&#x53BB;&#x914D;&#x7F6E;&#xFF0C;&#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x53EA;&#x662F;&#x53E6;&#x5916;&#x7684;&#x4E00;&#x79CD;&#x6DFB;&#x52A0;&#x547D;&#x4EE4;&#x6807;&#x5FD7;&#xFF1A;</p>
<pre><code>./gradlew :android:assembleDebug --dry-run --profile --configure-on-demand
</code></pre>
<p>&#x914D;&#x7F6E;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x547D;&#x4EE4;&#x5BF9;gradle&#x662F;&#x4E00;&#x4E2A;&#x5B75;&#x5316;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x4E0D;&#x662F;&#x9ED8;&#x8BA4;&#x542F;&#x7528;&#x7684;&#x3002;&#x6216;&#x8BB8;&#x5C06;&#x6765;&#x7684;&#x4E00;&#x5929;&#x53EF;&#x4EE5;&#x9ED8;&#x8BA4;&#x5F00;&#x542F;&#xFF0C;&#x4F46;&#x662F;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5168;&#x5C40;&#x4F7F;&#x7528;&#x5B83;&#xFF0C;&#x901A;&#x8FC7;&#x5728;&#x4F60;&#x7684;home&#x76EE;&#x5F55;&#x4E0B;&#x52A0;&#x4E00;&#x884C;.gradle/gradle.properties&#xFF0C;<br>
&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x4E5F;&#x6EE1;&#x8DB3;&#x5728;linux&#x548C;OSX&#x7CFB;&#x7EDF;&#x4E0B;&#xFF1A;</p>
<pre><code>echo &apos;org.gradle.configureondemand=true&apos; &gt;&gt; ~/.gradle/gradle.properties
</code></pre>
<p>&#xFF08;2&#xFF09;&#x4F7F;&#x7528;gradle daemon<br>
gradle daemon&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x9650;&#x5236;&#x6240;&#x6709;&#x7684;&#x5F00;&#x9500;&#x3002;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5B83;</p>
<pre><code>./gradlew :android:assembleDebug --dry-run --no-daemon
# vs. 
./gradlew :android:assembleDebug --dry-run --daemon
</code></pre>
<p>&#x4F7F;&#x7528;gradle daemon&#x8981;&#x6BD4;&#x4E0D;&#x9002;&#x7528;&#x5FEB;&#x7684;&#x4E0D;&#x662F;&#x4E00;&#x70B9;&#x70B9;&#xFF0C;&#x7528;gradle daemon&#x786E;&#x5B9E;&#x5F88;&#x68D2;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x5E94;&#x8BE5;&#x628A;&#x5B83;&#x8BBE;&#x7F6E;&#x6210;&#x5168;&#x5C40;&#x7684;&#x3002;</p>
<pre><code>echo &apos;org.gradle.daemon=true&apos; &gt;&gt; ~/.gradle/gradle.properties
</code></pre>
<h2 id="build-gradle"><a class="header-anchor" href="#build-gradle"></a>build.gradle</h2>
<p><strong>gradle&#x5141;&#x8BB8;&#x4F60;&#x4F7F;&#x7528;transitive&#x5C5E;&#x6027;&#x6765;&#x6392;&#x9664;&#x6240;&#x6709;&#x7684;&#x4F20;&#x9012;&#x4F9D;&#x8D56;</strong></p>
<pre><code>dependencies {
	cargo(&apos;org.codehaus.cargo:cargo-ant:1.3.1&apos;) {
	transitive = false
	}
	// &#x9009;&#x62E9;&#x6027;&#x7684;&#x58F0;&#x660E;&#x4E00;&#x4E9B;&#x9700;&#x8981;&#x7684;&#x5E93;
}
</code></pre>
<p><strong>&#x5E93;&#x91CD;&#x590D;&#x51B2;&#x7A81;</strong></p>
<p>&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x5728; module &#x7684; build.gradle &#x7684; dependency &#x6DFB;&#x52A0;&#x4F9D;&#x8D56;&#x65F6;&#xFF0C;&#x52A0;&#x5165; exclude &#x89C4;&#x5219;&#xFF1A;</p>
<pre><code>compile (&apos;com.bugtags.library:bugtags-lib:latest.integration&apos;) {
        exclude group: &apos;com.android.support&apos;, module: &apos;support-v4&apos;
}
</code></pre>
<p>&#x5728;Gradle &#x8FDB;&#x884C;dex&#x7684;&#x53EF;&#x80FD;&#x4F1A;&#x9047;&#x5230;&#x5185;&#x5B58;&#x4E0D;&#x591F;&#x7528;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x5927;&#x6982;&#x662F;java.lang.OutOfMemoryError: GC overhead limit exceeded&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x53EA;&#x9700;&#x8981;&#x914D;&#x7F6E;dexOptions&#x7684;javaMaxHeapSize&#x5927;&#x5C0F;&#x5373;&#x53EF;&#xFF0C;&#x6211;&#x8FD9;&#x91CC;&#x914D;&#x7F6E;4g&#xFF1A;</p>
<pre><code>dexOptions {
    javaMaxHeapSize &quot;4g&quot;
}
</code></pre>
<p><strong>&#x4E0B;&#x8F7D;&#x4E0D;&#x5230;&#x7279;&#x5B9A;&#x7684;&#x7248;&#x672C;</strong><br>
Maven &#x548C; Gradle &#x90FD;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x7F13;&#x5B58;&#x5E93;&#xFF0C;&#x9ED8;&#x8BA4;&#x5B89;&#x88C5;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x662F;&#x5728;&#x7528;&#x6237;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684; .m2 &#x6216;&#x8005; .gradle &#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x3002;<br>
&#x53EF;&#x4EE5;&#x5C1D;&#x8BD5;&#x5220;&#x9664;&#x91CC;&#x9762;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x4F8B;&#x5982;&#x5C06; Gradle &#x7684; cache &#x6587;&#x4EF6;&#x5220;&#x9664;&#xFF1A;</p>
<pre><code>rm -rf ~/.gradle/caches/
</code></pre>
<h2 id="&#x52A8;&#x6001;&#x8BBE;&#x7F6E;"><a class="header-anchor" href="#&#x52A8;&#x6001;&#x8BBE;&#x7F6E;"></a>&#x52A8;&#x6001;&#x8BBE;&#x7F6E;</h2>
<h3 id="resvalue"><a class="header-anchor" href="#resvalue"></a>resValue</h3>
<p><strong>&#x4F7F;&#x7528; gradle &#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x52A8;&#x6001;&#x8BBE;&#x7F6E; Android resValue</strong></p>
<p>&#x4FEE;&#x6539; res value &#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6BD4;&#x5982;&#x4FEE;&#x6539; strings.xml &#x6587;&#x4EF6;&#x4E2D;&#x7684; AppName &#x7684;&#x503C;</p>
<p>&#x5728;&#x4F60;&#x7684; gradle &#x6587;&#x4EF6; buildTypes &#x6216;&#x8005; productFlavors &#x4E0B;&#x9762;&#xFF0C;&#x5982; release &#x4F53;&#x5185;&#x5199;&#x4E0A;&#x7C7B;&#x4F3C;&#xFF1A;</p>
<pre><code>resValue &quot;string&quot;, &quot;AppName&quot;, &quot;app1&quot;
</code></pre>
<p>&#x610F;&#x4E3A;&#x628A;&#x540D;&#x4E3A; AppName &#x7684; string value &#x503C;&#x6539;&#x4E3A; app1</p>
<h3 id="buildconfig"><a class="header-anchor" href="#buildconfig"></a>BuildConfig</h3>
<p><strong>&#x4F7F;&#x7528; gradle &#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x52A8;&#x6001;&#x8BBE;&#x7F6E; Android BuildConfig</strong></p>
<p>&#x5728;&#x4F60;&#x7684; gradle &#x6587;&#x4EF6; buildTypes &#x6216;&#x8005; productFlavors &#x4E0B;&#x9762;&#xFF0C;&#x5982; release &#x4F53;&#x5185;&#x5199;&#x4E0A;&#x7C7B;&#x4F3C;&#xFF1A;</p>
<pre><code>buildConfigField &quot;String&quot;, &quot;ENDPOINT&quot;, &quot;\&quot;http://example.com\&quot;&quot;
</code></pre>
<p>gradle sync &#x4E00;&#x4E0B;&#x540E;&#xFF0C;BuildConfig.ENDPOINT &#x5C31;&#x4F1A;&#x88AB;&#x8D4B;&#x503C;&#x4E3A; <a href="http://example.com" target="_blank" rel="external">http://example.com</a> &#x5C31;&#x53EF;&#x4EE5;&#x4F9B; Java &#x4EE3;&#x7801;&#x8C03;&#x7528;&#x4E86;&#x3002;</p>
<h3 id="manifestplaceholders"><a class="header-anchor" href="#manifestplaceholders"></a>manifestPlaceholders</h3>
<p><strong>&#x4F7F;&#x7528; manifestPlaceholders &#x65F6;&#x52A8;&#x6001;&#x8BBE;&#x7F6E; Android Manifest</strong></p>
<p>manifestPlaceholders &#x53EF;&#x4EE5;&#x66FF;&#x6362; AndroidManifest.xml &#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x6807;&#x7B7E;&#xFF0C;&#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#x6807;&#x7B7E;&#x7528;&#x6765;&#x66FF;&#x6362;&#x9700;&#x8981;&#x7684;&#x6587;&#x672C;&#x3002;</p>
<p>&#x5982;&#x679C;&#x540C;&#x4E00;&#x4E2A; activity &#x5728;&#x4E0D;&#x540C; flavor &#x7684; AndroidManifest.xml &#x4E2D;&#x8981;&#x8BBE;&#x7F6E;&#x4E0D;&#x540C;&#x7684; launchmode&#xFF0C;&#x662F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x5728; androidmanifest &#x6587;&#x4EF6;&#x91CC;&#x9762;&#x5199;&#x4E0D;&#x540C;&#x7684; launchmode &#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728; gradle &#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x52A8;&#x6001;&#x7684;&#x7ED9; launchmode &#x8BBE;&#x7F6E;&#x503C;&#xFF0C;&#x8FD9;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5230; manifestPlaceholders&#x3002;</p>
<p><strong>&#x57FA;&#x672C;&#x7528;&#x6CD5;&#xFF1A;</strong></p>
<p>&#xFF08;1&#xFF09;&#x5728;build.gradle&#x6587;&#x4EF6;&#x91CC;&#x9762;&#x5B9A;&#x4E49; manifestPlaceholders[&#x201C;key1&#x201D;:&#x201C;value1&#x201D;, &#x201C;key2&#x201D;:&#x201C;value2&#x201D;, &#x201C;key3&#x201D;:&#x201C;value3&#x201D; &#x2026;]</p>
<p>&#xFF08;2&#xFF09;&#x7136;&#x540E;&#x5728; AndroidManifest.xml &#x91CC;&#x9762;&#x5F15;&#x7528; android:launchMode=&quot;${key1}&quot;</p>
<p>&#x4E3E;&#x4F8B;&#x76EE;&#x6807;&#xFF1A;A&#x5E94;&#x7528;&#x666E;&#x901A;&#x7248;&#x672C;&#x6CA1;&#x6709;&#x684C;&#x9762;&#x56FE;&#x6807;&#xFF0C;&#x9700;&#x8981;&#x4ECE;&#x8BBE;&#x7F6E;&#x5E94;&#x7528;&#x91CC;&#x9762;&#x8DF3;&#x8F6C;&#xFF1B;debug &#x7248;&#x672C;&#x6709;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7684; launch &#x754C;&#x9762;&#x5E76;&#x6709;&#x684C;&#x9762;&#x56FE;&#x6807;&#xFF1B;&#x6D77;&#x5916;&#x7248;&#x6709;&#x684C;&#x9762;&#x56FE;&#x6807;&#x5E76;&#x6709;&#x6B63;&#x5F0F;&#x7684; launch &#x754C;&#x9762;&#x3002;</p>
<p>&#x5728; build.gradle &#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#xFF1A;</p>
<pre><code>//&#x9ED8;&#x8BA4;&#x7684;&#x914D;&#x7F6E;
defaultConfig {
    minSdkVersion 19
    applicationId &apos;com.gradle.example&apos;
    targetSdkVersion 23
    versionCode Integer.parseInt(project.VERSION_CODE)
    versionName project.VERSION_NAME
    manifestPlaceholders = [
            LAUNCH_MODE     : &quot;singleTask&quot;,
            LAUNCH_PAGE_NAME: &quot;com.gradle.example.test.TestActivity&quot;,
            LAUCH_PAGE_CATEGORY: &quot;android.intent.category.LAUNCHER&quot;
    ]
}
</code></pre>
<p>&#x5728; gradle.properties &#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49; versioncode &#x548C; viersioname&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7; Integer.parseInt(project.VERSION_CODE)&#x3001;project.VERSION_NAME &#x5F15;&#x7528;&#x3002;</p>
<p>&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528; manifestPlaceholders &#x5B9A;&#x4E49;&#x4E86; activity &#x7684;&#x542F;&#x52A8;&#x6A21;&#x5F0F;&#xFF0C;launch &#x9875;&#x9762;&#x7684;activity &#x548C; activity &#x7684; category&#xFF08;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x6709;&#x684C;&#x9762;&#x56FE;&#x6807;&#xFF09;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x518D;&#x5B9A;&#x4E49;&#x4E24;&#x4E2A; flavor &#x7EF4;&#x5EA6;:</p>
<pre><code>productFlavors {
    //&#x6D77;&#x5916;&#x7248;
    international {
        manifestPlaceholders = [
                LAUNCH_MODE        : &quot;singleTop&quot;,
                LAUNCH_PAGE_NAME   : &quot;com.gradle.example.MainActivity&quot;,
                LAUCH_PAGE_CATEGORY: &quot;android.intent.category.DEFAULT&quot;
        ]
    }
    //&#x56FD;&#x5185;&#x666E;&#x901A;&#x7248;
    internal {
        manifestPlaceholders = [
                LAUNCH_MODE     : &quot;singleTask&quot;,
                LAUNCH_PAGE_NAME: &quot;com.gradle.example.test.TestActivity&quot;,
                LAUCH_PAGE_CATEGORY: &quot;android.intent.category.LAUNCHER&quot;
        ]
    }
}
</code></pre>
<p>&#x6D77;&#x5916; release &#x7248;&#x6709;&#x684C;&#x9762;&#x56FE;&#x6807;&#xFF0C;&#x6240;&#x4EE5; debug &#x7248;&#x672C;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x684C;&#x9762;&#x56FE;&#x6807;&#x4E86;&#xFF0C;TestActivity &#x9875;&#x9762;&#x7684; category &#x4E3A; DEFAULT &#x7C7B;&#x578B;&#xFF0C;MainActivity &#x9875;&#x9762;&#x7684;category &#x4E3A; LAUNCHER &#x7C7B;&#x578B;&#x3002;&#x70B9;&#x51FB;&#x684C;&#x9762;&#x6253;&#x5F00;&#x7684;&#x9996;&#x9875;&#x9762;&#x662F; MainActivity&#xFF0C;launchMode &#x503C;&#x5219;&#x662F; singleTop&#xFF0C;&#x8FD9;&#x6837;&#x8FDB;&#x5165;&#x9996;&#x9875;&#x6253;&#x5F00;&#x4E8C;&#x7EA7;&#x9875;&#x9762;&#x540E;&#xFF0C;&#x56DE;&#x5230;&#x684C;&#x9762;&#x518D;&#x6B21;&#x70B9;&#x51FB;&#x684C;&#x9762;&#x56FE;&#x6807;&#x542F;&#x52A8;&#x5E94;&#x7528;&#x8FD8;&#x662F;&#x5230;&#x521A;&#x624D;&#x7684;&#x4E8C;&#x7EA7;&#x9875;&#x9762;&#x3002;</p>
<p>&#x56FD;&#x5185; release &#x666E;&#x901A;&#x7248;&#x6CA1;&#x6709;&#x684C;&#x9762;&#x56FE;&#x6807;&#xFF0C;&#x4F46;&#x4E3A;&#x4E86;&#x5E73;&#x65F6;&#x5F00;&#x53D1;&#x7684;&#x65B9;&#x4FBF;&#x5728; debug &#x7248;&#x672C;&#x8BBE;&#x7F6E;&#x4E86;&#x4E2A;&#x684C;&#x9762;&#x56FE;&#x6807;&#xFF0C;TestActivity &#x9875;&#x9762;&#x7684; category &#x4E3A; LAUNCHER &#x7C7B;&#x578B;&#x3002;&#x4E3A;&#x4E86;&#x4ECE;&#x8BBE;&#x7F6E;&#x5E94;&#x7528;&#x91CC;&#x9762;&#x8DF3;&#x8F6C;&#x5230;A&#x5E94;&#x7528;&#x65F6;&#xFF0C;&#x4E0A;&#x6ED1;&#x4EFB;&#x52A1;&#x680F;&#x770B;&#x5230;&#x7684;A&#x5E94;&#x7528;&#x56FE;&#x6807;&#x4E0D;&#x662F;&#x8BBE;&#x7F6E;&#x5E94;&#x7528;&#x7684;&#x56FE;&#x6807;&#xFF0C;&#x5373;A&#x5E94;&#x7528;&#x7684;&#x9996;&#x9875;&#x548C;&#x8BBE;&#x7F6E;&#x5E94;&#x7528;&#x4E0D;&#x5728;&#x540C;&#x4E00;&#x4E2A; stack&#xFF0C;&#x6240;&#x4EE5; launchMode &#x8BBE;&#x7F6E;&#x6210; singleTask&#x3002;</p>
<p>main &#x6587;&#x4EF6;&#x5939;&#x91CC;&#x9762; AndroidManifest.xml &#x7684;&#x5B9A;&#x4E49;&#xFF1A;</p>
<pre><code>&lt;activity
            android:name=&quot;.MainActivity&quot;
	    android:launchMode=&quot;${LAUNCH_MODE}&quot;
            android:screenOrientation=&quot;portrait&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;
            &lt;/intent-filter&gt;
&lt;/activity&gt;
</code></pre>
<p>debug &#x6587;&#x4EF6;&#x5939;&#x91CC;&#x9762; AndroidManifest.xml &#x7684;&#x5B9A;&#x4E49;&#xFF1A;</p>
<pre><code>&lt;activity 
	android:name=&quot;${LAUNCH_PAGE_NAME}&quot;
	android:screenOrientation=&quot;portrait&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;${LAUCH_PAGE_CATEGORY}&quot; /&gt;
            &lt;/intent-filter&gt;
&lt;/activity&gt;
</code></pre>
<p>international &#x6587;&#x4EF6;&#x5939;&#x91CC;&#x9762;&#x7684; AndroidManifest.xml &#x7684;&#x5B9A;&#x4E49;&#xFF1A;</p>
<pre><code>&lt;activity
            android:name=&quot;${LAUNCH_PAGE_NAME}&quot;
	    android:launchMode=&quot;${LAUNCH_MODE}&quot;
            android:screenOrientation=&quot;portrait&quot;&gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
                &lt;category android:name=&quot;${LAUCH_PAGE_CATEGORY}&quot; /&gt;
            &lt;/intent-filter&gt;
&lt;/activity&gt;
</code></pre>
<p>&#x81F3;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;&#x540C;&#x4E00;&#x5957;&#x4EE3;&#x7801;&#xFF0C;&#x7F16;&#x51FA;&#x4E0D;&#x540C;&#x9700;&#x6C42;&#x7684;apk&#xFF08;&#x6709;&#x65E0;&#x684C;&#x9762;&#x56FE;&#x6807;&#x548C; &#x8BBE;&#x7F6E;&#x76F8;&#x540C; activity &#x7684; &#x4E0D;&#x540C; launchMode&#xFF09;&#x3002;</p>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="http://www.android100.org/html/201509/05/179253.html" target="_blank" rel="external">http://www.android100.org/html/201509/05/179253.html</a></li>
<li><a href="http://www.cr173.com/html/22591_1.html" target="_blank" rel="external">http://www.cr173.com/html/22591_1.html</a></li>
<li><a href="http://wiki.jikexueyuan.com/project/gradle-2-user-guide/using-the-gradle-command-line.html" target="_blank" rel="external">http://wiki.jikexueyuan.com/project/gradle-2-user-guide/using-the-gradle-command-line.html</a></li>
<li><a href="http://www.flysnow.org/2015/03/30/manage-your-android-project-with-gradle.html" target="_blank" rel="external">http://www.flysnow.org/2015/03/30/manage-your-android-project-with-gradle.html</a></li>
<li><a href="http://blog.bugtags.com/2015/12/17/embrace-android-studio-indepth/" target="_blank" rel="external">http://blog.bugtags.com/2015/12/17/embrace-android-studio-indepth/</a></li>
<li><a href="http://blog.csdn.net/xx326664162/article/details/49247815" target="_blank" rel="external">http://blog.csdn.net/xx326664162/article/details/49247815</a></li>
<li><a href="http://blog.csdn.net/qq_21793463/article/details/52069127" target="_blank" rel="external">http://blog.csdn.net/qq_21793463/article/details/52069127</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      Gradle是一种自动化构建工具。 它使用一种基于Groovy的特定领域语言(DSL)来声明项目设置，抛弃了基于XML的各种繁琐配置。本文将收录Gradle的常用命令，方便平时查找。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Gradle" scheme="http://ngudream.com/tags/Gradle/"/>
    
  </entry>
  
</feed>
