<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>移动开发 | ngudream</title>
  <subtitle>Coding Changes the World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ngudream.com/"/>
  <updated>2017-03-21T13:44:03.385Z</updated>
  <id>http://ngudream.com/</id>
  
  <author>
    <name>ngudream</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java开发岗位面试题归类汇总</title>
    <link href="http://ngudream.com/2017/03/17/java-interview/"/>
    <id>http://ngudream.com/2017/03/17/java-interview/</id>
    <published>2017-03-17T13:36:32.000Z</published>
    <updated>2017-03-21T13:44:03.385Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java&#x57FA;&#x7840;"><a class="header-anchor" href="#java&#x57FA;&#x7840;"></a>Java&#x57FA;&#x7840;</h2>
<p><strong>1. String &#x7C7B;&#x4E3A;&#x4EC0;&#x4E48;&#x662F; final &#x7684;</strong></p>
<p>final &#x7684;&#x51FA;&#x73B0;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x4E3A;&#x4E86;&#x4E0D;&#x60F3;&#x6539;&#x53D8;&#xFF0C;&#x800C;&#x4E0D;&#x60F3;&#x6539;&#x53D8;&#x7684;&#x7406;&#x7531;&#x6709;&#x4E24;&#x70B9;&#xFF1A;&#x8BBE;&#x8BA1;(&#x5B89;&#x5168;)&#x6216;&#x8005;&#x6548;&#x7387;&#x3002;</p>
<p>final &#x4FEE;&#x9970;&#x7684;&#x7C7B;&#x662F;&#x4E0D;&#x88AB;&#x80FD;&#x7EE7;&#x627F;&#x7684;&#xFF0C;&#x6240;&#x4EE5; final &#x4FEE;&#x9970;&#x7684;&#x7C7B;&#x662F;&#x4E0D;&#x80FD;&#x88AB;&#x7BE1;&#x6539;&#x7684;&#x3002;</p>
<p>1&#x3001;&#x4ECE;&#x8BBE;&#x8BA1;&#x5B89;&#x5168;&#x4E0A;&#x8BB2;&#xFF1A;</p>
<ul>
<li>&#x786E;&#x4FDD;&#x5B83;&#x4EEC;&#x4E0D;&#x4F1A;&#x5728;&#x5B50;&#x7C7B;&#x4E2D;&#x6539;&#x53D8;&#x8BED;&#x4E49;&#x3002;String &#x7C7B;&#x662F; final &#x7C7B;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x4E0D;&#x5141;&#x8BB8;&#x4EFB;&#x4F55;&#x4EBA;&#x5B9A;&#x4E49;String &#x7684;&#x5B50;&#x7C7B;&#x3002;&#x6362;&#x8A00;&#x4E4B;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x4E00;&#x4E2A; String &#x7684;&#x5F15;&#x7528;&#xFF0C;&#x5B83;&#x5F15;&#x7528;&#x7684;&#x4E00;&#x5B9A;&#x662F;&#x4E00;&#x4E2A; String &#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x4E0D;&#x53EF;&#x80FD;&#x662F;&#x5176;&#x4ED6;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#x3002;</li>
<li>String &#x4E00;&#x65E6;&#x88AB;&#x521B;&#x5EFA;&#x662F;&#x4E0D;&#x80FD;&#x88AB;&#x4FEE;&#x6539;&#x7684;&#xFF0C;&#x56E0;&#x4E3A; Java &#x8BBE;&#x8BA1;&#x8005;&#x5C06; String &#x4E3A;&#x53EF;&#x4EE5;&#x5171;&#x4EAB;&#x7684;</li>
</ul>
<p>2&#x3001;&#x4ECE;&#x6548;&#x7387;&#x4E0A;&#x8BB2;&#xFF1A;</p>
<ul>
<li>&#x8BBE;&#x8BA1;&#x6210; final&#xFF0C;JVM &#x624D;&#x4E0D;&#x7528;&#x5BF9;&#x76F8;&#x5173;&#x65B9;&#x6CD5;&#x5728;&#x865A;&#x51FD;&#x6570;&#x8868;&#x4E2D;&#x67E5;&#x8BE2;&#xFF0C;&#x800C;&#x76F4;&#x63A5;&#x5B9A;&#x4F4D;&#x5230; String &#x7C7B;&#x7684;&#x76F8;&#x5173;&#x65B9;&#x6CD5;&#x4E0A;&#xFF0C;&#x63D0;&#x9AD8;&#x4E86;&#x6267;&#x884C;&#x6548;&#x7387;&#x3002;</li>
<li>Java &#x8BBE;&#x8BA1;&#x8005;&#x8BA4;&#x4E3A;&#x5171;&#x4EAB;&#x5E26;&#x6765;&#x7684;&#x6548;&#x7387;&#x66F4;&#x9AD8;&#x3002;</li>
</ul>
<p>&#x603B;&#x800C;&#x8A00;&#x4E4B;&#xFF0C;&#x5C31;&#x662F;&#x8981;&#x4FDD;&#x8BC1; java.lang.String &#x5F15;&#x7528;&#x7684;&#x5BF9;&#x8C61;&#x4E00;&#x5B9A;&#x662F; java.lang.String &#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5F15;&#x7528;&#x5B83;&#x7684;&#x5B50;&#x5B59;&#x7C7B;&#xFF0C;&#x8FD9;&#x6837;&#x624D;&#x80FD;&#x4FDD;&#x8BC1;&#x5B83;&#x7684;&#x6548;&#x7387;&#x548C;&#x5B89;&#x5168;&#x3002;</p>
<p><strong>2. HashMap &#x7684;&#x6E90;&#x7801;&#xFF0C;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#xFF0C;&#x5E95;&#x5C42;&#x7ED3;&#x6784;&#x3002;</strong></p>
<p>HashMap &#x57FA;&#x4E8E;&#x54C8;&#x5E0C;&#x8868;&#x7684; Map &#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#x3002;&#x6B64;&#x5B9E;&#x73B0;&#x63D0;&#x4F9B;&#x6240;&#x6709;&#x53EF;&#x9009;&#x7684;&#x6620;&#x5C04;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x5141;&#x8BB8;&#x4F7F;&#x7528; null &#x503C;&#x548C; null &#x952E;&#x3002;&#xFF08;&#x9664;&#x4E86;&#x4E0D;&#x540C;&#x6B65;&#x548C;&#x5141;&#x8BB8;&#x4F7F;&#x7528; null &#x4E4B;&#x5916;&#xFF0C;HashMap &#x7C7B;&#x4E0E; Hashtable &#x5927;&#x81F4;&#x76F8;&#x540C;&#x3002;&#xFF09;&#x6B64;&#x7C7B;&#x4E0D;&#x4FDD;&#x8BC1;&#x6620;&#x5C04;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x5B83;&#x4E0D;&#x4FDD;&#x8BC1;&#x8BE5;&#x987A;&#x5E8F;&#x6052;&#x4E45;&#x4E0D;&#x53D8;&#x3002;</p>
<p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F; HashMap &#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x8981;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684; HashMap&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; Collections &#x7C7B;&#x7684;&#x9759;&#x6001;&#x65B9;&#x6CD5; synchronizedMap &#x83B7;&#x5F97;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684; HashMap&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/ITtangtang/p/3948406.html" target="_blank" rel="external">http://www.cnblogs.com/ITtangtang/p/3948406.html</a></p>
<p><strong>3. &#x8BF4;&#x8BF4;&#x4F60;&#x77E5;&#x9053;&#x7684;&#x51E0;&#x4E2A;Java&#x96C6;&#x5408;&#x7C7B;&#xFF1A;list&#x3001;set&#x3001;queue&#x3001;map &#x5B9E;&#x73B0;&#x7C7B;&#x3002;</strong><br>
&#xFF08;1&#xFF09;&#x5404;&#x79CD; Collection &#x548C;&#x5404;&#x79CD; Map &#x90FD;&#x53EF;&#x4EE5;&#x5728;&#x4F60;&#x5411;&#x5176;&#x4E2D;&#x6DFB;&#x52A0;&#x66F4;&#x591A;&#x7684;&#x5143;&#x7D20;&#x65F6;&#xFF0C;&#x81EA;&#x52A8;&#x8C03;&#x6574;&#x5176;&#x5C3A;&#x5BF8;&#x3002;&#x5BB9;&#x5668;&#x4E0D;&#x80FD;&#x6301;&#x6709;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x81EA;&#x52A8;&#x5305;&#x88C5;&#x673A;&#x5236;&#x4F1A;&#x4ED4;&#x7EC6;&#x5730;&#x6267;&#x884C;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x5230;&#x5BB9;&#x5668;&#x4E2D;&#x7684;&#x6240;&#x6301;&#x6709;&#x7684;&#x5305;&#x88C5;&#x5668;&#x7C7B;&#x578B;&#x4E4B;&#x95F4;&#x7684;&#x53CC;&#x5411;&#x8F6C;&#x6362;&#x3002;</p>
<p>&#xFF08;2&#xFF09;ArrayList&#xFF1A;&#x5927;&#x91CF;&#x7684;&#x968F;&#x673A;&#x8BBF;&#x95EE;&#xFF1B;LinkedList&#xFF1A;&#x7ECF;&#x5E38;&#x4ECE;&#x8868;&#x4E2D;&#x95F4;&#x63D2;&#x5165;&#x6216;&#x5220;&#x9664;&#x5143;&#x7D20;&#xFF1B;</p>
<p>&#xFF08;3&#xFF09;&#x5404;&#x79CD; Queue &#x4EE5;&#x53CA;&#x6808;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x6709; LinkedList &#x63D0;&#x4F9B;&#x652F;&#x6301;&#xFF1B;</p>
<p>&#xFF08;4&#xFF09;Map &#x662F;&#x4E00;&#x79CD;&#x5C06;&#x5BF9;&#x8C61;&#xFF08;&#x800C;&#x975E;&#x6570;&#x5B57;&#xFF09;&#x4E0E;&#x5BF9;&#x8C61;&#x76F8;&#x5173;&#x8054;&#x7684;&#x8BBE;&#x8BA1;&#x3002;HashMap&#xFF1A;&#x5FEB;&#x901F;&#x8BBF;&#x95EE;&#xFF1B;TreeMap&#xFF1A;&#x4FDD;&#x6301;&#x201C;&#x952E;&#x201D;&#x59CB;&#x7EC8;&#x5904;&#x4E8E;&#x6392;&#x5E8F;&#x72B6;&#x6001;&#xFF0C;&#x6CA1;&#x6709; HashMap &#x5FEB;&#xFF1B;LinkedHashMap&#xFF1A;&#x4FDD;&#x6301;&#x5143;&#x7D20;&#x7684;&#x63D2;&#x5165;&#x987A;&#x5E8F;&#xFF0C;&#x4F46;&#x4E5F;&#x901A;&#x8FC7;&#x6563;&#x5217;&#x63D0;&#x4F9B;&#x4E86;&#x5FEB;&#x901F;&#x8BBF;&#x95EE;&#x80FD;&#x529B;&#x3002;</p>
<p>&#xFF08;5&#xFF09;Set &#x4E0D;&#x63A5;&#x53D7;&#x91CD;&#x590D;&#x5143;&#x7D20;&#x3002;HashSet&#xFF1A;&#x63D0;&#x4F9B;&#x6700;&#x5FEB;&#x7684;&#x67E5;&#x8BE2;&#x901F;&#x5EA6;&#xFF1B;TreeSet&#xFF1A;&#x4FDD;&#x6301;&#x5143;&#x7D20;&#x5904;&#x4E8E;&#x6392;&#x5E8F;&#x72B6;&#x6001;&#xFF1B;LinkedHashSet&#xFF1A;&#x4EE5;&#x63D2;&#x5165;&#x7684;&#x987A;&#x5E8F;&#x4FDD;&#x5B58;&#x5143;&#x7D20;&#x3002;</p>
<p>&#xFF08;6&#xFF09;Map &#x4E0E; Collection &#x4E4B;&#x95F4;&#x7684;&#x552F;&#x4E00;&#x91CD;&#x53E0;&#x5C31;&#x662F; Map &#x53EF;&#x4EE5;&#x4F7F;&#x7528; entrySet() &#x548C; values() &#x65B9;&#x6CD5;&#x6765;&#x4EA7;&#x751F; Collection&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/javaxiaojian/article/details/46679411" target="_blank" rel="external">http://blog.csdn.net/javaxiaojian/article/details/46679411</a></p>
<p><strong>4. &#x63CF;&#x8FF0;&#x4E00;&#x4E0B; ArrayList &#x548C; LinkedList &#x5404;&#x81EA;&#x5B9E;&#x73B0;&#x548C;&#x533A;&#x522B;</strong></p>
<p>&#x4E00;&#x822C;&#x5927;&#x5BB6;&#x90FD;&#x77E5;&#x9053; ArrayList &#x548C; LinkedList &#x7684;&#x5927;&#x81F4;&#x533A;&#x522B;&#xFF1A;</p>
<p>&#xFF08;1&#xFF09;ArrayList &#x662F;&#x5B9E;&#x73B0;&#x4E86;&#x57FA;&#x4E8E;&#x52A8;&#x6001;&#x6570;&#x7EC4;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;LinkedList &#x57FA;&#x4E8E;&#x94FE;&#x8868;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002;</p>
<p>&#xFF08;2&#xFF09;&#x5BF9;&#x4E8E;&#x968F;&#x673A;&#x8BBF;&#x95EE; get &#x548C; set&#xFF0C;ArrayList &#x89C9;&#x5F97;&#x4F18;&#x4E8E; LinkedList&#xFF0C;&#x56E0;&#x4E3A; LinkedList &#x8981;&#x79FB;&#x52A8;&#x6307;&#x9488;&#x3002;</p>
<p>&#xFF08;3&#xFF09;&#x5BF9;&#x4E8E;&#x65B0;&#x589E;&#x548C;&#x5220;&#x9664;&#x64CD;&#x4F5C; add &#x548C; remove&#xFF0C;LinedList &#x6BD4;&#x8F83;&#x5360;&#x4F18;&#x52BF;&#xFF0C;&#x56E0;&#x4E3A; ArrayList &#x8981;&#x79FB;&#x52A8;&#x6570;&#x636E;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/Alexander11/p/5734552.html" target="_blank" rel="external">http://www.cnblogs.com/Alexander11/p/5734552.html</a></p>
<p><strong>5. Java &#x4E2D;&#x7684;&#x961F;&#x5217;&#x90FD;&#x6709;&#x54EA;&#x4E9B;&#xFF0C;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x3002;</strong></p>
<p>&#x963B;&#x585E;&#x961F;&#x5217;&#x4E0E;&#x666E;&#x901A;&#x961F;&#x5217;&#x7684;&#x533A;&#x522B;&#x5728;&#x4E8E;&#xFF0C;&#x5F53;&#x961F;&#x5217;&#x662F;&#x7A7A;&#x7684;&#x65F6;&#xFF0C;&#x4ECE;&#x961F;&#x5217;&#x4E2D;&#x83B7;&#x53D6;&#x5143;&#x7D20;&#x7684;&#x64CD;&#x4F5C;&#x5C06;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x6216;&#x8005;&#x5F53;&#x961F;&#x5217;&#x662F;&#x6EE1;&#x65F6;&#xFF0C;&#x5F80;&#x961F;&#x5217;&#x91CC;&#x6DFB;&#x52A0;&#x5143;&#x7D20;&#x7684;&#x64CD;&#x4F5C;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#x3002;&#x8BD5;&#x56FE;&#x4ECE;&#x7A7A;&#x7684;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E2D;&#x83B7;&#x53D6;&#x5143;&#x7D20;&#x7684;&#x7EBF;&#x7A0B;&#x5C06;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x5176;&#x4ED6;&#x7684;&#x7EBF;&#x7A0B;&#x5F80;&#x7A7A;&#x7684;&#x961F;&#x5217;&#x63D2;&#x5165;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x3002;&#x540C;&#x6837;&#xFF0C;&#x8BD5;&#x56FE;&#x5F80;&#x5DF2;&#x6EE1;&#x7684;&#x963B;&#x585E;&#x961F;&#x5217;&#x4E2D;&#x6DFB;&#x52A0;&#x65B0;&#x5143;&#x7D20;&#x7684;&#x7EBF;&#x7A0B;&#x540C;&#x6837;&#x4E5F;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x5176;&#x4ED6;&#x7684;&#x7EBF;&#x7A0B;&#x4F7F;&#x961F;&#x5217;&#x91CD;&#x65B0;&#x53D8;&#x5F97;&#x7A7A;&#x95F2;&#x8D77;&#x6765;&#xFF0C;&#x5982;&#x4ECE;&#x961F;&#x5217;&#x4E2D;&#x79FB;&#x9664;&#x4E00;&#x4E2A;&#x6216;&#x8005;&#x591A;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x6216;&#x8005;&#x5B8C;&#x5168;&#x6E05;&#x7A7A;&#x961F;&#x5217;.</p>
<ul>
<li>ArrayDeque &#x53CC;&#x5411;&#x961F;&#x5217;</li>
<li>LinkedBlockingDeque &#x963B;&#x585E;&#x53CC;&#x7AEF;&#x961F;&#x5217;</li>
<li>ArrayBlockingQueue &#x53CC;&#x5411;&#x5E76;&#x53D1;&#x963B;&#x585E;&#x961F;&#x5217;</li>
<li>LinkedBlockingQueue FIFO&#x961F;&#x5217;</li>
<li>ConcurrentLinkedQueue &#x57FA;&#x4E8E;&#x94FE;&#x63A5;&#x8282;&#x70B9;&#x7684;&#x65E0;&#x754C;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x961F;&#x5217;</li>
<li>PriorityBlockingQueue &#x5E26;&#x4F18;&#x5148;&#x7EA7;&#x7684;&#x65E0;&#x754C;&#x963B;&#x585E;&#x961F;&#x5217;</li>
</ul>
<p>&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x5F88;&#x591A;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x770B; AbstractQueue&#xFF0C; Deque &#x6709;&#x54EA;&#x4E9B;&#x5B9E;&#x73B0;&#x7C7B;&#x3002; &#x63A8;&#x8350;ArrayBlockingQueue &#x3002;&#x5E76;&#x53D1;&#x6027;&#x80FD;&#x8FD8;&#x4E0D;&#x9519;&#x3002;</p>
<p><strong>6. &#x53CD;&#x5C04;&#x4E2D;&#xFF0C;Class.forName &#x548C; Classloader &#x7684;&#x533A;&#x522B;&#x3002;</strong></p>
<p>&#xFF08;1&#xFF09;Class.forName(className)&#x65B9;&#x6CD5;&#xFF0C;&#x5185;&#x90E8;&#x5B9E;&#x9645;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x662F;  Class.forName(className,true,classloader);</p>
<p>&#x7B2C;2&#x4E2A; boolean &#x53C2;&#x6570;&#x8868;&#x793A;&#x7C7B;&#x662F;&#x5426;&#x9700;&#x8981;&#x521D;&#x59CB;&#x5316;&#xFF0C;  Class.forName(className) &#x9ED8;&#x8BA4;&#x662F;&#x9700;&#x8981;&#x521D;&#x59CB;&#x5316;&#x3002;<br>
&#x4E00;&#x65E6;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5C31;&#x4F1A;&#x89E6;&#x53D1;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684; static &#x5757;&#x4EE3;&#x7801;&#x6267;&#x884C;&#xFF0C;static &#x53C2;&#x6570;&#x4E5F;&#x4E5F;&#x4F1A;&#x88AB;&#x518D;&#x6B21;&#x521D;&#x59CB;&#x5316;&#x3002;</p>
<p>&#xFF08;2&#xFF09;ClassLoader.loadClass(className) &#x65B9;&#x6CD5;&#xFF0C;&#x5185;&#x90E8;&#x5B9E;&#x9645;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x662F;  ClassLoader.loadClass(className,false);</p>
<p>&#x7B2C;2&#x4E2A; boolean &#x53C2;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x8FDB;&#x884C;&#x94FE;&#x63A5;&#xFF0C;false &#x8868;&#x793A;&#x4E0D;&#x8FDB;&#x884C;&#x94FE;&#x63A5;&#xFF0C;&#x7531;&#x4E0A;&#x9762;&#x4ECB;&#x7ECD;&#x53EF;&#x4EE5;&#xFF0C;<br>
&#x4E0D;&#x8FDB;&#x884C;&#x94FE;&#x63A5;&#x610F;&#x5473;&#x7740;&#x4E0D;&#x8FDB;&#x884C;&#x5305;&#x62EC;&#x521D;&#x59CB;&#x5316;&#x7B49;&#x4E00;&#x4E9B;&#x5217;&#x6B65;&#x9AA4;&#xFF0C;&#x90A3;&#x4E48;&#x9759;&#x6001;&#x5757;&#x548C;&#x9759;&#x6001;&#x5BF9;&#x8C61;&#x5C31;&#x4E0D;&#x4F1A;&#x5F97;&#x5230;&#x6267;&#x884C;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/xie_xiansheng/article/details/52958012" target="_blank" rel="external">http://blog.csdn.net/xie_xiansheng/article/details/52958012</a></p>
<p><strong>7. Java7&#x3001;Java8&#x7684;&#x65B0;&#x7279;&#x6027;</strong></p>
<ul>
<li>&#x4E8C;&#x8FDB;&#x5236;&#x53D8;&#x91CF;&#x7684;&#x8868;&#x793A;,&#x652F;&#x6301;&#x5C06;&#x6574;&#x6570;&#x7C7B;&#x578B;&#x7528;&#x4E8C;&#x8FDB;&#x5236;&#x6765;&#x8868;&#x793A;&#xFF0C;&#x7528;0b&#x5F00;&#x5934;&#x3002;</li>
<li>Switch &#x8BED;&#x53E5;&#x652F;&#x6301; string &#x7C7B;&#x578B;</li>
<li>Try-with-resource &#x8BED;&#x53E5;</li>
<li>Catch &#x591A;&#x4E2A;&#x5F02;&#x5E38; &#x8BF4;&#x660E;&#xFF1A;Catch &#x5F02;&#x5E38;&#x7C7B;&#x578B;&#x4E3A; final&#xFF1B; &#x751F;&#x6210; Bytecode &#x4F1A;&#x6BD4;&#x591A;&#x4E2A; catch &#x5C0F;&#xFF1B; Rethrow &#x65F6;&#x4FDD;&#x6301;&#x5F02;&#x5E38;&#x7C7B;&#x578B;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/zhongweijian/article/details/9258997" target="_blank" rel="external">http://blog.csdn.net/zhongweijian/article/details/9258997</a></p>
<p><strong>8. Java &#x6570;&#x7EC4;&#x548C;&#x94FE;&#x8868;&#x4E24;&#x79CD;&#x7ED3;&#x6784;&#x7684;&#x64CD;&#x4F5C;&#x6548;&#x7387;&#xFF0C;&#x5728;&#x54EA;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;(&#x4ECE;&#x5F00;&#x5934;&#x5F00;&#x59CB;&#xFF0C;&#x4ECE;&#x7ED3;&#x5C3E;&#x5F00;&#x59CB;&#xFF0C;&#x4ECE;&#x4E2D;&#x95F4;&#x5F00;&#x59CB;)&#xFF0C;&#x54EA;&#x4E9B;&#x64CD;&#x4F5C;(&#x63D2;&#x5165;&#xFF0C;&#x67E5;&#x627E;&#xFF0C;&#x5220;&#x9664;)&#x7684;&#x6548;&#x7387;&#x9AD8;&#x3002;</strong></p>
<p>&#x6570;&#x7EC4;&#x6548;&#x7387;&#x9AD8;</p>
<p>&#x6570;&#x7EC4;&#x5F00;&#x8F9F;&#x7684;&#x662F;&#x8FDE;&#x7EED;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x662F;&#x6839;&#x636E;&#x57FA;&#x5730;&#x5740;&#x548C;&#x504F;&#x79FB;&#x91CF;&#x6765;&#x7B97;&#x51FA;&#x5730;&#x5740;&#xFF08;&#x6709;&#x4E58;&#x6CD5;&#x548C;&#x52A0;&#x6CD5;&#x8FD0;&#x7B97;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x8BBF;&#x95EE;&#x3002;</p>
<p>&#x94FE;&#x8868;&#x524D;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7684;&#x5730;&#x5740;&#x6307;&#x5411;&#x4E0B;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5730;&#x5740;&#xFF0C;&#x5982;&#xFF1A;p = p-&gt;next&#xFF1B;&#x7136;&#x540E;&#x7528; *p &#x8BBF;&#x95EE;&#x3002;&#x6309;&#x8FD9;&#x4E2A;&#x8BF4;&#x7684;&#x8BDD;&#xFF0C;&#x5B83;&#x5C31;&#x4E00;&#x4E2A;&#x8D4B;&#x503C;&#x8BED;&#x53E5;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/qq_27093465/article/details/52267872" target="_blank" rel="external">http://blog.csdn.net/qq_27093465/article/details/52267872</a></p>
<p><strong>9. Java &#x5185;&#x5B58;&#x6CC4;&#x9732;&#x7684;&#x95EE;&#x9898;&#x8C03;&#x67E5;&#x5B9A;&#x4F4D;&#xFF1A;jmap&#xFF0C;jstack &#x7684;&#x4F7F;&#x7528;&#x7B49;&#x7B49;&#x3002;</strong></p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.tuicool.com/articles/eu26jeE" target="_blank" rel="external">http://www.tuicool.com/articles/eu26jeE</a></p>
<p><strong>10. string&#x3001;stringbuilder&#x3001;stringbuffer &#x533A;&#x522B;</strong></p>
<ul>
<li>String&#xFF1A;&#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x91CF;</li>
<li>StringBuffer&#xFF1A;&#x5B57;&#x7B26;&#x4E32;&#x53D8;&#x91CF;</li>
<li>StringBuilder&#xFF1A;&#x5B57;&#x7B26;&#x4E32;&#x53D8;&#x91CF;</li>
</ul>
<p>&#x4E09;&#x8005;&#x5728;&#x6267;&#x884C;&#x901F;&#x5EA6;&#x65B9;&#x9762;&#x7684;&#x6BD4;&#x8F83;&#xFF1A;StringBuilder &gt;  StringBuffer  &gt;  String</p>
<p>StringBuilder&#xFF1A;&#x7EBF;&#x7A0B;&#x975E;&#x5B89;&#x5168;&#x7684;&#xFF0C;StringBuffer&#xFF1A;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/zhangzongle/p/5912266.html" target="_blank" rel="external">http://www.cnblogs.com/zhangzongle/p/5912266.html</a></p>
<p><strong>11. hashtable &#x548C; hashmap &#x7684;&#x533A;&#x522B;</strong></p>
<ul>
<li>HashMap &#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#xFF0C;HashMap &#x662F;&#x4E00;&#x4E2A;&#x63A5;&#x53E3; &#x662F; map &#x63A5;&#x53E3;&#x7684;&#x5B50;&#x63A5;&#x53E3;&#xFF0C;&#x662F;&#x5C06;&#x952E;&#x6620;&#x5C04;&#x5230;&#x503C;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5176;&#x4E2D;&#x952E;&#x548C;&#x503C;&#x90FD;&#x662F;&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x80FD;&#x5305;&#x542B;&#x91CD;&#x590D;&#x952E;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x91CD;&#x590D;&#x503C;&#x3002;HashMap &#x5141;&#x8BB8; null key &#x548C; null value&#xFF0C;&#x800C; hashtable &#x4E0D;&#x5141;&#x8BB8;&#x3002;</li>
<li>HashTable &#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x4E00;&#x4E2A; Collection&#x3002;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/langtianya/archive/2013/03/19/2970273.html" target="_blank" rel="external">http://www.cnblogs.com/langtianya/archive/2013/03/19/2970273.html</a></p>
<p><strong>13. &#x5F02;&#x5E38;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;&#x5F02;&#x5E38;&#x548C;&#x975E;&#x8FD0;&#x884C;&#x65F6;&#x5F02;&#x5E38;&#xFF0C;&#x5404;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#x3002;</strong></p>
<p>&#xFF08;1&#xFF09;&#x8FD0;&#x884C;&#x65F6;&#x5F02;&#x5E38;&#x90FD;&#x662F; RuntimeException &#x7C7B;&#x53CA;&#x5176;&#x5B50;&#x7C7B;&#x5F02;&#x5E38;&#xFF0C;&#x5982; NullPointerException&#x3001;IndexOutOfBoundsException &#x7B49;&#xFF0C;&#x8FD9;&#x4E9B;&#x5F02;&#x5E38;&#x662F;&#x4E0D;&#x68C0;&#x67E5;&#x5F02;&#x5E38;&#xFF0C;&#x7A0B;&#x5E8F;&#x4E2D;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x6355;&#x83B7;&#x5904;&#x7406;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x5904;&#x7406;&#x3002;&#x8FD9;&#x4E9B;&#x5F02;&#x5E38;&#x4E00;&#x822C;&#x662F;&#x7531;&#x7A0B;&#x5E8F;&#x903B;&#x8F91;&#x9519;&#x8BEF;&#x5F15;&#x8D77;&#x7684;&#xFF0C;&#x7A0B;&#x5E8F;&#x5E94;&#x8BE5;&#x4ECE;&#x903B;&#x8F91;&#x89D2;&#x5EA6;&#x5C3D;&#x53EF;&#x80FD;&#x907F;&#x514D;&#x8FD9;&#x7C7B;&#x5F02;&#x5E38;&#x7684;&#x53D1;&#x751F;&#x3002;</p>
<p>&#xFF08;2&#xFF09;&#x975E;&#x8FD0;&#x884C;&#x65F6;&#x5F02;&#x5E38;&#x662F; RuntimeException &#x4EE5;&#x5916;&#x7684;&#x5F02;&#x5E38;&#xFF0C;&#x7C7B;&#x578B;&#x4E0A;&#x90FD;&#x5C5E;&#x4E8E; Exception &#x7C7B;&#x53CA;&#x5176;&#x5B50;&#x7C7B;&#x3002;&#x5982; IOException&#x3001;SQLException &#x7B49;&#x4EE5;&#x53CA;&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x7684; Exception &#x5F02;&#x5E38;&#x3002;&#x5BF9;&#x4E8E;&#x8FD9;&#x79CD;&#x5F02;&#x5E38;&#xFF0C;JAVA&#x7F16;&#x8BD1;&#x5668;&#x5F3A;&#x5236;&#x8981;&#x6C42;&#x6211;&#x4EEC;&#x5FC5;&#x9700;&#x5BF9;&#x51FA;&#x73B0;&#x7684;&#x8FD9;&#x4E9B;&#x5F02;&#x5E38;&#x8FDB;&#x884C; catch &#x5E76;&#x5904;&#x7406;&#xFF0C;&#x5426;&#x5219;&#x7A0B;&#x5E8F;&#x5C31;&#x4E0D;&#x80FD;&#x7F16;&#x8BD1;&#x901A;&#x8FC7;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x9762;&#x5BF9;&#x8FD9;&#x79CD;&#x5F02;&#x5E38;&#x4E0D;&#x7BA1;&#x6211;&#x4EEC;&#x662F;&#x5426;&#x613F;&#x610F;&#xFF0C;&#x53EA;&#x80FD;&#x81EA;&#x5DF1;&#x53BB;&#x5199;&#x4E00;&#x5927;&#x5806; catch &#x5757;&#x53BB;&#x5904;&#x7406;&#x53EF;&#x80FD;&#x7684;&#x5F02;&#x5E38;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.tuicool.com/articles/YVZBNfN" target="_blank" rel="external">http://www.tuicool.com/articles/YVZBNfN</a></p>
<p><strong>14. String &#x7C7B;&#x7684;&#x5E38;&#x7528;&#x65B9;&#x6CD5;</strong></p>
<ul>
<li>public char charAt(int index) &#x4ECE;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x53D6;&#x51FA;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x5B57;&#x7B26;&#x3002;</li>
<li>public char[] toCharArray() &#x5C06;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x53D8;&#x4E3A;&#x5B57;&#x7B26;&#x6570;&#x7EC4;</li>
<li>public byte[] getBytes() &#x5C06;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x53D8;&#x4E3A;&#x5B57;&#x8282;&#x6570;&#x7EC4;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/lishiyuzuji/article/details/8135554" target="_blank" rel="external">http://blog.csdn.net/lishiyuzuji/article/details/8135554</a></p>
<p><strong>16. Java &#x7684;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x6709;&#x54EA;&#x51E0;&#x79CD;</strong></p>
<ul>
<li>&#x5F3A;&#x5F15;&#x7528;&#xFF08;StrongReference&#xFF09;</li>
<li>&#x8F6F;&#x5F15;&#x7528;&#xFF08;SoftReference&#xFF09;</li>
<li>&#x5F31;&#x5F15;&#x7528;&#xFF08;WeakReference&#xFF09;</li>
<li>&#x865A;&#x5F15;&#x7528;&#xFF08;PhantomReference&#xFF09;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/coding_or_coded/article/details/6603549" target="_blank" rel="external">http://blog.csdn.net/coding_or_coded/article/details/6603549</a></p>
<p><strong>17. &#x62BD;&#x8C61;&#x7C7B;&#x548C;&#x63A5;&#x53E3;&#x7684;&#x533A;&#x522B;</strong></p>
<p>&#xFF08;1&#xFF09;&#x62BD;&#x8C61;&#x7C7B;&#x548C;&#x63A5;&#x53E3;&#x90FD;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x5B9E;&#x4F8B;&#x5316;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x5B9E;&#x4F8B;&#x5316;&#xFF0C;&#x62BD;&#x8C61;&#x7C7B;&#x53D8;&#x91CF;&#x5FC5;&#x987B;&#x6307;&#x5411;&#x5B9E;&#x73B0;&#x6240;&#x6709;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#x7684;&#x5B50;&#x7C7B;&#x5BF9;&#x8C61;&#xFF0C;&#x63A5;&#x53E3;&#x53D8;&#x91CF;&#x5FC5;&#x987B;&#x6307;&#x5411;&#x5B9E;&#x73B0;&#x6240;&#x6709;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x7684;&#x7C7B;&#x5BF9;&#x8C61;&#x3002;</p>
<p>&#xFF08;2&#xFF09;&#x62BD;&#x8C61;&#x7C7B;&#x8981;&#x88AB;&#x5B50;&#x7C7B;&#x7EE7;&#x627F;&#xFF0C;&#x63A5;&#x53E3;&#x8981;&#x88AB;&#x7C7B;&#x5B9E;&#x73B0;&#x3002;</p>
<p>&#xFF08;3&#xFF09;&#x63A5;&#x53E3;&#x53EA;&#x80FD;&#x505A;&#x65B9;&#x6CD5;&#x7533;&#x660E;&#xFF0C;&#x62BD;&#x8C61;&#x7C7B;&#x4E2D;&#x53EF;&#x4EE5;&#x505A;&#x65B9;&#x6CD5;&#x7533;&#x660E;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x505A;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;</p>
<p>&#xFF08;4&#xFF09;&#x63A5;&#x53E3;&#x91CC;&#x5B9A;&#x4E49;&#x7684;&#x53D8;&#x91CF;&#x53EA;&#x80FD;&#x662F;&#x516C;&#x5171;&#x7684;&#x9759;&#x6001;&#x7684;&#x5E38;&#x91CF;&#xFF0C;&#x62BD;&#x8C61;&#x7C7B;&#x4E2D;&#x7684;&#x53D8;&#x91CF;&#x662F;&#x666E;&#x901A;&#x53D8;&#x91CF;&#x3002;</p>
<p>&#xFF08;5&#xFF09;&#x62BD;&#x8C61;&#x7C7B;&#x91CC;&#x7684;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#x5FC5;&#x987B;&#x5168;&#x90E8;&#x88AB;&#x5B50;&#x7C7B;&#x6240;&#x5B9E;&#x73B0;&#xFF0C;&#x5982;&#x679C;&#x5B50;&#x7C7B;&#x4E0D;&#x80FD;&#x5168;&#x90E8;&#x5B9E;&#x73B0;&#x7236;&#x7C7B;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x5B50;&#x7C7B;&#x53EA;&#x80FD;&#x662F;&#x62BD;&#x8C61;&#x7C7B;&#x3002;&#x540C;&#x6837;&#xFF0C;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x4E0D;&#x80FD;&#x5168;&#x90E8;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x7C7B;&#x4E5F;&#x53EA;&#x80FD;&#x4E3A;&#x62BD;&#x8C61;&#x7C7B;&#x3002;</p>
<p>&#xFF08;6&#xFF09;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#x53EA;&#x80FD;&#x7533;&#x660E;&#xFF0C;&#x4E0D;&#x80FD;&#x5B9E;&#x73B0;&#xFF0C;&#x63A5;&#x53E3;&#x662F;&#x8BBE;&#x8BA1;&#x7684;&#x7ED3;&#x679C; &#xFF0C;&#x62BD;&#x8C61;&#x7C7B;&#x662F;&#x91CD;&#x6784;&#x7684;&#x7ED3;&#x679C;</p>
<p>&#xFF08;7&#xFF09;&#x62BD;&#x8C61;&#x7C7B;&#x91CC;&#x53EF;&#x4EE5;&#x6CA1;&#x6709;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;</p>
<p>&#xFF08;8&#xFF09;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7C7B;&#x91CC;&#x6709;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x7C7B;&#x53EA;&#x80FD;&#x662F;&#x62BD;&#x8C61;&#x7C7B;</p>
<p>&#xFF08;9&#xFF09;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#x8981;&#x88AB;&#x5B9E;&#x73B0;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x80FD;&#x662F;&#x9759;&#x6001;&#x7684;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x662F;&#x79C1;&#x6709;&#x7684;&#x3002;</p>
<p>&#xFF08;10&#xFF09;&#x63A5;&#x53E3;&#x53EF;&#x7EE7;&#x627F;&#x63A5;&#x53E3;&#xFF0C;&#x5E76;&#x53EF;&#x591A;&#x7EE7;&#x627F;&#x63A5;&#x53E3;&#xFF0C;&#x4F46;&#x7C7B;&#x53EA;&#x80FD;&#x5355;&#x6839;&#x7EE7;&#x627F;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/DreamDrive/p/4109571.html" target="_blank" rel="external">http://www.cnblogs.com/DreamDrive/p/4109571.html</a></p>
<p><strong>18. java&#x7684;&#x57FA;&#x7840;&#x7C7B;&#x578B;&#x548C;&#x5B57;&#x8282;&#x5927;&#x5C0F;</strong></p>
<p>Java&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;</p>
<ul>
<li>int     32bit</li>
<li>short   16bit</li>
<li>long     64bit</li>
<li>byte     8bit</li>
<li>char     16bit</li>
<li>float   32bit</li>
<li>double   64bit</li>
<li>boolean 1bit<br>
(boolean &#x7684;&#x5907;&#x6CE8;+&#x7FFB;&#x8BD1;)<br>
This data type represents one bit of information, but its &#x201C;size&#x201D; isn&#x2019;t something that&#x2019;s precisely defined.&#xFF08;ref&#xFF09;<br>
&#x8FD9;&#x79CD;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x6BD4;&#x7279;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4F46;&#x5B83;&#x7684;&#x201C;&#x5927;&#x5C0F;&#x201D;&#x6CA1;&#x6709;&#x660E;&#x786E;&#x7684;&#x5B9A;&#x4E49;&#x3002;&#xFF08;&#x53C2;&#x8003;&#xFF09;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/qq_27093465/article/details/52262651" target="_blank" rel="external">http://blog.csdn.net/qq_27093465/article/details/52262651</a></p>
<p><strong>19. Hashtable&#x3001;HashMap&#x3001;ConcurrentHashMap &#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#x4E0E;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x95EE;&#x9898;&#x3002;</strong></p>
<ul>
<li>&#x7EBF;&#x7A0B;&#x4E0D;&#x5B89;&#x5168;&#x7684; HashMap</li>
<li>&#x6548;&#x7387;&#x4F4E;&#x4E0B;&#x7684; HashTable &#x5BB9;&#x5668;&#xFF0C;HashTable &#x5BB9;&#x5668;&#x4F7F;&#x7528; synchronized &#x6765;&#x4FDD;&#x8BC1;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;</li>
<li>ConcurrentHashMap &#x7684;&#x9501;&#x5206;&#x6BB5;&#x6280;&#x672F;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/qq_27093465/article/details/52279473" target="_blank" rel="external">http://blog.csdn.net/qq_27093465/article/details/52279473</a></p>
<p><strong>20. &#x5982;&#x679C;&#x4E0D;&#x8BA9;&#x4F60;&#x7528; Java Jdk &#x63D0;&#x4F9B;&#x7684;&#x5DE5;&#x5177;&#xFF0C;&#x4F60;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A; Map&#xFF0C;&#x4F60;&#x600E;&#x4E48;&#x505A;&#x3002;&#x8BF4;&#x4E86;&#x597D;&#x4E45;&#xFF0C;&#x8BF4;&#x4E86; HashMap &#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x505A;&#xFF0C;&#x5C31;&#x4F1A;&#x501F;&#x9274;HashMap&#x7684;&#x539F;&#x7406;&#xFF0C;&#x8BF4;&#x4E86;&#x4E00;&#x901A; HashMap &#x5B9E;&#x73B0;&#x3002;</strong></p>
<p>&#x53C2;&#x7167; HashMap &#x7684;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#xFF0C;&#x7528;&#x6570;&#x7EC4;&#x94FE;&#x8868;&#x5B9E;&#x73B0;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/vking_wang/article/details/14166593" target="_blank" rel="external">http://blog.csdn.net/vking_wang/article/details/14166593</a></p>
<p><strong>21. Hash &#x51B2;&#x7A81;&#x600E;&#x4E48;&#x529E;&#xFF1F;&#x54EA;&#x4E9B;&#x89E3;&#x51B3;&#x6563;&#x5217;&#x51B2;&#x7A81;&#x7684;&#x65B9;&#x6CD5;&#xFF1F;</strong></p>
<ul>
<li>&#x5F00;&#x653E;&#x5730;&#x5740;&#x6CD5;</li>
<li>&#x62C9;&#x94FE;&#x6CD5;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/u012104435/article/details/47951357" target="_blank" rel="external">http://blog.csdn.net/u012104435/article/details/47951357</a></p>
<p><strong>22. HashMap &#x51B2;&#x7A81;&#x5F88;&#x5389;&#x5BB3;&#xFF0C;&#x6700;&#x5DEE;&#x6027;&#x80FD;&#xFF0C;&#x4F60;&#x4F1A;&#x600E;&#x4E48;&#x89E3;&#x51B3;?&#x4ECE;O&#xFF08;n&#xFF09;&#x63D0;&#x5347;&#x5230;log&#xFF08;n&#xFF09;&#x3002;</strong></p>
<p>&#x5728; Java 8 &#x4E2D;&#x4F7F;&#x7528;&#x5E38;&#x91CF; TREEIFY_THRESHOLD &#x6765;&#x63A7;&#x5236;&#x662F;&#x5426;&#x5207;&#x6362;&#x5230;&#x5E73;&#x8861;&#x6811;&#x6765;&#x5B58;&#x50A8;&#x3002;&#x76EE;&#x524D;&#xFF0C;&#x8FD9;&#x4E2A;&#x5E38;&#x91CF;&#x503C;&#x662F; 8&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5F53;&#x6709;&#x8D85;&#x8FC7; 8 &#x4E2A;&#x5143;&#x7D20;&#x7684;&#x7D22;&#x5F15;&#x4E00;&#x6837;&#x65F6;&#xFF0C;HashMap &#x4F1A;&#x4F7F;&#x7528;&#x6811;&#x6765;&#x5B58;&#x50A8;&#x5B83;&#x4EEC;&#x3002;&#x8FD9;&#x4E00;&#x52A8;&#x6001;&#x7684;&#x7279;&#x6027;&#x4F7F;&#x5F97; HashMap &#x4E00;&#x5F00;&#x59CB;&#x4F7F;&#x7528;&#x94FE;&#x8868;&#xFF0C;&#x5E76;&#x5728;&#x51B2;&#x7A81;&#x7684;&#x5143;&#x7D20;&#x6570;&#x91CF;&#x8D85;&#x8FC7;&#x6307;&#x5B9A;&#x503C;&#x65F6;&#x7528;&#x5E73;&#x8861;&#x4E8C;&#x53C9;&#x6811;&#x66FF;&#x6362;&#x94FE;&#x8868;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x53C2;&#x8003;&#xFF1A;</p>
<p>&#xFF08;1&#xFF09;<a href="http://blog.csdn.net/cpcpcp123/article/details/52744331" target="_blank" rel="external">http://blog.csdn.net/cpcpcp123/article/details/52744331</a></p>
<p>&#xFF08;2&#xFF09;<a href="http://www.cnblogs.com/zhuyf87/archive/2012/11/09/2763113.html" target="_blank" rel="external">http://www.cnblogs.com/zhuyf87/archive/2012/11/09/2763113.html</a></p>
<p><strong>23. rehash</strong></p>
<p>&#x5728;&#x4ECB;&#x7ECD; HashMap &#x7684;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x673A;&#x5236;&#x65F6;&#x63D0;&#x5230;&#x4E86;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;DEFAULT_INITIAL_CAPACITY &#x548C; DEFAULT_LOAD_FACTOR&#xFF0C;DEFAULT_INITIAL_CAPACITY &#x662F; table &#x6570;&#x7EC4;&#x7684;&#x5BB9;&#x91CF;&#xFF0C;DEFAULT_LOAD_FACTOR &#x5219;&#x662F;&#x4E3A;&#x4E86;&#x6700;&#x5927;&#x7A0B;&#x5EA6;&#x907F;&#x514D;&#x54C8;&#x5E0C;&#x51B2;&#x7A81;&#xFF0C;&#x63D0;&#x9AD8; HashMap &#x6548;&#x7387;&#x800C;&#x8BBE;&#x7F6E;&#x7684;&#x4E00;&#x4E2A;&#x5F71;&#x54CD;&#x56E0;&#x5B50;&#xFF0C;&#x5C06;&#x5176;&#x4E58;&#x4EE5; DEFAULT_INITIAL_CAPACITY &#x5C31;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x9608;&#x503C; threshold&#xFF0C;&#x5F53; HashMap &#x7684;&#x5BB9;&#x91CF;&#x8FBE;&#x5230; threshold &#x65F6;&#x5C31;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x6269;&#x5BB9;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x5C31;&#x8981;&#x8FDB;&#x884C; ReHash &#x64CD;&#x4F5C;&#x4E86;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E0B;&#x9762;  addEntry &#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5F53; size &#x8FBE;&#x5230; threshold &#x65F6;&#x4F1A;&#x8C03;&#x7528; resize &#x51FD;&#x6570;&#x8FDB;&#x884C;&#x6269;&#x5BB9;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/qq_27093465/article/details/52270519" target="_blank" rel="external">http://blog.csdn.net/qq_27093465/article/details/52270519</a></p>
<p><strong>24. hashCode() &#x4E0E; equals() &#x751F;&#x6210;&#x7B97;&#x6CD5;&#x3001;&#x65B9;&#x6CD5;&#x600E;&#x4E48;&#x91CD;&#x5199;&#x3002;</strong></p>
<p>&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x5728;&#x91CD;&#x5199; equals &#x65B9;&#x6CD5;&#x65F6;&#x90FD;&#x8981;&#x91CD;&#x5199; equals &#x65B9;&#x6CD5;&#x5462;&#xFF1A;</p>
<p>&#x9996;&#x5148; equals &#x4E0E; hashcode &#x95F4;&#x7684;&#x5173;&#x7CFB;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p>
<ul>
<li>&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x76F8;&#x540C;&#xFF08;&#x5373;&#x7528; equals &#x6BD4;&#x8F83;&#x8FD4;&#x56DE; true&#xFF09;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x4EEC;&#x7684; hashCode &#x503C;&#x4E00;&#x5B9A;&#x8981;&#x76F8;&#x540C;&#xFF1B;</li>
<li>&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x7684; hashCode &#x76F8;&#x540C;&#xFF0C;&#x5B83;&#x4EEC;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x76F8;&#x540C;(&#x5373;&#x7528; equals &#x6BD4;&#x8F83;&#x8FD4;&#x56DE; false)</li>
</ul>
<p>&#x81EA;&#x6211;&#x7684;&#x7406;&#x89E3;&#xFF1A;&#x7531;&#x4E8E;&#x4E3A;&#x4E86;&#x63D0;&#x9AD8;&#x7A0B;&#x5E8F;&#x7684;&#x6548;&#x7387;&#x624D;&#x5B9E;&#x73B0;&#x4E86; hashcode &#x65B9;&#x6CD5;&#xFF0C;&#x5148;&#x8FDB;&#x884C; hashcode &#x7684;&#x6BD4;&#x8F83;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x540C;&#xFF0C;&#x90A3;&#x6CA1;&#x5C31;&#x4E0D;&#x5FC5;&#x5728;&#x8FDB;&#x884C; equals &#x7684;&#x6BD4;&#x8F83;&#x4E86;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x5927;&#x5927;&#x51CF;&#x5C11;&#x4E86; equals &#x6BD4;&#x8F83;&#x7684;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/jing_bufferfly/article/details/50868266" target="_blank" rel="external">http://blog.csdn.net/jing_bufferfly/article/details/50868266</a></p>
<h2 id="java-io"><a class="header-anchor" href="#java-io"></a>Java IO</h2>
<p><strong>1. &#x8BB2;&#x8BB2; IO &#x91CC;&#x9762;&#x7684;&#x5E38;&#x89C1;&#x7C7B;&#xFF0C;&#x5B57;&#x8282;&#x6D41;&#x3001;&#x5B57;&#x7B26;&#x6D41;&#x3001;&#x63A5;&#x53E3;&#x3001;&#x5B9E;&#x73B0;&#x7C7B;&#x3001;&#x65B9;&#x6CD5;&#x963B;&#x585E;&#x3002;</strong></p>
<p>&#x5B57;&#x8282;&#x6D41;&#x5904;&#x7406;&#x5355;&#x5143;&#x4E3A; 1 &#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x64CD;&#x4F5C;&#x5B57;&#x8282;&#x548C;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x800C;&#x5B57;&#x7B26;&#x6D41;&#x5904;&#x7406;&#x7684;&#x5355;&#x5143;&#x4E3A; 2 &#x4E2A;&#x5B57;&#x8282;&#x7684; Unicode &#x5B57;&#x7B26;&#xFF0C;&#x5206;&#x522B;&#x64CD;&#x4F5C;&#x5B57;&#x7B26;&#x3001;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#x6216;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x90FD;&#x662F;&#x4EE5;&#x6D41;&#x7684;&#x5F62;&#x5F0F;&#x4FDD;&#x5B58;&#x7684;&#xFF0C;&#x6D41;&#x4E2D;&#x4FDD;&#x5B58;&#x7684;&#x5B9E;&#x9645;&#x4E0A;&#x5168;&#x90FD;&#x662F;&#x5B57;&#x8282;&#x6587;&#x4EF6;&#x3002;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x7684;&#x50A8;&#x5B58;&#x662F;&#x90FD;&#x662F;&#x5B57;&#x8282;&#xFF08;byte&#xFF09;&#x7684;&#x50A8;&#x5B58;&#xFF0C;&#x5728;&#x78C1;&#x76D8;&#x4E0A;&#x4FDD;&#x7559;&#x7684;&#x5E76;&#x4E0D;&#x662F;&#x6587;&#x4EF6;&#x7684;&#x5B57;&#x7B26;&#x800C;&#x662F;&#x5148;&#x628A;&#x5B57;&#x7B26;&#x7F16;&#x7801;&#x6210;&#x5B57;&#x8282;&#xFF0C;&#x518D;&#x50A8;&#x5B58;&#x8FD9;&#x4E9B;&#x5B57;&#x8282;&#x5230;&#x78C1;&#x76D8;&#x3002;&#x5728;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#xFF08;&#x7279;&#x522B;&#x662F;&#x6587;&#x672C;&#x6587;&#x4EF6;&#xFF09;&#x65F6;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x5730;&#x8BFB;&#x53D6;&#x4EE5;&#x5F62;&#x6210;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x3002;&#x90A3;&#x4E48;&#x65E2;&#x7136;&#x78C1;&#x76D8;&#x5B58;&#x50A8;&#x90FD;&#x662F;&#x6309;&#x5B57;&#x8282;&#xFF0C;&#x5185;&#x5B58;&#x4E2D;&#x5904;&#x7406;&#x4E3A;&#x4F55;&#x8FD8;&#x9700;&#x8981;&#x5B57;&#x7B26;&#x6D41;&#x5462;&#xFF1F;&#x5B57;&#x7B26;&#x6D41;&#x662F;&#x7531;Java&#x865A;&#x62DF;&#x673A;&#x5C06;&#x5B57;&#x8282;&#x8F6C;&#x5316;&#x4E3A; 2 &#x4E2A;&#x5B57;&#x8282;&#x7684; Unicode &#x5B57;&#x7B26;&#x4E3A;&#x5355;&#x4F4D;&#x7684;&#x5B57;&#x7B26;&#x800C;&#x6210;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x5BF9;&#x591A;&#x56FD;&#x8BED;&#x8A00;&#x652F;&#x6301;&#x6027;&#x6BD4;&#x8F83;&#x597D;&#xFF01;&#x5982;&#x679C;&#x662F;&#x97F3;&#x9891;&#x6587;&#x4EF6;&#x3001;&#x56FE;&#x7247;&#x3001;&#x6B4C;&#x66F2;&#xFF0C;&#x5C31;&#x7528;&#x5B57;&#x8282;&#x6D41;&#x597D;&#x70B9;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x5173;&#x7CFB;&#x5230;&#x4E2D;&#x6587;&#xFF08;&#x6587;&#x672C;&#xFF09;&#x7684;&#xFF0C;&#x7528;&#x5B57;&#x7B26;&#x6D41;&#x597D;&#x70B9;&#xFF01;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/sinat_26888717/article/details/47999637" target="_blank" rel="external">http://blog.csdn.net/sinat_26888717/article/details/47999637</a></p>
<p><strong>2. &#x8BB2;&#x8BB2;NIO</strong></p>
<p>Java NIO &#x662F;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x66FF;&#x4EE3;&#x6807;&#x51C6; Java IO API &#x7684;&#x65B0;&#x578B;&#x6570;&#x636E;&#x4F20;&#x9012;&#x65B9;&#x5F0F;&#xFF0C;&#x50CF;&#x73B0;&#x5728;&#x5206;&#x5E03;&#x5F0F;&#x67B6;&#x6784;&#x4E2D;&#x4F1A;&#x7ECF;&#x5E38;&#x5B58;&#x5728;&#x4ED6;&#x7684;&#x8EAB;&#x5F71;&#x3002;&#x5176;&#x6BD4;&#x4F20;&#x7EDF;&#x7684;IO&#x66F4;&#x52A0;&#x9AD8;&#x6548;&#xFF0C;&#x975E;&#x963B;&#x585E;&#xFF0C;&#x5F02;&#x6B65;&#xFF0C;&#x53CC;&#x5411;&#x3002;Java NIO &#x7684;&#x4E3B;&#x8981;&#x6784;&#x6210;&#x6838;&#x5FC3;&#x5C31;&#x662F; Buffer&#x3001;Channel &#x548C; Selector &#x8FD9;&#x4E09;&#x4E2A;&#x3002;&#x5BF9;&#x4E8E; Channel &#x6211;&#x60F3;&#x8981;&#x63D0;&#x9192;&#x7684;&#x662F;&#xFF0C;Channel &#x4E2D;&#x7684;&#x6570;&#x636E;&#x603B;&#x662F;&#x8981;&#x5148;&#x8BFB;&#x5230;&#x4E00;&#x4E2A; Buffer&#xFF0C;&#x6216;&#x8005;&#x603B;&#x662F;&#x8981;&#x4ECE;&#x4E00;&#x4E2A; Buffer &#x4E2D;&#x5199;&#x5165;&#x3002;&#x4F7F;&#x7528; Selector&#xFF0C;&#x5F97;&#x5411; Selector &#x6CE8;&#x518C; Channel&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;&#x5B83;&#x7684; select() &#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4F1A;&#x4E00;&#x76F4;&#x963B;&#x585E;&#x5230;&#x67D0;&#x4E2A;&#x6CE8;&#x518C;&#x7684;&#x901A;&#x9053;&#x6709;&#x4E8B;&#x4EF6;&#x5C31;&#x7EEA;&#x3002;&#x4E00;&#x65E6;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#xFF0C;&#x7EBF;&#x7A0B;&#x5C31;&#x53EF;&#x4EE5;&#x5904;&#x7406;&#x8FD9;&#x4E9B;&#x4E8B;&#x4EF6;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://www.tuicool.com/articles/ANnuama" target="_blank" rel="external">http://www.tuicool.com/articles/ANnuama</a></li>
<li><a href="http://blog.jobbole.com/88984/" target="_blank" rel="external">http://blog.jobbole.com/88984/</a></li>
<li><a href="http://blog.csdn.net/burningsheep/article/details/51347498" target="_blank" rel="external">http://blog.csdn.net/burningsheep/article/details/51347498</a></li>
</ul>
<p><strong>3. String &#x7F16;&#x7801; UTF-8 &#x548C; GBK &#x7684;&#x533A;&#x522B;&#xFF1F;</strong></p>
<ul>
<li>UTF-8 &#x662F;&#x7528;&#x4EE5;&#x89E3;&#x51B3;&#x56FD;&#x9645;&#x4E0A;&#x5B57;&#x7B26;&#x7684;&#x4E00;&#x79CD;&#x591A;&#x5B57;&#x8282;&#x7F16;&#x7801;&#xFF0C;&#x5B83;&#x5BF9;&#x82F1;&#x6587;&#x4F7F;&#x7528;8&#x4F4D;&#xFF08;&#x5373;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#xFF09;&#xFF0C;&#x4E2D;&#x6587;&#x4F7F;&#x7528;24&#x4E3A;&#xFF08;&#x4E09;&#x4E2A;&#x5B57;&#x8282;&#xFF09;&#x6765;&#x7F16;&#x7801;&#x3002;</li>
<li>GBK &#x662F;&#x56FD;&#x5BB6;&#x6807;&#x51C6; GB2312 &#x57FA;&#x7840;&#x4E0A;&#x6269;&#x5BB9;&#x540E;&#x517C;&#x5BB9; GB2312 &#x7684;&#x6807;&#x51C6;&#x3002;GBK &#x7684;&#x6587;&#x5B57;&#x7F16;&#x7801;&#x662F;&#x7528;&#x53CC;&#x5B57;&#x8282;&#x6765;&#x8868;&#x793A;&#x7684;&#xFF0C;&#x5373;&#x4E0D;&#x8BBA;&#x4E2D;&#x3001;&#x82F1;&#x6587;&#x5B57;&#x7B26;&#x5747;&#x4F7F;&#x7528;&#x53CC;&#x5B57;&#x8282;&#x6765;&#x8868;&#x793A;&#xFF0C;&#x4E3A;&#x4E86;&#x533A;&#x5206;&#x4E2D;&#x6587;&#xFF0C;&#x5C06;&#x5176;&#x6700;&#x9AD8;&#x4F4D;&#x90FD;&#x8BBE;&#x5B9A;&#x6210;1&#x3002;GBK &#x5305;&#x542B;&#x5168;&#x90E8;&#x4E2D;&#x6587;&#x5B57;&#x7B26;&#xFF0C;&#x662F;&#x56FD;&#x5BB6;&#x7F16;&#x7801;&#xFF0C;&#x901A;&#x7528;&#x6027;&#x6BD4; UTF-8 &#x5DEE;&#xFF0C;&#x4E0D;&#x8FC7; UTF-8 &#x5360;&#x7528;&#x7684;&#x6570;&#x636E;&#x5E93;&#x6BD4; GBD &#x5927;&#x3002;GBK &#x7F16;&#x7801;&#x80FD;&#x591F;&#x7528;&#x6765;&#x540C;&#x65F6;&#x8868;&#x793A;&#x7E41;&#x4F53;&#x5B57;&#x548C;&#x7B80;&#x4F53;&#x5B57;&#xFF0C;&#x800C; GB2312 &#x53EA;&#x80FD;&#x8868;&#x793A;&#x7B80;&#x4F53;&#x5B57;&#xFF0C;GBK &#x662F;&#x517C;&#x5BB9; GB2312 &#x7F16;&#x7801;&#x7684;&#x3002;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/xiongchao2011/article/details/7276834" target="_blank" rel="external">http://blog.csdn.net/xiongchao2011/article/details/7276834</a></p>
<p><strong>4. &#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#x5B57;&#x8282;&#x6D41;&#x3001;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#x5B57;&#x7B26;&#x6D41;&#xFF1F;</strong></p>
<ul>
<li>InputStream &#x548C; OutputStream&#xFF0C;&#x4E24;&#x4E2A;&#x662F;&#x4E3A;&#x5B57;&#x8282;&#x6D41;&#x8BBE;&#x8BA1;&#x7684;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x6765;&#x5904;&#x7406;&#x5B57;&#x8282;&#x6216;&#x4E8C;&#x8FDB;&#x5236;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x5B57;&#x8282;&#x6D41;&#x5904;&#x7406;&#x5355;&#x5143;&#x4E3A;1&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x64CD;&#x4F5C;&#x5B57;&#x8282;&#x548C;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x3002;</li>
<li>Reader&#x548C; Writer&#xFF0C;&#x4E24;&#x4E2A;&#x662F;&#x4E3A;&#x5B57;&#x7B26;&#x6D41;&#xFF08;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x5360;&#x4E24;&#x4E2A;&#x5B57;&#x8282;&#xFF09;&#x8BBE;&#x8BA1;&#x7684;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x6765;&#x5904;&#x7406;&#x5B57;&#x7B26;&#x6216;&#x5B57;&#x7B26;&#x4E32;&#x3002;</li>
<li>&#x5B57;&#x7B26;&#x6D41;&#x5904;&#x7406;&#x7684;&#x5355;&#x5143;&#x4E3A;2&#x4E2A;&#x5B57;&#x8282;&#x7684; Unicode &#x5B57;&#x7B26;&#xFF0C;&#x64CD;&#x4F5C;&#x5B57;&#x7B26;&#x3001;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#x6216;&#x5B57;&#x7B26;&#x4E32;&#x3002;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/qq_27093465/article/details/52472506" target="_blank" rel="external">http://blog.csdn.net/qq_27093465/article/details/52472506</a></p>
<p><strong>5. &#x9012;&#x5F52;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4EE3;&#x7801;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#xFF1F;</strong></p>
<pre><code>/**
     * &#x9012;&#x5F52;&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;&#x6587;&#x4EF6;
     *
     * @param fileDir &#x6587;&#x4EF6;&#x540D;&#x6216;&#x76EE;&#x5F55;&#x540D;
     */
    private static void recursiveSearchFiles(String fileDir) {
        if (TextUtils.isEmpty(fileDir)) {
            //&#x56E0;&#x4E3A;new File(null)&#x4F1A;&#x7A7A;&#x6307;&#x9488;&#x5F02;&#x5E38;,&#x6240;&#x4EE5;&#x8981;&#x5224;&#x65AD;&#x4E0B;
            return;
        }
        File[] fileList = new File(fileDir).listFiles();
        if (fileList == null || fileList.length &lt;= 0) {
            return;
        }
        for (File file : fileList) {
            if (file.isFile()) {
                Log.d(TAG, &quot;[recursiveSearchFiles] file&apos;s name = &quot; + file.getName());
            } else if (file.isDirectory()) {
                Log.d(TAG, &quot;[recursiveSearchFiles] this is a directory&quot;);
                recursiveSearchFiles(file.getPath());
            } else {
                Log.d(TAG, &quot;[recursiveSearchFiles] file error&quot;);
            }
        }
    }
</code></pre>
<h2 id="java-web"><a class="header-anchor" href="#java-web"></a>Java Web</h2>
<p><strong>1. session&#x548C;cookie&#x7684;&#x533A;&#x522B;&#x548C;&#x8054;&#x7CFB;&#xFF0C;session&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x591A;&#x4E2A;&#x670D;&#x52A1;&#x90E8;&#x7F72;&#x65F6;session&#x7BA1;&#x7406;&#x3002;</strong></p>
<p>Session &#x662F;&#x5B58;&#x653E;&#x5728;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7684;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;Session&#x7ED3;&#x6784;&#x6765;&#x5B58;&#x653E;&#x7528;&#x6237;&#x6570;&#x636E;&#xFF0C;&#x5F53;&#x6D4F;&#x89C8;&#x5668; &#x7B2C;&#x4E00;&#x6B21;&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x81EA;&#x52A8;&#x751F;&#x6210;&#x4E86;&#x4E00;&#x4E2A;Session&#x548C;&#x4E00;&#x4E2A;Session ID&#x7528;&#x6765;&#x552F;&#x4E00;&#x6807;&#x8BC6;&#x8FD9;&#x4E2A;Session&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x901A;&#x8FC7;&#x54CD;&#x5E94;&#x53D1;&#x9001;&#x5230;&#x6D4F;&#x89C8;&#x5668;&#x3002;&#x5F53;&#x6D4F;&#x89C8;&#x5668;&#x7B2C;&#x4E8C;&#x6B21;&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#xFF0C;&#x4F1A;&#x5C06;&#x524D;&#x4E00;&#x6B21;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x4E2D;&#x7684;Session ID&#x653E;&#x5728;&#x8BF7;&#x6C42;&#x4E2D;&#x4E00;&#x5E76;&#x53D1;&#x9001;&#x5230;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x4ECE;&#x8BF7;&#x6C42;&#x4E2D;&#x63D0;&#x53D6;&#x51FA;Session ID&#xFF0C;&#x5E76;&#x548C;&#x4FDD;&#x5B58;&#x7684;&#x6240;&#x6709;Session ID&#x8FDB;&#x884C;&#x5BF9;&#x6BD4;&#xFF0C;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x7528;&#x6237;&#x5BF9;&#x5E94;&#x7684;Session&#x3002;</p>
<p>cookie &#x548C; session &#x7684;&#x533A;&#x522B;&#xFF1A;</p>
<p>&#xFF08;1&#xFF09;cookie &#x6570;&#x636E;&#x5B58;&#x653E;&#x5728;&#x5BA2;&#x6237;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x4E0A;&#xFF0C;session &#x6570;&#x636E;&#x653E;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x3002;</p>
<p>&#xFF08;2&#xFF09;cookie &#x4E0D;&#x662F;&#x5F88;&#x5B89;&#x5168;&#xFF0C;&#x522B;&#x4EBA;&#x53EF;&#x4EE5;&#x5206;&#x6790;&#x5B58;&#x653E;&#x5728;&#x672C;&#x5730;&#x7684; COOKIE &#x5E76;&#x8FDB;&#x884C; COOKIE &#x6B3A;&#x9A97;<br>
&#x8003;&#x8651;&#x5230;&#x5B89;&#x5168;&#x5E94;&#x5F53;&#x4F7F;&#x7528; session&#x3002;</p>
<p>&#xFF08;3&#xFF09;session &#x4F1A;&#x5728;&#x4E00;&#x5B9A;&#x65F6;&#x95F4;&#x5185;&#x4FDD;&#x5B58;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x3002;&#x5F53;&#x8BBF;&#x95EE;&#x589E;&#x591A;&#xFF0C;&#x4F1A;&#x6BD4;&#x8F83;&#x5360;&#x7528;&#x4F60;&#x670D;&#x52A1;&#x5668;&#x7684;&#x6027;&#x80FD;<br>
&#x8003;&#x8651;&#x5230;&#x51CF;&#x8F7B;&#x670D;&#x52A1;&#x5668;&#x6027;&#x80FD;&#x65B9;&#x9762;&#xFF0C;&#x5E94;&#x5F53;&#x4F7F;&#x7528; COOKIE&#x3002;</p>
<p>&#xFF08;4&#xFF09;&#x5355;&#x4E2A; cookie &#x4FDD;&#x5B58;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x80FD;&#x8D85;&#x8FC7;4K&#xFF0C;&#x5F88;&#x591A;&#x6D4F;&#x89C8;&#x5668;&#x90FD;&#x9650;&#x5236;&#x4E00;&#x4E2A;&#x7AD9;&#x70B9;&#x6700;&#x591A;&#x4FDD;&#x5B58; 20 &#x4E2A; cookie&#x3002;</p>
<p>&#x5F53;&#x670D;&#x52A1;&#x5668;&#x53D1;&#x73B0; Session &#x8D85;&#x8FC7;&#x4E86;&#x5B83;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x5C31;&#x4F1A;&#x91CA;&#x653E;&#x8BE5; Session &#x6240;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x3002;</p>
<p>Session&#x7684;&#x9500;&#x6BC1;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</p>
<ul>
<li>session &#x8C03;&#x7528;&#x4E86; session.invalidate() &#x65B9;&#x6CD5;&#x3002;</li>
<li>&#x524D;&#x540E;&#x4E24;&#x6B21;&#x8BF7;&#x6C42;&#x8D85;&#x51FA;&#x4E86; session &#x6307;&#x5B9A;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x65F6;&#x95F4;&#x3002;</li>
</ul>
<p>Session &#x751F;&#x6210;&#x540E;&#xFF0C;&#x53EA;&#x8981;&#x7528;&#x6237;&#x7EE7;&#x7EED;&#x8BBF;&#x95EE;&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x5C31;&#x4F1A;&#x66F4;&#x65B0; Session &#x7684;&#x6700;&#x540E;&#x8BBF;&#x95EE;&#x65F6;&#x95F4;&#xFF0C;&#x5E76;&#x7EF4;&#x62A4;&#x8BE5; Session&#x3002;&#x7528;&#x6237;&#x6BCF;&#x8BBF;&#x95EE;&#x670D;&#x52A1;&#x5668;&#x4E00;&#x6B21;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x5426;&#x8BFB;&#x5199; Session&#xFF0C;&#x670D;&#x52A1;&#x5668;&#x90FD;&#x8BA4;&#x4E3A;&#x8BE5;&#x7528;&#x6237;&#x7684; Session &quot;&#x6D3B;&#x8DC3;&#xFF08;active&#xFF09;&quot;&#x4E86;&#x4E00;&#x6B21;&#x3002;</p>
<p>&#x6CE8;&#x610F;&#xFF1A;&#x65B0;&#x5F00;&#x7684;&#x6D4F;&#x89C8;&#x5668;&#x7A97;&#x53E3;&#x4F1A;&#x751F;&#x6210;&#x65B0;&#x7684; Session&#xFF0C;&#x4F46;&#x5B50;&#x7A97;&#x53E3;&#x9664;&#x5916;&#x3002;&#x5B50;&#x7A97;&#x53E3;&#x4F1A;&#x5171;&#x7528;&#x7236;&#x7A97;&#x53E3;&#x7684; Session&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x94FE;&#x63A5;&#x4E0A;&#x53F3;&#x51FB;&#xFF0C;&#x5728;&#x5F39;&#x51FA;&#x7684;&#x5FEB;&#x6377;&#x83DC;&#x5355;&#x4E2D;&#x9009;&#x62E9;&quot;&#x5728;&#x65B0;&#x7A97;&#x53E3;&#x4E2D;&#x6253;&#x5F00;&quot;&#x65F6;&#xFF0C;&#x5B50;&#x7A97;&#x53E3;&#x4FBF;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x7236;&#x7A97;&#x53E3;&#x7684; Session&#x3002;</p>
<p>&#x591A;&#x4E2A;&#x670D;&#x52A1;&#x90E8;&#x7F72;&#x65F6; session &#x7BA1;&#x7406;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;</p>
<ul>
<li>Session &#x590D;&#x5236;&#xFF0C;Web&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x540C;&#x6B65; session &#x4FE1;&#x606F;&#x3002;</li>
<li>&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x652F;&#x6301;&#x4F1A;&#x8BDD;&#x4EB2;&#x548C;&#xFF0C;&#x76F8;&#x540C;&#x7684;&#x4F1A;&#x8BDD;&#x8BF7;&#x6C42;&#x53D1;&#x9001;&#x7ED9;&#x540C;&#x4E00;&#x4E2A; Web &#x670D;&#x52A1;&#x5668;&#x3002;</li>
<li>Session &#x4E0D;&#x5B58;&#x5728; Web &#x670D;&#x52A1;&#x5668;&#x672C;&#x5730;&#xFF0C;&#x800C;&#x662F;&#x653E;&#x5728;&#x7F13;&#x5B58;&#x670D;&#x52A1;&#x5668;&#x5982; Redis &#x4E0A;&#x3002;</li>
<li>&#x53EF;&#x4EE5;&#x7528; iphash&#xFF0C;&#x8FD9;&#x6837;&#x4E0D;&#x5B58;&#x5728; session &#x5171;&#x4EAB;&#x95EE;&#x9898;&#xFF0C;&#x8DDF;&#x539F;&#x6765;&#x4E00;&#x6837;&#x7528;&#xFF0C;&#x5EFA;&#x8BAE;&#x7528; memcache &#x6216;&#x8005; redis(&#x53BB;&#x6389;&#x6301;&#x4E45;&#x5316;)</li>
</ul>
<p><strong>2. servlet&#x7684;&#x4E00;&#x4E9B;&#x76F8;&#x5173;&#x95EE;&#x9898;</strong></p>
<ul>
<li>
<p>Servlet &#x662F; SUN &#x63A8;&#x51FA;&#x7684;&#x4E00;&#x5957;&#x89C4;&#x8303;&#xFF0C;&#x89C4;&#x5B9A;&#x4E86;&#x5982;&#x4F55;&#x7528; Java &#x6765;&#x5F00;&#x53D1;&#x52A8;&#x6001;&#x7F51;&#x7AD9;&#x3002;&#x7531; javax.servlet &#x548C; javax.servlet.http &#x4E24;&#x4E2A;&#x5305;&#x4E2D;&#x7684;&#x7C7B;&#x6765;&#x5B9E;&#x73B0;&#x3002;<br>
&#x901A;&#x8FC7;Servlet&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#xFF1A;</p>
<ul>
<li>&#x63A5;&#x6536;&#x7528;&#x6237;&#x901A;&#x8FC7; form &#x8868;&#x5355;&#x63D0;&#x4EA4;&#x7684;&#x4FE1;&#x606F;&#xFF1B;</li>
<li>&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5305;&#x62EC;&#x7528;&#x6237;&#x4FE1;&#x606F;&#x3001;&#x6587;&#x7AE0;&#x5185;&#x5BB9;&#x3001;&#x9875;&#x9762;&#x70B9;&#x51FB;&#x6B21;&#x6570;&#x7B49;&#xFF1B;</li>
<li>&#x751F;&#x6210;&#x9A8C;&#x8BC1;&#x7801;&#xFF0C;&#x9632;&#x6B62;&#x673A;&#x5668;&#x6076;&#x610F;&#x6CE8;&#x518C;&#x3002;</li>
</ul>
</li>
<li>
<p>get&#x548C;post&#x65B9;&#x6CD5;&#x7684;&#x533A;&#x522B;&#x662F;&#x4EC0;&#x4E48;&#xFF1F;</p>
<ul>
<li>get&#x65B9;&#x6CD5;&#x63D0;&#x4EA4;&#x7684;&#x53C2;&#x6570;&#x4F1A;&#x901A;&#x8FC7;url&#x4F20;&#x9012;&#xFF0C;&#x800C;post&#x63D0;&#x4EA4;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x653E;&#x5728;&#x8BF7;&#x6C42;&#x4F53;&#x4E2D;&#x7684;&#x3002;</li>
<li>get&#x4F20;&#x9001;&#x7684;&#x6570;&#x636E;&#x91CF;&#x6BD4;&#x8F83;&#x5C0F;&#xFF0C;post&#x4F20;&#x9001;&#x7684;&#x6570;&#x636E;&#x91CF;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x901A;&#x5E38;&#x8BA4;&#x4E3A;&#x4E0D;&#x53D7;&#x9650;&#x5236;&#x3002;</li>
<li>get&#x65B9;&#x6CD5;&#x4E0D;&#x5B89;&#x5168;&#x56E0;&#x4E3A;&#x5C06;&#x4F20;&#x9001;&#x6570;&#x636E;&#x66B4;&#x9732;&#x5728;url&#x4E0A;&#xFF0C;&#x800C;post&#x5219;&#x4E0D;&#x5B58;&#x5728;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</li>
<li>&#x8D85;&#x94FE;&#x63A5;&#x548C;&#x8868;&#x5355;&#x7684;&#x9ED8;&#x8BA4;&#x63D0;&#x4EA4;&#x65B9;&#x5F0F;&#x90FD;&#x662F;get&#x3002;</li>
</ul>
</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://blog.csdn.net/u010215407/article/details/51377419" target="_blank" rel="external">http://blog.csdn.net/u010215407/article/details/51377419</a></li>
<li><a href="http://blog.csdn.net/chdjj/article/details/18882973?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">http://blog.csdn.net/chdjj/article/details/18882973?utm_source=tuicool&amp;utm_medium=referral</a></li>
</ul>
<p><strong>3. webservice &#x76F8;&#x5173;&#x95EE;&#x9898;</strong></p>
<p>WebService &#x662F;&#x4E00;&#x4E2A; SOA&#xFF08;&#x9762;&#x5411;&#x670D;&#x52A1;&#x7684;&#x7F16;&#x7A0B;&#xFF09;&#x7684;&#x67B6;&#x6784;&#xFF0C;&#x5B83;&#x662F;&#x4E0D;&#x4F9D;&#x8D56;&#x4E8E;&#x8BED;&#x8A00;&#xFF0C;&#x4E0D;&#x4F9D;&#x8D56;&#x4E8E;&#x5E73;&#x53F0;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4E0D;&#x540C;&#x7684;&#x8BED;&#x8A00;&#x95F4;&#x7684;&#x76F8;&#x4E92;&#x8C03;&#x7528;&#xFF0C;&#x901A;&#x8FC7; Internet &#x8FDB;&#x884C;&#x57FA;&#x4E8E; Http &#x534F;&#x8BAE;&#x7684;&#x7F51;&#x7EDC;&#x5E94;&#x7528;&#x95F4;&#x7684;&#x4EA4;&#x4E92;&#x3002;<br>
WebService &#x5B9E;&#x73B0;&#x4E0D;&#x540C;&#x8BED;&#x8A00;&#x95F4;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x662F;&#x4F9D;&#x6258;&#x4E8E;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#xFF0C;webservice &#x662F;&#x9700;&#x8981;&#x9075;&#x5B88; WSDL&#xFF08;web&#x670D;&#x52A1;&#x5B9A;&#x4E49;&#x8BED;&#x8A00;&#xFF09;/SOAP&#xFF08;&#x7B80;&#x5355;&#x8BF7;&#x6C42;&#x534F;&#x8BAE;&#xFF09;&#x89C4;&#x8303;&#x7684;&#x3002;</p>
<p>WebService=WSDL+SOAP+UDDI&#xFF08;webservice&#x7684;&#x6CE8;&#x518C;&#xFF09;</p>
<p>Soap &#x662F;&#x7531; Soap &#x7684; part &#x548C; 0 &#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x9644;&#x4EF6;&#x7EC4;&#x6210;&#xFF0C;&#x4E00;&#x822C;&#x53EA;&#x6709; part&#xFF0C;&#x5728; part &#x4E2D;&#x6709; Envelope &#x548C; Body&#x3002;</p>
<p>Web Service &#x662F;&#x901A;&#x8FC7;&#x63D0;&#x4F9B;&#x6807;&#x51C6;&#x7684;&#x534F;&#x8BAE;&#x548C;&#x63A5;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA9;&#x4E0D;&#x540C;&#x7684;&#x7A0B;&#x5E8F;&#x96C6;&#x6210;&#x7684;&#x4E00;&#x79CD; SOA &#x67B6;&#x6784;&#x3002;</p>
<p>Web Service &#x7684;&#x4F18;&#x70B9;&#xFF1A;</p>
<ul>
<li>&#x53EF;&#x4EE5;&#x8BA9;&#x5F02;&#x6784;&#x7684;&#x7A0B;&#x5E8F;&#x76F8;&#x4E92;&#x8BBF;&#x95EE;&#xFF08;&#x8DE8;&#x5E73;&#x53F0;&#xFF09;</li>
<li>&#x677E;&#x8026;&#x5408;</li>
<li>&#x57FA;&#x4E8E;&#x6807;&#x51C6;&#x534F;&#x8BAE;&#xFF08;&#x901A;&#x7528;&#x8BED;&#x8A00;&#xFF0C;&#x5141;&#x8BB8;&#x5176;&#x4ED6;&#x7A0B;&#x5E8F;&#x8BBF;&#x95EE;&#xFF09;</li>
</ul>
<p>Web Service &#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;&#xFF1A;</p>
<ul>
<li>Service Provider &#x91C7;&#x7528; WSDL &#x63CF;&#x8FF0;&#x670D;&#x52A1;</li>
<li>Service Provider &#x91C7;&#x7528; UDDI &#x5C06;&#x670D;&#x52A1;&#x7684;&#x63CF;&#x8FF0;&#x6587;&#x4EF6;&#x53D1;&#x5E03;&#x5230; UDDI &#x670D;&#x52A1;&#x5668;&#xFF08;Register server&#xFF09;</li>
<li>Service Requestor &#x5728; UDDI &#x670D;&#x52A1;&#x5668;&#x4E0A;&#x67E5;&#x8BE2;&#x5E76; &#x83B7;&#x53D6; WSDL &#x6587;&#x4EF6;</li>
<li>Service requestor &#x5C06;&#x8BF7;&#x6C42;&#x7ED1;&#x5B9A;&#x5230; SOAP&#xFF0C;&#x5E76;&#x8BBF;&#x95EE;&#x76F8;&#x5E94;&#x7684;&#x670D;&#x52A1;&#x3002;</li>
</ul>
<p><strong>&#x95EE;&#x9898;&#x4E3E;&#x4F8B;&#xFF1A;</strong></p>
<p>1&#x3001;&#x4EC0;&#x4E48;&#x662F; WSDL</p>
<p>webservice &#x5B9A;&#x4E49;&#x8BED;&#x8A00;&#xFF0C;&#x5BF9;&#x5E94; .wsdl &#x6587;&#x6863;&#xFF0C;&#x4E00;&#x4E2A; webservice &#x4F1A;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684; wsdl &#x6587;&#x6863;&#xFF0C;&#x5B9A;&#x4E49;&#x4E86;&#x5BA2;&#x6237;&#x7AEF;&#x4E0E;&#x670D;&#x52A1;&#x7AEF;&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#x548C;&#x54CD;&#x5E94;&#x7684;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x548C;&#x8FC7;&#x7A0B;</p>
<p>2&#x3001;&#x5982;&#x4F55;&#x53D1;&#x5E03;&#x4E00;&#x4E2A; webservice</p>
<p>&#x5B9A;&#x4E49; SEI @webService @webMethod<br>
&#x5B9A;&#x4E49; SEI &#x7684;&#x5B9E;&#x73B0;<br>
&#x53D1;&#x5E03;&#xFF1A;Endpoint.publish(url, SEIImplObject);</p>
<p>3&#x3001;&#x5982;&#x4F55;&#x8BF7;&#x6C42;&#x4E00;&#x4E2A; webservice</p>
<p>&#x6839;&#x636E; wsdl &#x6587;&#x6863;&#x751F;&#x6210;&#x5BA2;&#x6237;&#x7AEF;&#x4EE3;&#x7801;&#xFF0C;&#x4F7F;&#x7528;&#x5BA2;&#x6237;&#x4EE3;&#x7801;&#x8C03;&#x7528; webservice</p>
<p>&#x8FD8;&#x53EF;&#x4EE5;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/t0404/article/details/52049544" target="_blank" rel="external">http://blog.csdn.net/t0404/article/details/52049544</a></p>
<p><strong>4. jdbc &#x8FDE;&#x63A5;&#xFF0C;forname &#x65B9;&#x5F0F;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x600E;&#x4E48;&#x58F0;&#x660E;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x4E8B;&#x52A1;&#x3002;</strong></p>
<ul>
<li>&#x52A0;&#x8F7D;&#x6570;&#x636E;&#x5E93;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#xFF1A;&#x5404;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x90FD;&#x4F1A;&#x63D0;&#x4F9B; JDBC &#x7684;&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1;&#x5305;&#xFF0C;&#x76F4;&#x63A5;&#x628A; JDBC &#x64CD;&#x4F5C;&#x6240;&#x9700;&#x8981;&#x7684;&#x5F00;&#x53D1;&#x5305;&#xFF08;&#x4E00;&#x822C;&#x4E3A;*.jar&#x6216;*.zip&#xFF09;&#x76F4;&#x63A5;&#x914D;&#x7F6E;&#x5230; classpath &#x8DEF;&#x5F84;&#x5373;&#x53EF;&#x3002;</li>
<li>&#x8FDE;&#x63A5;&#x6570;&#x636E;&#x5E93;&#xFF1A;&#x6839;&#x636E;&#x5404;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x7684;&#x4E0D;&#x540C;&#x8FDE;&#x63A5;&#x7684;&#x5730;&#x5740;&#x4E5F;&#x4E0D;&#x540C;&#xFF0C;&#x6B64;&#x8FDE;&#x63A5;&#x5730;&#x5740;&#x5C06;&#x7531;&#x6570;&#x636E;&#x5E93;&#x5382;&#x5546;&#x63D0;&#x4F9B;&#xFF0C;&#x4E00;&#x822C;&#x5728;&#x4F7F;&#x7528; JDBC &#x8FDE;&#x63A5;&#x6570;&#x636E;&#x5E93;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x8981;&#x6C42;&#x7528;&#x6237;&#x8F93;&#x5165;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x7684;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#xFF0C;&#x7528;&#x6237;&#x5728;&#x53D6;&#x5F97;&#x8FDE;&#x63A5;&#x4E4B;&#x540E;&#x624D;&#x53EF;&#x4EE5;&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x8FDB;&#x884C;&#x67E5;&#x8BE2;&#x6216;&#x66F4;&#x65B0;&#x7684;&#x64CD;&#x4F5C;&#x3002;</li>
<li>&#x4F7F;&#x7528;&#x8BED;&#x53E5;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#xFF1A;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#x5206;&#x4E3A;&#x66F4;&#x65B0;&#x548C;&#x67E5;&#x8BE2;&#x4E24;&#x79CD;&#x64CD;&#x4F5C;&#xFF0C;&#x9664;&#x4E86;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6807;&#x51C6;&#x7684;SQL&#x8BED;&#x53E5;&#x4E4B;&#x5916;&#xFF0C;&#x5BF9;&#x4E8E;&#x5404;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5176;&#x81EA;&#x5DF1;&#x63D0;&#x4F9B;&#x7684;&#x5404;&#x79CD;&#x547D;&#x4EE4;&#x3002;</li>
<li>&#x5173;&#x95ED;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#xFF1A;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#x9700;&#x8981;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x4EE5;&#x91CA;&#x653E;&#x8D44;&#x6E90;&#x3002;</li>
</ul>
<pre><code>public class DBHelper {  
    public static final String DBDRIVER = &quot;com.mysql.jdbc.Driver&quot;;  
    public static final String DBURL = &quot;jdbc:mysql://localhost:3306/test&quot;;  
    public static final String DBUSER = &quot;root&quot;;  
    public static final String DBPASS = &quot;1111&quot;;  
      
    public static Connection getConnection(){  
        Connection conn = null;  
        try {  
            Class.forName(DBDRIVER);  
            conn = DriverManager.getConnection(DBURL, DBUSER, DBPASS);  
        } catch (Exception e) {  
            e.printStackTrace();  
        }  
        return conn;  
    }   
      
    public static void save(){  
        Connection con = getConnection();  
        String sql = &quot;insert into Info values(?, ?, ?)&quot;;  
        PreparedStatement psmt = null;  
        try {  
            psmt = con.prepareStatement(sql);  
            psmt.setString(1, &quot;123&quot;);  
            psmt.setString(2, &quot;12&quot;);  
            psmt.setInt(3, 3);  
            int count = psmt.executeUpdate();  
        } catch (Exception e) {  
            e.printStackTrace();  
        }finally{  
            if(psmt != null){  
                try {  
                    psmt.close();  
                } catch (SQLException e) {  
                    e.printStackTrace();  
                }  
            }  
            if(con != null){  
                try {  
                    con.close();  
                } catch (SQLException e) {  
                    e.printStackTrace();  
                }  
            }  
        }  
    }  
      
    public static void delete(){  
        Connection con = getConnection();  
        String sql = &quot;delete from Info where id=?&quot;;  
        PreparedStatement psmt = null;  
        try {  
            psmt = con.prepareStatement(sql);  
            psmt.setString(1, &quot;10330070&quot;);  
            int count = psmt.executeUpdate();  
        } catch (Exception e) {  
            e.printStackTrace();  
        }finally{  
            if(psmt != null){  
                try {  
                    psmt.close();  
                } catch (SQLException e) {  
                    // TODO Auto-generated catch block  
                    e.printStackTrace();  
                }  
            }  
            if(con != null){  
                try {  
                    con.close();  
                } catch (SQLException e) {  
                    // TODO Auto-generated catch block  
                    e.printStackTrace();  
                }  
            }  
        }  
    }  
      
    public static void update(){  
        Connection con = getConnection();  
        String sql = &quot;update Info set age = ? where id = ?&quot;;  
        PreparedStatement psmt = null;  
        try {  
            psmt = con.prepareStatement(sql);  
            psmt.setInt(1, 22);  
            psmt.setString(2, &quot;111313&quot;);  
            int count = psmt.executeUpdate();  
        } catch (Exception e) {  
            e.printStackTrace();  
        }finally{  
            if(psmt != null){  
                try {  
                    psmt.close();  
                } catch (SQLException e) {  
                    e.printStackTrace();  
                }  
            }  
            if(con != null){  
                try {  
                    con.close();  
                } catch (SQLException e) {  
                    e.printStackTrace();  
                }  
            }  
        }  
    }  
      
    public static List&lt;Info&gt; query(){  
        List&lt;Info&gt; list = new ArrayList&lt;Info&gt;();  
        Connection con = getConnection();  
        String sql = &quot;select * from Info&quot;;  
        PreparedStatement psmt = null;  
        ResultSet rs = null;  
          
        try {  
            psmt = con.prepareStatement(sql);  
            rs = psmt.executeQuery();  
              
            while(rs.next()){    //&#x4F9D;&#x6B21;&#x53D6;&#x51FA;&#x6570;&#x636E;  
                Info info = new Info();  
                info.setId(rs.getString(&quot;id&quot;));  
                info.setPass(rs.getString(&quot;pass&quot;));  
                info.setAge(rs.getInt(&quot;age&quot;));  
                System.out.println(info.getId() +&quot;\t&quot; + info.getPass() + &quot;\t&quot; + info.getAge());  
                list.add(info);  
            }  
        } catch (Exception e) {  
            e.printStackTrace();  
        }finally{  
            if(rs != null){  
                try {  
                    rs.close();  
                } catch (SQLException e) {  
                    e.printStackTrace();  
                }  
            }  
            if(psmt != null){  
                try {  
                    psmt.close();  
                } catch (SQLException e) {  
                    e.printStackTrace();  
                }  
            }  
            if(con != null){  
                try {  
                    con.close();  
                } catch (SQLException e) {  
                    e.printStackTrace();  
                }  
            }  
        }  
        return list;  
    }  
      
    public static void main(String[] args){  
        System.out.println(query().get(0).getAge());  
          
    }  
}  
</code></pre>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/joywy/article/details/7731305#" target="_blank" rel="external">http://blog.csdn.net/joywy/article/details/7731305#</a></p>
<p><strong>5. &#x65E0;&#x6846;&#x67B6;&#x4E0B;&#x914D;&#x7F6E;web.xml&#x7684;&#x4E3B;&#x8981;&#x914D;&#x7F6E;&#x5185;&#x5BB9;</strong></p>
<ul>
<li>&#x542F;&#x52A8;&#x4E00;&#x4E2A;WEB&#x9879;&#x76EE;&#x7684;&#x65F6;&#x5019;&#xFF0C;WEB&#x5BB9;&#x5668;&#x4F1A;&#x53BB;&#x8BFB;&#x53D6;&#x5B83;&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;web.xml&#xFF0C;&#x8BFB;&#x53D6;<listener>&#x548C;<context-param>&#x4E24;&#x4E2A;&#x7ED3;&#x70B9;&#x3002;</context-param></listener></li>
<li>&#x7D27;&#x6025;&#x7740;&#xFF0C;&#x5BB9;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;ServletContext&#xFF08;servlet&#x4E0A;&#x4E0B;&#x6587;&#xFF09;&#xFF0C;&#x8FD9;&#x4E2A;web&#x9879;&#x76EE;&#x7684;&#x6240;&#x6709;&#x90E8;&#x5206;&#x90FD;&#x5C06;&#x5171;&#x4EAB;&#x8FD9;&#x4E2A;&#x4E0A;&#x4E0B;&#x6587;&#x3002;</li>
<li>&#x5BB9;&#x5668;&#x5C06;<context-param>&#x8F6C;&#x6362;&#x4E3A;&#x952E;&#x503C;&#x5BF9;&#xFF0C;&#x5E76;&#x4EA4;&#x7ED9;servletContext&#x3002;</context-param></li>
<li>&#x5BB9;&#x5668;&#x521B;&#x5EFA;<listener>&#x4E2D;&#x7684;&#x7C7B;&#x5B9E;&#x4F8B;&#xFF0C;&#x521B;&#x5EFA;&#x76D1;&#x542C;&#x5668;&#x3002;</listener></li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="https://my.oschina.net/u/1383439/blog/224448" target="_blank" rel="external">https://my.oschina.net/u/1383439/blog/224448</a></p>
<p><strong>6. jsp &#x548C; servlet &#x7684;&#x533A;&#x522B;</strong></p>
<p>JSP &#x662F; Servlet &#x6280;&#x672F;&#x7684;&#x6269;&#x5C55;&#xFF0C;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F; Servlet &#x7684;&#x7B80;&#x6613;&#x65B9;&#x5F0F;&#x3002;JSP &#x7F16;&#x8BD1;&#x540E;&#x662F; &#x201C;&#x7C7B;servlet&#x201D;&#x3002;Servlet &#x548C; JSP &#x6700;&#x4E3B;&#x8981;&#x7684;&#x4E0D;&#x540C;&#x70B9;&#x5728;&#x4E8E;&#xFF0C;Servlet &#x7684;&#x5E94;&#x7528;&#x903B;&#x8F91;&#x662F;&#x5728; Java &#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x5E76;&#x4E14;&#x5B8C;&#x5168;&#x4ECE;&#x8868;&#x793A;&#x5C42;&#x4E2D;&#x7684; HTML &#x91CC;&#x5206;&#x79BB;&#x5F00;&#x6765;&#x3002;&#x800C; JSP &#x7684;&#x60C5;&#x51B5;&#x662F; Java &#x548C; HTML &#x53EF;&#x4EE5;&#x7EC4;&#x5408;&#x6210;&#x4E00;&#x4E2A;&#x6269;&#x5C55;&#x540D;&#x4E3A; .jsp &#x7684;&#x6587;&#x4EF6;&#x3002;JSP &#x4FA7;&#x91CD;&#x4E8E;&#x89C6;&#x56FE;&#xFF0C;Servlet &#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x63A7;&#x5236;&#x903B;&#x8F91;&#x3002;</p>
<h2 id="jvm"><a class="header-anchor" href="#jvm"></a>JVM</h2>
<p><strong>1. Java&#x7684;&#x5185;&#x5B58;&#x6A21;&#x578B;&#x4EE5;&#x53CA;GC&#x7B97;&#x6CD5;</strong></p>
<p>&#x6309;&#x7167;&#x5B98;&#x65B9;&#x7684;&#x8BF4;&#x6CD5;&#xFF1A;Java &#x865A;&#x62DF;&#x673A;&#x5177;&#x6709;&#x4E00;&#x4E2A;&#x5806;&#xFF0C;&#x5806;&#x662F;&#x8FD0;&#x884C;&#x65F6;&#x6570;&#x636E;&#x533A;&#x57DF;&#xFF0C;&#x6240;&#x6709;&#x7C7B;&#x5B9E;&#x4F8B;&#x548C;&#x6570;&#x7EC4;&#x7684;&#x5185;&#x5B58;&#x5747;&#x4ECE;&#x6B64;&#x5904;&#x5206;&#x914D;&#x3002;</p>
<p>JVM&#x4E3B;&#x8981;&#x7BA1;&#x7406;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x5185;&#x5B58;&#xFF1A;&#x5806;&#x548C;&#x975E;&#x5806;&#xFF0C;&#x5806;&#x5185;&#x5B58;&#xFF08;Heap Memory&#xFF09;&#x662F;&#x5728; Java &#x865A;&#x62DF;&#x673A;&#x542F;&#x52A8;&#x65F6;&#x521B;&#x5EFA;&#xFF0C;&#x975E;&#x5806;&#x5185;&#x5B58;(Non-heap Memory)&#x662F;&#x5728;JVM&#x5806;&#x4E4B;&#x5916;&#x7684;&#x5185;&#x5B58;&#x3002;</p>
<p>&#x7B80;&#x5355;&#x6765;&#x8BF4;&#xFF0C;&#x5806;&#x662F; Java &#x4EE3;&#x7801;&#x53EF;&#x53CA;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x7559;&#x7ED9;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x4F7F;&#x7528;&#x7684;&#xFF1B;&#x975E;&#x5806;&#x662F;JVM&#x7559;&#x7ED9;&#x81EA;&#x5DF1;&#x7528;&#x7684;&#xFF0C;&#x5305;&#x542B;&#x65B9;&#x6CD5;&#x533A;&#x3001;JVM&#x5185;&#x90E8;&#x5904;&#x7406;&#x6216;&#x4F18;&#x5316;&#x6240;&#x9700;&#x7684;&#x5185;&#x5B58;&#xFF08;&#x5982; JIT Compiler&#xFF0C;Just-in-time Compiler&#xFF0C;&#x5373;&#x65F6;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x4EE3;&#x7801;&#x7F13;&#x5B58;&#xFF09;&#x3001;&#x6BCF;&#x4E2A;&#x7C7B;&#x7ED3;&#x6784;&#xFF08;&#x5982;&#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x6570;&#x6C60;&#x3001;&#x5B57;&#x6BB5;&#x548C;&#x65B9;&#x6CD5;&#x6570;&#x636E;&#xFF09;&#x4EE5;&#x53CA;&#x65B9;&#x6CD5;&#x548C;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x7801;&#x3002;<br>
JVM &#x5185;&#x5B58;&#x5305;&#x542B;&#x5982;&#x4E0B;&#x51E0;&#x4E2A;&#x90E8;&#x5206;&#xFF1A;</p>
<ul>
<li>&#x5806;&#x5185;&#x5B58;&#xFF08;Heap Memory&#xFF09;&#xFF1A; &#x5B58;&#x653E; Java &#x5BF9;&#x8C61;</li>
<li>&#x975E;&#x5806;&#x5185;&#x5B58;&#xFF08;Non-Heap Memory&#xFF09;&#xFF1A; &#x5B58;&#x653E;&#x7C7B;&#x52A0;&#x8F7D;&#x4FE1;&#x606F;&#x548C;&#x5176;&#x5B83; meta-data</li>
<li>&#x5176;&#x5B83;&#xFF08;Other&#xFF09;&#xFF1A; &#x5B58;&#x653E;JVM &#x81EA;&#x8EAB;&#x4EE3;&#x7801;&#x7B49;</li>
</ul>
<p>&#x5728; JVM &#x542F;&#x52A8;&#x65F6;&#xFF0C;&#x5C31;&#x5DF2;&#x7ECF;&#x4FDD;&#x7559;&#x4E86;&#x56FA;&#x5B9A;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x7ED9; Heap &#x5185;&#x5B58;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x5185;&#x5B58;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x90FD;&#x4F1A;&#x88AB;JVM&#x4F7F;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x7684;&#x662F;&#x8FD9;&#x90E8;&#x5206;&#x4FDD;&#x7559;&#x7684;&#x5185;&#x5B58;&#x4E0D;&#x4F1A;&#x88AB;&#x5176;&#x4ED6;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x5185;&#x5B58;&#x5927;&#x5C0F;&#x7531;-Xmx &#x53C2;&#x6570;&#x6307;&#x5B9A;&#x3002;&#x800C;&#x53E6;&#x4E00;&#x90E8;&#x5206;&#x5185;&#x5B58;&#x5728; JVM &#x542F;&#x52A8;&#x65F6;&#x5C31;&#x5206;&#x914D;&#x7ED9;JVM&#xFF0C;&#x4F5C;&#x4E3A;JVM&#x7684;&#x521D;&#x59CB; Heap &#x5185;&#x5B58;&#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x5185;&#x5B58;&#x662F;&#x7531; -Xms &#x53C2;&#x6570;&#x6307;&#x5B9A;&#x3002;</p>
<p><strong>&#x5783;&#x573E;&#x56DE;&#x6536;&#x7B97;&#x6CD5;</strong></p>
<ul>
<li>&#x6807;&#x8BB0;-&#x6E05;&#x9664;&#x7B97;&#x6CD5;(Mark-Sweep)</li>
</ul>
<p>&#x4ECE;&#x6839;&#x8282;&#x70B9;&#x5F00;&#x59CB;&#x6807;&#x8BB0;&#x6240;&#x6709;&#x53EF;&#x8FBE;&#x5BF9;&#x8C61;&#xFF0C;&#x5176;&#x4F59;&#x6CA1;&#x6807;&#x8BB0;&#x7684;&#x5373;&#x4E3A;&#x5783;&#x573E;&#x5BF9;&#x8C61;&#xFF0C;&#x6267;&#x884C;&#x6E05;&#x9664;&#x3002;&#x4F46;&#x56DE;&#x6536;&#x540E;&#x7684;&#x7A7A;&#x95F4;&#x662F;&#x4E0D;&#x8FDE;&#x7EED;&#x7684;&#x3002;</p>
<ul>
<li>&#x590D;&#x5236;&#x7B97;&#x6CD5;(copying)</li>
</ul>
<p>&#x5C06;&#x5185;&#x5B58;&#x5206;&#x6210;&#x4E24;&#x5757;&#xFF0C;&#x6BCF;&#x6B21;&#x53EA;&#x4F7F;&#x7528;&#x5176;&#x4E2D;&#x4E00;&#x5757;&#xFF0C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x65F6;&#xFF0C;&#x5C06;&#x6807;&#x8BB0;&#x7684;&#x5BF9;&#x8C61;&#x62F7;&#x8D1D;&#x5230;&#x53E6;&#x5916;&#x4E00;&#x5757;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x5B8C;&#x5168;&#x6E05;&#x9664;&#x539F;&#x6765;&#x4F7F;&#x7528;&#x7684;&#x90A3;&#x5757;&#x5185;&#x5B58;&#x3002;&#x590D;&#x5236;&#x540E;&#x7684;&#x7A7A;&#x95F4;&#x662F;&#x8FDE;&#x7EED;&#x7684;&#x3002;&#x590D;&#x5236;&#x7B97;&#x6CD5;&#x9002;&#x7528;&#x4E8E;&#x65B0;&#x751F;&#x4EE3;&#xFF0C;&#x56E0;&#x4E3A;&#x5783;&#x573E;&#x5BF9;&#x8C61;&#x591A;&#x4E8E;&#x5B58;&#x6D3B;&#x5BF9;&#x8C61;&#xFF0C;&#x590D;&#x5236;&#x7B97;&#x6CD5;&#x66F4;&#x9AD8;&#x6548;&#x3002;&#x5728;&#x65B0;&#x751F;&#x4EE3;&#x4E32;&#x884C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x7B97;&#x6CD5;&#x4E2D;&#xFF0C;&#x5C06;eden&#x4E2D;&#x6807;&#x8BB0;&#x5B58;&#x6D3B;&#x7684;&#x5BF9;&#x8C61;&#x62F7;&#x8D1D;&#x672A;&#x4F7F;&#x7528;&#x7684;s1&#x4E2D;&#xFF0C;s0&#x4E2D;&#x7684;&#x5E74;&#x8F7B;&#x5BF9;&#x8C61;&#x4E5F;&#x8FDB;&#x5165;s1&#xFF0C;&#x5982;&#x679C;s1&#x7A7A;&#x95F4;&#x5DF2;&#x6EE1;&#xFF0C;&#x5219;&#x8FDB;&#x5165;&#x8001;&#x5E74;&#x4EE3;&#xFF1B;&#x8FD9;&#x6837;&#x4EA4;&#x66FF;&#x4F7F;&#x7528;s0&#x548C;s1&#x3002;&#x8FD9;&#x79CD;&#x6539;&#x8FDB;&#x7684;&#x590D;&#x5236;&#x7B97;&#x6CD5;&#xFF0C;&#x65E2;&#x4FDD;&#x8BC1;&#x4E86;&#x7A7A;&#x95F4;&#x7684;&#x8FDE;&#x7EED;&#x6027;&#xFF0C;&#x6709;&#x907F;&#x514D;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x6D6A;&#x8D39;&#x3002;</p>
<ul>
<li>&#x6807;&#x8BB0;-&#x538B;&#x7F29;&#x7B97;&#x6CD5;(Mark-compact)</li>
</ul>
<p>&#x9002;&#x5408;&#x7528;&#x4E8E;&#x8001;&#x5E74;&#x4EE3;&#x7684;&#x7B97;&#x6CD5;&#xFF08;&#x5B58;&#x6D3B;&#x5BF9;&#x8C61;&#x591A;&#x4E8E;&#x5783;&#x573E;&#x5BF9;&#x8C61;&#xFF09;&#x3002;<br>
&#x6807;&#x8BB0;&#x540E;&#x4E0D;&#x590D;&#x5236;&#xFF0C;&#x800C;&#x662F;&#x5C06;&#x5B58;&#x6D3B;&#x5BF9;&#x8C61;&#x538B;&#x7F29;&#x5230;&#x5185;&#x5B58;&#x7684;&#x4E00;&#x7AEF;&#xFF0C;&#x7136;&#x540E;&#x6E05;&#x7406;&#x8FB9;&#x754C;&#x5916;&#x7684;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x3002;</p>
<ul>
<li>&#x5206;&#x4EE3;&#x56DE;&#x6536;&#x7B97;&#x6CD5;</li>
</ul>
<p>&#x5728; HotSpot &#x865A;&#x62DF;&#x673A;&#x4E2D;&#xFF0C;&#x57FA;&#x4E8E;&#x5206;&#x4EE3;&#x7684;&#x7279;&#x70B9;&#xFF08;&#x5806;&#x5185;&#x5B58;&#x53EF;&#x8FDB;&#x4E00;&#x6B65;&#x5206;&#x4E3A;&#x5E74;&#x8F7B;&#x4EE3;&#x3001;&#x8001;&#x5E74;&#x4EE3;&#xFF0C;&#x8001;&#x5E74;&#x4EE3;&#x5B58;&#x653E;&#x5B58;&#x6D3B;&#x65F6;&#x95F4;&#x8F83;&#x957F;&#x7684;&#x5BF9;&#x8C61;&#xFF09;&#xFF0C;JVM GC&#x4F7F;&#x7528;&#x5206;&#x4EE3;&#x56DE;&#x6536;&#x7B97;&#x6CD5;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/kingofworld/article/details/17718587" target="_blank" rel="external">http://blog.csdn.net/kingofworld/article/details/17718587</a></p>
<p><strong>2. jvm&#x6027;&#x80FD;&#x8C03;&#x4F18;&#x90FD;&#x505A;&#x4E86;&#x4EC0;&#x4E48;</strong></p>
<ul>
<li>&#x63A7;&#x5236; GC &#x7684;&#x884C;&#x4E3A;&#x3002;GC &#x662F;&#x4E00;&#x4E2A;&#x540E;&#x53F0;&#x5904;&#x7406;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4E5F;&#x662F;&#x4F1A;&#x6D88;&#x8017;&#x7CFB;&#x7EDF;&#x6027;&#x80FD;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x7ECF;&#x5E38;&#x4F1A;&#x6839;&#x636E;&#x7CFB;&#x7EDF;&#x8FD0;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x7684;&#x7279;&#x6027;&#x6765;&#x66F4;&#x6539;GC&#x884C;&#x4E3A;</li>
<li>&#x63A7;&#x5236; JVM &#x5806;&#x6808;&#x5927;&#x5C0F;&#x3002;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;JVM &#x5728;&#x5185;&#x5B58;&#x5206;&#x914D;&#x4E0A;&#x4E0D;&#x9700;&#x8981;&#x4F60;&#x4FEE;&#x6539;&#xFF0C;(&#x4E3E;&#x4F8B;)&#x4F46;&#x662F;&#x5F53;&#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x65B0;&#x751F;&#x4EE3;&#x5BF9;&#x8C61;&#x5728;&#x67D0;&#x4E2A;&#x65F6;&#x95F4;&#x6BB5;&#x4EA7;&#x751F;&#x7684;&#x6BD4;&#x8F83;&#x591A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x63A7;&#x5236;&#x65B0;&#x751F;&#x4EE3;&#x7684;&#x5806;&#x5927;&#x5C0F;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x8FD8;&#x8981;&#x9700;&#x8981;&#x63A7;&#x5236;&#x603B;&#x7684; JVM &#x5927;&#x5C0F;&#x907F;&#x514D;&#x5185;&#x5B58;&#x6EA2;&#x51FA;</li>
<li>&#x63A7;&#x5236; JVM &#x7EBF;&#x7A0B;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#x3002;&#x5982;&#x679C;&#x662F;&#x591A;&#x7EBF;&#x7A0B;&#x7A0B;&#x5E8F;&#xFF0C;&#x4EA7;&#x751F;&#x7EBF;&#x7A0B;&#x548C;&#x7EBF;&#x7A0B;&#x8FD0;&#x884C;&#x6240;&#x6D88;&#x8017;&#x7684;&#x5185;&#x5B58;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x4E00;&#x5B9A;&#x65F6;&#x95F4;&#x7684;&#x89C2;&#x6D4B;&#x540E;&#xFF0C;&#x914D;&#x7F6E;&#x6700;&#x4F18;&#x7ED3;&#x679C;</li>
</ul>
<p><strong>&#x8C03;&#x4F18;&#x7B56;&#x7565;</strong></p>
<p>&#x4E24;&#x4E2A;&#x57FA;&#x672C;&#x539F;&#x5219;&#xFF1A;</p>
<ul>
<li>&#x5C06;&#x8F6C;&#x79FB;&#x5230;&#x8001;&#x5E74;&#x4EE3;&#x7684;&#x5BF9;&#x8C61;&#x6570;&#x91CF;&#x964D;&#x5230;&#x6700;&#x5C11;&#x3002;</li>
<li>&#x51CF;&#x5C11; Full GC &#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002;&#x76EE;&#x6807;&#x662F; Minor GC &#x65F6;&#x95F4;&#x5728; 100ms &#x4EE5;&#x5185;&#xFF0C;Full GC &#x65F6;&#x95F4;&#x5728; 1s &#x4EE5;&#x5185;&#x3002;</li>
</ul>
<p>&#x4E3B;&#x8981;&#x8C03;&#x4F18;&#x53C2;&#x6570;&#xFF1A;</p>
<ul>
<li>
<p>&#x8BBE;&#x5B9A;&#x5806;&#x5185;&#x5B58;&#x5927;&#x5C0F;&#xFF0C;&#x8FD9;&#x662F;&#x6700;&#x57FA;&#x672C;&#x7684;&#x3002;</p>
<ul>
<li>-Xms&#xFF1A;&#x542F;&#x52A8; JVM &#x65F6;&#x7684;&#x5806;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x3002;</li>
<li>-Xmx&#xFF1A;&#x5806;&#x5185;&#x5B58;&#x6700;&#x5927;&#x9650;&#x5236;&#x3002;</li>
</ul>
</li>
<li>
<p>&#x8BBE;&#x5B9A;&#x65B0;&#x751F;&#x4EE3;&#x5927;&#x5C0F;&#x3002;&#x65B0;&#x751F;&#x4EE3;&#x4E0D;&#x5B9C;&#x592A;&#x5C0F;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x6709;&#x5927;&#x91CF;&#x5BF9;&#x8C61;&#x6D8C;&#x5165;&#x8001;&#x5E74;&#x4EE3;&#x3002;</p>
<ul>
<li>-XX:NewRatio&#xFF1A;&#x65B0;&#x751F;&#x4EE3;&#x548C;&#x8001;&#x5E74;&#x4EE3;&#x7684;&#x5360;&#x6BD4;&#x3002;</li>
<li>-XX:NewSize&#xFF1A;&#x65B0;&#x751F;&#x4EE3;&#x7A7A;&#x95F4;&#x3002;</li>
<li>-XX:SurvivorRatio&#xFF1A;&#x4F0A;&#x7538;&#x56ED;&#x7A7A;&#x95F4;&#x548C;&#x5E78;&#x5B58;&#x8005;&#x7A7A;&#x95F4;&#x7684;&#x5360;&#x6BD4;&#x3002;</li>
<li>-XX:MaxTenuringThreshold&#xFF1A;&#x5BF9;&#x8C61;&#x8FDB;&#x5165;&#x8001;&#x5E74;&#x4EE3;&#x7684;&#x5E74;&#x9F84;&#x9608;&#x503C;&#x3002;</li>
</ul>
</li>
<li>
<p>&#x8BBE;&#x5B9A;&#x5783;&#x573E;&#x56DE;&#x6536;&#x5668;</p>
<ul>
<li>&#x5E74;&#x8F7B;&#x4EE3;&#xFF1A;-XX:+UseParNewGC&#x3002;</li>
<li>&#x8001;&#x5E74;&#x4EE3;&#xFF1A;-XX:+UseConcMarkSweepGC&#x3002;</li>
</ul>
</li>
</ul>
<p>CMS &#x53EF;&#x4EE5;&#x5C06; STW &#x65F6;&#x95F4;&#x964D;&#x5230;&#x6700;&#x4F4E;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x5BF9;&#x5185;&#x5B58;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x6709;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x201C;&#x5E76;&#x884C;&#x6A21;&#x5F0F;&#x5931;&#x8D25;&#x201D;&#x3002;&#x6BD4;&#x5982;&#x8001;&#x5E74;&#x4EE3;&#x7A7A;&#x95F4;&#x8FD8;&#x6709; 300MB &#x7A7A;&#x95F4;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x4E9B; 10MB &#x7684;&#x5BF9;&#x8C61;&#x65E0;&#x6CD5;&#x88AB;&#x987A;&#x5E8F;&#x7684;&#x5B58;&#x50A8;&#x3002;&#x8FD9;&#x65F6;&#x5019;&#x4F1A;&#x89E6;&#x53D1;&#x538B;&#x7F29;&#x5904;&#x7406;&#xFF0C;&#x4F46;&#x662F; CMS GC &#x6A21;&#x5F0F;&#x4E0B;&#x7684;&#x538B;&#x7F29;&#x5904;&#x7406;&#x65F6;&#x95F4;&#x8981;&#x6BD4; Parallel GC &#x957F;&#x5F88;&#x591A;&#x3002;<br>
G1 &#x91C7;&#x7528;&#x201D;&#x6807;&#x8BB0;-&#x6574;&#x7406;&#x201C;&#x7B97;&#x6CD5;&#xFF0C;&#x89E3;&#x51B3;&#x4E86;&#x5185;&#x5B58;&#x788E;&#x7247;&#x95EE;&#x9898;&#xFF0C;&#x5EFA;&#x7ACB;&#x4E86;&#x53EF;&#x9884;&#x6D4B;&#x7684;&#x505C;&#x987F;&#x65F6;&#x95F4;&#x7C7B;&#x578B;&#xFF0C;&#x80FD;&#x8BA9;&#x4F7F;&#x7528;&#x8005;&#x6307;&#x5B9A;&#x5728;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A; M &#x6BEB;&#x79D2;&#x7684;&#x65F6;&#x95F4;&#x6BB5;&#x5185;&#xFF0C;&#x6D88;&#x8017;&#x5728;&#x5783;&#x573E;&#x6536;&#x96C6;&#x4E0A;&#x7684;&#x65F6;&#x95F4;&#x4E0D;&#x5F97;&#x8D85;&#x8FC7;N&#x6BEB;&#x79D2;&#x3002;</p>
<p><strong>3. &#x4ECB;&#x7ECD; JVM &#x4E2D;7&#x4E2A;&#x533A;&#x57DF;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x6BCF;&#x4E2A;&#x533A;&#x57DF;&#x53EF;&#x80FD;&#x9020;&#x6210;&#x5185;&#x5B58;&#x7684;&#x6EA2;&#x51FA;&#x7684;&#x60C5;&#x51B5;&#x8BF4;&#x660E;&#x3002;</strong></p>
<p>&#x5668;&#x6C60;&#x5806;&#xFF0C;&#x6808;&#x6808;&#x533A;&#x533A;</p>
<p>&#x4E09;&#x4E2A;&#x79C1;&#x6709;&#x533A;&#xFF1A;&#x6307;&#x4EE4;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x672C;&#x5730;&#x7EBF;&#x7A0B;&#x6C60;</p>
<p>&#x56DB;&#x4E2A;&#x5171;&#x4EAB;&#x533A;&#xFF1A;&#x65B9;&#x6CD5;&#x533A;&#xFF0C;&#x5E38;&#x91CF;&#x6C60;&#xFF0C;&#x76F4;&#x63A5;&#x5185;&#x5B58;&#x533A;&#xFF0C;&#x672C;&#x5730;&#x7EBF;&#x7A0B;&#x6808;</p>
<p>&#x5806;&#x662F;&#x8FD0;&#x884C;&#x65F6;&#x6570;&#x636E;&#x533A;&#x57DF;&#xFF0C;&#x6240;&#x6709;&#x7C7B;&#x5B9E;&#x4F8B;&#x548C;&#x6570;&#x7EC4;&#x7684;&#x5185;&#x5B58;&#x5747;&#x4ECE;&#x6B64;&#x5904;&#x5206;&#x914D;&#x3002;&#x5806;&#x662F;&#x5728; Java &#x865A;&#x62DF;&#x673A;&#x542F;&#x52A8;&#x65F6;&#x521B;&#x5EFA;&#x7684;</p>
<p>&#x5728;JVM&#x4E2D;&#x5806;&#x4E4B;&#x5916;&#x7684;&#x5185;&#x5B58;&#x79F0;&#x4E3A;&#x975E;&#x5806;&#x5185;&#x5B58;(Non-heap memory)</p>
<ul>
<li>Java &#x5806;&#x6EA2;&#x51FA;</li>
</ul>
<p>&#x53C2;&#x6570;- XX:+ HeapDumpOnOutOfMemoryError</p>
<p>&#x5148;&#x901A;&#x8FC7;&#x5185;&#x5B58;&#x6620;&#x50CF;&#x5206;&#x6790;&#x5DE5;&#x5177;&#xFF08;&#x5982; Eclipse Memory Analyzer&#xFF09; &#x5BF9; Dump &#x51FA;&#x6765;&#x7684;&#x5806;&#x8F6C;&#x50A8;&#x5FEB;&#x7167;&#x8FDB;&#x884C;&#x5206;&#x6790;&#xFF0C;&#x91CD;&#x70B9;&#x662F;&#x786E;&#x8BA4;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x662F;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8981;&#x5148;&#x5206;&#x6E05;&#x695A;&#x5230;&#x5E95;&#x662F;&#x51FA;&#x73B0;&#x4E86;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#xFF08; Memory Leak&#xFF09; &#x8FD8;&#x662F;&#x5185;&#x5B58;&#x6EA2;&#x51FA;&#xFF08; Memory Overflow&#xFF09;&#x3002;</p>
<p>&#x5982;&#x679C;&#x662F;&#x5185;&#x5B58;&#x6CC4;&#x9732;&#xFF0C;&#x53EF;&#x8FDB;&#x4E00;&#x6B65;&#x901A;&#x8FC7;&#x5DE5;&#x5177;&#x67E5;&#x770B;&#x6CC4;&#x9732;&#x5BF9;&#x8C61;&#x5230; GC Roots &#x7684;&#x5F15;&#x7528;&#x94FE;&#x3002;</p>
<p>&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x6CC4;&#x9732;&#xFF0C;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5C31;&#x662F;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x786E;&#x5B9E;&#x90FD;&#x8FD8;&#x5FC5;&#x987B;&#x5B58;&#x6D3B;&#x7740;&#xFF0C;&#x90A3;&#x5C31;&#x5E94;&#x5F53;&#x68C0;&#x67E5;&#x865A;&#x62DF;&#x673A;&#x7684;&#x5806;&#x53C2;&#x6570;&#xFF08;- Xmx &#x4E0E;- Xms&#xFF09;</p>
<ul>
<li>&#x865A;&#x62DF;&#x673A;&#x6808;&#x548C;&#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#x6EA2;&#x51FA;</li>
</ul>
<p>&#x5728; HotSpot &#x865A;&#x62DF;&#x673A;&#x4E2D;&#x5E76;&#x4E0D;&#x533A;&#x5206;&#x865A;&#x62DF;&#x673A;&#x6808;&#x548C;&#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x4E8E; HotSpot &#x6765;&#x8BF4;&#xFF0C;&#x867D;&#x7136;- Xoss &#x53C2;&#x6570;&#xFF08;&#x8BBE;&#x7F6E;&#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#x5927;&#x5C0F;&#xFF09;&#x5B58;&#x5728;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x65E0;&#x6548;&#x7684;&#xFF0C;&#x6808;&#x5BB9;&#x91CF;&#x53EA;&#x7531;- Xss &#x53C2;&#x6570;&#x8BBE;&#x5B9A;&#x3002;</p>
<p>&#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x8BF7;&#x6C42;&#x7684;&#x6808;&#x6DF1;&#x5EA6;&#x5927;&#x4E8E;&#x865A;&#x62DF;&#x673A;&#x6240;&#x5141;&#x8BB8;&#x7684;&#x6700;&#x5927;&#x6DF1;&#x5EA6;&#xFF0C;&#x5C06;&#x629B;&#x51FA; StackOverflowError &#x5F02;&#x5E38;&#x3002;&#x5982;&#x679C;&#x865A;&#x62DF;&#x673A;&#x5728;&#x6269;&#x5C55;&#x6808;&#x65F6;&#x65E0;&#x6CD5;&#x7533;&#x8BF7;&#x5230;&#x8DB3;&#x591F;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x5219;&#x629B;&#x51FA; OutOfMemoryError &#x5F02;&#x5E38;&#x3002;</p>
<p>&#x9650;&#x5236;&#x4E8E;&#x5355;&#x7EBF;&#x7A0B;&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5C1D;&#x8BD5;&#x4E86;&#x4E0B;&#x9762;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x5747;&#x65E0;&#x6CD5;&#x8BA9;&#x865A;&#x62DF;&#x673A;&#x4EA7;&#x751F; OutOfMemoryError &#x5F02;&#x5E38;&#xFF0C;&#x5C1D;&#x8BD5;&#x7684;&#x7ED3;&#x679C;&#x90FD;&#x662F;&#x83B7;&#x5F97; StackOverflowError &#x5F02;&#x5E38;</p>
<p>&#x5728;&#x5355;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E0B;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x7531;&#x4E8E;&#x6808;&#x5E27;&#x592A;&#x5927;&#x8FD8;&#x662F;&#x865A;&#x62DF;&#x673A;&#x6808;&#x5BB9;&#x91CF;&#x592A;&#x5C0F;&#xFF0C;&#x5F53;&#x5185;&#x5B58;&#x65E0;&#x6CD5;&#x5206;&#x914D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x865A;&#x62DF;&#x673A;&#x629B;&#x51FA;&#x7684;&#x90FD;&#x662F; StackOverflowError &#x5F02;&#x5E38;&#x3002;</p>
<p>2GB &#x5185;&#x5B58;&#x5BB9;&#x91CF;&#xFF08; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x9650;&#x5236;&#xFF09;&#x51CF;&#x53BB; Xmx&#xFF08; &#x6700;&#x5927;&#x5806;&#x5BB9;&#x91CF;&#xFF09;&#xFF0C;&#x518D;&#x51CF;&#x53BB; MaxPermSize&#xFF08; &#x6700;&#x5927;&#x65B9;&#x6CD5;&#x533A;&#x5BB9;&#x91CF;&#xFF09;&#xFF0C;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x5668;&#x6D88;&#x8017;&#x5185;&#x5B58;&#x5F88;&#x5C0F;&#xFF0C;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x6389;&#x3002;&#x5982;&#x679C;&#x865A;&#x62DF;&#x673A;&#x8FDB;&#x7A0B;&#x672C;&#x8EAB;&#x8017;&#x8D39;&#x7684;&#x5185;&#x5B58;&#x4E0D;&#x8BA1;&#x7B97;&#x5728;&#x5185;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x5185;&#x5B58;&#x5C31;&#x7531;&#x865A;&#x62DF;&#x673A;&#x6808;&#x548C;&#x672C;&#x5730;&#x65B9;&#x6CD5;&#x6808;&#x201C;&#x74DC;&#x5206;&#x201D;&#x4E86;&#x3002;</p>
<p>&#x5982;&#x679C;&#x662F;&#x5EFA;&#x7ACB;&#x8FC7;&#x591A;&#x7EBF;&#x7A0B;&#x5BFC;&#x81F4;&#x7684;&#x5185;&#x5B58;&#x6EA2;&#x51FA;&#xFF0C;&#x5728;&#x4E0D;&#x80FD;&#x51CF;&#x5C11;&#x7EBF;&#x7A0B;&#x6570;&#x6216;&#x8005;&#x66F4;&#x6362; 64 &#x4F4D;&#x865A;&#x62DF;&#x673A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5C31;&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x51CF;&#x5C11;&#x6700;&#x5927;&#x5806;&#x548C;&#x51CF;&#x5C11;&#x6808;&#x5BB9;&#x91CF;&#x6765;&#x6362;&#x53D6;&#x66F4;&#x591A;&#x7684;&#x7EBF;&#x7A0B;&#x3002;</p>
<ul>
<li>&#x65B9;&#x6CD5;&#x533A;&#x548C;&#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x91CF;&#x6C60;&#x6EA2;&#x51FA;</li>
</ul>
<p>&#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x91CF;&#x6C60;&#x662F;&#x65B9;&#x6CD5;&#x533A;&#x7684;&#x4E00;&#x90E8;&#x5206;</p>
<p>&#x5728; JDK 1.6 &#x53CA;&#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#x4E2D;&#xFF0C;&#x7531;&#x4E8E;&#x5E38;&#x91CF;&#x6C60;&#x5206;&#x914D;&#x5728;&#x6C38;&#x4E45;&#x4EE3;&#x5185;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;- XX: PermSize &#x548C;- XX: MaxPermSize &#x9650;&#x5236;&#x65B9;&#x6CD5;&#x533A;&#x5927;&#x5C0F;&#xFF0C;&#x4ECE;&#x800C;&#x95F4;&#x63A5;&#x9650;&#x5236;&#x5176;&#x4E2D;&#x5E38;&#x91CF;&#x6C60;&#x7684;&#x5BB9;&#x91CF;</p>
<p>&quot; PermGen space&quot;&#xFF0C; &#x8BF4;&#x660E;&#x8FD0;&#x884C;&#x65F6;&#x5E38;&#x91CF;&#x6C60;&#x5C5E;&#x4E8E;&#x65B9;&#x6CD5;&#x533A;&#xFF08; HotSpot &#x865A;&#x62DF;&#x673A;&#x4E2D;&#x7684;&#x6C38;&#x4E45;&#x4EE3;&#xFF09;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002;</p>
<p>&#x800C;&#x4F7F;&#x7528; JDK 1.7 &#x8FD0;&#x884C;&#x8FD9;&#x6BB5;&#x7A0B;&#x5E8F;&#x5C31;&#x4E0D;&#x4F1A;&#x5F97;&#x5230;&#x76F8;&#x540C;&#x7684;&#x7ED3;&#x679C;&#xFF0C; while &#x5FAA;&#x73AF;&#x5C06;&#x4E00;&#x76F4;&#x8FDB;&#x884C;&#x4E0B;&#x53BB;&#x3002;</p>
<p>&#x5728; JDK 1.6 &#x4E2D;&#xFF0C; intern() &#x65B9;&#x6CD5;&#x4F1A;&#x628A;&#x9996;&#x6B21;&#x9047;&#x5230;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5B9E;&#x4F8B;&#x590D;&#x5236;&#x5230;&#x6C38;&#x4E45;&#x4EE3;&#x4E2D;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x4E5F;&#x662F;&#x6C38;&#x4E45;&#x4EE3;&#x4E2D;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5B9E;&#x4F8B;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x800C;&#x7531; StringBuilder &#x521B;&#x5EFA;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x5B9E;&#x4F8B;&#x5728; Java &#x5806;&#x4E0A;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x7136;&#x4E0D;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x5F15;&#x7528;</p>
<p>&#x800C; JDK 1.7&#xFF08; &#x4EE5;&#x53CA;&#x90E8;&#x5206;&#x5176;&#x4ED6;&#x865A;&#x62DF;&#x673A;&#xFF0C;&#x4F8B;&#x5982; JRockit&#xFF09; &#x7684; intern() &#x5B9E;&#x73B0;&#x4E0D;&#x4F1A;&#x518D;&#x590D;&#x5236;&#x5B9E;&#x4F8B;&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x5E38;&#x91CF;&#x6C60;&#x4E2D;&#x8BB0;&#x5F55;&#x9996;&#x6B21;&#x51FA;&#x73B0;&#x7684;&#x5B9E;&#x4F8B;&#x5F15;&#x7528;&#xFF0C;&#x56E0;&#x6B64; intern() &#x8FD4;&#x56DE;&#x7684;&#x5F15;&#x7528;&#x548C;&#x7531; StringBuilder &#x521B;&#x5EFA;&#x7684;&#x90A3;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5B9E;&#x4F8B;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x3002;</p>
<p>&#x65B9;&#x6CD5;&#x533A;&#x7528;&#x4E8E;&#x5B58;&#x653E; Class &#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF0C;&#x5982;&#x7C7B;&#x540D;&#x3001;&#x8BBF;&#x95EE;&#x4FEE;&#x9970;&#x7B26;&#x3001;&#x5E38;&#x91CF;&#x6C60;&#x3001;&#x5B57;&#x6BB5;&#x63CF;&#x8FF0;&#x3001;&#x65B9;&#x6CD5;&#x63CF;&#x8FF0;&#x7B49;&#x3002;</p>
<p>&#x4E00;&#x4E2A;&#x7C7B;&#x8981;&#x88AB;&#x5783;&#x573E;&#x6536;&#x96C6;&#x5668;&#x56DE;&#x6536;&#x6389;&#xFF0C;&#x5224;&#x5B9A;&#x6761;&#x4EF6;&#x662F;&#x6BD4;&#x8F83;&#x82DB;&#x523B;&#x7684;&#x3002;&#x5728;&#x7ECF;&#x5E38;&#x52A8;&#x6001;&#x751F;&#x6210;&#x5927;&#x91CF; Class &#x7684;&#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#x7C7B;&#x7684;&#x56DE;&#x6536;&#x72B6;&#x51B5;&#x3002;</p>
<ul>
<li>&#x672C;&#x673A;&#x76F4;&#x63A5;&#x5185;&#x5B58;&#x6EA2;&#x51FA;&#xFF08;&#x5373;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#xFF09;</li>
</ul>
<p>DirectMemory &#x5BB9;&#x91CF;&#x53EF;&#x901A;&#x8FC7;- XX: MaxDirectMemorySize &#x6307;&#x5B9A;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;&#xFF0C;&#x5219;&#x9ED8;&#x8BA4;&#x4E0E; Java &#x5806;&#x6700;&#x5927;&#x503C;&#xFF08;- Xmx &#x6307;&#x5B9A;&#xFF09;&#x4E00;&#x6837;</p>
<p>&#x5982;&#x679C;&#x8BFB;&#x8005;&#x53D1;&#x73B0; OOM &#x4E4B;&#x540E; Dump &#x6587;&#x4EF6;&#x5F88;&#x5C0F;&#xFF0C;&#x800C;&#x7A0B;&#x5E8F;&#x4E2D;&#x53C8;&#x76F4;&#x63A5;&#x6216;&#x95F4;&#x63A5;&#x4F7F;&#x7528;&#x4E86; NIO&#xFF0C; &#x90A3;&#x5C31;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x68C0;&#x67E5;&#x4E00;&#x4E0B;&#x662F;&#x4E0D;&#x662F;&#x8FD9;&#x65B9;&#x9762;&#x7684;&#x539F;&#x56E0;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://blog.csdn.net/ye1992/article/details/9344807" target="_blank" rel="external">http://blog.csdn.net/ye1992/article/details/9344807</a></li>
<li><a href="http://flychao88.iteye.com/blog/2226205" target="_blank" rel="external">http://flychao88.iteye.com/blog/2226205</a></li>
<li><a href="http://www.itzhai.com/jvm-note-automatic-memory-management-mechanism.html#read-more" target="_blank" rel="external">http://www.itzhai.com/jvm-note-automatic-memory-management-mechanism.html#read-more</a></li>
</ul>
<p><strong>4. &#x4ECB;&#x7ECD; GC &#x548C; GC Root &#x4E0D;&#x6B63;&#x5E38;&#x5F15;&#x7528;</strong></p>
<p>GC(Garbage Collector) roots&#xFF0C;&#x7279;&#x6307;&#x7684;&#x662F;&#x5783;&#x573E;&#x6536;&#x96C6;&#x5668;&#xFF08;Garbage Collector&#xFF09;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;GC&#x4F1A;&#x6536;&#x96C6;&#x90A3;&#x4E9B;&#x4E0D;&#x662F; GC roots &#x96C6;&#x5408;&#x4E14;&#x6CA1;&#x6709;&#x88AB; GC roots &#x5F15;&#x7528;&#xFF08;&#x5373;&#x4E0D;&#x53EF;&#x8FBE;&#x5BF9;&#x8C61;&#xFF09;&#x7684;&#x5BF9;&#x8C61;&#x3002;</p>
<p>GC root &#x96C6;&#x5408;&#x6709;&#x51E0;&#x4E0B;&#x79CD;&#xFF1A;</p>
<ul>
<li>Class - &#x7531;&#x7CFB;&#x7EDF;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;(system class loader)&#x52A0;&#x8F7D;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E9B;&#x7C7B;&#x662F;&#x4E0D;&#x80FD;&#x591F;&#x88AB;&#x56DE;&#x6536;&#x7684;&#xFF0C;&#x4ED6;&#x4EEC;&#x53EF;&#x4EE5;&#x4EE5;&#x9759;&#x6001;&#x5B57;&#x6BB5;&#x7684;&#x65B9;&#x5F0F;&#x4FDD;&#x5B58;&#x6301;&#x6709;&#x5176;&#x5B83;&#x5BF9;&#x8C61;&#x3002;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E00;&#x70B9;&#x5C31;&#x662F;&#xFF0C;&#x901A;&#x8FC7;&#x7528;&#x6237;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x52A0;&#x8F7D;&#x7684;&#x7C7B;&#xFF0C;&#x9664;&#x975E;&#x76F8;&#x5E94;&#x7684; java.lang.Class &#x5B9E;&#x4F8B;&#x4EE5;&#x5176;&#x5B83;&#x7684;&#x67D0;&#x79CD;&#xFF08;&#x6216;&#x591A;&#x79CD;&#xFF09;&#x65B9;&#x5F0F;&#x6210;&#x4E3A; roots&#xFF0C;&#x5426;&#x5219;&#x5B83;&#x4EEC;&#x5E76;&#x4E0D;&#x662F; roots&#xFF0C;.</li>
<li>Thread - &#x6D3B;&#x7740;&#x7684;&#x7EBF;&#x7A0B;</li>
<li>Stack Local - Java &#x65B9;&#x6CD5;&#x7684; local &#x53D8;&#x91CF;&#x6216;&#x53C2;&#x6570;</li>
<li>JNI Local - JNI &#x65B9;&#x6CD5;&#x7684; local &#x53D8;&#x91CF;&#x6216;&#x53C2;&#x6570;</li>
<li>JNI Global - &#x5168;&#x5C40; JNI &#x5F15;&#x7528;</li>
<li>Monitor Used - &#x7528;&#x4E8E;&#x540C;&#x6B65;&#x7684;&#x76D1;&#x63A7;&#x5BF9;&#x8C61;</li>
<li>Held by JVM - &#x7528;&#x4E8E; JVM &#x7279;&#x6B8A;&#x76EE;&#x7684;&#x7531; GC &#x4FDD;&#x7559;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4F46;&#x5B9E;&#x9645;&#x4E0A;&#x8FD9;&#x4E2A;&#x4E0E; JVM &#x7684;&#x5B9E;&#x73B0;&#x662F;&#x6709;&#x5173;&#x7684;&#x3002;&#x53EF;&#x80FD;&#x5DF2;&#x77E5;&#x7684;&#x4E00;&#x4E9B;&#x7C7B;&#x578B;&#x662F;&#xFF1A;&#x7CFB;&#x7EDF;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x3001;&#x4E00;&#x4E9B; JVM &#x77E5;&#x9053;&#x7684;&#x91CD;&#x8981;&#x7684;&#x5F02;&#x5E38;&#x7C7B;&#x3001;&#x4E00;&#x4E9B;&#x7528;&#x4E8E;&#x5904;&#x7406;&#x5F02;&#x5E38;&#x7684;&#x9884;&#x5206;&#x914D;&#x5BF9;&#x8C61;&#x4EE5;&#x53CA;&#x4E00;&#x4E9B;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x7B49;&#x3002;&#x7136;&#x800C;&#xFF0C;JVM &#x5E76;&#x6CA1;&#x6709;&#x4E3A;&#x8FD9;&#x4E9B;&#x5BF9;&#x8C61;&#x63D0;&#x4F9B;&#x5176;&#x5B83;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x56E0;&#x6B64;&#x5C31;&#x53EA;&#x6709;&#x7559;&#x7ED9;&#x5206;&#x6790;&#x5206;&#x5458;&#x53BB;&#x786E;&#x5B9A;&#x54EA;&#x4E9B;&#x662F;&#x5C5E;&#x4E8E;&quot;JVM &#x6301;&#x6709;&quot;&#x7684;&#x4E86;&#x3002;</li>
</ul>
<p><strong>5. &#x81EA;&#x5DF1;&#x4ECE; classload &#x52A0;&#x8F7D;&#x65B9;&#x5F0F;&#xFF0C;&#x52A0;&#x8F7D;&#x673A;&#x5236;&#x8BF4;&#x5F00;&#x53BB;&#xFF0C;&#x4ECE;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x6570;&#x636E;&#x533A;&#xFF0C;&#x8BB2;&#x5230;&#x5185;&#x5B58;&#x5206;&#x914D;&#xFF0C;&#x8BB2;&#x5230; String &#x5E38;&#x91CF;&#x6C60;&#xFF0C;&#x8BB2;&#x5230; JVM &#x5783;&#x573E;&#x56DE;&#x6536;&#x673A;&#x5236;&#xFF0C;&#x7B97;&#x6CD5;&#xFF0C;hotspot&#x3002;</strong></p>
<p><strong>&#xFF08;1&#xFF09;&#x52A0;&#x8F7D;&#x65B9;&#x5F0F;</strong></p>
<ul>
<li>&#x7C7B;&#x7684;&#x52A0;&#x8F7D;&#x539F;&#x7406;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/ityouknow/p/5603287.html" target="_blank" rel="external">http://www.cnblogs.com/ityouknow/p/5603287.html</a></li>
<li>&#x7C7B;&#x7684;&#x52A0;&#x8F7D;&#x673A;&#x5236;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/zhoudaxia/article/details/35824249" target="_blank" rel="external">http://blog.csdn.net/zhoudaxia/article/details/35824249</a></li>
</ul>
<p>&#x5F53;&#x4E00;&#x4E2A; JVM &#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#xFF0C;Java &#x7F3A;&#x7701;&#x5F00;&#x59CB;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x4E09;&#x79CD;&#x7C7B;&#x578B;&#x7C7B;&#x88C5;&#x5165;&#x5668;&#xFF1A;</p>
<ul>
<li>&#x542F;&#x52A8;&#xFF08;Bootstrap&#xFF09;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#xFF1A;&#x5F15;&#x5BFC;&#x7C7B;&#x88C5;&#x5165;&#x5668;&#x662F;&#x7528;&#x672C;&#x5730;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x7684;&#x7C7B;&#x88C5;&#x5165;&#x5668;&#xFF0C;&#x5B83;&#x8D1F;&#x8D23;&#x5C06;  &lt;Java_Runtime_Home&gt;/lib &#x4E0B;&#x9762;&#x7684;&#x6838;&#x5FC3;&#x7C7B;&#x5E93;&#x6216; -Xbootclasspath &#x9009;&#x9879;&#x6307;&#x5B9A;&#x7684; jar &#x5305;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x7531;&#x4E8E;&#x5F15;&#x5BFC;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x6D89;&#x53CA;&#x5230;&#x865A;&#x62DF;&#x673A;&#x672C;&#x5730;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#xFF0C;&#x5F00;&#x53D1;&#x8005;&#x65E0;&#x6CD5;&#x76F4;&#x63A5;&#x83B7;&#x53D6;&#x5230;&#x542F;&#x52A8;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x5141;&#x8BB8;&#x76F4;&#x63A5;&#x901A;&#x8FC7;&#x5F15;&#x7528;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002;</li>
<li>&#x6269;&#x5C55;&#xFF08;Extension&#xFF09;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#xFF1A;&#x6269;&#x5C55;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x662F;&#x7531; Sun &#x7684; ExtClassLoader&#xFF08;sun.misc.Launcher$ExtClassLoader&#xFF09;&#x5B9E;&#x73B0;&#x7684;&#x3002;&#x5B83;&#x8D1F;&#x8D23;&#x5C06;&lt; Java_Runtime_Home &gt;/lib/ext &#x6216;&#x8005;&#x7531;&#x7CFB;&#x7EDF;&#x53D8;&#x91CF; -Djava.ext.dir &#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x4E2D;&#x7684;&#x7C7B;&#x5E93;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x5F00;&#x53D1;&#x8005;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x6807;&#x51C6;&#x6269;&#x5C55;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x3002;</li>
<li>&#x7CFB;&#x7EDF;&#xFF08;System&#xFF09;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#xFF1A;&#x7CFB;&#x7EDF;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x662F;&#x7531; Sun &#x7684; AppClassLoader&#xFF08;sun.misc.Launcher$AppClassLoader&#xFF09;&#x5B9E;&#x73B0;&#x7684;&#x3002;&#x5B83;&#x8D1F;&#x8D23;&#x5C06;&#x7CFB;&#x7EDF;&#x7C7B;&#x8DEF;&#x5F84; java -classpath &#x6216; -Djava.class.path &#x53D8;&#x91CF;&#x6240;&#x6307;&#x7684;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x7C7B;&#x5E93;&#x52A0;&#x8F7D;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#x3002;&#x5F00;&#x53D1;&#x8005;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x3002;</li>
</ul>
<p>&#x9664;&#x4E86;&#x4EE5;&#x4E0A;&#x5217;&#x4E3E;&#x7684;&#x4E09;&#x79CD;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x6BD4;&#x8F83;&#x7279;&#x6B8A;&#x7684;&#x7C7B;&#x578B;&#x5C31;&#x662F;&#x7EBF;&#x7A0B;&#x4E0A;&#x4E0B;&#x6587;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#xFF0C;&#x8FD9;&#x4E2A;&#x5C06;&#x5728;&#x540E;&#x9762;&#x5355;&#x72EC;&#x4ECB;&#x7ECD;&#x3002;</p>
<p>&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x9700;&#x8981;&#x7740;&#x91CD;&#x8BF4;&#x660E;&#x7684;&#x662F;&#xFF0C;JVM &#x5728;&#x52A0;&#x8F7D;&#x7C7B;&#x65F6;&#x9ED8;&#x8BA4;&#x91C7;&#x7528;&#x7684;&#x662F;&#x53CC;&#x4EB2;&#x59D4;&#x6D3E;&#x673A;&#x5236;&#x3002;&#x901A;&#x4FD7;&#x7684;&#x8BB2;&#xFF0C;&#x5C31;&#x662F;&#x67D0;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x5728;&#x63A5;&#x5230;&#x52A0;&#x8F7D;&#x7C7B;&#x7684;&#x8BF7;&#x6C42;&#x65F6;&#xFF0C;&#x9996;&#x5148;&#x5C06;&#x52A0;&#x8F7D;&#x4EFB;&#x52A1;&#x59D4;&#x6258;&#x7ED9;&#x7236;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#xFF0C;&#x4F9D;&#x6B21;&#x9012;&#x5F52;&#xFF0C;&#x5982;&#x679C;&#x7236;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;&#x7C7B;&#x52A0;&#x8F7D;&#x4EFB;&#x52A1;&#xFF0C;&#x5C31;&#x6210;&#x529F;&#x8FD4;&#x56DE;&#xFF1B;&#x53EA;&#x6709;&#x7236;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x65E0;&#x6CD5;&#x5B8C;&#x6210;&#x6B64;&#x52A0;&#x8F7D;&#x4EFB;&#x52A1;&#x65F6;&#xFF0C;&#x624D;&#x81EA;&#x5DF1;&#x53BB;&#x52A0;&#x8F7D;&#x3002;</p>
<p><strong>&#xFF08;2&#xFF09;&#x8FD0;&#x884C;&#x6570;&#x636E;&#x533A;</strong></p>
<p>Java &#x8FD0;&#x884C;&#x6570;&#x636E;&#x533A;&#xFF1A;<a href="https://my.oschina.net/stephenzhang/blog/380106?p=" target="_blank" rel="external">https://my.oschina.net/stephenzhang/blog/380106?p=</a>NaN</p>
<p><strong>&#xFF08;3&#xFF09;String &#x5E38;&#x91CF;&#x6C60;</strong></p>
<p>&#x5728; JAVA &#x4E2D;&#xFF0C;&#x6709;&#x516D;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x65B9;&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x6570;&#x636E;&#xFF1A;</p>
<ul>
<li>&#x5BC4;&#x5B58;&#x5668;&#xFF08;register&#xFF09;&#x3002; &#x8FD9;&#x662F;&#x6700;&#x5FEB;&#x7684;&#x5B58;&#x50A8;&#x533A;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4F4D;&#x4E8E;&#x4E0D;&#x540C;&#x4E8E;&#x5176;&#x4ED6;&#x5B58;&#x50A8;&#x533A;&#x7684;&#x5730;&#x65B9;&#x2014;&#x2014;&#x5904;&#x7406;&#x5668;&#x5185;&#x90E8;&#x3002;&#x4F46;&#x662F;&#x5BC4;&#x5B58;&#x5668;&#x7684;&#x6570;&#x91CF;&#x6781;&#x5176;&#x6709;&#x9650;&#xFF0C;&#x6240;&#x4EE5;&#x5BC4;&#x5B58;&#x5668;&#x7531;&#x7F16;&#x8BD1;&#x5668;&#x6839;&#x636E;&#x9700;&#x6C42;&#x8FDB;&#x884C;&#x5206;&#x914D;&#x3002;&#x4F60;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x63A7;&#x5236;&#xFF0C;&#x4E5F;&#x4E0D;&#x80FD;&#x5728;&#x7A0B;&#x5E8F;&#x4E2D;&#x611F;&#x89C9;&#x5230;&#x5BC4;&#x5B58;&#x5668;&#x5B58;&#x5728;&#x7684;&#x4EFB;&#x4F55;&#x8FF9;&#x8C61;&#x3002;</li>
</ul>
<p>------&#x6700;&#x5FEB;&#x7684;&#x5B58;&#x50A8;&#x533A;, &#x7531;&#x7F16;&#x8BD1;&#x5668;&#x6839;&#x636E;&#x9700;&#x6C42;&#x8FDB;&#x884C;&#x5206;&#x914D;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x7A0B;&#x5E8F;&#x4E2D;&#x65E0;&#x6CD5;&#x63A7;&#x5236;.</p>
<ul>
<li>&#x5806;&#x6808;&#xFF08;stack&#xFF09;&#x3002;&#x4F4D;&#x4E8E;&#x901A;&#x7528; RAM &#x4E2D;&#xFF0C;&#x4F46;&#x901A;&#x8FC7;&#x5B83;&#x7684;&#x201C;&#x5806;&#x6808;&#x6307;&#x9488;&#x201D;&#x53EF;&#x4EE5;&#x4ECE;&#x5904;&#x7406;&#x5668;&#x54EA;&#x91CC;&#x83B7;&#x5F97;&#x652F;&#x6301;&#x3002;&#x5806;&#x6808;&#x6307;&#x9488;&#x82E5;&#x5411;&#x4E0B;&#x79FB;&#x52A8;&#xFF0C;&#x5219;&#x5206;&#x914D;&#x65B0;&#x7684;&#x5185;&#x5B58;&#xFF1B;&#x82E5;&#x5411;&#x4E0A;&#x79FB;&#x52A8;&#xFF0C;&#x5219;&#x91CA;&#x653E;&#x90A3;&#x4E9B; &#x5185;&#x5B58;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x5FEB;&#x901F;&#x6709;&#x6548;&#x7684;&#x5206;&#x914D;&#x5B58;&#x50A8;&#x65B9;&#x6CD5;&#xFF0C;&#x4EC5;&#x6B21;&#x4E8E;&#x5BC4;&#x5B58;&#x5668;&#x3002;&#x521B;&#x5EFA;&#x7A0B;&#x5E8F;&#x65F6;&#x5019;&#xFF0C;JAVA &#x7F16;&#x8BD1;&#x5668;&#x5FC5;&#x987B;&#x77E5;&#x9053;&#x5B58;&#x50A8;&#x5728;&#x5806;&#x6808;&#x5185;&#x6240;&#x6709;&#x6570;&#x636E;&#x7684;&#x786E;&#x5207;&#x5927;&#x5C0F;&#x548C;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5FC5;&#x987B;&#x751F;&#x6210; &#x76F8;&#x5E94;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E0A;&#x4E0B;&#x79FB;&#x52A8;&#x5806;&#x6808;&#x6307;&#x9488;&#x3002;&#x8FD9;&#x4E00;&#x7EA6;&#x675F;&#x9650;&#x5236;&#x4E86;&#x7A0B;&#x5E8F;&#x7684;&#x7075;&#x6D3B;&#x6027;&#xFF0C;&#x6240;&#x4EE5;&#x867D;&#x7136;&#x67D0;&#x4E9B; JAVA &#x6570;&#x636E;&#x5B58;&#x50A8;&#x5728;&#x5806;&#x6808;&#x4E2D;&#x2014;&#x2014;&#x7279;&#x522B;&#x662F;&#x5BF9;&#x8C61;&#x5F15;&#x7528;&#xFF0C;&#x4F46;&#x662F; JAVA &#x5BF9;&#x8C61;&#x4E0D;&#x5B58;&#x50A8;&#x5176; &#x4E2D;&#x3002;</li>
</ul>
<p>------&#x5B58;&#x653E;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x6570;&#x636E;&#x548C;&#x5BF9;&#x8C61;&#xFF0C;&#x6570;&#x7EC4;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x4F46;&#x5BF9;&#x8C61;&#x672C;&#x8EAB;&#x4E0D;&#x5B58;&#x653E;&#x5728;&#x6808;&#x4E2D;&#xFF0C;&#x800C;&#x662F;&#x5B58;&#x653E;&#x5728;&#x5806;&#xFF08;new &#x51FA;&#x6765;&#x7684;&#x5BF9;&#x8C61;&#xFF09;&#x6216;&#x8005;&#x5E38;&#x91CF;&#x6C60;&#x4E2D;&#xFF08;&#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x91CF;&#x5BF9;&#x8C61;&#x5B58;&#x653E;&#x5728;&#x5E38;&#x91CF;&#x6C60;&#x4E2D;&#xFF09;</p>
<ul>
<li>&#x5806;&#xFF08;heap&#xFF09;&#x3002;&#x4E00;&#x79CD;&#x901A;&#x7528;&#x6027;&#x7684;&#x5185;&#x5B58;&#x6C60;&#xFF08;&#x4E5F;&#x5B58;&#x5728;&#x4E8E; RAM &#x4E2D;&#xFF09;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x6240;&#x4EE5;&#x7684; JAVA &#x5BF9;&#x8C61;&#x3002;&#x5806;&#x4E0D;&#x540C;&#x4E8E;&#x5806;&#x6808;&#x7684;&#x597D;&#x5904;&#x662F;&#xFF1A;&#x7F16;&#x8BD1;&#x5668;&#x4E0D;&#x9700;&#x8981;&#x77E5;&#x9053;&#x8981;&#x4ECE;&#x5806;&#x91CC;&#x5206;&#x914D;&#x591A;&#x5C11;&#x5B58;&#x50A8;&#x533A; &#x57DF;&#xFF0C;&#x4E5F;&#x4E0D;&#x5FC5;&#x77E5;&#x9053;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E;&#x5728;&#x5806;&#x91CC;&#x5B58;&#x6D3B;&#x591A;&#x957F;&#x65F6;&#x95F4;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x5806;&#x91CC;&#x5206;&#x914D;&#x5B58;&#x50A8;&#x6709;&#x5F88;&#x5927;&#x7684;&#x7075;&#x6D3B;&#x6027;&#x3002;&#x5F53;&#x4F60;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x9700;&#x8981;new&#x5199;&#x4E00;&#x884C;&#x7B80;&#x5355;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5F53;&#x6267;&#x884C; &#x8FD9;&#x884C;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x5728;&#x5806;&#x91CC;&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x5206;&#x914D;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x4E3A;&#x8FD9;&#x79CD;&#x7075;&#x6D3B;&#x6027;&#x5FC5;&#x987B;&#x8981;&#x4ED8;&#x51FA;&#x76F8;&#x5E94;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x7528;&#x5806;&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x5206;&#x914D;&#x6BD4;&#x7528;&#x5806;&#x6808;&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x5B58;&#x50A8;&#x9700;&#x8981;&#x66F4;&#x591A;&#x7684;&#x65F6;&#x95F4;&#x3002;</li>
</ul>
<p>------&#x5B58;&#x653E;&#x6240;&#x6709;new&#x51FA;&#x6765;&#x7684;&#x5BF9;&#x8C61;&#x3002;</p>
<ul>
<li>&#x9759;&#x6001;&#x5B58;&#x50A8;&#xFF08;static storage&#xFF09;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x201C;&#x9759;&#x6001;&#x201D;&#x662F;&#x6307;&#x201C;&#x5728;&#x56FA;&#x5B9A;&#x7684;&#x4F4D;&#x7F6E;&#x201D;&#x3002;&#x9759;&#x6001;&#x5B58;&#x50A8;&#x91CC;&#x5B58;&#x653E;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x4E00;&#x76F4;&#x5B58;&#x5728;&#x7684;&#x6570;&#x636E;&#x3002;&#x4F60;&#x53EF;&#x7528;&#x5173;&#x952E;&#x5B57; static &#x6765;&#x6807;&#x8BC6;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x7279;&#x5B9A;&#x5143;&#x7D20;&#x662F;&#x9759;&#x6001;&#x7684;&#xFF0C;&#x4F46; JAVA &#x5BF9;&#x8C61;&#x672C;&#x8EAB;&#x4ECE;&#x6765;&#x4E0D;&#x4F1A;&#x5B58;&#x653E;&#x5728;&#x9759;&#x6001;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#x91CC;&#x3002;</li>
</ul>
<p>------&#x5B58;&#x653E;&#x9759;&#x6001;&#x6210;&#x5458;&#xFF08;static &#x5B9A;&#x4E49;&#x7684;&#xFF09;</p>
<ul>
<li>&#x5E38;&#x91CF;&#x5B58;&#x50A8;&#xFF08;constant storage&#xFF09;&#x3002;&#x5E38;&#x91CF;&#x503C;&#x901A;&#x5E38;&#x76F4;&#x63A5;&#x5B58;&#x653E;&#x5728;&#x7A0B;&#x5E8F;&#x4EE3;&#x7801;&#x5185;&#x90E8;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x662F;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x6C38;&#x8FDC;&#x4E0D;&#x4F1A;&#x88AB;&#x6539;&#x53D8;&#x3002;&#x6709;&#x65F6;&#xFF0C;&#x5728;&#x5D4C;&#x5165;&#x5F0F;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x5E38;&#x91CF;&#x672C;&#x8EAB;&#x4F1A;&#x548C;&#x5176;&#x4ED6;&#x90E8;&#x5206;&#x5206;&#x5272;&#x79BB;&#x5F00;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x5C06;&#x5176;&#x653E;&#x5728;ROM&#x4E2D;</li>
</ul>
<p>------&#x5B58;&#x653E;&#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x91CF;&#x548C;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x5E38;&#x91CF;&#xFF08;public static final&#xFF09;</p>
<ul>
<li>&#x975E; RAM &#x5B58;&#x50A8;&#x3002;&#x5982;&#x679C;&#x6570;&#x636E;&#x5B8C;&#x5168;&#x5B58;&#x6D3B;&#x4E8E;&#x7A0B;&#x5E8F;&#x4E4B;&#x5916;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x53EF;&#x4EE5;&#x4E0D;&#x53D7;&#x7A0B;&#x5E8F;&#x7684;&#x4EFB;&#x4F55;&#x63A7;&#x5236;&#xFF0C;&#x5728;&#x7A0B;&#x5E8F;&#x6CA1;&#x6709;&#x8FD0;&#x884C;&#x65F6;&#x4E5F;&#x53EF;&#x4EE5;&#x5B58;&#x5728;&#x3002;</li>
</ul>
<p>------&#x786C;&#x76D8;&#x7B49;&#x6C38;&#x4E45;&#x5B58;&#x50A8;&#x7A7A;&#x95F4; &#x5C31;&#x901F;&#x5EA6;&#x6765;&#x8BF4;&#xFF0C;&#x6709;&#x5982;&#x4E0B;&#x5173;&#x7CFB;&#xFF1A;</p>
<p><strong>&#x5BC4;&#x5B58;&#x5668; &gt;&#x5806;&#x6808; &gt; &#x5806; &gt; &#x5176;&#x5B83;</strong></p>
<p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x5173;&#x5FC3;&#x6808;&#xFF0C;&#x5806;&#x548C;&#x5E38;&#x91CF;&#x6C60;&#xFF0C;&#x5BF9;&#x4E8E;&#x6808;&#x548C;&#x5E38;&#x91CF;&#x6C60;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x53EF;&#x4EE5;&#x5171;&#x4EAB;&#xFF0C;&#x5BF9;&#x4E8E;&#x5806;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x4E0D;&#x53EF;&#x4EE5;&#x5171;&#x4EAB;&#x3002;</p>
<p>&#x6808;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5927;&#x5C0F;&#x548C;&#x751F;&#x547D;&#x5468;&#x671F;&#x662F;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x7684;&#xFF0C;&#x5F53;&#x6CA1;&#x6709;&#x5F15;&#x7528;&#x6307;&#x5411;&#x6570;&#x636E;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x5C31;&#x4F1A;&#x6D88;&#x5931;&#x3002;&#x5806;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x7531;&#x5783;&#x573E;&#x56DE;&#x6536;&#x5668;&#x8D1F;&#x8D23;&#x56DE;&#x6536;&#xFF0C;&#x56E0;&#x6B64;&#x5927;&#x5C0F;&#x548C;&#x751F;&#x547D;&#x5468;&#x671F;&#x4E0D;&#x9700;&#x8981;&#x786E;&#x5B9A;&#xFF0C;&#x5177;&#x6709;&#x5F88;&#x5927;&#x7684;&#x7075;&#x6D3B;&#x6027;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;&#x5B57;&#x7B26;&#x4E32;&#xFF1A;&#x5176;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x90FD;&#x662F;&#x5B58;&#x50A8;&#x5728;&#x6808;&#x4E2D;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x7F16;&#x8BD1;&#x671F;&#x5DF2;&#x7ECF;&#x521B;&#x5EFA;&#x597D;(&#x76F4;&#x63A5;&#x7528;&#x53CC;&#x5F15;&#x53F7;&#x5B9A;&#x4E49;&#x7684;)&#x7684;&#x5C31;&#x5B58;&#x50A8;&#x5728;&#x5E38;&#x91CF;&#x6C60;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x8FD0;&#x884C;&#x671F;&#xFF08;new &#x51FA;&#x6765;&#x7684;&#xFF09;&#x624D;&#x80FD;&#x786E;&#x5B9A;&#x7684;&#x5C31;&#x5B58;&#x50A8;&#x5728;&#x5806;&#x4E2D;&#x3002;&#x5BF9;&#x4E8E; equals &#x76F8;&#x7B49;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5728;&#x5E38;&#x91CF;&#x6C60;&#x4E2D;&#x6C38;&#x8FDC;&#x53EA;&#x6709;&#x4E00;&#x4EFD;&#xFF0C;&#x5728;&#x5806;&#x4E2D;&#x6709;&#x591A;&#x4EFD;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://blog.csdn.net/gaopeng0071/article/details/11741027" target="_blank" rel="external">http://blog.csdn.net/gaopeng0071/article/details/11741027</a></li>
<li><a href="http://www.cnblogs.com/xiohao/p/4296088.html" target="_blank" rel="external">http://www.cnblogs.com/xiohao/p/4296088.html</a></li>
</ul>
<p><strong>&#xFF08;4&#xFF09;HotSpot</strong></p>
<p>HotSpot &#x662F;&#x8F83;&#x65B0;&#x7684; Java &#x865A;&#x62DF;&#x673A;&#xFF0C;&#x7528;&#x6765;&#x4EE3;&#x66FF; JIT(Just in Time)&#xFF0C;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x63D0;&#x9AD8; Java &#x8FD0;&#x884C;&#x7684;&#x6027;&#x80FD;&#x3002;HotSpot &#x5305;&#x62EC;&#x4E00;&#x4E2A;&#x89E3;&#x91CA;&#x5668;&#x548C;&#x4E24;&#x4E2A;&#x7F16;&#x8BD1;&#x5668;&#xFF08;client &#x548C; server&#xFF0C;&#x4E8C;&#x9009;&#x4E00;&#x7684;&#xFF09;&#xFF0C;&#x89E3;&#x91CA;&#x4E0E;&#x7F16;&#x8BD1;&#x6DF7;&#x5408;&#x6267;&#x884C;&#x6A21;&#x5F0F;&#xFF0C;&#x9ED8;&#x8BA4;&#x542F;&#x52A8;&#x89E3;&#x91CA;&#x6267;&#x884C;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/radic_feng/article/details/6929853" target="_blank" rel="external">http://blog.csdn.net/radic_feng/article/details/6929853</a></p>
<p><strong>6. jvm &#x5982;&#x4F55;&#x5206;&#x914D;&#x76F4;&#x63A5;&#x5185;&#x5B58;&#xFF0C; new &#x5BF9;&#x8C61;&#x5982;&#x4F55;&#x4E0D;&#x5206;&#x914D;&#x5728;&#x5806;&#x800C;&#x662F;&#x6808;&#x4E0A;&#xFF0C;&#x5E38;&#x91CF;&#x6C60;&#x89E3;&#x6790;&#x3002;</strong></p>
<p>JVM&#x5185;&#x5B58;&#x5206;&#x914D;&#x8FC7;&#x7A0B;&#xFF1A;</p>
<ul>
<li>1&#x3001;JVM &#x4F1A;&#x8BD5;&#x56FE;&#x4E3A;&#x76F8;&#x5173; Java &#x5BF9;&#x8C61;&#x5728; Eden &#x4E2D;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x5757;&#x5185;&#x5B58;&#x533A;&#x57DF;&#x3002;</li>
<li>2&#x3001;&#x5F53; Eden &#x7A7A;&#x95F4;&#x8DB3;&#x591F;&#x65F6;&#xFF0C;&#x5185;&#x5B58;&#x7533;&#x8BF7;&#x7ED3;&#x675F;&#xFF1B;&#x5426;&#x5219;&#x5230;&#x4E0B;&#x4E00;&#x6B65;&#x3002;</li>
<li>3&#x3001;JVM &#x8BD5;&#x56FE;&#x91CA;&#x653E;&#x5728; Eden &#x4E2D;&#x6240;&#x6709;&#x4E0D;&#x6D3B;&#x8DC3;&#x7684;&#x5BF9;&#x8C61;&#xFF08;&#x8FD9;&#x5C5E;&#x4E8E;1&#x6216;&#x66F4;&#x9AD8;&#x7EA7;&#x7684;&#x5783;&#x573E;&#x56DE;&#x6536;&#xFF09;&#x3002;&#x91CA;&#x653E;&#x540E;&#x82E5; Eden &#x7A7A;&#x95F4;&#x4ECD;&#x7136;&#x4E0D;&#x8DB3;&#x4EE5;&#x653E;&#x5165;&#x65B0;&#x5BF9;&#x8C61;&#xFF0C;&#x5219;&#x8BD5;&#x56FE;&#x5C06;&#x90E8;&#x5206; Eden &#x4E2D;&#x6D3B;&#x8DC3;&#x5BF9;&#x8C61;&#x653E;&#x5165; Survivor &#x533A;&#x3002;</li>
<li>4&#x3001;Survivor &#x533A;&#x88AB;&#x7528;&#x6765;&#x4F5C;&#x4E3A; Eden &#x53CA; Old &#x7684;&#x4E2D;&#x95F4;&#x4EA4;&#x6362;&#x533A;&#x57DF;&#xFF0C;&#x5F53; Old &#x533A;&#x7A7A;&#x95F4;&#x8DB3;&#x591F;&#x65F6;&#xFF0C;Survivor &#x533A;&#x7684;&#x5BF9;&#x8C61;&#x4F1A;&#x88AB;&#x79FB;&#x5230; Old &#x533A;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x88AB;&#x4FDD;&#x7559;&#x5728; Survivor &#x533A;&#x3002;</li>
<li>5&#x3001;&#x5F53; Old &#x533A;&#x7A7A;&#x95F4;&#x4E0D;&#x591F;&#x65F6;&#xFF0C;JVM &#x4F1A;&#x5728; Old &#x533A;&#x8FDB;&#x884C;&#x5B8C;&#x5168;&#x7684;&#x5783;&#x573E;&#x6536;&#x96C6;&#xFF08;0&#x7EA7;&#xFF09;&#x3002;</li>
<li>6&#x3001;&#x5B8C;&#x5168;&#x5783;&#x573E;&#x6536;&#x96C6;&#x540E;&#xFF0C;&#x82E5; Survivor &#x53CA; Old &#x533A;&#x4ECD;&#x7136;&#x65E0;&#x6CD5;&#x5B58;&#x653E;&#x4ECE; Eden &#x590D;&#x5236;&#x8FC7;&#x6765;&#x7684;&#x90E8;&#x5206;&#x5BF9;&#x8C61;&#xFF0C;&#x5BFC;&#x81F4; JVM &#x65E0;&#x6CD5;&#x5728; Eden &#x533A;&#x4E3A;&#x65B0;&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x5185;&#x5B58;&#x533A;&#x57DF;&#xFF0C;&#x5219;&#x51FA;&#x73B0; &#x201D;out of memory&#x201D; &#x9519;&#x8BEF;&#x3002;</li>
</ul>
<p>new &#x5BF9;&#x8C61;&#x5982;&#x4F55;&#x4E0D;&#x5206;&#x914D;&#x5728;&#x5806;&#x800C;&#x662F;&#x6808;&#x4E0A;&#xFF1A;</p>
<ul>
<li>&#x6808;&#xFF08;stack&#xFF09;&#xFF1A;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3001;&#x58F0;&#x660E;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x540D;&#x3001;&#x6570;&#x7EC4;&#x7684;&#x5F15;&#x7528;&#x540D;&#xFF0C;&#x5B9A;&#x4E49;&#x7684;&#x7C7B;&#x65B9;&#x6CD5;&#x4E2D;&#x7684;&#x53C2;&#x6570;&#x4EE5;&#x53CA;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3002;&#x5B58;&#x653E;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x6570;&#x636E;&#x548C;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x4F46;&#x5BF9;&#x8C61;&#x672C;&#x8EAB;&#x4E0D;&#x5B58;&#x653E;&#x5728;&#x6808;&#x4E2D;&#xFF0C;&#x800C;&#x662F;&#x5B58;&#x653E;&#x5728;&#x5806;&#xFF08;new &#x51FA;&#x6765;&#x7684;&#x5BF9;&#x8C61;&#xFF09;&#x6216;&#x8005;&#x5E38;&#x91CF;&#x6C60;&#x4E2D;&#xFF08;&#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x91CF;&#x5BF9;&#x8C61;&#x5B58;&#x653E;&#x5728;&#x5E38;&#x91CF;&#x6C60;&#x4E2D;&#x3002;&#xFF09;</li>
<li>&#x5806;&#xFF08;heap&#xFF09;&#xFF1A;new &#x51FA;&#x6765;&#x7684;&#x201C;&#x4E1C;&#x897F;&#x201D;&#xFF08;&#x5982;&#xFF1A;&#x5BF9;&#x8C61;&#x7684;&#x5B9E;&#x4F53;&#xFF0C;&#x6570;&#x7EC4;&#x7684;&#x5B9E;&#x4F53;&#xFF09;&#xFF0C;&#x542B;&#x6210;&#x5458;&#x53D8;&#x91CF;(&#x5373;&#x6240;&#x8C13;&#x7684;&#x5168;&#x5C40;&#x53D8;&#x91CF;)</li>
<li>&#x7D27;&#x63A5;&#x7740;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x8981;&#x4E0E;&#x5BF9;&#x8C61;&#x7684;&#x5B9E;&#x4F53;&#x8FDB;&#x884C;&#x5173;&#x8054;&#xFF1A;&#x6808;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x5F15;&#x7528;&#x4E2D;&#x4FDD;&#x5B58;&#x4E86;&#x5806;&#x4E2D;&#x7684;&#x5B9E;&#x4F53;&#x7684;&#x9996;&#x5730;&#x5740;&#xFF0C;&#x56E0;&#x800C;&#x624D;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x7F16;&#x8BD1;&#x3001;&#x8FD0;&#x884C;&#x3002;</li>
</ul>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x9003;&#x9038;&#x5206;&#x6790;&#x4F18;&#x5316;&#x7684;&#x601D;&#x8DEF;&#x6765;&#x521B;&#x5EFA;&#x76F8;&#x5E94;&#x7684;&#x5BF9;&#x8C61;&#x3002;</p>
<p>&#x9003;&#x9038;&#x5206;&#x6790;&#x7684;&#x57FA;&#x672C;&#x884C;&#x4E3A;&#x5C31;&#x662F;&#x5206;&#x6790;&#x5BF9;&#x8C61;&#x52A8;&#x6001;&#x4F5C;&#x7528;&#x57DF;&#xFF1A;&#x5F53;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x5728;&#x65B9;&#x6CD5;&#x4E2D;&#x88AB;&#x5B9A;&#x4E49;&#x540E;&#xFF0C;&#x5B83;&#x53EF;&#x80FD;&#x88AB;&#x5916;&#x90E8;&#x65B9;&#x6CD5;&#x6240;&#x5F15;&#x7528;&#xFF0C;&#x4F8B;&#x5982;&#x4F5C;&#x4E3A;&#x8C03;&#x7528;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x5230;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x4E2D;&#xFF0C;&#x79F0;&#x4E3A;&#x65B9;&#x6CD5;&#x9003;&#x9038;&#x3002;</p>
<p>&#x6808;&#x4E0A;&#x5206;&#x914D;&#x3002;&#x6211;&#x4EEC;&#x90FD;&#x77E5;&#x9053; Java &#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#x90FD;&#x662F;&#x5728;&#x5806;&#x4E0A;&#x5206;&#x914D;&#x7684;&#xFF0C;&#x800C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x673A;&#x5236;&#x4F1A;&#x56DE;&#x6536;&#x5806;&#x4E2D;&#x4E0D;&#x518D;&#x4F7F;&#x7528;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4F46;&#x662F;&#x7B5B;&#x9009;&#x53EF;&#x56DE;&#x6536;&#x5BF9;&#x8C61;&#xFF0C;&#x56DE;&#x6536;&#x5BF9;&#x8C61;&#x8FD8;&#x6709;&#x6574;&#x7406;&#x5185;&#x5B58;&#x90FD;&#x9700;&#x8981;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x3002;&#x5982;&#x679C;&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x9003;&#x9038;&#x5206;&#x6790;&#x786E;&#x5B9A;&#x67D0;&#x4E9B;&#x5BF9;&#x8C61;&#x4E0D;&#x4F1A;&#x9003;&#x51FA;&#x65B9;&#x6CD5;&#x4E4B;&#x5916;&#xFF0C;&#x90A3;&#x5C31;&#x53EF;&#x4EE5;&#x8BA9;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x5728;&#x6808;&#x4E0A;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x8FD9;&#x6837;&#x8BE5;&#x5BF9;&#x8C61;&#x6240;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x5C31;&#x53EF;&#x4EE5;&#x968F;&#x6808;&#x5E27;&#x51FA;&#x6808;&#x800C;&#x9500;&#x6BC1;&#xFF0C;&#x5C31;&#x51CF;&#x8F7B;&#x4E86;&#x5783;&#x573E;&#x56DE;&#x6536;&#x7684;&#x538B;&#x529B;&#x3002;</p>
<p>&#x4F8B;&#x5B50;&#xFF1A;</p>
<pre><code>class Main {   
  public static void main(String[] args) {     
    example();   
}   
  public static void example() {     
    Foo foo = new Foo(); //alloc     
    Bar bar = new Bar(); //alloc     
    bar.setFoo(foo);   
}}  
class Foo {}  
class Bar {   
  private Foo foo;   
  public void setFoo(Foo foo) {     
    this.foo = foo;   
  }
}
</code></pre>
<p>&#x5728;&#x8FD9;&#x4E2A;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x521B;&#x5EFA;&#x4E86;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;(&#x7528;alloc&#x6CE8;&#x91CA;)&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x4F5C;&#x4E3A;&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570;&#x3002;&#x65B9;&#x6CD5;setFoo()&#x63A5;&#x6536;&#x5230;foo&#x53C2;&#x6570;&#x540E;&#xFF0C;&#x4FDD;&#x5B58;Foo&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x3002;&#x5982;&#x679C;Bar&#x5BF9;&#x8C61;&#x4FDD;&#x5B58;&#x5728;&#x5806;&#x4E2D;&#xFF0C;&#x90A3;&#x4E48;Foo&#x7684;&#x5F15;&#x7528;&#x5C06;&#x9003;&#x9038;&#x3002;&#x4F46;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9003;&#x9038;&#x5206;&#x6790;&#x786E;&#x5B9A;Bar&#x5BF9;&#x8C61;&#x672C;&#x8EAB;&#x5E76;&#x6CA1;&#x6709;&#x9003;&#x9038;example()&#x7684;&#x8C03;&#x7528;&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;Foo&#x5F15;&#x7528;&#x65E0;&#x6CD5;&#x9003;&#x9038;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x4EE5;&#x5B89;&#x5168;&#x5730;&#x5728;&#x6808;&#x4E0A;&#x5206;&#x914D;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x3002;</p>
<p><strong>7. &#x6570;&#x7EC4;&#x591A;&#x5927;&#x653E;&#x5728;JVM&#x8001;&#x5E74;&#x4EE3;</strong></p>
<p>&#x81F3;&#x4E8E;&#x591A;&#x5927;&#x653E;&#x5165;&#x8001;&#x5E74;&#x4EE3;&#xFF0C;&#x6709;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#xFF0C;&#x6B63;&#x5E38;&#x662F;&#x5982;&#x679C;&#x5E74;&#x8F7B;&#x5316;&#x653E;&#x4E0D;&#x4E0B;&#xFF0C;&#x76F4;&#x5230;&#x653E;&#x8001;&#x5E74;&#x4EE3;</p>
<p><strong>8. &#x8001;&#x5E74;&#x4EE3;&#x4E2D;&#x6570;&#x7EC4;&#x7684;&#x8BBF;&#x95EE;&#x65B9;&#x5F0F;</strong></p>
<p>&#x6570;&#x7EC4;&#x8BBF;&#x95EE;&#x65B9;&#x5F0F;&#x548C;&#x5BF9;&#x8C61;&#x8BBF;&#x95EE;&#x4E00;&#x6837;</p>
<p><strong>9. GC &#x7B97;&#x6CD5;&#xFF0C;&#x6C38;&#x4E45;&#x4EE3;&#x5BF9;&#x8C61;&#x5982;&#x4F55; GC &#xFF0C; GC &#x6709;&#x73AF;&#x600E;&#x4E48;&#x5904;&#x7406;&#x3002;</strong></p>
<p>&#x4E00;&#x822C;&#x7684;&#x5224;&#x65AD;&#x5BF9;&#x8C61;&#x53EF;&#x56DE;&#x6536;&#x6709;2&#x79CD;&#x7B97;&#x6CD5;&#xFF0C;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x8BA1;&#x6570;&#x7B97;&#x6CD5;&#xFF0C;java&#x662F;&#x53EF;&#x8FBE;&#x6027;&#x5206;&#x6790;&#x7B97;&#x6CD5;&#xFF0C;&#x89E3;&#x51B3;&#x73AF;&#x7684;&#x95EE;&#x9898;</p>
<p>&#x6C38;&#x4E45;&#x4EE3;GC&#x7684;&#x539F;&#x56E0;&#xFF1A;</p>
<ul>
<li>&#x6C38;&#x4E45;&#x4EE3;&#x7A7A;&#x95F4;&#x5DF2;&#x7ECF;&#x6EE1;&#x4E86;</li>
<li>&#x8C03;&#x7528;&#x4E86;System.gc()</li>
</ul>
<p>&#x6CE8;&#x610F;&#xFF1A; &#x8FD9;&#x79CD;GC&#x662F;full GC &#x5806;&#x7A7A;&#x95F4;&#x4E5F;&#x4F1A;&#x4E00;&#x5E76;&#x88AB;GC&#x4E00;&#x6B21;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/u010833547/article/details/52780438" target="_blank" rel="external">http://blog.csdn.net/u010833547/article/details/52780438</a></p>
<p><strong>10. &#x8C01;&#x4F1A;&#x88AB; GC &#xFF0C;&#x4EC0;&#x4E48;&#x65F6;&#x5019; GC&#x3002;</strong></p>
<p>&#x603B;&#x4F53;&#x6765;&#x8BF4;&#x662F;&#x5185;&#x5B58;&#x4F7F;&#x7528;&#x7D27;&#x5F20;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x8FDB;&#x884C;GC&#xFF0C;&#x5373;&#x65B0;&#x5BF9;&#x8C61;&#x6240;&#x9700;&#x5185;&#x5B58;&#x6BD4;&#x5269;&#x4E0B;&#x7684;&#x5185;&#x5B58;&#x5927;&#x65F6;&#x53D1;&#x751F;&#x3002;</p>
<ul>
<li>young GC&#xFF1A;&#x5F53;young gen&#x4E2D;&#x7684;eden&#x533A;&#x5206;&#x914D;&#x6EE1;&#x7684;&#x65F6;&#x5019;&#x89E6;&#x53D1;&#x3002;&#x6CE8;&#x610F;young GC&#x4E2D;&#x6709;&#x90E8;&#x5206;&#x5B58;&#x6D3B;&#x5BF9;&#x8C61;&#x4F1A;&#x664B;&#x5347;&#x5230;old gen&#xFF0C;&#x6240;&#x4EE5;young GC&#x540E;old gen&#x7684;&#x5360;&#x7528;&#x91CF;&#x901A;&#x5E38;&#x4F1A;&#x6709;&#x6240;&#x5347;&#x9AD8;&#x3002;</li>
<li>full GC&#xFF1A;&#x5F53;&#x51C6;&#x5907;&#x8981;&#x89E6;&#x53D1;&#x4E00;&#x6B21;young GC&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x7EDF;&#x8BA1;&#x6570;&#x636E;&#x8BF4;&#x4E4B;&#x524D;young GC&#x7684;&#x5E73;&#x5747;&#x664B;&#x5347;&#x5927;&#x5C0F;&#x6BD4;&#x76EE;&#x524D;old gen&#x5269;&#x4F59;&#x7684;&#x7A7A;&#x95F4;&#x5927;&#xFF0C;&#x5219;&#x4E0D;&#x4F1A;&#x89E6;&#x53D1;young GC&#x800C;&#x662F;&#x8F6C;&#x4E3A;&#x89E6;&#x53D1;full GC&#xFF08;&#x56E0;&#x4E3A;HotSpot VM&#x7684;GC&#x91CC;&#xFF0C;&#x9664;&#x4E86;CMS&#x7684;concurrent collection&#x4E4B;&#x5916;&#xFF0C;&#x5176;&#x5B83;&#x80FD;&#x6536;&#x96C6;old gen&#x7684;GC&#x90FD;&#x4F1A;&#x540C;&#x65F6;&#x6536;&#x96C6;&#x6574;&#x4E2A;GC&#x5806;&#xFF0C;&#x5305;&#x62EC;young gen&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x9700;&#x8981;&#x4E8B;&#x5148;&#x89E6;&#x53D1;&#x4E00;&#x6B21;&#x5355;&#x72EC;&#x7684;young GC&#xFF09;&#xFF1B;&#x6216;&#x8005;&#xFF0C;&#x5982;&#x679C;&#x6709;perm gen&#x7684;&#x8BDD;&#xFF0C;&#x8981;&#x5728;perm gen&#x5206;&#x914D;&#x7A7A;&#x95F4;&#x4F46;&#x5DF2;&#x7ECF;&#x6CA1;&#x6709;&#x8DB3;&#x591F;&#x7A7A;&#x95F4;&#x65F6;&#xFF0C;&#x4E5F;&#x8981;&#x89E6;&#x53D1;&#x4E00;&#x6B21;full GC&#xFF1B;&#x6216;&#x8005;System.gc()&#x3001;heap dump&#x5E26;GC&#xFF0C;&#x9ED8;&#x8BA4;&#x4E5F;&#x662F;&#x89E6;&#x53D1;full GC&#x3002;</li>
</ul>
<p>&#x5E76;&#x53D1;GC&#x7684;&#x89E6;&#x53D1;&#x6761;&#x4EF6;&#x5C31;&#x4E0D;&#x592A;&#x4E00;&#x6837;&#x3002;&#x4EE5;CMS GC&#x4E3A;&#x4F8B;&#xFF0C;&#x5B83;&#x4E3B;&#x8981;&#x662F;&#x5B9A;&#x65F6;&#x53BB;&#x68C0;&#x67E5;old gen&#x7684;&#x4F7F;&#x7528;&#x91CF;&#xFF0C;&#x5F53;&#x4F7F;&#x7528;&#x91CF;&#x8D85;&#x8FC7;&#x4E86;&#x89E6;&#x53D1;&#x6BD4;&#x4F8B;&#x5C31;&#x4F1A;&#x542F;&#x52A8;&#x4E00;&#x6B21;CMS GC&#xFF0C;&#x5BF9;old gen&#x505A;&#x5E76;&#x53D1;&#x6536;&#x96C6;&#x3002;</p>
<p><strong>11. &#x5982;&#x679C;&#x60F3;&#x4E0D;&#x88AB; GC &#x600E;&#x4E48;&#x529E;</strong></p>
<p>&#x53EA;&#x8981;&#x5B58;&#x5728;&#x67D0;&#x5BF9;&#x8C61;&#x7684;&#x5F3A;&#x5F15;&#x7528;&#xFF0C;&#x5C31;&#x4E0D;&#x4F1A;GC&#x56DE;&#x6536;&#x3002;</p>
<p><strong>12. &#x5982;&#x679C;&#x60F3;&#x5728; GC &#x4E2D;&#x751F;&#x5B58; 1 &#x6B21;&#x600E;&#x4E48;&#x529E;</strong></p>
<p>&#x751F;&#x5B58;&#x4E00;&#x6B21;&#xFF0C;&#x91CA;&#x653E;&#x6389;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x5BF9;&#x8C61;&#x7684; finalize &#x65B9;&#x6CD5;&#x4E2D;&#x91CD;&#x65B0;&#x5EFA;&#x7ACB;&#x5F15;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x6B64;&#x65B9;&#x6CD5;&#x53EA;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#xFF0C;&#x6240;&#x4EE5;&#x80FD;&#x5728;GC&#x4E2D;&#x751F;&#x5B58; &#x4E00;&#x6B21;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/u010833547/article/details/52780468" target="_blank" rel="external">http://blog.csdn.net/u010833547/article/details/52780468</a></p>
<h2 id="&#x5F00;&#x6E90;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x5F00;&#x6E90;&#x6846;&#x67B6;"></a>&#x5F00;&#x6E90;&#x6846;&#x67B6;</h2>
<p><strong>1. hibernate &#x548C; ibatis &#x7684;&#x533A;&#x522B;</strong></p>
<ul>
<li>Hibernate &#x7684;&#x7279;&#x70B9;&#xFF1A;Hibernate &#x529F;&#x80FD;&#x5F3A;&#x5927;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x65E0;&#x5173;&#x6027;&#x597D;&#xFF0C;O/R &#x6620;&#x5C04;&#x80FD;&#x529B;&#x5F3A;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x5BF9; Hibernate &#x76F8;&#x5F53;&#x7CBE;&#x901A;&#xFF0C;&#x800C;&#x4E14;&#x5BF9; Hibernate &#x8FDB;&#x884C;&#x4E86;&#x9002;&#x5F53;&#x7684;&#x5C01;&#x88C5;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x6574;&#x4E2A;&#x6301;&#x4E45;&#x5C42;&#x4EE3;&#x7801;&#x4F1A;&#x76F8;&#x5F53;&#x7B80;&#x5355;&#xFF0C;&#x9700;&#x8981;&#x5199;&#x7684;&#x4EE3;&#x7801;&#x5F88;&#x5C11;&#xFF0C;&#x5F00;&#x53D1;&#x901F;&#x5EA6;&#x5F88;&#x5FEB;&#xFF0C;&#x975E;&#x5E38;&#x723D;&#x3002;</li>
<li>iBATIS &#x7684;&#x7279;&#x70B9;&#xFF1A; iBATIS &#x5165;&#x95E8;&#x7B80;&#x5355;&#xFF0C;&#x5373;&#x5B66;&#x5373;&#x7528;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x7684;&#x81EA;&#x52A8;&#x5BF9;&#x8C61;&#x7ED1;&#x5B9A;&#x529F;&#x80FD;&#xFF0C;&#x800C;&#x4E14;&#x5EF6;&#x7EED;&#x4E86;&#x5F88;&#x597D;&#x7684; SQL &#x4F7F;&#x7528;&#x7ECF;&#x9A8C;&#xFF0C;&#x5BF9;&#x4E8E;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x9AD8;&#x7684;&#x5BF9;&#x8C61;&#x6A21;&#x578B;&#x8981;&#x6C42;&#x7684;&#x9879;&#x76EE;&#x6765;&#x8BF4;&#xFF0C;&#x76F8;&#x5F53;&#x5B8C;&#x7F8E;&#x3002;</li>
</ul>
<p>hibernate &#x4E0E; ibatis &#x7684;&#x5BF9;&#x6BD4;&#xFF1A;</p>
<ul>
<li>ibatis &#x975E;&#x5E38;&#x7B80;&#x5355;&#x6613;&#x5B66;&#xFF0C;hibernate &#x76F8;&#x5BF9;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x95E8;&#x69DB;&#x8F83;&#x9AD8;&#x3002;</li>
<li>&#x4E8C;&#x8005;&#x90FD;&#x662F;&#x6BD4;&#x8F83;&#x4F18;&#x79C0;&#x7684;&#x5F00;&#x6E90;&#x4EA7;&#x54C1;</li>
<li>&#x5F53;&#x7CFB;&#x7EDF;&#x5C5E;&#x4E8E;&#x4E8C;&#x6B21;&#x5F00;&#x53D1;,&#x65E0;&#x6CD5;&#x5BF9;&#x6570;&#x636E;&#x5E93;&#x7ED3;&#x6784;&#x505A;&#x5230;&#x63A7;&#x5236;&#x548C;&#x4FEE;&#x6539;,&#x90A3; ibatis &#x7684;&#x7075;&#x6D3B;&#x6027;&#x5C06;&#x6BD4; hibernate &#x66F4;&#x9002;&#x5408;</li>
<li>&#x7CFB;&#x7EDF;&#x6570;&#x636E;&#x5904;&#x7406;&#x91CF;&#x5DE8;&#x5927;&#xFF0C;&#x6027;&#x80FD;&#x8981;&#x6C42;&#x6781;&#x4E3A;&#x82DB;&#x523B;&#xFF0C;&#x8FD9;&#x5F80;&#x5F80;&#x610F;&#x5473;&#x7740;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x901A;&#x8FC7;&#x7ECF;&#x8FC7;&#x9AD8;&#x5EA6;&#x4F18;&#x5316;&#x7684; sql &#x8BED;&#x53E5;&#xFF08;&#x6216;&#x5B58;&#x50A8;&#x8FC7;&#x7A0B;&#xFF09;&#x624D;&#x80FD;&#x8FBE;&#x5230;&#x7CFB;&#x7EDF;&#x6027;&#x80FD;&#x8BBE;&#x8BA1;&#x6307;&#x6807;&#x3002;&#x5728;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;ibatis&#x4F1A;&#x6709;&#x66F4;&#x597D;&#x7684;&#x53EF;&#x63A7;&#x6027;&#x548C;&#x8868;&#x73B0;&#x3002;</li>
<li>ibatis &#x9700;&#x8981;&#x624B;&#x5199; sql &#x8BED;&#x53E5;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x4E00;&#x90E8;&#x5206;&#xFF0C;hibernate &#x5219;&#x57FA;&#x672C;&#x4E0A;&#x53EF;&#x4EE5;&#x81EA;&#x52A8;&#x751F;&#x6210;&#xFF0C;&#x5076;&#x5C14;&#x4F1A;&#x5199;&#x4E00;&#x4E9B; hql&#x3002;&#x540C;&#x6837;&#x7684;&#x9700;&#x6C42;, ibatis &#x7684;&#x5DE5;&#x4F5C;&#x91CF;&#x6BD4; hibernate &#x8981;&#x5927;&#x5F88;&#x591A;&#x3002;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6D89;&#x53CA;&#x5230;&#x6570;&#x636E;&#x5E93;&#x5B57;&#x6BB5;&#x7684;&#x4FEE;&#x6539;&#xFF0C;hibernate &#x4FEE;&#x6539;&#x7684;&#x5730;&#x65B9;&#x5F88;&#x5C11;&#xFF0C;&#x800C; ibatis &#x8981;&#x628A;&#x90A3;&#x4E9B; sql mapping &#x7684;&#x5730;&#x65B9;&#x4E00;&#x4E00;&#x4FEE;&#x6539;&#x3002;</li>
<li>&#x4EE5;&#x6570;&#x636E;&#x5E93;&#x5B57;&#x6BB5;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x6620;&#x5C04;&#x5F97;&#x5230;&#x7684; po &#x548C; hibernte &#x8FD9;&#x79CD;&#x5BF9;&#x8C61;&#x5316;&#x6620;&#x5C04;&#x5F97;&#x5230;&#x7684;po&#x662F;&#x622A;&#x7136;&#x4E0D;&#x540C;&#x7684;&#xFF0C;&#x672C;&#x8D28;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x8FD9;&#x79CD; po &#x662F;&#x6241;&#x5E73;&#x5316;&#x7684;&#xFF0C;&#x4E0D;&#x50CF; hibernate &#x6620;&#x5C04;&#x7684; po &#x662F;&#x53EF;&#x4EE5;&#x8868;&#x8FBE;&#x7ACB;&#x4F53;&#x7684;&#x5BF9;&#x8C61;&#x7EE7;&#x627F;&#xFF0C;&#x805A;&#x5408;&#x7B49;&#x7B49;&#x5173;&#x7CFB;&#x7684;&#xFF0C;&#x8FD9;&#x5C06;&#x4F1A;&#x76F4;&#x63A5;&#x5F71;&#x54CD;&#x5230;&#x4F60;&#x7684;&#x6574;&#x4E2A;&#x8F6F;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x8BBE;&#x8BA1;&#x601D;&#x8DEF;&#x3002;</li>
<li>hibernate &#x73B0;&#x5728;&#x5DF2;&#x7ECF;&#x662F;&#x4E3B;&#x6D41; o/r mapping &#x6846;&#x67B6;&#xFF0C;&#x4ECE;&#x6587;&#x6863;&#x7684;&#x4E30;&#x5BCC;&#x6027;&#xFF0C;&#x4EA7;&#x54C1;&#x7684;&#x5B8C;&#x5584;&#x6027;&#xFF0C;&#x7248;&#x672C;&#x7684;&#x5F00;&#x53D1;&#x901F;&#x5EA6;&#x90FD;&#x8981;&#x5F3A;&#x4E8E; ibatis&#x3002;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/xlgen157387/article/details/44488833" target="_blank" rel="external">http://blog.csdn.net/xlgen157387/article/details/44488833</a></p>
<p><strong>2. &#x8BB2;&#x8BB2; mybatis &#x7684;&#x8FDE;&#x63A5;&#x6C60;</strong></p>
<p>&#x5148;&#x603B;&#x7ED3;&#x4E00;&#x4E2A;&#x539F;&#x5219;&#xFF1A;mytatis &#x7684;&#x8FDE;&#x63A5;&#x6C60;&#x6700;&#x5927;&#x503C; poolMaximumActiveConnections &#x5C3D;&#x91CF;&#x8DDF;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5E76;&#x53D1;&#x8BBF;&#x95EE;&#x91CF;&#x6301;&#x5E73;&#x4EE5;&#x81F3;&#x4E8E;&#x5927;&#x4E8E;&#x5E76;&#x53D1;&#x8BBF;&#x95EE;&#x91CF;&#x3002;</p>
<p>&#x539F;&#x56E0;&#xFF1A;&#x5728; org.apache.ibatis.datasource.pooled.PooledDataSource &#x4E2D;&#xFF0C;popConnection &#x51FD;&#x6570;&#xFF08;&#x83B7;&#x53D6;&#x8FDE;&#x63A5;&#xFF09;&#x4F1A;&#x9501;&#x4F4F;&#x4E00;&#x4E2A; PoolState &#x5BF9;&#x8C61;&#xFF0C;pushConnection &#x51FD;&#x6570;&#xFF08;&#x628A;&#x8FDE;&#x63A5;&#x56DE;&#x6536;&#x5230;&#x6C60;&#x4E2D;&#xFF0C;&#x5728;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x8C03;&#x7528; PooledConnection &#x7684; invoke &#x51FD;&#x6570;&lt;&#x4F7F;&#x7528;&#x7684;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#xFF0C;invoke &#x662F;&#x4E00;&#x4E2A;&#x56DE;&#x8C03;&#x51FD;&#x6570;&gt;&#xFF0C;&#x89E6;&#x53D1; close &#x51FD;&#x6570;&#x65F6;&#x8C03;&#x7528;&#xFF09;&#x4E5F;&#x4F1A;&#x9501;&#x4F4F;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x3002;</p>
<p>&#x5728; popConnection &#x7684;&#x65F6;&#x5019;&#xFF1A;</p>
<ul>
<li>&#x5982;&#x679C;&#x6C60;&#x4E2D;&#x6709; idle &#x7684;&#xFF0C;&#x8FD4;&#x56DE;&#x4E4B;</li>
<li>&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x5E76;&#x4E14;&#x6C60;&#x4E2D;&#x7684; active &#x8FDE;&#x63A5;&#x6570;&#x5C0F;&#x4E8E;&#x914D;&#x7F6E;&#x7684;&#x6700;&#x5927;&#x8FDE;&#x63A5;&#x6570;&#xFF0C;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#x8FD4;&#x56DE;</li>
<li>&#x5982;&#x679C;&#x6CA1;&#x6709; idle &#x5E76;&#x4E14;&#x8FDE;&#x63A5;&#x6570;&#x5DF2;&#x7ECF;&#x521B;&#x5EFA;&#x5230;&#x6700;&#x5927;&#xFF0C;&#x5C31;&#x4E0D;&#x521B;&#x5EFA;&#x65B0;&#x8FDE;&#x63A5;&#x3002;&#x4ECE; acitve connection &#x5217;&#x8868;&#x4E2D;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6700;&#x8001;&#x7684;&#x503C; state.activeConnections.get(0)&#xFF0C;&#x770B;&#x8FD9;&#x4E2A;&#x8FDE;&#x63A5;&#x88AB;&#x53D6;&#x51FA;&#x7684;&#x65F6;&#x95F4;&#xFF08;check out&#x65F6;&#x95F4;&#xFF0C;&#x8868;&#x793A;&#x4ECE;&#x8FDE;&#x63A5;&#x5F00;&#x59CB;&#x4F7F;&#x7528;&#x5230;&#x76EE;&#x524D;&#x8FD8;&#x672A; close&#xFF09;&#x662F;&#x4E0D;&#x662F;&#x8D85;&#x8FC7; poolMaximumCheckoutTime&#xFF08;&#x914D;&#x7F6E;&#x9879;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;20&#x79D2;&#xFF09;&#xFF0C;&#x5982;&#x679C;&#x8D85;&#x8FC7;&#xFF0C;&#x4F7F;&#x8FD9;&#x4E2A;&#x8FDE;&#x63A5;&#x5931;&#x6548;&#xFF0C;&#x5E76;&#x4E14;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x8FDE;&#x63A5;&#x8FD4;&#x56DE;&#x505A;&#x4E0B;&#x4E00;&#x4E2A;&#x64CD;&#x4F5C;</li>
<li>&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x8FDE;&#x63A5; check out &#x65F6;&#x95F4;&#x8FD8;&#x672A;&#x5230; poolMaximumCheckoutTime&#xFF0C;&#x8C03;&#x7528; state &#x5BF9;&#x8C61;&#x7684; wait &#x51FD;&#x6570;&#xFF1A;state.wait(poolTimeToWait);&#x7B49;&#x5F85;&#x88AB;&#x5524;&#x9192;&#xFF08;&#x5728;&#x8FDE;&#x63A5; close &#x7684;&#x65F6;&#x5019;&#x4F1A;&#x8C03;&#x7528; pushConnection &#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x91CC;&#x4F1A;&#x8C03;&#x7528; state &#x5BF9;&#x8C61;&#x7684; notifyAll,&#x5524;&#x9192;&#x4E4B;&#x540E;&#x91CD;&#x65B0;&#x8FDB;&#x5165;&#x5FAA;&#x73AF;&#x53D6;&#x8FDE;&#x63A5;&#xFF09;</li>
</ul>
<p>&#x6E90;&#x4EE3;&#x7801;&#x6BD4;&#x8F83;&#x957F;&#x5C31;&#x4E0D;&#x8D34;&#x4E86;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x81EA;&#x5DF1;&#x4E0B;&#x4E0B;&#x6765;&#x770B;&#xFF01;</p>
<p>&#x5728;&#x5E76;&#x53D1;&#x6570;&#x6BD4;&#x8FDE;&#x63A5;&#x6C60;&#x7684;&#x6570;&#x91CF;&#x5927;&#x5F88;&#x591A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x5927;&#x91CF;&#x7684;&#x6392;&#x9664;&#x7ADE;&#x4E89;&#x6765;&#x540C;&#x6B65;state&#x5BF9;&#x8C61;&#xFF0C;&#x5F00;&#x9500;&#x6BD4;&#x8F83;&#x5927;&#xFF01;&#x4F1A;&#x76F4;&#x63A5;&#x5BFC;&#x81F4;&#x5EF6;&#x65F6;&#x5927;&#x5927;&#x589E;&#x52A0;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.xuebuyuan.com/1676551.html" target="_blank" rel="external">http://www.xuebuyuan.com/1676551.html</a></p>
<p><strong>3. spring &#x6846;&#x67B6;&#x4E2D;&#x9700;&#x8981;&#x5F15;&#x7528;&#x54EA;&#x4E9B; jar &#x5305;&#xFF0C;&#x4EE5;&#x53CA;&#x8FD9;&#x4E9B; jar &#x5305;&#x7684;&#x7528;&#x9014;</strong></p>
<p>&#x9664;&#x4E86; spring.jar &#x6587;&#x4EF6;&#xFF0C;Spring &#x8FD8;&#x5305;&#x62EC;&#x6709;&#x5176;&#x5B83;13&#x4E2A;&#x72EC;&#x7ACB;&#x7684;jar&#x5305;&#xFF0C;&#x5404;&#x81EA;&#x5305;&#x542B;&#x7740;&#x5BF9;&#x5E94;&#x7684; Spring &#x7EC4;&#x4EF6;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x9700;&#x8981;&#x6765;&#x9009;&#x62E9;&#x7EC4;&#x5408;&#x81EA;&#x5DF1;&#x7684; jar &#x5305;&#xFF0C;&#x800C;&#x4E0D;&#x5FC5;&#x5F15;&#x5165;&#x6574;&#x4E2A; spring.jar &#x7684;&#x6240;&#x6709;&#x7C7B;&#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/u011074386/article/details/50831126" target="_blank" rel="external">http://blog.csdn.net/u011074386/article/details/50831126</a></p>
<p><strong>4. springMVC &#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;</strong></p>
<p>springMVC &#x662F;&#x4E00;&#x4E2A; MVC &#x7684;&#x5F00;&#x6E90;&#x6846;&#x67B6;&#xFF0C;springMVC=struts2+spring&#xFF0C;springMVC &#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x662F; Struts2 &#x52A0;&#x4E0A; sring &#x7684;&#x6574;&#x5408;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x7591;&#x60D1;&#x5C31;&#x662F;&#xFF0C;springMVC &#x548C; spring &#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x5173;&#x7CFB;&#x5462;&#xFF1F;&#x8FD9;&#x4E2A;&#x5728;&#x767E;&#x5EA6;&#x767E;&#x79D1;&#x4E0A;&#x6709;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x89E3;&#x91CA;&#xFF1A;&#x610F;&#x601D;&#x662F;&#x8BF4;&#xFF0C;springMVC &#x662F; spring &#x7684;&#x4E00;&#x4E2A;&#x540E;&#x7EED;&#x4EA7;&#x54C1;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;spring&#x5728;&#x539F;&#x6709;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x53C8;&#x63D0;&#x4F9B;&#x4E86; web &#x5E94;&#x7528;&#x7684; MVC &#x6A21;&#x5757;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7684;&#x628A; springMVC &#x7406;&#x89E3;&#x4E3A;&#x662F; spring &#x7684;&#x4E00;&#x4E2A;&#x6A21;&#x5757;&#xFF08;&#x7C7B;&#x4F3C; AOP&#xFF0C;IOC &#x8FD9;&#x6837;&#x7684;&#x6A21;&#x5757;&#xFF09;&#xFF0C;&#x7F51;&#x7EDC;&#x4E0A;&#x7ECF;&#x5E38;&#x4F1A;&#x8BF4; springMVC &#x548C; spring &#x65E0;&#x7F1D;&#x96C6;&#x6210;&#xFF0C;&#x5176;&#x5B9E; springMVC &#x5C31;&#x662F; spring &#x7684;&#x4E00;&#x4E2A;&#x5B50;&#x6A21;&#x5757;&#xFF0C;&#x6240;&#x4EE5;&#x6839;&#x672C;&#x4E0D;&#x9700;&#x8981;&#x540C; spring &#x8FDB;&#x884C;&#x6574;&#x5408;&#x3002;</p>
<p>&#xFF08;1&#xFF09;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x51FA;&#x4E00;&#x4E2A; http &#x8BF7;&#x6C42;&#x7ED9; web &#x670D;&#x52A1;&#x5668;&#xFF0C;web &#x670D;&#x52A1;&#x5668;&#x5BF9; http &#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#xFF0C;&#x5982;&#x679C;&#x5339;&#x914D; DispatcherServlet &#x7684;&#x8BF7;&#x6C42;&#x6620;&#x5C04;&#x8DEF;&#x5F84;&#xFF08;&#x5728; web.xml &#x4E2D;&#x6307;&#x5B9A;&#xFF09;&#xFF0C;web &#x5BB9;&#x5668;&#x5C06;&#x8BF7;&#x6C42;&#x8F6C;&#x4EA4;&#x7ED9;  DispatcherServlet.</p>
<p>&#xFF08;2&#xFF09;DipatcherServlet &#x63A5;&#x6536;&#x5230;&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x4E4B;&#x540E;&#x5C06;&#x6839;&#x636E;&#x8BF7;&#x6C42;&#x7684;&#x4FE1;&#x606F;&#xFF08;&#x5305;&#x62EC; URL&#x3001;Http &#x65B9;&#x6CD5;&#x3001;&#x8BF7;&#x6C42;&#x62A5;&#x6587;&#x5934;&#x548C;&#x8BF7;&#x6C42;&#x53C2;&#x6570; Cookie &#x7B49;&#xFF09;&#x4EE5;&#x53CA; HandlerMapping &#x7684;&#x914D;&#x7F6E;&#x627E;&#x5230;&#x5904;&#x7406;&#x8BF7;&#x6C42;&#x7684;&#x5904;&#x7406;&#x5668;&#xFF08;Handler&#xFF09;&#x3002;</p>
<p>&#xFF08;3-4&#xFF09;DispatcherServlet &#x6839;&#x636E; HandlerMapping &#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684; Handler,&#x5C06;&#x5904;&#x7406;&#x6743;&#x4EA4;&#x7ED9; Handler&#xFF08;Handler&#x5C06;&#x5177;&#x4F53;&#x7684;&#x5904;&#x7406;&#x8FDB;&#x884C;&#x5C01;&#x88C5;&#xFF09;&#xFF0C;&#x518D;&#x7531;&#x5177;&#x4F53;&#x7684; HandlerAdapter &#x5BF9; Handler &#x8FDB;&#x884C;&#x5177;&#x4F53;&#x7684;&#x8C03;&#x7528;&#x3002;</p>
<p>&#xFF08;5&#xFF09;Handler &#x5BF9;&#x6570;&#x636E;&#x5904;&#x7406;&#x5B8C;&#x6210;&#x4EE5;&#x540E;&#x5C06;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; ModelAndView() &#x5BF9;&#x8C61;&#x7ED9; DispatcherServlet&#x3002;</p>
<p>&#xFF08;6&#xFF09;Handler &#x8FD4;&#x56DE;&#x7684; ModelAndView() &#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x903B;&#x8F91;&#x89C6;&#x56FE;&#x5E76;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x5F0F;&#x7684;&#x89C6;&#x56FE;&#xFF0C;DispatcherSevlet &#x901A;&#x8FC7; ViewResolver &#x5C06;&#x903B;&#x8F91;&#x89C6;&#x56FE;&#x8F6C;&#x5316;&#x4E3A;&#x771F;&#x6B63;&#x7684;&#x89C6;&#x56FE; View&#x3002;</p>
<p>&#xFF08;7&#xFF09;Dispatcher &#x901A;&#x8FC7; model &#x89E3;&#x6790;&#x51FA; ModelAndView() &#x4E2D;&#x7684;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#x6700;&#x7EC8;&#x5C55;&#x73B0;&#x51FA;&#x5B8C;&#x6574;&#x7684; view &#x5E76;&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#x3002;</p>
<p><strong>5. springMVC&#x6CE8;&#x89E3;&#x7684;&#x610F;&#x601D;</strong></p>
<p>Spring &#x4ECE;2.5&#x7248;&#x672C;&#x5F00;&#x59CB;&#x5728;&#x7F16;&#x7A0B;&#x4E2D;&#x5F15;&#x5165;&#x6CE8;&#x89E3;&#xFF0C;&#x7528;&#x6237;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; @RequestMapping&#xFF0C; @RequestParam&#xFF0C; @ModelAttribute &#x7B49;&#x7B49;&#x8FD9;&#x6837;&#x7C7B;&#x4F3C;&#x7684;&#x6CE8;&#x89E3;&#x3002;&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;Spring &#x7684;&#x7248;&#x672C;&#x867D;&#x7136;&#x53D1;&#x751F;&#x4E86;&#x5F88;&#x5927;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x4F46;&#x6CE8;&#x89E3;&#x7684;&#x7279;&#x6027;&#x5374;&#x662F;&#x4E00;&#x76F4;&#x5EF6;&#x7EED;&#x4E0B;&#x6765;&#xFF0C;&#x5E76;&#x4E0D;&#x65AD;&#x6269;&#x5C55;&#xFF0C;&#x8BA9;&#x5E7F;&#x5927;&#x7684;&#x5F00;&#x53D1;&#x4EBA;&#x5458;&#x7684;&#x53CC;&#x624B;&#x53D8;&#x7684;&#x66F4;&#x8F7B;&#x677E;&#x8D77;&#x6765;&#xFF0C;&#x8FD9;&#x90FD;&#x79BB;&#x4E0D;&#x5F00; Annotation &#x7684;&#x5F3A;&#x5927;&#x4F5C;&#x7528;&#xFF0C;&#x4ECA;&#x5929;&#x6211;&#x4EEC;&#x5C31;&#x4E00;&#x8D77;&#x6765;&#x770B;&#x770B; Spring MVC 4 &#x4E2D;&#x5E38;&#x7528;&#x7684;&#x90A3;&#x4E9B;&#x6CE8;&#x89E3;&#x5427;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://aijuans.iteye.com/blog/2160141" target="_blank" rel="external">http://aijuans.iteye.com/blog/2160141</a></p>
<p><strong>6. spring&#x4E2D;beanFactory&#x548C;ApplicationContext&#x7684;&#x8054;&#x7CFB;&#x548C;&#x533A;&#x522B;</strong></p>
<p>BeanFacotry &#x662F; spring &#x4E2D;&#x6BD4;&#x8F83;&#x539F;&#x59CB;&#x7684; Factory&#x3002;&#x5982; XMLBeanFactory &#x5C31;&#x662F;&#x4E00;&#x79CD;&#x5178;&#x578B;&#x7684; BeanFactory&#x3002;&#x539F;&#x59CB;&#x7684; BeanFactory &#x65E0;&#x6CD5;&#x652F;&#x6301; spring &#x7684;&#x8BB8;&#x591A;&#x63D2;&#x4EF6;&#xFF0C;&#x5982; AOP &#x529F;&#x80FD;&#x3001;Web &#x5E94;&#x7528;&#x7B49;&#x3002;</p>
<p>ApplicationContext &#x63A5;&#x53E3;,&#x5B83;&#x7531; BeanFactory &#x63A5;&#x53E3;&#x6D3E;&#x751F;&#x800C;&#x6765;&#xFF0C;&#x56E0;&#x800C;&#x63D0;&#x4F9B; BeanFactory &#x6240;&#x6709;&#x7684;&#x529F;&#x80FD;&#x3002;ApplicationContext &#x4EE5;&#x4E00;&#x79CD;&#x66F4;&#x5411;&#x9762;&#x5411;&#x6846;&#x67B6;&#x7684;&#x65B9;&#x5F0F;&#x5DE5;&#x4F5C;&#x4EE5;&#x53CA;&#x5BF9;&#x4E0A;&#x4E0B;&#x6587;&#x8FDB;&#x884C;&#x5206;&#x5C42;&#x548C;&#x5B9E;&#x73B0;&#x7EE7;&#x627F;&#xFF0C; ApplicationContext &#x5305;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x4EE5;&#x4E0B;&#x7684;&#x529F;&#x80FD;&#xFF1A;</p>
<ul>
<li>MessageSource, &#x63D0;&#x4F9B;&#x56FD;&#x9645;&#x5316;&#x7684;&#x6D88;&#x606F;&#x8BBF;&#x95EE;</li>
<li>&#x8D44;&#x6E90;&#x8BBF;&#x95EE;&#xFF0C;&#x5982;URL&#x548C;&#x6587;&#x4EF6;</li>
<li>&#x4E8B;&#x4EF6;&#x4F20;&#x64AD;</li>
<li>&#x8F7D;&#x5165;&#x591A;&#x4E2A;&#xFF08;&#x6709;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#xFF09;&#x4E0A;&#x4E0B;&#x6587; &#xFF0C;&#x4F7F;&#x5F97;&#x6BCF;&#x4E00;&#x4E2A;&#x4E0A;&#x4E0B;&#x6587;&#x90FD;&#x4E13;&#x6CE8;&#x4E8E;&#x4E00;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x5C42;&#x6B21;&#xFF0C;&#x6BD4;&#x5982;&#x5E94;&#x7528;&#x7684; web &#x5C42;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/hi_kevin/article/details/7325554" target="_blank" rel="external">http://blog.csdn.net/hi_kevin/article/details/7325554</a></p>
<p><strong>7. spring&#x6CE8;&#x5165;&#x7684;&#x51E0;&#x79CD;&#x65B9;&#x5F0F;</strong></p>
<ul>
<li>&#x63A5;&#x53E3;&#x6CE8;&#x5165;</li>
<li>getter&#xFF0C;setter&#x65B9;&#x5F0F;&#x6CE8;&#x5165;</li>
<li>&#x6784;&#x9020;&#x5668;&#x6CE8;&#x5165;</li>
</ul>
<p>&#x4E09;&#x79CD;&#x6CE8;&#x5165;&#x65B9;&#x5F0F;&#x6BD4;&#x8F83;:</p>
<p>&#xFF08;1&#xFF09;&#x63A5;&#x53E3;&#x6CE8;&#x5165;&#xFF1A;</p>
<ul>
<li>&#x63A5;&#x53E3;&#x6CE8;&#x5165;&#x6A21;&#x5F0F;&#x56E0;&#x4E3A;&#x5177;&#x5907;&#x4FB5;&#x5165;&#x6027;&#xFF0C;&#x5B83;&#x8981;&#x6C42;&#x7EC4;&#x4EF6;&#x5FC5;&#x987B;&#x4E0E;&#x7279;&#x5B9A;&#x7684;&#x63A5;&#x53E3;&#x76F8;&#x5173;&#x8054;&#xFF0C;&#x56E0;&#x6B64;&#x5E76;&#x4E0D;&#x88AB;&#x770B;&#x597D;&#xFF0C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x6709;&#x9650;&#x3002;</li>
</ul>
<p>&#xFF08;2&#xFF09;Setter &#x6CE8;&#x5165;&#xFF1A;</p>
<ul>
<li>&#x5BF9;&#x4E8E;&#x4E60;&#x60EF;&#x4E86;&#x4F20;&#x7EDF; javabean &#x5F00;&#x53D1;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#xFF0C;&#x901A;&#x8FC7; setter &#x65B9;&#x6CD5;&#x8BBE;&#x5B9A;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x66F4;&#x52A0;&#x76F4;&#x89C2;&#x3002;</li>
<li>&#x5982;&#x679C;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x8F83;&#x4E3A;&#x590D;&#x6742;&#xFF0C;&#x90A3;&#x4E48;&#x6784;&#x9020;&#x5B50;&#x6CE8;&#x5165;&#x6A21;&#x5F0F;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E5F;&#x4F1A;&#x76F8;&#x5F53;&#x5E9E;&#x5927;&#xFF0C;&#x800C;&#x6B64;&#x65F6;&#x8BBE;&#x503C;&#x6CE8;&#x5165;&#x6A21;&#x5F0F;&#x5219;&#x66F4;&#x4E3A;&#x7B80;&#x6D01;&#x3002;</li>
<li>&#x5982;&#x679C;&#x7528;&#x5230;&#x4E86;&#x7B2C;&#x4E09;&#x65B9;&#x7C7B;&#x5E93;&#xFF0C;&#x53EF;&#x80FD;&#x8981;&#x6C42;&#x6211;&#x4EEC;&#x7684;&#x7EC4;&#x4EF6;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x6B64;&#x65F6;&#x6784;&#x9020;&#x5B50;&#x6CE8;&#x5165;&#x6A21;&#x5F0F;&#x4E5F;&#x4E0D;&#x9002;&#x7528;&#x3002;</li>
</ul>
<p>&#xFF08;3&#xFF09;&#x6784;&#x9020;&#x5668;&#x6CE8;&#x5165;&#xFF1A;</p>
<ul>
<li>&#x5728;&#x6784;&#x9020;&#x671F;&#x95F4;&#x5B8C;&#x6210;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x3001;&#x5408;&#x6CD5;&#x7684;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x96C6;&#x4E2D;&#x5448;&#x73B0;&#x3002;</li>
<li>&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x5728;&#x6784;&#x9020;&#x65F6;&#x7531;&#x5BB9;&#x5668;&#x4E00;&#x6B21;&#x6027;&#x8BBE;&#x5B9A;&#xFF0C;&#x7EC4;&#x4EF6;&#x88AB;&#x521B;&#x5EFA;&#x4E4B;&#x540E;&#x4E00;&#x76F4;&#x5904;&#x4E8E;&#x76F8;&#x5BF9;&#x201C;&#x4E0D;&#x53D8;&#x201D;&#x7684;&#x7A33;&#x5B9A;&#x72B6;&#x6001;&#x3002;</li>
<li>&#x53EA;&#x6709;&#x7EC4;&#x4EF6;&#x7684;&#x521B;&#x5EFA;&#x8005;&#x5173;&#x5FC3;&#x5176;&#x5185;&#x90E8;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x5BF9;&#x8C03;&#x7528;&#x8005;&#x800C;&#x8A00;&#xFF0C;&#x8BE5;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x5904;&#x4E8E;&#x201C;&#x9ED1;&#x76D2;&#x201D;&#x4E4B;&#x4E2D;&#x3002;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blessht.iteye.com/blog/1162131" target="_blank" rel="external">http://blessht.iteye.com/blog/1162131</a></p>
<p><strong>8. spring&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x4E8B;&#x7269;&#x7BA1;&#x7406;&#x7684;</strong></p>
<p>&#x4E8B;&#x52A1;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x5171;&#x6709;&#x4E24;&#x79CD;&#xFF1A;&#x7F16;&#x7801;&#x65B9;&#x5F0F;&#xFF1B;&#x58F0;&#x660E;&#x5F0F;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x65B9;&#x5F0F;&#x3002;</p>
<p>&#x57FA;&#x4E8E; AOP &#x6280;&#x672F;&#x5B9E;&#x73B0;&#x7684;&#x58F0;&#x660E;&#x5F0F;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#xFF0C;&#x5B9E;&#x8D28;&#x5C31;&#x662F;&#xFF1A;&#x5728;&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x524D;&#x540E;&#x8FDB;&#x884C;&#x62E6;&#x622A;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x76EE;&#x6807;&#x65B9;&#x6CD5;&#x5F00;&#x59CB;&#x4E4B;&#x524D;&#x521B;&#x5EFA;&#x5E76;&#x52A0;&#x5165;&#x4E8B;&#x52A1;&#xFF0C;&#x6267;&#x884C;&#x5B8C;&#x76EE;&#x6807;&#x65B9;&#x6CD5;&#x540E;&#x6839;&#x636E;&#x6267;&#x884C;&#x60C5;&#x51B5;&#x63D0;&#x4EA4;&#x6216;&#x56DE;&#x6EDA;&#x4E8B;&#x52A1;&#x3002;</p>
<p>&#x58F0;&#x660E;&#x5F0F;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x53C8;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;&#x57FA;&#x4E8E;XML&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x65B9;&#x5F0F;&#xFF1B;&#x53E6;&#x4E00;&#x4E2A;&#x662F;&#x5728;&#x4E1A;&#x52A1;&#x65B9;&#x6CD5;&#x4E0A;&#x8FDB;&#x884C; @Transactional &#x6CE8;&#x89E3;&#xFF0C;&#x5C06;&#x4E8B;&#x52A1;&#x89C4;&#x5219;&#x5E94;&#x7528;&#x5230;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E2D;&#x3002;</p>
<p>Spring &#x7684;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x673A;&#x5236;&#x5B9E;&#x73B0;&#x7684;&#x539F;&#x7406;&#xFF0C;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x5BF9;&#x6240;&#x6709;&#x9700;&#x8981;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x7684; Bean &#x8FDB;&#x884C;&#x52A0;&#x8F7D;&#xFF0C;&#x5E76;&#x6839;&#x636E;&#x914D;&#x7F6E;&#x5728; invoke &#x65B9;&#x6CD5;&#x4E2D;&#x5BF9;&#x5F53;&#x524D;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x540D;&#x8FDB;&#x884C;&#x5224;&#x5B9A;&#xFF0C;&#x5E76;&#x5728; method.invoke &#x65B9;&#x6CD5;&#x524D;&#x540E;&#x4E3A;&#x5176;&#x52A0;&#x4E0A;&#x5408;&#x9002;&#x7684;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x5B9E;&#x73B0;&#x4E86; Spring &#x5F0F;&#x7684;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x3002;Spring &#x4E2D;&#x7684; AOP &#x5B9E;&#x73B0;&#x66F4;&#x4E3A;&#x590D;&#x6742;&#x548C;&#x7075;&#x6D3B;&#xFF0C;&#x4E0D;&#x8FC7;&#x57FA;&#x672C;&#x539F;&#x7406;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;</p>
<ul>
<li><a href="http://blog.csdn.net/yanghaitao_1990/article/details/51759979" target="_blank" rel="external">http://blog.csdn.net/yanghaitao_1990/article/details/51759979</a></li>
<li><a href="https://my.oschina.net/u/1415809/blog/209075" target="_blank" rel="external">https://my.oschina.net/u/1415809/blog/209075</a></li>
</ul>
<p><strong>9. springIOC</strong></p>
<p>IOC:&#x63A7;&#x5236;&#x53CD;&#x8F6C;&#x4E5F;&#x53EB;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#xFF0C;IOC &#x5229;&#x7528; Java &#x53CD;&#x5C04;&#x673A;&#x5236;&#xFF0C;AOP &#x5229;&#x7528;&#x4EE3;&#x7406;&#x6A21;&#x5F0F;&#x3002;&#x6240;&#x8C13;&#x63A7;&#x5236;&#x53CD;&#x8F6C;&#x662F;&#x6307;&#xFF0C;&#x672C;&#x6765;&#x88AB;&#x8C03;&#x7528;&#x8005;&#x7684;&#x5B9E;&#x4F8B;&#x662F;&#x6709;&#x8C03;&#x7528;&#x8005;&#x6765;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x7F3A;&#x70B9;&#x662F;&#x8026;&#x5408;&#x6027;&#x592A;&#x5F3A;&#xFF0C;IOC &#x5219;&#x662F;&#x7EDF;&#x4E00;&#x4EA4;&#x7ED9; spring &#x6765;&#x7BA1;&#x7406;&#x521B;&#x5EFA;&#xFF0C;&#x5C06;&#x5BF9;&#x8C61;&#x4EA4;&#x7ED9;&#x5BB9;&#x5668;&#x7BA1;&#x7406;&#xFF0C;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x5728; spring &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x603B;&#x914D;&#x7F6E;&#x76F8;&#x5E94;&#x7684; bean&#xFF0C;&#x4EE5;&#x53CA;&#x8BBE;&#x7F6E;&#x76F8;&#x5173;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x8BA9; spring &#x5BB9;&#x5668;&#x6765;&#x751F;&#x6210;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x5BF9;&#x8C61;&#x4EE5;&#x53CA;&#x7BA1;&#x7406;&#x5BF9;&#x8C61;&#x3002;&#x5728; spring &#x5BB9;&#x5668;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#xFF0C;spring &#x4F1A;&#x628A;&#x4F60;&#x5728;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E2D;&#x914D;&#x7F6E;&#x7684; bean &#x90FD;&#x521D;&#x59CB;&#x5316;&#x597D;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x4F60;&#x9700;&#x8981;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x628A;&#x5B83;&#x5DF2;&#x7ECF;&#x521D;&#x59CB;&#x5316;&#x597D;&#x7684;&#x90A3;&#x4E9B; bean &#x5206;&#x914D;&#x7ED9;&#x4F60;&#x9700;&#x8981;&#x8C03;&#x7528;&#x8FD9;&#x4E9B; bean &#x7684;&#x7C7B;&#x3002; &#x8BB8;&#x591A;&#x5E94;&#x7528;&#x90FD;&#x662F;&#x901A;&#x8FC7;&#x5F7C;&#x6B64;&#x95F4;&#x7684;&#x76F8;&#x4E92;&#x5408;&#x4F5C;&#x6765;&#x5B9E;&#x73B0;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#xFF0C;&#x5982;&#x7C7B;A&#x8981;&#x8C03;&#x7528;&#x7C7B; B &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4EE5;&#x524D;&#x6211;&#x4EEC;&#x90FD;&#x662F;&#x5728;&#x7C7B; A &#x4E2D;&#xFF0C;&#x901A;&#x8FC7;&#x81EA;&#x8EAB; new &#x4E00;&#x4E2A;&#x7C7B; B&#xFF0C;&#x7136;&#x540E;&#x5728;&#x8C03;&#x7528;&#x7C7B;B&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x628A; new &#x7C7B; B &#x7684;&#x4E8B;&#x60C5;&#x4EA4;&#x7ED9; spring &#x6765;&#x505A;&#xFF0C;&#x5728;&#x6211;&#x4EEC;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5BB9;&#x5668;&#x4F1A;&#x4E3A;&#x6211;&#x4EEC;&#x5B9E;&#x4F8B;&#x5316;&#x3002;</p>
<p>AOP&#xFF1A;&#x9762;&#x5411;&#x5207;&#x9762;&#x7F16;&#x7A0B;&#x3002;&#xFF08;Aspect-Oriented Programming&#xFF09;<br>
AOP &#x53EF;&#x4EE5;&#x8BF4;&#x662F;&#x5BF9; OOP &#x7684;&#x8865;&#x5145;&#x548C;&#x5B8C;&#x5584;&#x3002;OOP &#x5F15;&#x5165;&#x5C01;&#x88C5;&#x3001;&#x7EE7;&#x627F;&#x548C;&#x591A;&#x6001;&#x6027;&#x7B49;&#x6982;&#x5FF5;&#x6765;&#x5EFA;&#x7ACB;&#x4E00;&#x79CD;&#x5BF9;&#x8C61;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#xFF0C;&#x7528;&#x4EE5;&#x6A21;&#x62DF;&#x516C;&#x5171;&#x884C;&#x4E3A;&#x7684;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x3002;&#x5B9E;&#x73B0; AOP &#x7684;&#x6280;&#x672F;&#xFF0C;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x4E24;&#x5927;&#x7C7B;&#xFF1A;&#x4E00;&#x662F;&#x91C7;&#x7528;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x6280;&#x672F;&#xFF0C;&#x5229;&#x7528;&#x622A;&#x53D6;&#x6D88;&#x606F;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5BF9;&#x8BE5;&#x6D88;&#x606F;&#x8FDB;&#x884C;&#x88C5;&#x9970;&#xFF0C;&#x4EE5;&#x53D6;&#x4EE3;&#x539F;&#x6709;&#x5BF9;&#x8C61;&#x884C;&#x4E3A;&#x7684;&#x6267;&#x884C;&#xFF1B;&#x4E8C;&#x662F;&#x91C7;&#x7528;&#x9759;&#x6001;&#x7EC7;&#x5165;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5F15;&#x5165;&#x7279;&#x5B9A;&#x7684;&#x8BED;&#x6CD5;&#x521B;&#x5EFA;&#x201C;&#x65B9;&#x9762;&#x201D;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x4EE5;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x95F4;&#x7EC7;&#x5165;&#x6709;&#x5173;&#x201C;&#x65B9;&#x9762;&#x201D;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5C5E;&#x4E8E;&#x9759;&#x6001;&#x4EE3;&#x7406;&#x3002;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7F16;&#x7A0B;&#x5C06;&#x7A0B;&#x5E8F;&#x5206;&#x89E3;&#x6210;&#x5404;&#x4E2A;&#x5C42;&#x6B21;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x9762;&#x5411;&#x5207;&#x9762;&#x7F16;&#x7A0B;&#x5C06;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x5206;&#x89E3;&#x6210;&#x5404;&#x4E2A;&#x5207;&#x9762;&#x3002; AOP &#x4ECE;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x89D2;&#x5EA6;&#x8003;&#x8651;&#x7A0B;&#x5E8F;&#x7684;&#x7ED3;&#x6784;&#xFF0C;&#x63D0;&#x53D6;&#x4E1A;&#x52A1;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x7684;&#x5207;&#x9762;&#xFF0C;oop &#x662F;&#x9759;&#x6001;&#x7684;&#x62BD;&#x8C61;&#xFF0C;aop &#x662F;&#x52A8;&#x6001;&#x7684;&#x62BD;&#x8C61;&#xFF0C;&#x662F;&#x5BF9;&#x5E94;&#x7528;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x6B65;&#x9AA4;&#x8FDB;&#x884C;&#x62BD;&#x8C61;&#xFF0C;&#xFF0C;&#x4ECE;&#x800C;&#x83B7;&#x5F97;&#x6B65;&#x9AA4;&#x4E4B;&#x95F4;&#x7684;&#x903B;&#x8F91;&#x5212;&#x5206;&#x3002;</p>
<p><strong>10. spring AOP&#x7684;&#x539F;&#x7406;</strong></p>
<p>&#x5207;&#x9762;&#x7684;&#x610F;&#x4E49;&#x4F55;&#x5728;&#xFF1F;</p>
<p>&#x9996;&#x5148;&#x6839;&#x636E;&#x4E0A;&#x4F8B;&#xFF0C;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x7684;&#x6743;&#x9650;&#x68C0;&#x67E5;&#x6A21;&#x5757;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x5C42;&#x5207;&#x9762;&#x4E0A;&#x8FDB;&#x884C;&#x7EDF;&#x4E00;&#x7684;&#x96C6;&#x4E2D;&#x5F0F;&#x6743;&#x9650;&#x7BA1;&#x7406;&#x3002;&#x6743;&#x9650;&#x68C0;&#x67E5;&#x6A21;&#x5757;&#x53EF;&#x4EE5;&#x548C;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#x5206;&#x79BB;&#xFF0C;&#x800C;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7EC4;&#x4EF6;&#x5219;&#x65E0;&#x9700;&#x5173;&#x5FC3;&#x6743;&#x9650;&#x65B9;&#x9762;&#x7684;&#x95EE;&#x9898;&#x3002;&#x7CFB;&#x7EDF;&#x5927;&#x90E8;&#x5206;&#x6709;&#x6743;&#x9650;&#x68C0;&#x67E5;&#x6A21;&#x5757;&#xFF0C;&#x7528;&#x7684;&#x65F6;&#x5019;&#x76F4;&#x63A5;&#x62FF;&#x6765;&#x7528;&#x8FD9;&#x4E2A;&#x5207;&#x9762;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x901A;&#x8FC7;&#x5207;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;&#x7CFB;&#x7EDF;&#x4E2D;&#x5404;&#x4E2A;&#x4E0D;&#x540C;&#x5C42;&#x6B21;&#x4E0A;&#x7684;&#x95EE;&#x9898;&#x9694;&#x79BB;&#x5F00;&#x6765;&#xFF0C;&#x5B9E;&#x73B0;&#x7EDF;&#x4E00;&#x96C6;&#x7EA6;&#x5F0F;&#x5904;&#x7406;&#x3002;&#x5404;&#x5207;&#x9762;&#x53EA;&#x9700;&#x96C6;&#x4E2D;&#x4E8E;&#x81EA;&#x5DF1;&#x9886;&#x57DF;&#x5185;&#x7684;&#x903B;&#x8F91;&#x5B9E;&#x73B0;&#x3002;</p>
<p>&#x8FD9;&#x4E00;&#x65B9;&#x9762;&#x4F7F;&#x5F97;&#x5F00;&#x53D1;&#x903B;&#x8F91;&#x66F4;&#x52A0;&#x6E05;&#x6670;&#xFF0C;&#x4E13;&#x4E1A;&#x5316;&#x5206;&#x5DE5;&#x66F4;&#x52A0;&#x6613;&#x4E8E;&#x8FDB;&#x884C;&#xFF1B;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x7531;&#x4E8E;&#x5207;&#x9762;&#x7684;&#x9694;&#x79BB;&#xFF0C;&#x964D;&#x4F4E;&#x4E86;&#x8026;&#x5408;&#x6027;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x5E94;&#x7528;&#x4E2D;&#x5C06;&#x5404;&#x4E2A;&#x5207;&#x9762;&#x7EC4;&#x5408;&#x4F7F;&#x7528;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x5F97;&#x4EE3;&#x7801;&#x53EF;&#x91CD;&#x7528;&#x6027;&#x5927;&#x5927;&#x589E;&#x5F3A;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/200911/archive/2012/10/09/2716882.html" target="_blank" rel="external">http://www.cnblogs.com/200911/archive/2012/10/09/2716882.html</a></p>
<p><strong>11. hibernate&#x4E2D;&#x7684;1&#x7EA7;&#x548C;2&#x7EA7;&#x7F13;&#x5B58;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x4EE5;&#x53CA;&#x533A;&#x522B;&#x539F;&#x7406;&#xFF08;Lazy-Load&#x7684;&#x7406;&#x89E3;&#xFF09;</strong></p>
<p>hibernate &#x7684;&#x7F13;&#x5B58;&#x5206;&#x4E3A;&#x4E00;&#x7EA7;&#x7F13;&#x5B58;&#x548C;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#xFF0C;&#x4E00;&#x7EA7;&#x4E8C;&#x7EA7;&#x548C;&#x6211;&#x4EEC;&#x5E38;&#x8BF4;&#x7684; cpu &#x7684;&#x4E00;&#x7EA7;&#x4E8C;&#x7EA7;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x4E00;&#x7EA7;&#x8BF4;&#x7684;&#x662F; session &#x7684;&#x7F13;&#x5B58;&#xFF0C;&#x662F; hibernate &#x5185;&#x7F6E;&#x7684;&#xFF0C;&#x4E0D;&#x80FD;&#x5378;&#x8F7D;&#x3002;&#x4E8C;&#x7EA7;&#x8BF4;&#x7684;&#x662F; SessionFactory &#x4E2D;&#x7684;&#x5916;&#x7F6E;&#x7F13;&#x5B58;&#xFF0C;SessionFactory &#x7684;&#x5185;&#x7F6E;&#x7F13;&#x5B58;&#x662F;&#x653E;&#x6620;&#x5C04;&#x6570;&#x636E;&#x548C;sql&#x8BED;&#x53E5;&#x7684;&#xFF0C;&#x7A0B;&#x5E8F;&#x4E0D;&#x80FD;&#x66F4;&#x6539;&#xFF0C;&#x4E5F;&#x4E0D;&#x7B97;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x3002;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x548C;&#x66F4;&#x6539;&#xFF0C;&#x5E76;&#x4E14;&#x52A8;&#x6001;&#x52A0;&#x8F7D;&#x548C;&#x5378;&#x8F7D;&#x3002;Hibernate &#x8FD8;&#x4E3A;&#x67E5;&#x8BE2;&#x7ED3;&#x679C;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x67E5;&#x8BE2;&#x7F13;&#x5B58;&#xFF0C;&#x5B83;&#x4F9D;&#x8D56;&#x4E8E;&#x7B2C;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x3002;</p>
<ul>
<li>&#x4E00;&#x7EA7;&#x7F13;&#x5B58;&#x7684;&#x7BA1;&#x7406;&#xFF1A;&#x5F53;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x8C03;&#x7528; Session &#x7684; save()&#x3001;update()&#x3001;savaeOrUpdate()&#x3001;get() &#x6216; load()&#xFF0C;&#x4EE5;&#x53CA;&#x8C03;&#x7528;&#x67E5;&#x8BE2;&#x63A5;&#x53E3;&#x7684; list()&#x3001;iterate() &#x6216; filter() &#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x5728; Session &#x7F13;&#x5B58;&#x4E2D;&#x8FD8;&#x4E0D;&#x5B58;&#x5728;&#x76F8;&#x5E94;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;Hibernate &#x5C31;&#x4F1A;&#x628A;&#x8BE5;&#x5BF9;&#x8C61;&#x52A0;&#x5165;&#x5230;&#x7B2C;&#x4E00;&#x7EA7;&#x7F13;&#x5B58;&#x4E2D;&#x3002;&#x5F53;&#x6E05;&#x7406;&#x7F13;&#x5B58;&#x65F6;&#xFF0C;Hibernate &#x4F1A;&#x6839;&#x636E;&#x7F13;&#x5B58;&#x4E2D;&#x5BF9;&#x8C61;&#x7684;&#x72B6;&#x6001;&#x53D8;&#x5316;&#x6765;&#x540C;&#x6B65;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x5E93;&#x3002; Session &#x4E3A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x4E2A;&#x7BA1;&#x7406;&#x7F13;&#x5B58;&#x7684;&#x65B9;&#x6CD5;&#xFF1A; evict(Object obj)&#xFF1A;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x6E05;&#x9664;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x7684;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x3002; clear()&#xFF1A;&#x6E05;&#x7A7A;&#x7F13;&#x5B58;&#x4E2D;&#x6240;&#x6709;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x3002;</li>
<li>Hibernate &#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x7684;&#x7BA1;&#x7406;&#xFF1A;
<ul>
<li>Hibernate&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x7684;&#x4E00;&#x822C;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;
<ol>
<li>&#x6761;&#x4EF6;&#x67E5;&#x8BE2;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x662F;&#x53D1;&#x51FA;&#x4E00;&#x6761; select * from table_name where &#x2026;. &#xFF08;&#x9009;&#x62E9;&#x6240;&#x6709;&#x5B57;&#x6BB5;&#xFF09;&#x8FD9;&#x6837;&#x7684; SQL &#x8BED;&#x53E5;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x4E00;&#x6B21;&#x83B7;&#x5F97;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x628A;&#x83B7;&#x5F97;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x6839;&#x636E;ID&#x653E;&#x5165;&#x5230;&#x7B2C;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x4E2D;&#x3002;</li>
<li>&#x5F53; Hibernate &#x6839;&#x636E; ID &#x8BBF;&#x95EE;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9996;&#x5148;&#x4ECE; Session &#x4E00;&#x7EA7;&#x7F13;&#x5B58;&#x4E2D;&#x67E5;&#xFF1B;&#x67E5;&#x4E0D;&#x5230;&#xFF0C;&#x5982;&#x679C;&#x914D;&#x7F6E;&#x4E86;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#xFF0C;&#x90A3;&#x4E48;&#x4ECE;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x4E2D;&#x67E5;&#xFF1B;&#x67E5;&#x4E0D;&#x5230;&#xFF0C;&#x518D;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x628A;&#x7ED3;&#x679C;&#x6309;&#x7167;ID&#x653E;&#x5165;&#x5230;&#x7F13;&#x5B58;&#x3002;</li>
<li>&#x5220;&#x9664;&#x3001;&#x66F4;&#x65B0;&#x3001;&#x589E;&#x52A0;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x540C;&#x65F6;&#x66F4;&#x65B0;&#x7F13;&#x5B58;&#x3002;Hibernate &#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF0C;&#x662F;&#x9488;&#x5BF9;&#x4E8E; ID &#x67E5;&#x8BE2;&#x7684;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF0C;&#x5BF9;&#x4E8E;&#x6761;&#x4EF6;&#x67E5;&#x8BE2;&#x5219;&#x6BEB;&#x65E0;&#x4F5C;&#x7528;&#x3002;&#x4E3A;&#x6B64;&#xFF0C;Hibernate &#x63D0;&#x4F9B;&#x4E86;&#x9488;&#x5BF9;&#x6761;&#x4EF6;&#x67E5;&#x8BE2;&#x7684; Query Cache&#x3002;</li>
</ol>
</li>
<li>&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x6570;&#x636E;&#x9002;&#x5408;&#x5B58;&#x653E;&#x5230;&#x7B2C;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x4E2D;&#xFF1F;
<ol>
<li>&#x5F88;&#x5C11;&#x88AB;&#x4FEE;&#x6539;&#x7684;&#x6570;&#x636E;</li>
<li>&#x4E0D;&#x662F;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5141;&#x8BB8;&#x51FA;&#x73B0;&#x5076;&#x5C14;&#x5E76;&#x53D1;&#x7684;&#x6570;&#x636E;</li>
<li>&#x4E0D;&#x4F1A;&#x88AB;&#x5E76;&#x53D1;&#x8BBF;&#x95EE;&#x7684;&#x6570;&#x636E;</li>
<li>&#x53C2;&#x8003;&#x6570;&#x636E;,&#x6307;&#x7684;&#x662F;&#x4F9B;&#x5E94;&#x7528;&#x53C2;&#x8003;&#x7684;&#x5E38;&#x91CF;&#x6570;&#x636E;&#xFF0C;&#x5B83;&#x7684;&#x5B9E;&#x4F8B;&#x6570;&#x76EE;&#x6709;&#x9650;&#xFF0C;&#x5B83;&#x7684;&#x5B9E;&#x4F8B;&#x4F1A;&#x88AB;&#x8BB8;&#x591A;&#x5176;&#x4ED6;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x5F15;&#x7528;&#xFF0C;&#x5B9E;&#x4F8B;&#x6781;&#x5C11;&#x6216;&#x8005;&#x4ECE;&#x6765;&#x4E0D;&#x4F1A;&#x88AB;&#x4FEE;&#x6539;&#x3002;</li>
</ol>
</li>
<li>&#x4E0D;&#x9002;&#x5408;&#x5B58;&#x653E;&#x5230;&#x7B2C;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#x7684;&#x6570;&#x636E;&#xFF1F;
<ol>
<li>&#x7ECF;&#x5E38;&#x88AB;&#x4FEE;&#x6539;&#x7684;&#x6570;&#x636E;</li>
<li>&#x8D22;&#x52A1;&#x6570;&#x636E;&#xFF0C;&#x7EDD;&#x5BF9;&#x4E0D;&#x5141;&#x8BB8;&#x51FA;&#x73B0;&#x5E76;&#x53D1;</li>
<li>&#x4E0E;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x5171;&#x4EAB;&#x7684;&#x6570;&#x636E;&#x3002;</li>
</ol>
</li>
</ul>
</li>
</ul>
<p><strong>Lazy-Load&#x7684;&#x7406;&#x89E3;</strong></p>
<p>&#x901A;&#x8FC7;&#x5C06; class &#x7684; lazy &#x5C5E;&#x6027;&#x8BBE;&#x7F6E;&#x4E3A; true&#xFF0C;&#x6765;&#x5F00;&#x542F;&#x5B9E;&#x4F53;&#x7684;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x7279;&#x6027;&#x3002;</p>
<p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x8FD0;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>User user=(User)session.load(User.class,&quot;1&quot;);&#xFF08;1&#xFF09;   
System.out.println(user.getName());                 &#xFF08;2&#xFF09;
</code></pre>
<p>&#x5F53;&#x8FD0;&#x884C;&#x5230;(1)&#x5904;&#x65F6;&#xFF0C;Hibernate &#x5E76;&#x6CA1;&#x6709;&#x53D1;&#x8D77;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x67E5;&#x8BE2;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x6B64;&#x65F6;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x8C03;&#x8BD5;&#x5DE5;&#x5177;(&#x6BD4;&#x5982; Eclipse &#x7684; Debug &#x5DE5;&#x5177;)&#xFF0C;&#x89C2;&#x5BDF;&#x6B64;&#x65F6; user &#x5BF9;&#x8C61;&#x7684;&#x5185;&#x5B58;&#x5FEB;&#x7167;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x60CA;&#x5947;&#x7684;&#x53D1;&#x73B0;&#xFF0C;&#x6B64;&#x65F6;&#x8FD4;&#x56DE;&#x7684;&#x53EF;&#x80FD;&#x662F; User $EnhancerByCGLIB$$bede8986 &#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x800C;&#x4E14;&#x5176;&#x5C5E;&#x6027;&#x4E3A; null,&#x8FD9;&#x662F;&#x600E;&#x4E48;&#x56DE;&#x4E8B;&#xFF1F;session.load() &#x65B9;&#x6CD5;&#x4F1A;&#x8FD4;&#x56DE;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x7684;&#x4EE3;&#x7406;&#x7C7B;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x91CC;&#x6240;&#x8FD4;&#x56DE;&#x7684;&#x5BF9;&#x8C61;&#x7C7B;&#x578B;&#x5C31;&#x662F; User &#x5BF9;&#x8C61;&#x7684;&#x4EE3;&#x7406;&#x7C7B;&#x5BF9;&#x8C61;&#x3002;&#x5728; Hibernate&#x4E2D;&#x901A;&#x8FC7;&#x4F7F;&#x7528; CGLIB&#xFF0C;&#x6765;&#x5B9E;&#x73B0;&#x52A8;&#x6001;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x4EE3;&#x7406;&#x7C7B;&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x4EE3;&#x7406;&#x7C7B;&#x5BF9;&#x8C61;&#x4E2D;&#x5305;&#x542B;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x6240;&#x6709;&#x5C5E;&#x6027;&#x548C;&#x65B9;&#x6CD5;&#xFF0C;&#x800C;&#x4E14;&#x6240;&#x6709;&#x5C5E;&#x6027;&#x5747;&#x88AB;&#x8D4B;&#x503C;&#x4E3A; null&#x3002;&#x901A;&#x8FC7;&#x8C03;&#x8BD5;&#x5668;&#x663E;&#x793A;&#x7684;&#x5185;&#x5B58;&#x5FEB;&#x7167;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6B64;&#x65F6;&#x771F;&#x6B63;&#x7684;User&#x5BF9;&#x8C61;&#xFF0C;&#x662F;&#x5305;&#x542B;&#x5728;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x7684; CGLIB$CALBACK_0.target &#x5C5E;&#x6027;&#x4E2D;&#xFF0C;&#x5F53;&#x4EE3;&#x7801;&#x8FD0;&#x884C;&#x5230;&#xFF08;2&#xFF09;&#x5904;&#x65F6;&#xFF0C;&#x6B64;&#x65F6;&#x8C03;&#x7528; user.getName() &#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x65F6;&#x901A;&#x8FC7; CGLIB &#x8D4B;&#x4E88;&#x7684;&#x56DE;&#x8C03;&#x673A;&#x5236;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x8C03;&#x7528; CGLIB $CALBACK_0.getName() &#x65B9;&#x6CD5;&#xFF0C;&#x5F53;&#x8C03;&#x7528;&#x8BE5;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C;Hibernate &#x4F1A;&#x9996;&#x5148;&#x68C0;&#x67E5; CGLIB$CALBACK_0.target &#x5C5E;&#x6027;&#x662F;&#x5426;&#x4E3A; null&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8C03;&#x7528;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684; getName &#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x4F1A;&#x53D1;&#x8D77;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#xFF0C;&#x751F;&#x6210;&#x7C7B;&#x4F3C;&#x8FD9;&#x6837;&#x7684; SQL &#x8BED;&#x53E5;&#xFF1A;select * from user where id=&#x2019;1&#x2019;&#xFF1B;&#x6765;&#x67E5;&#x8BE2;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x6784;&#x9020;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x5B83;&#x8D4B;&#x503C;&#x5230; CGLIB$CALBACK_0.target &#x5C5E;&#x6027;&#x4E2D;&#x3002; &#x8FD9;&#x6837;&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x4E2D;&#x95F4;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;Hibernate &#x5B9E;&#x73B0;&#x4E86;&#x5B9E;&#x4F53;&#x7684;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#xFF0C;&#x53EA;&#x6709;&#x5F53;&#x7528;&#x6237;&#x771F;&#x6B63;&#x53D1;&#x8D77;&#x83B7;&#x5F97;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x5C5E;&#x6027;&#x7684;&#x52A8;&#x4F5C;&#x65F6;&#xFF0C;&#x624D;&#x771F;&#x6B63;&#x4F1A;&#x53D1;&#x8D77;&#x6570;&#x636E;&#x5E93;&#x67E5;&#x8BE2;&#x64CD;&#x4F5C;&#x3002;&#x6240;&#x4EE5;&#x5B9E;&#x4F53;&#x7684;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x662F;&#x7528;&#x901A;&#x8FC7;&#x4E2D;&#x95F4;&#x4EE3;&#x7406;&#x7C7B;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x6709; session.load() &#x65B9;&#x6CD5;&#x624D;&#x4F1A;&#x5229;&#x7528;&#x5B9E;&#x4F53;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x6709; session.load() &#x65B9;&#x6CD5;&#x624D;&#x4F1A;&#x8FD4;&#x56DE;&#x5B9E;&#x4F53;&#x7C7B;&#x7684;&#x4EE3;&#x7406;&#x7C7B;&#x5BF9;&#x8C61;&#x3002;</p>
<p>&#xFF08;1&#xFF09;Hibernate &#x4E2D;&#x9ED8;&#x8BA4;&#x91C7;&#x7528;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x7684;&#x60C5;&#x51B5;&#x4E3B;&#x8981;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#xFF1A;</p>
<ul>
<li>&#x5F53;&#x8C03;&#x7528; Session&#x4E0A;&#x7684; load() &#x65B9;&#x6CD5;&#x52A0;&#x8F7D;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x65F6;&#x4F1A;&#x91C7;&#x7528;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x3002;</li>
<li>&#x5F53; Session &#x52A0;&#x8F7D;&#x67D0;&#x4E2A;&#x5B9E;&#x4F53;&#x65F6;&#xFF0C;&#x4F1A;&#x5BF9;&#x8FD9;&#x4E2A;&#x5B9E;&#x4F53;&#x4E2D;&#x7684;&#x96C6;&#x5408;&#x5C5E;&#x6027;&#x503C;&#x91C7;&#x7528;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x3002;&#xFF08;one-to-many&#xFF09;</li>
<li>&#x5F53; Session &#x52A0;&#x8F7D;&#x67D0;&#x4E2A;&#x5B9E;&#x4F53;&#x65F6;&#xFF0C;&#x4F1A;&#x5BF9;&#x8FD9;&#x4E2A;&#x5B9E;&#x4F53;&#x6240;&#x5355;&#x7AEF;&#x5173;&#x8054;&#xFF08;one-to-one, many-to-one&#xFF09;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x5BF9;&#x8C61;&#x91C7;&#x7528;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x3002;</li>
<li>&#x7B2C;&#x4E8C;&#x79CD;&#x548C;&#x7B2C;&#x4E09;&#x79CD;&#x7684;&#x533A;&#x522B;&#x662F;&#xFF1A;&#x7B2C;&#x4E8C;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x53D6;&#x6D88;&#x5EF6;&#x65F6;&#x52A0;&#x8F7D;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x5728;&#x5355;&#x65B9;&#x5373;&#x6709;set&#x5C5E;&#x6027;&#x7684;&#x4E00;&#x65B9;&#x7684;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x7684;set&#x6807;&#x7B7E;&#x540E;&#x8BBE;&#x7F6E;&#x61D2;&#x52A0;&#x8F7D;&#x7684;&#x5C5E;&#x6027; lazy=&#x201C;false&#x201D;&#xFF1B;&#x7B2C;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x5219;&#x662F;&#x5728;&#x591A;&#x65B9;&#x5373;&#x6709; many-to-one &#x7684;&#x4E00;&#x65B9;&#x7684;&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x4E2D;&#x7684; many-to-one &#x6807;&#x7B7E;&#x540E;&#x8BBE;&#x7F6E; lazy=&#x201C;false&#x201D;&#x3002;</li>
</ul>
<p>&#x80FD;&#x591F;&#x61D2;&#x52A0;&#x8F7D;&#x7684;&#x5BF9;&#x8C61;&#x90FD;&#x662F;&#x88AB;&#x6539;&#x5199;&#x8FC7;&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x5F53;&#x76F8;&#x5173;&#x8054;&#x7684; session &#x6CA1;&#x6709;&#x5173;&#x95ED;&#x65F6;&#xFF0C;&#x8BBF;&#x95EE;&#x8FD9;&#x4E9B;&#x61D2;&#x52A0;&#x8F7D;&#x5BF9;&#x8C61;&#xFF08;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF09;&#x7684;&#x5C5E;&#x6027;&#xFF08;getId &#x548C; getClass &#x9664;&#x5916;&#xFF09;hibernate &#x4F1A;&#x521D;&#x59CB;&#x5316;&#x8FD9;&#x4E9B;&#x4EE3;&#x7406;&#xFF0C;&#x6216;&#x7528; Hibernate.initialize(proxy) &#x6765;&#x521D;&#x59CB;&#x5316;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF1B;&#x5F53;&#x76F8;&#x5173;&#x8054;&#x7684; session &#x5173;&#x95ED;&#x540E;&#xFF0C;&#x518D;&#x8BBF;&#x95EE;&#x61D2;&#x52A0;&#x8F7D;&#x7684;&#x5BF9;&#x8C61;&#x5C06;&#x51FA;&#x73B0;&#x5F02;&#x5E38;&#x3002;</p>
<p>&#xFF08;2&#xFF09;&#x6293;&#x53D6;&#x7B56;&#x7565;&#xFF08;fetch&#xFF09;</p>
<p>&#x901A;&#x8FC7;&#x914D;&#x7F6E;&quot;&#x6293;&#x53D6;&#x7B56;&#x7565;&quot;&#x6765;&#x76F4;&#x63A5;&#x5F71;&#x54CD; session &#x7684; get() &#x548C; load() &#x65B9;&#x6CD5;&#x7684;&#x67E5;&#x8BE2;&#x6548;&#x679C;&#x3002;</p>
<p>&#x5355;&#x7AEF;&#x5173;&#x8054; <many-to-one>&lt;one-to_one&gt; &#x4E0A;&#x7684;&#x6293;&#x53D6;&#x7B56;&#x7565;:</many-to-one></p>
<p>&#x53EF;&#x4EE5;&#x7ED9;&#x5355;&#x7AEF;&#x5173;&#x8054;&#x7684;&#x6620;&#x5C04;&#x5143;&#x7D20;&#x6DFB;&#x52A0; fetch &#x5C5E;&#x6027;&#x3002;select&#xFF1A;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;; join&#xFF1A;&#x5728;&#x540C;&#x4E00;&#x6761; select &#x8BED;&#x53E5;&#x4F7F;&#x7528;&#x5185;&#x8FDE;&#x63A5;&#x6765;&#x83B7;&#x5F97;&#x5BF9;&#x8C61;&#x7684;&#x6570;&#x636E;&#x548C;&#x5B83;&#x5173;&#x8054;&#x5BF9;&#x8C61;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6B64;&#x65F6;&#x5173;&#x8054;&#x5BF9;&#x8C61;&#x7684;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x5931;&#x6548;&#x3002;</p>
<p>&#xFF08;3&#xFF09;&#x96C6;&#x5408;&#x5C5E;&#x6027;&#x4E0A;&#x7684;&#x6293;&#x53D6;&#x7B56;&#x7565;:</p>
<p>select:&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;;join&#xFF1A;&#x5728;&#x540C;&#x4E00;&#x6761;select&#x8BED;&#x53E5;&#x4F7F;&#x7528;&#x5185;&#x8FDE;&#x63A5;&#x6765;&#x83B7;&#x5F97;&#x5BF9;&#x65B9;&#x7684;&#x5173;&#x8054;&#x96C6;&#x5408;&#x3002;&#x6B64;&#x65F6;&#x5173;&#x8054;&#x96C6;&#x5408;&#x4E0A;&#x7684;lazy&#x4F1A;&#x5931;&#x6548;&#x3002;subselect&#xFF1A;&#x53E6;&#x5916;&#x53D1;&#x9001;&#x4E00;&#x6761;&#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#x6216;&#x5B50;&#x67E5;&#x8BE2;&#x6293;&#x53D6;&#x3002;&#x8FD9;&#x4E2A;&#x7B56;&#x7565;&#x5BF9;HQL&#x7684;&#x67E5;&#x8BE2;&#x4E5F;&#x8D77;&#x4F5C;&#x7528;&#x3002;</p>
<p><strong>12. Hibernate &#x7684;&#x539F;&#x7406;&#x4F53;&#x7CFB;&#x67B6;&#x6784;&#xFF0C;&#x4E94;&#x5927;&#x6838;&#x5FC3;&#x63A5;&#x53E3;&#xFF0C;Hibernate &#x5BF9;&#x8C61;&#x7684;&#x4E09;&#x79CD;&#x72B6;&#x6001;&#x8F6C;&#x6362;&#xFF0C;&#x4E8B;&#x52A1;&#x7BA1;&#x7406;&#x3002;</strong></p>
<p><strong>&#x4E94;&#x5927;&#x6838;&#x5FC3;&#x63A5;&#x53E3;</strong></p>
<p>&#x4F7F;&#x7528; Hibernate &#x5FC5;&#x987B;&#x4F1A;&#x4F7F;&#x7528;&#x7684;&#x4E94;&#x5927;&#x63A5;&#x53E3;&#xFF08;Configuration&#x3001;SessionFactory&#x3001;Session&#x3001;Transaction&#x3001;Query&#x548C;Criteria&#xFF09;&#x7F16;&#x7A0B;</p>
<p>&#xFF08;1&#xFF09;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B; Configuration &#x63A5;&#x53E3;&#xFF1A;&#x914D;&#x7F6E; Hibernate&#xFF0C;&#x6839;&#x636E;&#x5176;&#x542F;&#x52A8; Hibernate&#xFF0C;&#x521B;&#x5EFA; SessionFactory &#x5BF9;&#x8C61;&#xFF1B;</p>
<pre><code>SessionFactory sf = new Configuration().configure().buildSessionFactory();
SessionFactory stf = new AnnotationConfiguration().configure().buildSessionFactory(); 
//&#x5F53;&#x4F7F;&#x7528;&#x6CE8;&#x89E3;&#x6765;&#x5B9E;&#x73B0;&#x6301;&#x4E45;&#x5316;&#x65F6;&#x5219;&#x4F7F;&#x7528;AnnotationConfiguration&#x6765;&#x521B;&#x5EFA;SessionFactory
</code></pre>
<p>&#xFF08;2&#xFF09;SessionFactory &#x63A5;&#x53E3;&#xFF1A;&#x521D;&#x59CB;&#x5316; Hibernate&#xFF0C;&#x5145;&#x5F53;&#x6570;&#x636E;&#x5B58;&#x50A8;&#x6E90;&#x7684;&#x4EE3;&#x7406;&#xFF0C;&#x521B;&#x5EFA; session &#x5BF9;&#x8C61;&#xFF0C;SessionFactory &#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x5B83;&#x7684;&#x540C;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x53EF;&#x4EE5;&#x88AB;&#x5E94;&#x7528;&#x7684;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x5171;&#x4EAB;&#xFF0C;&#x662F;&#x91CD;&#x91CF;&#x7EA7;&#x4E8C;&#x7EA7;&#x7F13;&#x5B58;&#xFF1B;</p>
<pre><code>Session session = sf.openSession();      //&#x521B;&#x5EFA;&#x4E00;&#x4E2A;Session
</code></pre>
<p>&#xFF08;3&#xFF09;Session&#x63A5;&#x53E3;&#xFF1A;&#x8D1F;&#x8D23;&#x4FDD;&#x5B58;&#x3001;&#x66F4;&#x65B0;&#x3001;&#x5220;&#x9664;&#x3001;&#x52A0;&#x8F7D;&#x548C;&#x67E5;&#x8BE2;&#x5BF9;&#x8C61;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x907F;&#x514D;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x5171;&#x4EAB;&#x4E00;&#x4E2A;session&#xFF0C;&#x662F;&#x8F7B;&#x91CF;&#x7EA7;&#xFF0C;&#x4E00;&#x7EA7;&#x7F13;&#x5B58;&#x3002;</p>
<pre><code>session.save(tea);     //&#x5177;&#x4F53;&#x4F7F;&#x7528;&#x8FC7;&#x7A0B;&#x4E2D;&#x8981;&#x5728;&#x524D;&#x540E;&#x52A0;&#x4E0A;&#x4E8B;&#x52A1;&#xFF0C;tea&#x4E3A;&#x67D0;&#x5B9E;&#x4F53;&#x7C7B;&#x5BF9;&#x8C61;
</code></pre>
<p>&#xFF08;4&#xFF09;Transaction&#x63A5;&#x53E3;&#xFF1A;&#x7BA1;&#x7406;&#x4E8B;&#x52A1;&#x3002;&#x53EF;&#x4EE5;&#x5BF9;&#x4E8B;&#x52A1;&#x8FDB;&#x884C;&#x63D0;&#x4EA4;&#x548C;&#x56DE;&#x6EDA;&#xFF1B;</p>
<pre><code>session.beginTransaction();     //&#x7531;&#x4E8E;Hibernate&#x4F7F;&#x7528;&#x4E8B;&#x52A1;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x8981;&#x5F00;&#x542F;&#x4E8B;&#x52A1;
session.getTransaction().commit();   //&#x63D0;&#x4EA4;
</code></pre>
<p>&#xFF08;5&#xFF09;Query&#x548C;Criteria&#x63A5;&#x53E3;&#xFF1A;&#x6267;&#x884C;&#x6570;&#x636E;&#x5E93;&#x7684;&#x67E5;&#x8BE2;&#x3002;Criteria&#x7531;session&#x521B;&#x5EFA;</p>
<pre><code>Criteria criteria = session.createCriteria(Teacher.class); //&#x53C2;&#x6570;&#x4E3A;&#x88AB;&#x64CD;&#x4F5C;&#x7684;pojo&#x7C7B;, &#x53CD;&#x5C04;&#x673A;&#x5236;.
Criteria&#x4E2D;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#x67E5;&#x8BE2;&#x6761;&#x4EF6;
criteria.add(Expression.eq(&quot;name&quot;, &quot;Tom&quot;));
criteria.add(Expression.eq(&quot;age&quot;, new Integer(20)));
//&#x76F8;&#x5F53;&#x4E8E;&#x67E5;&#x8BE2;&#x8BED;&#x53E5;&#xFF1A;select * from t_user where name=&apos;Tom&apos; and sex=20
</code></pre>
<p><strong>Hibernate &#x5BF9;&#x8C61;&#x7684;&#x4E09;&#x79CD;&#x72B6;&#x6001;&#x8F6C;&#x6362;</strong></p>
<p>Hibernate &#x5BF9;&#x8C61;&#x7684;&#x4E09;&#x79CD;&#x72B6;&#x6001;&#xFF0C;Hibernate &#x5BF9;&#x8C61;&#x6709;&#x4E09;&#x79CD;&#x72B6;&#x6001;&#xFF0C;&#x5206;&#x522B;&#x662F;&#xFF1A;&#x4E34;&#x65F6;&#x6001;(Transient)&#x3001; &#x6301;&#x4E45;&#x6001;(Persistent)&#x3001;&#x6E38;&#x79BB;&#x6001;(Detached)&#x3002;</p>
<p>&#x4E34;&#x65F6;&#x72B6;&#x6001;&#xFF1A;&#x662F;&#x6307;&#x4ECE;&#x5BF9;&#x8C61;&#x901A;&#x8FC7; new &#x8BED;&#x53E5;&#x521B;&#x5EFA;&#x5230;&#x88AB;&#x6301;&#x4E45;&#x5316;&#x4E4B;&#x524D;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x6B64;&#x65F6;&#x5BF9;&#x8C61;&#x4E0D;&#x5728; Session &#x7684;&#x7F13;&#x5B58;&#x4E2D;&#x3002;</p>
<p>&#x5904;&#x5728;&#x6B64;&#x72B6;&#x6001;&#x7684;&#x5BF9;&#x8C61;&#x5177;&#x5907;&#x4EE5;&#x4E0B;&#x7279;&#x70B9;&#xFF1A;</p>
<ul>
<li>&#x4E0D;&#x5728; Session &#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x4E0D;&#x4E0E;&#x4EFB;&#x4F55; Session &#x5B9E;&#x4F8B;&#x76F8;&#x5173;&#x8054;&#x3002;</li>
<li>&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6CA1;&#x6709;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684;&#x8BB0;&#x5F55;&#x3002;</li>
</ul>
<p>&#x901A;&#x5E38;&#x5728;&#x4E0B;&#x5217;&#x60C5;&#x51B5;&#x4E0B;&#x5BF9;&#x8C61;&#x4F1A;&#x8FDB;&#x5165;&#x4E34;&#x65F6;&#x72B6;&#x6001;&#xFF1A;</p>
<ul>
<li>&#x901A;&#x8FC7; new &#x8BED;&#x53E5;&#x521B;&#x5EFA;&#x65B0;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x6267;&#x884C; delete() &#x65B9;&#x6CD5;&#xFF0C;&#x5BF9;&#x4E8E;&#x6E38;&#x79BB;&#x72B6;&#x6001;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;delete() &#x65B9;&#x6CD5;&#x4F1A;&#x5C06;&#x5176;&#x4E0E;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x5BF9;&#x5E94;&#x7684;&#x8BB0;&#x5F55;&#x5220;&#x9664;&#xFF1B;&#x800C;&#x5BF9;&#x4E8E;&#x6301;&#x4E45;&#x5316;&#x72B6;&#x6001;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;delete()&#x65B9;&#x6CD5;&#x4F1A;&#x5C06;&#x5176;&#x4E0E;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x5BF9;&#x5E94;&#x7684;&#x8BB0;&#x5F55;&#x5220;&#x9664;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x5728; Session &#x7F13;&#x5B58;&#x4E2D;&#x5220;&#x9664;&#x3002;</li>
</ul>
<p>&#x4F8B;&#x5982;&#xFF1A;Object object = new Object(); &#x6B64;&#x65F6; object &#x4E3A;&#x4E34;&#x65F6;&#x72B6;&#x6001;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6CA1;&#x6709;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#xFF0C;Session &#x7F13;&#x5B58;&#x4E2D;&#x4E5F;&#x6CA1;&#x6709;&#x76F8;&#x5173;&#x8054;&#x7684;&#x5B9E;&#x4F8B;&#x3002;</p>
<p>&#x6301;&#x4E45;&#x5316;&#x72B6;&#x6001;&#xFF1A;&#x662F;&#x6307;&#x5BF9;&#x8C61;&#x88AB;&#x6301;&#x4E45;&#x5316;&#x5230; Session &#x5BF9;&#x8C61;&#x88AB;&#x9500;&#x6BC1;&#x4E4B;&#x524D;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x6B64;&#x65F6;&#x5BF9;&#x8C61;&#x5728; Session &#x7684;&#x7F13;&#x5B58;&#x4E2D;&#x3002;</p>
<p>&#x5904;&#x5728;&#x6B64;&#x72B6;&#x6001;&#x7684;&#x5BF9;&#x8C61;&#x5177;&#x5907;&#x4EE5;&#x4E0B;&#x7279;&#x70B9;&#xFF1A;</p>
<ul>
<li>&#x5728; Session &#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x4E0E; Session &#x5B9E;&#x4F8B;&#x76F8;&#x5173;&#x8054;&#x3002;</li>
<li>&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6709;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684;&#x8BB0;&#x5F55;&#x3002;</li>
<li>Session &#x5728;&#x6E05;&#x7406;&#x7F13;&#x5B58;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x6839;&#x636E;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#x53D8;&#x5316;&#x66F4;&#x65B0;&#x6570;&#x636E;&#x5E93;&#x3002;</li>
</ul>
<p>&#x901A;&#x5E38;&#x5728;&#x4E0B;&#x5217;&#x60C5;&#x51B5;&#x4E0B;&#x5BF9;&#x8C61;&#x4F1A;&#x8FDB;&#x5165;&#x4E34;&#x65F6;&#x72B6;&#x6001;&#xFF1A;</p>
<ul>
<li>&#x6267;&#x884C; save() &#x6216; saveOrUpdate() &#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x8F6C;&#x53D8;&#x4E3A;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x6267;&#x884C; upda() &#x6216; saveOrUpdate() &#x65B9;&#x6CD5;&#xFF0C;&#x4F7F;&#x6E38;&#x79BB;&#x5BF9;&#x8C61;&#x8F6C;&#x53D8;&#x4E3A;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x6267;&#x884C; load() &#x6216; get() &#x65B9;&#x6CD5;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x5BF9;&#x8C61;&#x90FD;&#x662F;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x6267;&#x884C; find() &#x65B9;&#x6CD5;&#xFF0C;&#x8FD4;&#x56DE; List &#x96C6;&#x5408;&#x4E2D;&#x5B58;&#x653E;&#x7684;&#x90FD;&#x662F;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x5728;&#x5141;&#x8BB8;&#x7EA7;&#x8054;&#x4FDD;&#x5B58;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;Session &#x5728;&#x6E05;&#x7406;&#x7F13;&#x5B58;&#x65F6;&#x4F1A;&#x628A;&#x4E0E;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x5173;&#x8054;&#x7684;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x8F6C;&#x53D8;&#x4E3A;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x3002;</li>
</ul>
<p>&#x4F8B;&#x5982;&#xFF1A;Session session = factory.openSession();  object.setName(&#x201C;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x201D;); session.save(object);<br>
&#x6B64;&#x65F6; object &#x5BF9;&#x8C61;&#x4E3A;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#xFF0C;Session &#x7F13;&#x5B58;&#x4E2D;&#x6709;&#x76F8;&#x5173;&#x8054;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x8BB0;&#x5F55;&#x3002;</p>
<p>&#x6E38;&#x79BB;&#x72B6;&#x6001;&#xFF1A;&#x662F;&#x6307;&#x4ECE;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x7684; Session &#x5BF9;&#x8C61;&#x88AB;&#x9500;&#x6BC1;&#x5230;&#x8BE5;&#x5BF9;&#x8C61;&#x6D88;&#x5931;&#x4E4B;&#x524D;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x6B64;&#x65F6;&#x5BF9;&#x8C61;&#x4E0D;&#x5728; Session &#x7684;&#x7F13;&#x5B58;&#x4E2D;&#x3002;</p>
<p>&#x5904;&#x5728;&#x6B64;&#x72B6;&#x6001;&#x7684;&#x5BF9;&#x8C61;&#x5177;&#x5907;&#x4EE5;&#x4E0B;&#x7279;&#x70B9;&#xFF1A;</p>
<ul>
<li>&#x4E0D;&#x5728; Session &#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x4E0D;&#x4E0E;&#x4EFB;&#x4F55; Session &#x5B9E;&#x4F8B;&#x76F8;&#x5173;&#x8054;&#x3002;</li>
<li>&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6709;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684;&#x8BB0;&#x5F55;&#xFF08;&#x524D;&#x63D0;&#x662F;&#x6CA1;&#x6709;&#x5176;&#x4ED6; Session &#x5B9E;&#x4F8B;&#x5220;&#x9664;&#x8BE5;&#x6761;&#x8BB0;&#x5F55;&#xFF09;&#x3002;</li>
</ul>
<p>&#x901A;&#x5E38;&#x5728;&#x4E0B;&#x5217;&#x60C5;&#x51B5;&#x4E0B;&#x5BF9;&#x8C61;&#x4F1A;&#x8FDB;&#x5165;&#x4E34;&#x65F6;&#x72B6;&#x6001;&#xFF1A;</p>
<ul>
<li>&#x6267;&#x884C; close() &#x65B9;&#x6CD5;&#xFF0C;&#x5C06; Session &#x7F13;&#x5B58;&#x6E05;&#x7A7A;&#xFF0C;&#x7F13;&#x5B58;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#x5C06;&#x8F6C;&#x53D8;&#x6210;&#x6E38;&#x79BB;&#x5BF9;&#x8C61;&#x3002;</li>
<li>&#x6267;&#x884C; evict() &#x65B9;&#x6CD5;&#xFF0C;&#x80FD;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x6301;&#x4E45;&#x5316;&#x5BF9;&#x8C61;&#xFF0C;&#x4F7F;&#x4E4B;&#x8F6C;&#x53D8;&#x6210;&#x6E38;&#x79BB;&#x5BF9;&#x8C61;&#x3002;</li>
</ul>
<p>&#x4F8B;&#x5982;&#xFF1A;session.close();<br>
&#x6B64;&#x65F6;&#x4E0A;&#x6587;&#x7684; object &#x5BF9;&#x8C61;&#x4E3A;&#x6E38;&#x79BB;&#x5BF9;&#x8C61;&#xFF0C;Session &#x7F13;&#x5B58;&#x4E2D;&#x6CA1;&#x6709;&#x6709;&#x76F8;&#x5173;&#x8054;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6709;&#x76F8;&#x5E94;&#x7684;&#x8BB0;&#x5F55;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/liushuijinger/article/details/19051939" target="_blank" rel="external">http://blog.csdn.net/liushuijinger/article/details/19051939</a></p>
<p><strong>&#x4E8B;&#x52A1;&#x7BA1;&#x7406;</strong></p>
<p>&#x4E8B;&#x52A1;&#xFF08;Transaction&#xFF09;&#x662F;&#x5DE5;&#x4F5C;&#x4E2D;&#x7684;&#x57FA;&#x672C;&#x903B;&#x8F91;&#x5355;&#x4F4D;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x786E;&#x4FDD;&#x6570;&#x636E;&#x5E93;&#x80FD;&#x591F;&#x88AB;&#x6B63;&#x786E;&#x4FEE;&#x6539;&#xFF0C;&#x907F;&#x514D;&#x6570;&#x636E;&#x53EA;&#x4FEE;&#x6539;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x800C;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x4E0D;&#x5B8C;&#x6574;&#xFF0C;&#x6216;&#x8005;&#x5728;&#x4FEE;&#x6539;&#x65F6;&#x53D7;&#x5230;&#x7528;&#x6237;&#x5E72;&#x6270;&#x3002;&#x4F5C;&#x4E3A;&#x4E00;&#x540D;&#x8F6F;&#x4EF6;&#x8BBE;&#x8BA1;&#x5E08;&#xFF0C;&#x5FC5;&#x987B;&#x4E86;&#x89E3;&#x4E8B;&#x52A1;&#x5E76;&#x5408;&#x7406;&#x5229;&#x7528;&#xFF0C;&#x4EE5;&#x786E;&#x4FDD;&#x6570;&#x636E;&#x5E93;&#x4FDD;&#x5B58;&#x6B63;&#x786E;&#x3001;&#x5B8C;&#x6574;&#x7684;&#x6570;&#x636E;&#x3002;&#x6570;&#x636E;&#x5E93;&#x5411;&#x7528;&#x6237;&#x63D0;&#x4F9B;&#x4FDD;&#x5B58;&#x5F53;&#x524D;&#x7A0B;&#x5E8F;&#x72B6;&#x6001;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x53EB;&#x4E8B;&#x52A1;&#x63D0;&#x4EA4;&#xFF08;commit&#xFF09;&#xFF1B;&#x5F53;&#x4E8B;&#x52A1;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F7F;&#x6570;&#x636E;&#x5E93;&#x5FFD;&#x7565;&#x5F53;&#x524D;&#x7684;&#x72B6;&#x6001;&#x5E76;&#x56DE;&#x5230;&#x524D;&#x9762;&#x4FDD;&#x5B58;&#x7684;&#x72B6;&#x6001;&#x7684;&#x65B9;&#x6CD5;&#x53EB;&#x4E8B;&#x52A1;&#x56DE;&#x6EDA;&#xFF08;rollback&#xFF09;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/lifaming15/article/details/2564660" target="_blank" rel="external">http://blog.csdn.net/lifaming15/article/details/2564660</a></p>
<h2 id="&#x591A;&#x7EBF;&#x7A0B;"><a class="header-anchor" href="#&#x591A;&#x7EBF;&#x7A0B;"></a>&#x591A;&#x7EBF;&#x7A0B;</h2>
<p><strong>1. Java&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;&#x4E4B;&#x540E;&#xFF0C;&#x76F4;&#x63A5;&#x8C03;&#x7528;start()&#x65B9;&#x6CD5;&#x548C;run()&#x7684;&#x533A;&#x522B;</strong></p>
<p>&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x533A;&#x522B;:</p>
<p>&#xFF08;1&#xFF09;start&#xFF1A;</p>
<p>&#x7528; start &#x65B9;&#x6CD5;&#x6765;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#xFF0C;&#x771F;&#x6B63;&#x5B9E;&#x73B0;&#x4E86;&#x591A;&#x7EBF;&#x7A0B;&#x8FD0;&#x884C;&#xFF0C;&#x8FD9;&#x65F6;&#x65E0;&#x9700;&#x7B49;&#x5F85; run &#x65B9;&#x6CD5;&#x4F53;&#x4EE3;&#x7801;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x800C;&#x76F4;&#x63A5;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x901A;&#x8FC7;&#x8C03;&#x7528; Thread &#x7C7B;&#x7684; start() &#x65B9;&#x6CD5;&#x6765;&#x542F;&#x52A8;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x8FD9;&#x65F6;&#x6B64;&#x7EBF;&#x7A0B;&#x5904;&#x4E8E;&#x5C31;&#x7EEA;&#xFF08;&#x53EF;&#x8FD0;&#x884C;&#xFF09;&#x72B6;&#x6001;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8FD0;&#x884C;&#xFF0C;&#x4E00;&#x65E6;&#x5F97;&#x5230; cpu &#x65F6;&#x95F4;&#x7247;&#xFF0C;&#x5C31;&#x5F00;&#x59CB;&#x6267;&#x884C; run() &#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x91CC;&#x65B9;&#x6CD5;  run() &#x79F0;&#x4E3A;&#x7EBF;&#x7A0B;&#x4F53;&#xFF0C;&#x5B83;&#x5305;&#x542B;&#x4E86;&#x8981;&#x6267;&#x884C;&#x7684;&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#x7684;&#x5185;&#x5BB9;&#xFF0C;Run&#x65B9;&#x6CD5;&#x8FD0;&#x884C;&#x7ED3;&#x675F;&#xFF0C;&#x6B64;&#x7EBF;&#x7A0B;&#x968F;&#x5373;&#x7EC8;&#x6B62;&#x3002;</p>
<p>&#xFF08;2&#xFF09;run&#xFF1A;</p>
<p>run() &#x65B9;&#x6CD5;&#x53EA;&#x662F;&#x7C7B;&#x7684;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x65B9;&#x6CD5;&#x800C;&#x5DF2;&#xFF0C;&#x5982;&#x679C;&#x76F4;&#x63A5;&#x8C03;&#x7528; run &#x65B9;&#x6CD5;&#xFF0C;&#x7A0B;&#x5E8F;&#x4E2D;&#x4F9D;&#x7136;&#x53EA;&#x6709;&#x4E3B;&#x7EBF;&#x7A0B;&#x8FD9;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x5176;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x8DEF;&#x5F84;&#x8FD8;&#x662F;&#x53EA;&#x6709;&#x4E00;&#x6761;&#xFF0C;&#x8FD8;&#x662F;&#x8981;&#x987A;&#x5E8F;&#x6267;&#x884C;&#xFF0C;&#x8FD8;&#x662F;&#x8981;&#x7B49;&#x5F85; run &#x65B9;&#x6CD5;&#x4F53;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x540E;&#x624D;&#x53EF;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x6CA1;&#x6709;&#x8FBE;&#x5230;&#x5199;&#x7EBF;&#x7A0B;&#x7684;&#x76EE;&#x7684;&#x3002;</p>
<p>&#x603B;&#x7ED3;&#xFF1A;&#x8C03;&#x7528; start &#x65B9;&#x6CD5;&#x65B9;&#x53EF;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#xFF0C;&#x800C; run &#x65B9;&#x6CD5;&#x53EA;&#x662F; thread &#x7684;&#x4E00;&#x4E2A;&#x666E;&#x901A;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#xFF0C;&#x8FD8;&#x662F;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x91CC;&#x6267;&#x884C;&#x3002;&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x5E94;&#x8BE5;&#x90FD;&#x6BD4;&#x8F83;&#x719F;&#x6089;&#xFF0C;&#x628A;&#x9700;&#x8981;&#x5E76;&#x884C;&#x5904;&#x7406;&#x7684;&#x4EE3;&#x7801;&#x653E;&#x5728; run() &#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;start() &#x65B9;&#x6CD5;&#x542F;&#x52A8;&#x7EBF;&#x7A0B;&#x5C06;&#x81EA;&#x52A8;&#x8C03;&#x7528; run()&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x662F;&#x7531;jvm&#x7684;&#x5185;&#x5B58;&#x673A;&#x5236;&#x89C4;&#x5B9A;&#x7684;&#x3002;&#x5E76;&#x4E14; run() &#x65B9;&#x6CD5;&#x5FC5;&#x987B;&#x662F; public &#x8BBF;&#x95EE;&#x6743;&#x9650;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x4E3A; void&#x3002;</p>
<p><strong>2. &#x5E38;&#x7528;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#x6A21;&#x5F0F;&#x4EE5;&#x53CA;&#x4E0D;&#x540C;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F;</strong></p>
<p>Java &#x901A;&#x8FC7; Executors &#x63D0;&#x4F9B;&#x56DB;&#x79CD;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x5206;&#x522B;&#x4E3A;&#xFF1A;</p>
<ul>
<li>newCachedThreadPool &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53EF;&#x7F13;&#x5B58;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x6C60;&#x957F;&#x5EA6;&#x8D85;&#x8FC7;&#x5904;&#x7406;&#x9700;&#x8981;&#xFF0C;&#x53EF;&#x7075;&#x6D3B;&#x56DE;&#x6536;&#x7A7A;&#x95F2;&#x7EBF;&#x7A0B;&#xFF0C;&#x82E5;&#x65E0;&#x53EF;&#x56DE;&#x6536;&#xFF0C;&#x5219;&#x65B0;&#x5EFA;&#x7EBF;&#x7A0B;&#x3002;</li>
<li>newFixedThreadPool &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5B9A;&#x957F;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x53EF;&#x63A7;&#x5236;&#x7EBF;&#x7A0B;&#x6700;&#x5927;&#x5E76;&#x53D1;&#x6570;&#xFF0C;&#x8D85;&#x51FA;&#x7684;&#x7EBF;&#x7A0B;&#x4F1A;&#x5728;&#x961F;&#x5217;&#x4E2D;&#x7B49;&#x5F85;&#x3002;</li>
<li>newScheduledThreadPool &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5B9A;&#x957F;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x652F;&#x6301;&#x5B9A;&#x65F6;&#x53CA;&#x5468;&#x671F;&#x6027;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x3002;</li>
<li>newSingleThreadExecutor &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5355;&#x7EBF;&#x7A0B;&#x5316;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x5B83;&#x53EA;&#x4F1A;&#x7528;&#x552F;&#x4E00;&#x7684;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x6765;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#xFF0C;&#x4FDD;&#x8BC1;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x6309;&#x7167;&#x6307;&#x5B9A;&#x987A;&#x5E8F;(FIFO, LIFO, &#x4F18;&#x5148;&#x7EA7;)&#x6267;&#x884C;&#x3002;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/u011479540/article/details/51867886" target="_blank" rel="external">http://blog.csdn.net/u011479540/article/details/51867886</a></p>
<p><strong>3. newFixedThreadPool&#x6B64;&#x79CD;&#x7EBF;&#x7A0B;&#x6C60;&#x5982;&#x679C;&#x7EBF;&#x7A0B;&#x6570;&#x8FBE;&#x5230;&#x6700;&#x5927;&#x503C;&#x540E;&#x4F1A;&#x600E;&#x4E48;&#x529E;&#xFF0C;&#x5E95;&#x5C42;&#x539F;&#x7406;&#x3002;</strong></p>
<p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53EF;&#x91CD;&#x7528;&#x56FA;&#x5B9A;&#x7EBF;&#x7A0B;&#x6570;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x4EE5;&#x5171;&#x4EAB;&#x7684;&#x65E0;&#x754C;&#x961F;&#x5217;&#x65B9;&#x5F0F;&#x6765;&#x8FD0;&#x884C;&#x8FD9;&#x4E9B;&#x7EBF;&#x7A0B;&#x3002;&#x5728;&#x4EFB;&#x610F;&#x70B9;&#xFF0C;&#x5728;&#x5927;&#x591A;&#x6570; nThreads &#x7EBF;&#x7A0B;&#x4F1A;&#x5904;&#x4E8E;&#x5904;&#x7406;&#x4EFB;&#x52A1;&#x7684;&#x6D3B;&#x52A8;&#x72B6;&#x6001;&#x3002;&#x5982;&#x679C;&#x5728;&#x6240;&#x6709;&#x7EBF;&#x7A0B;&#x5904;&#x4E8E;&#x6D3B;&#x52A8;&#x72B6;&#x6001;&#x65F6;&#x63D0;&#x4EA4;&#x9644;&#x52A0;&#x4EFB;&#x52A1;&#xFF0C;&#x5219;&#x5728;&#x6709;&#x53EF;&#x7528;&#x7EBF;&#x7A0B;&#x4E4B;&#x524D;&#xFF0C;&#x9644;&#x52A0;&#x4EFB;&#x52A1;&#x5C06;&#x5728;&#x961F;&#x5217;&#x4E2D;&#x7B49;&#x5F85;&#x3002;&#x5982;&#x679C;&#x5728;&#x5173;&#x95ED;&#x524D;&#x7684;&#x6267;&#x884C;&#x671F;&#x95F4;&#x7531;&#x4E8E;&#x5931;&#x8D25;&#x800C;&#x5BFC;&#x81F4;&#x4EFB;&#x4F55;&#x7EBF;&#x7A0B;&#x7EC8;&#x6B62;&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#x5C06;&#x4EE3;&#x66FF;&#x5B83;&#x6267;&#x884C;&#x540E;&#x7EED;&#x7684;&#x4EFB;&#x52A1;&#xFF08;&#x5982;&#x679C;&#x9700;&#x8981;&#xFF09;&#x3002;&#x5728;&#x67D0;&#x4E2A;&#x7EBF;&#x7A0B;&#x88AB;&#x663E;&#x5F0F;&#x5730;&#x5173;&#x95ED;&#x4E4B;&#x524D;&#xFF0C;&#x6C60;&#x4E2D;&#x7684;&#x7EBF;&#x7A0B;&#x5C06;&#x4E00;&#x76F4;&#x5B58;&#x5728;&#x3002;</p>
<p><strong>4. &#x540C;&#x4E00;&#x4E2A;&#x7C7B;&#x4E0D;&#x540C;&#x65B9;&#x6CD5;&#x90FD;&#x6709; synchronized &#x9501;&#xFF0C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8BBF;&#x95EE;&#x3002;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x7C7B;&#x7684; static &#x6784;&#x9020;&#x65B9;&#x6CD5;&#x52A0;&#x4E0A; synchronized &#x4E4B;&#x540E;&#x7684;&#x9501;&#x7684;&#x5F71;&#x54CD;&#x3002;</strong></p>
<p>&#xFF08;1&#xFF09;&#x7B54;&#x6848;&#x662F;: &#x4E0D;&#x53EF;&#x4EE5;!!!</p>
<p>&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x8BBF;&#x95EE;&#x540C;&#x4E00;&#x4E2A;&#x7C7B;&#x7684; synchronized &#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x90FD;&#x662F;&#x4E32;&#x884C;&#x6267;&#x884C;&#x7684;! &#x5C31;&#x7B97;&#x6709;&#x591A;&#x4E2A; cpu &#x4E5F;&#x4E0D;&#x4F8B;&#x5916;! synchronized &#x65B9;&#x6CD5;&#x4F7F;&#x7528;&#x4E86;&#x7C7B;java&#x7684;&#x5185;&#x7F6E;&#x9501;&#xFF0C;&#x5373;&#x9501;&#x4F4F;&#x7684;&#x662F;&#x65B9;&#x6CD5;&#x6240;&#x5C5E;&#x5BF9;&#x8C61;&#x672C;&#x8EAB;&#x3002;&#x540C;&#x4E00;&#x4E2A;&#x9501;&#x67D0;&#x4E2A;&#x65F6;&#x523B;&#x53EA;&#x80FD;&#x88AB;&#x4E00;&#x4E2A;&#x6267;&#x884C;&#x7EBF;&#x7A0B;&#x6240;&#x83B7;&#x53D6;, &#x56E0;&#x6B64;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x90FD;&#x5F97;&#x7B49;&#x5F85;&#x9501;&#x7684;&#x91CA;&#x653E;&#x3002;&#x56E0;&#x6B64;&#x5C31;&#x7B97;&#x4F60;&#x6709;&#x591A;&#x4F59;&#x7684; cpu &#x53EF;&#x4EE5;&#x6267;&#x884C;, &#x4F46;&#x662F;&#x4F60;&#x6CA1;&#x6709;&#x9501;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x8FD8;&#x662F;&#x4E0D;&#x80FD;&#x8FDB;&#x5165; synchronized &#x65B9;&#x6CD5;&#x6267;&#x884C;, cpu &#x56E0;&#x6B64;&#x800C;&#x7A7A;&#x95F2;&#x3002;&#x5982;&#x679C;&#x67D0;&#x4E2A;&#x7EBF;&#x7A0B;&#x957F;&#x671F;&#x6301;&#x6709;&#x4E00;&#x4E2A;&#x7ADE;&#x4E89;&#x6FC0;&#x70C8;&#x7684;&#x9501;, &#x90A3;&#x4E48;&#x5C06;&#x5BFC;&#x81F4;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x90FD;&#x56E0;&#x7B49;&#x5F85;&#x6240;&#x7684;&#x91CA;&#x653E;&#x800C;&#x88AB;&#x6302;&#x8D77;, &#x4ECE;&#x800C;&#x5BFC;&#x81F4;CPU&#x65E0;&#x6CD5;&#x5F97;&#x5230;&#x5229;&#x7528;&#xFF0C;&#x7CFB;&#x7EDF;&#x541E;&#x5410;&#x91CF;&#x4F4E;&#x4E0B;&#x3002;&#x56E0;&#x6B64;&#x8981;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x67D0;&#x4E2A;&#x7EBF;&#x7A0B;&#x5BF9;&#x9501;&#x7684;&#x957F;&#x671F;&#x5360;&#x6709;!</p>
<p>&#x5982;&#x679C;&#x60F3;&#x907F;&#x514D;&#x5BF9;&#x9501;&#x7684;&#x7ADE;&#x4E89;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9501;&#x5206;&#x89E3;&#xFF0C;&#x9501;&#x5206;&#x6BB5;&#x4EE5;&#x53CA;&#x51CF;&#x5C11;&#x7EBF;&#x7A0B;&#x6301;&#x6709;&#x9501;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x5982;&#x679C;&#x4E0A;&#x8BC9;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684; syncMethod1 &#x548C; syncMethod2 &#x65B9;&#x6CD5;&#x662F;&#x4E24;&#x4E2A;&#x4E0D;&#x76F8;&#x5E72;&#x7684;&#x65B9;&#x6CD5;(&#x8BF7;&#x6C42;&#x7684;&#x8D44;&#x6E90;&#x4E0D;&#x5B58;&#x5728;&#x5173;&#x7CFB;)&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5206;&#x522B;&#x4F7F;&#x7528;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x9501;&#x3002;</p>
<pre><code>public class SyncMethod {
    private Object lock1 = new Object();
    private Object lock2 = new Object();

    public void syncMethod2() {
        synchronized (lock1) {
            try {
                System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@ (syncMethod2, &#x5DF2;&#x7ECF;&#x83B7;&#x53D6;&#x5185;&#x7F6E;&#x9501;`SyncMethod.this`)&quot;);
                Thread.sleep(5000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println(&quot;@@@@@@@@@@@@@@@@@@@@@@@@ (syncMethod2, &#x5373;&#x5C06;&#x91CA;&#x653E;&#x5185;&#x7F6E;&#x9501;`SyncMethod.this`)&quot;);
        }
    }

    public void syncMethod1() {
        synchronized (lock2) {
            System.out.println(&quot;######################## (syncMethod1, &#x5DF2;&#x7ECF;&#x83B7;&#x53D6;&#x5185;&#x7F6E;&#x9501;`SyncMethod.this`, &#x5E76;&#x5373;&#x5C06;&#x9000;&#x51FA;)&quot;);
        }
    }
}
</code></pre>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.jianshu.com/p/f23a90a79b3a" target="_blank" rel="external">http://www.jianshu.com/p/f23a90a79b3a</a></p>
<p>&#xFF08;2&#xFF09;&#x5728; static &#x65B9;&#x6CD5;&#x548C;&#x975E; static &#x65B9;&#x6CD5;&#x524D;&#x9762;&#x52A0; synchronized &#x5230;&#x5E95;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;&#x5462;&#xFF1F;</p>
<p>&#x5927;&#x5BB6;&#x90FD;&#x77E5;&#x9053;&#xFF0C;static &#x7684;&#x65B9;&#x6CD5;&#x5C5E;&#x4E8E;&#x7C7B;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x5C5E;&#x4E8E;&#x8FD9;&#x4E2A; Class&#xFF08;&#x6CE8;&#x610F;&#xFF1A;&#x8FD9;&#x91CC;&#x7684; Class &#x4E0D;&#x662F;&#x6307;Class &#x7684;&#x67D0;&#x4E2A;&#x5177;&#x4F53;&#x5BF9;&#x8C61;&#xFF09;&#xFF0C;&#x90A3;&#x4E48; static &#x83B7;&#x53D6;&#x5230;&#x7684;&#x9501;&#xFF0C;&#x5C31;&#x662F;&#x5F53;&#x524D;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x5BF9;&#x8C61;&#x6240;&#x5C5E;&#x7684;&#x7C7B;(Class&#xFF0C;&#x800C;&#x4E0D;&#x518D;&#x662F;&#x7531;&#x8FD9;&#x4E2A; Class &#x4EA7;&#x751F;&#x7684;&#x67D0;&#x4E2A;&#x5177;&#x4F53;&#x5BF9;&#x8C61;&#x4E86;)&#x3002;&#x800C;&#x975E; static &#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x7684;&#x9501;&#xFF0C;&#x5C31;&#x662F;&#x5F53;&#x524D;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x9501;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x4ED6;&#x4EEC;&#x4E4B;&#x95F4;&#x4E0D;&#x4F1A;&#x4EA7;&#x751F;&#x4E92;&#x65A5;&#x3002;</p>
<pre><code>pulbic class Something(){
    public synchronized void isSyncA(){}
    public synchronized void isSyncB(){}
    public static synchronized void cSyncA(){}
    public static synchronized void cSyncB(){}
}
</code></pre>
<p>&#x90A3;&#x4E48; Something &#x7C7B;&#x7684;&#x4E24;&#x4E2A;&#x5B9E;&#x4F8B; a &#x4E0E; b &#x4EE5;&#x4E0B;&#x9762;&#x7684;&#x7EC4;&#x5408;&#x5F62;&#x5F0F;&#x8C03;&#x7528;&#x4EE5;&#x4E0A;&#x65B9;&#x6CD5;&#xFF0C;&#x7ED3;&#x679C;&#x4F1A;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;</p>
<pre><code>a. x.isSyncA()&#x4E0E;x.isSyncB() 
b. x.isSyncA()&#x4E0E;y.isSyncA()
c. x.cSyncA()&#x4E0E;y.cSyncB()
d. x.isSyncA()&#x4E0E;Something.cSyncA()
</code></pre>
<ul>
<li>a&#xFF0C;&#x90FD;&#x662F;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x7684; synchronized &#x57DF;&#x8BBF;&#x95EE;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x80FD;&#x88AB;&#x540C;&#x65F6;&#x8BBF;&#x95EE;</li>
<li>b&#xFF0C;&#x662F;&#x9488;&#x5BF9;&#x4E0D;&#x540C;&#x5B9E;&#x4F8B;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x88AB;&#x8BBF;&#x95EE;</li>
<li>c&#xFF0C;&#x56E0;&#x4E3A;&#x662F; static synchronized&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x540C;&#x5B9E;&#x4F8B;&#x4E4B;&#x95F4;&#x4ECD;&#x7136;&#x4F1A;&#x88AB;&#x9650;&#x5236;,&#x76F8;&#x5F53;&#x4E8E;Something.isSyncA() &#x4E0E; Something.isSyncB() &#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x80FD;&#x88AB;&#x540C;&#x65F6;&#x8BBF;&#x95EE;&#x3002;<br>
&#x3000;&#x3000;<br>
&#x90A3;&#x4E48;&#xFF0C;&#x7B2C;d&#x5462;?&#xFF0C;&#x4E66;&#x4E0A;&#x7684; &#x7B54;&#x6848;&#x662F;&#x53EF;&#x4EE5;&#x88AB;&#x540C;&#x65F6;&#x8BBF;&#x95EE;&#x7684;&#xFF0C;&#x7B54;&#x6848;&#x7406;&#x7531;&#x662F; synchronzied &#x7684;&#x662F;&#x5B9E;&#x4F8B;&#x65B9;&#x6CD5;&#x4E0E;synchronzied &#x7684;&#x7C7B;&#x65B9;&#x6CD5;&#x7531;&#x4E8E;&#x9501;&#x5B9A;&#xFF08;lock&#xFF09;&#x4E0D;&#x540C;&#x7684;&#x539F;&#x56E0;&#x3002;&#x4E2A;&#x4EBA;&#x5206;&#x6790;&#x4E5F;&#x5C31;&#x662F; synchronized &#x4E0E; static synchronized &#x76F8;&#x5F53;&#x4E8E;&#x4E24;&#x5E2E;&#x6D3E;&#xFF0C;&#x5404;&#x81EA;&#x7BA1;&#x5404;&#x81EA;&#xFF0C;&#x76F8;&#x4E92;&#x4E4B;&#x95F4;&#x5C31;&#x65E0;&#x7EA6;&#x675F;&#x4E86;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x540C;&#x65F6;&#x8BBF;&#x95EE;&#x3002;&#x76EE;&#x524D;&#x8FD8;&#x4E0D;&#x662F;&#x5206;&#x6E05;&#x695A;java&#x5185;&#x90E8;&#x8BBE;&#x8BA1; synchronzied &#x662F;&#x600E;&#x4E48;&#x6837;&#x5B9E;&#x73B0;&#x7684;&#x3002;</li>
</ul>
<p>&#x7ED3;&#x8BBA;&#xFF1A;</p>
<ul>
<li>A: synchronized static &#x662F;&#x67D0;&#x4E2A;&#x7C7B;&#x7684;&#x8303;&#x56F4;&#xFF0C;synchronized static cSync{}&#x9632;&#x6B62;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x540C;&#x65F6;&#x8BBF;&#x95EE;&#x8FD9;&#x4E2A; &#x7C7B;&#x4E2D;&#x7684; synchronized static &#x65B9;&#x6CD5;&#x3002;&#x5B83;&#x53EF;&#x4EE5;&#x5BF9;&#x7C7B;&#x7684;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x5B9E;&#x4F8B;&#x8D77;&#x4F5C;&#x7528;&#x3002;</li>
<li>B: synchronized &#x662F;&#x67D0;&#x5B9E;&#x4F8B;&#x7684;&#x8303;&#x56F4;&#xFF0C;synchronized isSync(){} &#x9632;&#x6B62;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x540C;&#x65F6;&#x8BBF;&#x95EE;&#x8FD9;&#x4E2A;&#x5B9E;&#x4F8B;&#x4E2D;&#x7684; synchronized &#x65B9;&#x6CD5;&#x3002;</li>
</ul>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://www.cnblogs.com/GYoungBean/p/3589726.html" target="_blank" rel="external">http://www.cnblogs.com/GYoungBean/p/3589726.html</a></p>
<p><strong>5. &#x4E86;&#x89E3;&#x53EF;&#x91CD;&#x5165;&#x9501;&#x7684;&#x542B;&#x4E49;&#xFF0C;&#x4EE5;&#x53CA; ReentrantLock &#x548C; synchronized &#x7684;&#x533A;&#x522B;</strong></p>
<p>&#xFF08;1&#xFF09;&#x53EF;&#x91CD;&#x5165;&#x9501;&#xFF0C;&#x4E5F;&#x53EB;&#x505A;&#x9012;&#x5F52;&#x9501;&#xFF0C;&#x6307;&#x7684;&#x662F;&#x540C;&#x4E00;&#x7EBF;&#x7A0B;&#x5916;&#x5C42;&#x51FD;&#x6570;&#x83B7;&#x5F97;&#x9501;&#x4E4B;&#x540E;&#xFF0C;&#x5185;&#x5C42;&#x9012;&#x5F52;&#x51FD;&#x6570;&#x4ECD;&#x7136;&#x6709;&#x83B7;&#x53D6;&#x8BE5;&#x9501;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F46;&#x4E0D;&#x53D7;&#x5F71;&#x54CD;&#x3002;&#x5728; JAVA &#x73AF;&#x5883;&#x4E0B; ReentrantLock &#x548C; synchronized &#x90FD;&#x662F;&#x53EF;&#x91CD;&#x5165;&#x9501;&#x3002;</p>
<p>&#xFF08;2&#xFF09;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x53EF;&#x91CD;&#x5165;&#x9501;&#xFF1F;</p>
<p>&#x4E3A;&#x6BCF;&#x4E2A;&#x9501;&#x5173;&#x8054;&#x4E00;&#x4E2A;&#x83B7;&#x53D6;&#x8BA1;&#x6570;&#x5668;&#x548C;&#x4E00;&#x4E2A;&#x6240;&#x6709;&#x8005;&#x7EBF;&#x7A0B;&#xFF0C;&#x5F53;&#x8BA1;&#x6570;&#x503C;&#x4E3A; 0 &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD9;&#x4E2A;&#x8D1F;&#x5C31;&#x6CA1;&#x6709;&#x88AB;&#x4EFB;&#x4F55;&#x7EBF;&#x7A0B;&#x6301;&#x6709;&#x3002;&#x5F53;&#x7EBF;&#x7A0B;&#x8BF7;&#x6C42;&#x4E00;&#x4E2A;&#x672A;&#x88AB;&#x6301;&#x6709;&#x7684;&#x9501;&#x65F6;&#xFF0C;JVM &#x5C06;&#x8BB0;&#x4E0B;&#x9501;&#x7684;&#x6301;&#x6709;&#x8005;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x83B7;&#x53D6;&#x8BA1;&#x6570;&#x503C;&#x7F6E;&#x4E3A; 1&#xFF0C;&#x5982;&#x679C;&#x540C;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x518D;&#x6B21;&#x83B7;&#x53D6;&#x8FD9;&#x4E2A;&#x9501;&#xFF0C;&#x8BB0;&#x6570;&#x503C;&#x5C06;&#x9012;&#x589E;&#xFF0C;&#x9000;&#x51FA;&#x4E00;&#x6B21;&#x540C;&#x6B65;&#x4EE3;&#x7801;&#x5757;&#xFF0C;&#x8BA1;&#x7B97;&#x503C;&#x9012;&#x51CF;&#xFF0C;&#x5F53;&#x8BA1;&#x6570;&#x503C;&#x4E3A; 0 &#x65F6;&#xFF0C;&#x8FD9;&#x4E2A;&#x9501;&#x5C31;&#x88AB;&#x91CA;&#x653E;&#x3002;ReentrantLock &#x91CC;&#x9762;&#x6709;&#x5B9E;&#x73B0;&#x3002;</p>
<p>&#xFF08;3&#xFF09;ReentrantLock &#x548C; synchronized &#x7684;&#x533A;&#x522B;</p>
<p>synchronized &#x5728;&#x4FEE;&#x9970;&#x4EE3;&#x7801;&#x5757;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x4E00;&#x4E2A; reference &#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x9501;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x5728;&#x4FEE;&#x9970;&#x65B9;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#x9ED8;&#x8BA4;&#x662F;&#x5F53;&#x524D;&#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x9501;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x5728;&#x4FEE;&#x9970;&#x7C7B;&#x65F6;&#x5019;&#x9ED8;&#x8BA4;&#x662F;&#x5F53;&#x524D;&#x7C7B;&#x7684; Class &#x5BF9;&#x8C61;&#x4F5C;&#x4E3A;&#x9501;&#x7684;&#x5BF9;&#x8C61;&#x3002;</p>
<p>synchronized &#x4F1A;&#x5728;&#x8FDB;&#x5165;&#x540C;&#x6B65;&#x5757;&#x7684;&#x524D;&#x540E;&#x5206;&#x522B;&#x5F62;&#x6210; monitorenter &#x548C; monitorexit &#x5B57;&#x8282;&#x7801;&#x6307;&#x4EE4;&#x3002;&#x5728;&#x6267;&#x884C; monitorenter &#x6307;&#x4EE4;&#x65F6;&#x4F1A;&#x5C1D;&#x8BD5;&#x83B7;&#x53D6;&#x5BF9;&#x8C61;&#x7684;&#x9501;&#xFF0C;&#x5982;&#x679C;&#x6B64;&#x6CA1;&#x5BF9;&#x8C61;&#x6CA1;&#x6709;&#x88AB;&#x9501;&#xFF0C;&#x6216;&#x8005;&#x6B64;&#x5BF9;&#x8C61;&#x5DF2;&#x7ECF;&#x88AB;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x9501;&#x4F4F;&#xFF0C;&#x90A3;&#x4E48;&#x9501;&#x7684;&#x8BA1;&#x6570;&#x5668;&#x52A0;&#x4E00;&#xFF0C;&#x6BCF;&#x5F53; monitorexit &#x88AB;&#x9501;&#x7684;&#x5BF9;&#x8C61;&#x7684;&#x8BA1;&#x6570;&#x5668;&#x51CF;&#x4E00;&#xFF0C;&#x76F4;&#x5230;&#x4E3A; 0 &#x5C31;&#x91CA;&#x653E;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x9501;&#x3002;&#x7531;&#x6B64; synchronized &#x662F;&#x53EF;&#x91CD;&#x5165;&#x7684;&#xFF0C;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x81EA;&#x5DF1;&#x628A;&#x81EA;&#x5DF1;&#x9501;&#x6B7B;&#x3002;</p>
<p>synchronized &#x5728;&#x9501;&#x5B9A;&#x65F6;&#x5982;&#x679C;&#x65B9;&#x6CD5;&#x5757;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;JVM &#x4F1A;&#x81EA;&#x52A8;&#x5C06;&#x9501;&#x91CA;&#x653E;&#x6389;&#xFF0C;&#x4E0D;&#x4F1A;&#x56E0;&#x4E3A;&#x51FA;&#x4E86;&#x5F02;&#x5E38;&#x6CA1;&#x6709;&#x91CA;&#x653E;&#x9501;&#x9020;&#x6210;&#x7EBF;&#x7A0B;&#x6B7B;&#x9501;&#x3002;&#x4F46;&#x662F; Lock &#x7684;&#x8BDD;&#x5C31;&#x4EAB;&#x53D7;&#x4E0D;&#x5230; JVM &#x5E26;&#x6765;&#x81EA;&#x52A8;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x51FA;&#x73B0;&#x5F02;&#x5E38;&#x65F6;&#x5FC5;&#x987B;&#x5728; finally &#x5C06;&#x9501;&#x91CA;&#x653E;&#x6389;&#xFF0C;&#x5426;&#x5219;&#x5C06;&#x4F1A;&#x5F15;&#x8D77;&#x6B7B;&#x9501;&#x3002;</p>
<p>&#x5728;&#x8D44;&#x6E90;&#x7ADE;&#x4E89;&#x4E0D;&#x662F;&#x5F88;&#x6FC0;&#x70C8;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5076;&#x5C14;&#x4F1A;&#x6709;&#x540C;&#x6B65;&#x7684;&#x60C5;&#x5F62;&#x4E0B;&#xFF0C;synchronized &#x662F;&#x5F88;&#x5408;&#x9002;&#x7684;&#x3002;&#x539F;&#x56E0;&#x5728;&#x4E8E;&#xFF0C;&#x7F16;&#x8BD1;&#x7A0B;&#x5E8F;&#x901A;&#x5E38;&#x4F1A;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x8FDB;&#x884C;&#x4F18;&#x5316; synchronize&#xFF0C;&#x53E6;&#x5916;&#x53EF;&#x8BFB;&#x6027;&#x975E;&#x5E38;&#x597D;&#xFF0C;&#x4E0D;&#x7BA1;&#x7528;&#x6CA1;&#x7528;&#x8FC7;5.0&#x591A;&#x7EBF;&#x7A0B;&#x5305;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#x90FD;&#x80FD;&#x7406;&#x89E3;&#x3002;</p>
<p>ReentrantLock &#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x6837;&#x5316;&#x7684;&#x540C;&#x6B65;&#xFF0C;&#x6BD4;&#x5982;&#x6709;&#x65F6;&#x95F4;&#x9650;&#x5236;&#x7684;&#x540C;&#x6B65;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB; Interrupt &#x7684;&#x540C;&#x6B65;&#xFF08;synchronized &#x7684;&#x540C;&#x6B65;&#x662F;&#x4E0D;&#x80FD; Interrupt &#x7684;&#xFF09;&#x7B49;&#x3002;&#x5728;&#x8D44;&#x6E90;&#x7ADE;&#x4E89;&#x4E0D;&#x6FC0;&#x70C8;&#x7684;&#x60C5;&#x5F62;&#x4E0B;&#xFF0C;&#x6027;&#x80FD;&#x7A0D;&#x5FAE;&#x6BD4;synchronized &#x5DEE;&#x70B9;&#x70B9;&#x3002;&#x4F46;&#x662F;&#x5F53;&#x540C;&#x6B65;&#x975E;&#x5E38;&#x6FC0;&#x70C8;&#x7684;&#x65F6;&#x5019;&#xFF0C;synchronized &#x7684;&#x6027;&#x80FD;&#x4E00;&#x4E0B;&#x5B50;&#x80FD;&#x4E0B;&#x964D;&#x597D;&#x51E0;&#x5341;&#x500D;&#x3002;&#x800C; ReentrantLock &#x786E;&#x8FD8;&#x80FD;&#x7EF4;&#x6301;&#x5E38;&#x6001;&#x3002;</p>
<p>ReentrantLock &#x9664;&#x4E86; synchronized &#x7684;&#x529F;&#x80FD;&#xFF0C;&#x591A;&#x4E86;&#x4E09;&#x4E2A;&#x9AD8;&#x7EA7;&#x529F;&#x80FD;&#xFF1A;&#x7B49;&#x5F85;&#x53EF;&#x4E2D;&#x65AD;&#xFF0C;&#x516C;&#x5E73;&#x9501;&#xFF0C;&#x7ED1;&#x5B9A;&#x591A;&#x4E2A; Condition&#x3002;</p>
<p>1&#xFF09;&#x7B49;&#x5F85;&#x53EF;&#x4E2D;&#x65AD;</p>
<p>&#x5728;&#x6301;&#x6709;&#x9501;&#x7684;&#x7EBF;&#x7A0B;&#x957F;&#x65F6;&#x95F4;&#x4E0D;&#x91CA;&#x653E;&#x9501;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7B49;&#x5F85;&#x7684;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x653E;&#x5F03;&#x7B49;&#x5F85;&#x3002;tryLock(long timeout, TimeUnit unit)</p>
<p>2&#xFF09;&#x516C;&#x5E73;&#x9501;</p>
<p>&#x6309;&#x7167;&#x7533;&#x8BF7;&#x9501;&#x7684;&#x987A;&#x5E8F;&#x6765;&#x4E00;&#x6B21;&#x83B7;&#x5F97;&#x9501;&#x79F0;&#x4E3A;&#x516C;&#x5E73;&#x9501;&#x3002;synchronized &#x7684;&#x662F;&#x975E;&#x516C;&#x5E73;&#x9501;&#xFF0C;ReentrantLock &#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5B9E;&#x73B0;&#x516C;&#x5E73;&#x9501;&#xFF1A;new RenentrantLock(boolean fair)</p>
<p>3&#xFF09;&#x7ED1;&#x5B9A;&#x591A;&#x4E2A; Condition</p>
<p>&#x901A;&#x8FC7;&#x591A;&#x6B21; newCondition &#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x591A;&#x4E2A; Condition &#x5BF9;&#x8C61;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x73B0;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x7684;&#x7EBF;&#x7A0B;&#x540C;&#x6B65;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x901A;&#x8FC7; await()&#xFF0C;signal()&#x3002;</p>
<p><strong>6. &#x540C;&#x6B65;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x4F8B;&#x5982; concurrentHashMap &#x7684;&#x6E90;&#x7801;&#x7406;&#x89E3;&#x4EE5;&#x53CA;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4ED6;&#x662F;&#x540C;&#x6B65;&#x7684;&#x4E14;&#x6548;&#x7387;&#x9AD8;&#x3002;</strong></p>
<p>&#x901A;&#x8FC7;&#x5206;&#x6790; Hashtable &#x5C31;&#x77E5;&#x9053;&#xFF0C;synchronized &#x662F;&#x9488;&#x5BF9;&#x6574;&#x5F20; Hash &#x8868;&#x7684;&#xFF0C;&#x5373;&#x6BCF;&#x6B21;&#x9501;&#x4F4F;&#x6574;&#x5F20;&#x8868;&#x8BA9;&#x7EBF;&#x7A0B;&#x72EC;&#x5360;&#xFF0C;ConcurrentHashMap &#x5141;&#x8BB8;&#x591A;&#x4E2A;&#x4FEE;&#x6539;&#x64CD;&#x4F5C;&#x5E76;&#x53D1;&#x8FDB;&#x884C;&#xFF0C;&#x5176;&#x5173;&#x952E;&#x5728;&#x4E8E;&#x4F7F;&#x7528;&#x4E86;&#x9501;&#x5206;&#x79BB;&#x6280;&#x672F;&#x3002;&#x5B83;&#x4F7F;&#x7528;&#x4E86;&#x591A;&#x4E2A;&#x9501;&#x6765;&#x63A7;&#x5236;&#x5BF9; hash &#x8868;&#x7684;&#x4E0D;&#x540C;&#x90E8;&#x5206;&#x8FDB;&#x884C;&#x7684;&#x4FEE;&#x6539;&#x3002;ConcurrentHashMap &#x5185;&#x90E8;&#x4F7F;&#x7528;&#x6BB5; (Segment) &#x6765;&#x8868;&#x793A;&#x8FD9;&#x4E9B;&#x4E0D;&#x540C;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x6BCF;&#x4E2A;&#x6BB5;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5C0F;&#x7684; hash table&#xFF0C;&#x5B83;&#x4EEC;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x9501;&#x3002;&#x53EA;&#x8981;&#x591A;&#x4E2A;&#x4FEE;&#x6539;&#x64CD;&#x4F5C;&#x53D1;&#x751F;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x6BB5;&#x4E0A;&#xFF0C;&#x5B83;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5E76;&#x53D1;&#x8FDB;&#x884C;&#x3002;</p>
<p>&#x6709;&#x4E9B;&#x65B9;&#x6CD5;&#x9700;&#x8981;&#x8DE8;&#x6BB5;&#xFF0C;&#x6BD4;&#x5982; size() &#x548C; containsValue()&#xFF0C;&#x5B83;&#x4EEC;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x9501;&#x5B9A;&#x6574;&#x4E2A;&#x8868;&#x800C;&#x800C;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;&#x67D0;&#x4E2A;&#x6BB5;&#xFF0C;&#x8FD9;&#x9700;&#x8981;&#x6309;&#x987A;&#x5E8F;&#x9501;&#x5B9A;&#x6240;&#x6709;&#x6BB5;&#xFF0C;&#x64CD;&#x4F5C;&#x5B8C;&#x6BD5;&#x540E;&#xFF0C;&#x53C8;&#x6309;&#x987A;&#x5E8F;&#x91CA;&#x653E;&#x6240;&#x6709;&#x6BB5;&#x7684;&#x9501;&#x3002;&#x8FD9;&#x91CC;&#x201C;&#x6309;&#x987A;&#x5E8F;&#x201D;&#x662F;&#x5F88;&#x91CD;&#x8981;&#x7684;&#xFF0C;&#x5426;&#x5219;&#x6781;&#x6709;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x6B7B;&#x9501;&#xFF0C;&#x5728; ConcurrentHashMap &#x5185;&#x90E8;&#xFF0C;&#x6BB5;&#x6570;&#x7EC4;&#x662F; final &#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x5176;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x5B9E;&#x9645;&#x4E0A;&#x4E5F;&#x662F; final &#x7684;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x4EC5;&#x4EC5;&#x662F;&#x5C06;&#x6570;&#x7EC4;&#x58F0;&#x660E;&#x4E3A;final&#x7684;&#x5E76;&#x4E0D;&#x4FDD;&#x8BC1;&#x6570;&#x7EC4;&#x6210;&#x5458;&#x4E5F;&#x662F; final &#x7684;&#xFF0C;&#x8FD9;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x4E0A;&#x7684;&#x4FDD;&#x8BC1;&#x3002;&#x8FD9;&#x53EF;&#x4EE5;&#x786E;&#x4FDD;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x6B7B;&#x9501;&#xFF0C;&#x56E0;&#x4E3A;&#x83B7;&#x5F97;&#x9501;&#x7684;&#x987A;&#x5E8F;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/dingji_ping/article/details/51005799" target="_blank" rel="external">http://blog.csdn.net/dingji_ping/article/details/51005799</a></p>
<p><strong>7. atomicinteger &#x548C; Volatile &#x7B49;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x64CD;&#x4F5C;&#x7684;&#x5173;&#x952E;&#x5B57;&#x7684;&#x7406;&#x89E3;&#x548C;&#x4F7F;&#x7528;</strong></p>
<p>Volatile &#x4FEE;&#x9970;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x5728;&#x6BCF;&#x6B21;&#x88AB;&#x7EBF;&#x7A0B;&#x8BBF;&#x95EE;&#x65F6;&#xFF0C;&#x90FD;&#x5F3A;&#x8FEB;&#x4ECE;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x91CD;&#x65B0;&#x8BFB;&#x53D6;&#x8BE5;&#x6210;&#x5458;&#x7684;&#x503C;&#xFF0C;&#x800C;&#x4E14;&#xFF0C;&#x5F53;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x503C;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x5F3A;&#x8FEB;&#x5C06;&#x53D8;&#x5316;&#x7684;&#x503C;&#x91CD;&#x65B0;&#x5199;&#x5165;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#xFF0C;&#x8FD9;&#x6837;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x7684;&#x7EBF;&#x7A0B;&#x5728;&#x8BBF;&#x95EE;&#x540C;&#x4E00;&#x4E2A;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x65F6;&#xFF0C;&#x59CB;&#x7EC8;&#x770B;&#x5230;&#x7684;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x503C;&#x3002;</p>
<p>java &#x8BED;&#x8A00;&#x89C4;&#x8303;&#x6307;&#x51FA;&#xFF1A;&#x4E3A;&#x4E86;&#x83B7;&#x53D6;&#x6700;&#x4F73;&#x7684;&#x8FD0;&#x884C;&#x901F;&#x5EA6;&#xFF0C;&#x5141;&#x8BB8;&#x7EBF;&#x7A0B;&#x4FDD;&#x7559;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x7684;&#x526F;&#x672C;&#xFF0C;&#x5F53;&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#x8FDB;&#x5165;&#x6216;&#x8005;&#x79BB;&#x5F00;&#x540C;&#x6B65;&#x4EE3;&#x7801;&#x5757;&#x65F6;&#xFF0C;&#x624D;&#x4E0E;&#x5171;&#x4EAB;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x8FDB;&#x884C;&#x6BD4;&#x5BF9;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x53D8;&#x5316;&#x518D;&#x66F4;&#x65B0;&#x5171;&#x4EAB;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x3002;&#x8FD9;&#x6837;&#x5F53;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x540C;&#x65F6;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x65F6;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x5B58;&#x5728;&#x503C;&#x4E0D;&#x540C;&#x6B65;&#x7684;&#x73B0;&#x8C61;&#x3002;</p>
<p>&#x800C; volatile &#x8FD9;&#x4E2A;&#x503C;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x544A;&#x8BC9; VM&#xFF1A;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x4E0D;&#x80FD;&#x4FDD;&#x5B58;&#x5B83;&#x7684;&#x526F;&#x672C;&#xFF0C;&#x8981;&#x76F4;&#x63A5;&#x4E0E;&#x5171;&#x4EAB;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x4EA4;&#x4E92;&#x3002;</p>
<p>&#x5EFA;&#x8BAE;&#xFF1A;&#x5F53;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x540C;&#x65F6;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; volatile&#xFF0C;&#x800C;&#x5F53;&#x8BBF;&#x95EE;&#x7684;&#x53D8;&#x91CF;&#x5DF2;&#x5728; synchronized &#x4EE3;&#x7801;&#x5757;&#x4E2D;&#x65F6;&#xFF0C;&#x4E0D;&#x5FC5;&#x4F7F;&#x7528;&#x3002;<br>
&#x7F3A;&#x70B9;&#xFF1A;&#x4F7F;&#x7528; volatile &#x5C06;&#x4F7F;&#x5F97; VM &#x4F18;&#x5316;&#x5931;&#x53BB;&#x4F5C;&#x7528;&#xFF0C;&#x5BFC;&#x81F4;&#x6548;&#x7387;&#x8F83;&#x4F4E;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x5728;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#x3002;</p>
<p>AtomicInteger &#x4E3A;&#x4EC0;&#x4E48;&#x80FD;&#x591F;&#x8FBE;&#x5230;&#x591A;&#x800C;&#x4E0D;&#x4E71;&#xFF0C;&#x5904;&#x7406;&#x9AD8;&#x5E76;&#x53D1;&#x5E94;&#x4ED8;&#x81EA;&#x5982;&#x5462;&#xFF0C;&#x6211;&#x4EEC;&#x624D;&#x770B;&#x770B;AtomicInteger&#x7684;&#x6E90;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>private volatile int value;  
</code></pre>
<p>&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6709;&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;value&#x5C31;&#x662F;&#x4F60;&#x8BBE;&#x7F6E;&#x7684;&#x81EA;&#x52A0;&#x8D77;&#x59CB;&#x503C;&#x3002;&#x6CE8;&#x610F;&#x770B;&#x5B83;&#x7684;&#x8BBF;&#x95EE;&#x63A7;&#x5236;&#x7B26;&#xFF0C;&#x662F;volatile&#xFF0C;&#x8FD9;&#x4E2A;&#x5C31;&#x662F;&#x4FDD;&#x8BC1;AtomicInteger&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x6839;&#x6E90;&#x3002;</p>
<p><strong>8. &#x7EBF;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#xFF0C;wait &#x548C; notify</strong></p>
<p>&#x5982;&#x679C;&#x5BF9;&#x8C61;&#x8C03;&#x7528;&#x4E86; wait &#x65B9;&#x6CD5;&#x5C31;&#x4F1A;&#x4F7F;&#x6301;&#x6709;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x7EBF;&#x7A0B;&#x628A;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x63A7;&#x5236;&#x6743;&#x4EA4;&#x51FA;&#x53BB;&#xFF0C;&#x7136;&#x540E;&#x5904;&#x4E8E;&#x7B49;&#x5F85;&#x72B6;&#x6001;&#x3002;</p>
<p>&#x5982;&#x679C;&#x5BF9;&#x8C61;&#x8C03;&#x7528;&#x4E86; notify &#x65B9;&#x6CD5;&#x5C31;&#x4F1A;&#x901A;&#x77E5;&#x67D0;&#x4E2A;&#x6B63;&#x5728;&#x7B49;&#x5F85;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x63A7;&#x5236;&#x6743;&#x7684;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x8FD0;&#x884C;&#x3002;</p>
<p>&#x5982;&#x679C;&#x5BF9;&#x8C61;&#x8C03;&#x7528;&#x4E86; notifyAll &#x65B9;&#x6CD5;&#x5C31;&#x4F1A;&#x901A;&#x77E5;&#x6240;&#x6709;&#x7B49;&#x5F85;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x63A7;&#x5236;&#x6743;&#x7684;&#x7EBF;&#x7A0B;&#x7EE7;&#x7EED;&#x8FD0;&#x884C;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/ns_code/article/details/17225469" target="_blank" rel="external">http://blog.csdn.net/ns_code/article/details/17225469</a></p>
<p><strong>9. &#x5B9A;&#x65F6;&#x7EBF;&#x7A0B;&#x7684;&#x4F7F;&#x7528;</strong><br>
&#x8FD9;&#x662F;&#x6700;&#x5E38;&#x89C1;&#x7684;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; thread&#xFF0C;&#x7136;&#x540E;&#x8BA9;&#x5B83;&#x5728; while &#x5FAA;&#x73AF;&#x91CC;&#x4E00;&#x76F4;&#x8FD0;&#x884C;&#x7740;&#xFF0C;&#x901A;&#x8FC7; sleep &#x65B9;&#x6CD5;&#x6765;&#x8FBE;&#x5230;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x7684;&#x6548;&#x679C;&#x3002;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x73B0;&#x3002;</p>
<pre><code>/** 
 * &#x666E;&#x901A;thread 
 * &#x8FD9;&#x662F;&#x6700;&#x5E38;&#x89C1;&#x7684;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;thread&#xFF0C;&#x7136;&#x540E;&#x8BA9;&#x5B83;&#x5728;while&#x5FAA;&#x73AF;&#x91CC;&#x4E00;&#x76F4;&#x8FD0;&#x884C;&#x7740;&#xFF0C; 
 * &#x901A;&#x8FC7;sleep&#x65B9;&#x6CD5;&#x6765;&#x8FBE;&#x5230;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x7684;&#x6548;&#x679C;&#x3002;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 
 * @author GT 
 * 
 */  
public class Task1 {  
    public static void main(String[] args) {  
        // run in a second  
        final long timeInterval = 1000;  
        Runnable runnable = new Runnable() {  
            public void run() {  
                while (true) {  
                    // ------- code for task to run  
                    System.out.println(&quot;Hello !!&quot;);  
                    // ------- ends here  
                    try {  
                        Thread.sleep(timeInterval);  
                    } catch (InterruptedException e) {  
                        e.printStackTrace();  
                    }  
                }  
            }  
        };  
        Thread thread = new Thread(runnable);  
        thread.start();  
    }  
}  
</code></pre>
<p>&#x7528; Timer &#x548C; TimerTask</p>
<p>&#x4E0A;&#x9762;&#x7684;&#x5B9E;&#x73B0;&#x641C;&#x7D22;&#x662F;&#x975E;&#x5E38;&#x5FEB;&#x901F;&#x7B80;&#x4FBF;&#x7684;&#xFF0C;&#x4F46;&#x5B83;&#x4E5F;&#x7F3A;&#x5C11;&#x4E00;&#x4E9B;&#x529F;&#x80FD;&#x3002;&#x7528; Timer &#x548C; TimerTask &#x7684;&#x8BDD;&#x4E0E;&#x4E0A;&#x8FF0;&#x65B9;&#x6CD5;&#x76F8;&#x6BD4;&#x6709;&#x5982;&#x4E0B;&#x597D;&#x5904;&#xFF1A;</p>
<ul>
<li>&#x5F53;&#x542F;&#x52A8;&#x548C;&#x53BB;&#x53D6;&#x6D88;&#x4EFB;&#x52A1;&#x65F6;&#x53EF;&#x4EE5;&#x63A7;&#x5236;</li>
<li>&#x7B2C;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x65F6;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x4F60;&#x60F3;&#x8981;&#x7684; delay &#x65F6;&#x95F4;</li>
</ul>
<p>&#x5728;&#x5B9E;&#x73B0;&#x65F6;&#xFF0C;Timer &#x7C7B;&#x53EF;&#x4EE5;&#x8C03;&#x5EA6;&#x4EFB;&#x52A1;&#xFF0C;TimerTask &#x5219;&#x662F;&#x901A;&#x8FC7;&#x5728; run() &#x65B9;&#x6CD5;&#x91CC;&#x5B9E;&#x73B0;&#x5177;&#x4F53;&#x4EFB;&#x52A1;&#x3002;Timer &#x5B9E;&#x4F8B;&#x53EF;&#x4EE5;&#x8C03;&#x5EA6;&#x591A;&#x4EFB;&#x52A1;&#xFF0C;&#x5B83;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x3002;&#x5F53;Timer&#x7684;&#x6784;&#x9020;&#x5668;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#xFF0C;&#x5B83;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x8C03;&#x5EA6;&#x4EFB;&#x52A1;&#x3002;</p>
<pre><code>/** 
 *  
 * &#x4E8E;&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x76F8;&#x6BD4;&#xFF0C;&#x4F18;&#x52BF; 1&gt;&#x5F53;&#x542F;&#x52A8;&#x548C;&#x53BB;&#x53D6;&#x6D88;&#x4EFB;&#x52A1;&#x65F6;&#x53EF;&#x4EE5;&#x63A7;&#x5236; 2&gt;&#x7B2C;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x65F6;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x4F60;&#x60F3;&#x8981;&#x7684;delay&#x65F6;&#x95F4; 
 *  
 * &#x5728;&#x5B9E;&#x73B0;&#x65F6;&#xFF0C;Timer&#x7C7B;&#x53EF;&#x4EE5;&#x8C03;&#x5EA6;&#x4EFB;&#x52A1;&#xFF0C;TimerTask&#x5219;&#x662F;&#x901A;&#x8FC7;&#x5728;run()&#x65B9;&#x6CD5;&#x91CC;&#x5B9E;&#x73B0;&#x5177;&#x4F53;&#x4EFB;&#x52A1;&#x3002; Timer&#x5B9E;&#x4F8B;&#x53EF;&#x4EE5;&#x8C03;&#x5EA6;&#x591A;&#x4EFB;&#x52A1;&#xFF0C;&#x5B83;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x3002; 
 * &#x5F53;Timer&#x7684;&#x6784;&#x9020;&#x5668;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#xFF0C;&#x5B83;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#xFF0C;&#x8FD9;&#x4E2A;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x8C03;&#x5EA6;&#x4EFB;&#x52A1;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x4EE3;&#x7801;&#xFF1A; 
 *  
 * @author GT 
 *  
 */  
public class Task2 {  
    public static void main(String[] args) {  
        TimerTask task = new TimerTask() {  
            @Override  
            public void run() {  
                // task to run goes here  
                System.out.println(&quot;Hello !!!&quot;);  
            }  
        };  
        Timer timer = new Timer();  
        long delay = 0;  
        long intevalPeriod = 1 * 1000;  
        // schedules the task to be run in an interval  
        timer.scheduleAtFixedRate(task, delay, intevalPeriod);  
    } // end of main  
}  
</code></pre>
<p>&#x7531;&#x4E8E; TimerTask &#x662F;&#x4EE5;&#x961F;&#x5217;&#x7684;&#x65B9;&#x5F0F;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x88AB;&#x987A;&#x5E8F;&#x6267;&#x884C;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x53EF;&#x80FD;&#x548C;&#x9884;&#x671F;&#x7684;&#x65F6;&#x95F4;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x5982;&#x679C;&#x524D;&#x9762;&#x7684;&#x4EFB;&#x52A1;&#x6D88;&#x8017;&#x65F6;&#x95F4;&#x8F83;&#x957F;&#xFF0C;&#x5219;&#x540E;&#x9762;&#x7684;&#x4EFB;&#x52A1;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x4E5F;&#x4F1A;&#x88AB;&#x5EF6;&#x8FDF;&#x3002;</p>
<p>ScheduledExecutorService &#x5B9E;&#x73B0;</p>
<pre><code>/** 
 *  
 *  
 * ScheduledExecutorService&#x662F;&#x4ECE;Java SE5&#x7684;java.util.concurrent&#x91CC;&#xFF0C;&#x505A;&#x4E3A;&#x5E76;&#x53D1;&#x5DE5;&#x5177;&#x7C7B;&#x88AB;&#x5F15;&#x8FDB;&#x7684;&#xFF0C;&#x8FD9;&#x662F;&#x6700;&#x7406;&#x60F3;&#x7684;&#x5B9A;&#x65F6;&#x4EFB;&#x52A1;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x3002;  
 * &#x76F8;&#x6BD4;&#x4E8E;&#x4E0A;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x6709;&#x4EE5;&#x4E0B;&#x597D;&#x5904;&#xFF1A; 
 * 1&gt;&#x76F8;&#x6BD4;&#x4E8E;Timer&#x7684;&#x5355;&#x7EBF;&#x7A0B;&#xFF0C;&#x5B83;&#x662F;&#x901A;&#x8FC7;&#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x7684;  
 * 2&gt;&#x53EF;&#x4EE5;&#x5F88;&#x7075;&#x6D3B;&#x7684;&#x53BB;&#x8BBE;&#x5B9A;&#x7B2C;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x4EFB;&#x52A1;delay&#x65F6;&#x95F4; 
 * 3&gt;&#x63D0;&#x4F9B;&#x4E86;&#x826F;&#x597D;&#x7684;&#x7EA6;&#x5B9A;&#xFF0C;&#x4EE5;&#x4FBF;&#x8BBE;&#x5B9A;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x95F4;&#x9694; 
 *  
 * &#x4E0B;&#x9762;&#x662F;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;ScheduledExecutorService#scheduleAtFixedRate&#x5C55;&#x793A;&#x8FD9;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x901A;&#x8FC7;&#x4EE3;&#x7801;&#x91CC;&#x53C2;&#x6570;&#x7684;&#x63A7;&#x5236;&#xFF0C;&#x9996;&#x6B21;&#x6267;&#x884C;&#x52A0;&#x4E86;delay&#x65F6;&#x95F4;&#x3002; 
 *  
 *  
 * @author GT 
 *  
 */  
public class Task3 {  
    public static void main(String[] args) {  
        Runnable runnable = new Runnable() {  
            public void run() {  
                // task to run goes here  
                System.out.println(&quot;Hello !!&quot;);  
            }  
        };  
        ScheduledExecutorService service = Executors  
                .newSingleThreadScheduledExecutor();  
        // &#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x9996;&#x6B21;&#x6267;&#x884C;&#x7684;&#x5EF6;&#x65F6;&#x65F6;&#x95F4;&#xFF0C;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x5B9A;&#x65F6;&#x6267;&#x884C;&#x7684;&#x95F4;&#x9694;&#x65F6;&#x95F4;  
        service.scheduleAtFixedRate(runnable, 10, 1, TimeUnit.SECONDS);  
    }  
}  
</code></pre>
<p><strong>10. &#x573A;&#x666F;&#xFF1A;&#x5728;&#x4E00;&#x4E2A;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#xFF0C;&#x8981;&#x6C42;&#x6709;&#x5927;&#x91CF;(&#x5F88;&#x591A;&#x5F88;&#x591A;)&#x5B50;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x4E3B;&#x7EBF;&#x7A0B;&#x624D;&#x6267;&#x884C;&#x5B8C;&#x6210;&#x3002;&#x591A;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x8003;&#x8651;&#x6548;&#x7387;&#x3002;</strong></p>
<p>&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x786E;&#x4FDD;&#x6240;&#x6709;&#x7684;&#x5B50;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x4E86;&#x3002;&#x4E00;&#x822C;&#x7684;&#x6709;&#x5982;&#x4E0B;&#x65B9;&#x6CD5;&#xFF1A;</p>
<p>&#xFF08;1&#xFF09;&#x8BA9;&#x4E3B;&#x7EBF;&#x7A0B;&#x7B49;&#x5F85;&#xFF0C;&#x6216;&#x7740;&#x7761;&#x7720;&#x51E0;&#x5206;&#x949F;&#x3002;&#x7528; Thread.sleep() &#x6216;&#x8005; TimeUnit.SECONDS.sleep(5);<br>
&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public class ThreadSubMain1 {  
  
    public static void main(String[] args) {  
        // TODO Auto-generated method stub  
  
        for (int i = 0; i &lt; 10; i++) {  
  
            new Thread(new Runnable() {  
                public void run() {  
  
                    try {  
                        Thread.sleep(1000);  
                        // &#x6A21;&#x62DF;&#x5B50;&#x7EBF;&#x7A0B;&#x4EFB;&#x52A1;  
                    } catch (InterruptedException e) {  
                    }  
                    System.out.println(&quot;&#x5B50;&#x7EBF;&#x7A0B;&quot; + Thread.currentThread() + &quot;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&quot;);  
                }  
            }).start();   
        }  
  
        try {  
            // &#x7B49;&#x5F85;&#x5168;&#x90E8;&#x5B50;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
            TimeUnit.SECONDS.sleep(5);  
        } catch (InterruptedException e) {  
            // TODO Auto-generated catch block  
            e.printStackTrace();  
        }  
        System.out.println(&quot;&#x4E3B;&#x7EBF;&#x6267;&#x884C;&#x3002;&quot;);  
    }  
}  
</code></pre>
<p>&#x6548;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-1,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-3,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-5,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-7,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-9,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-0,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-2,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-4,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-6,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-8,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x4E3B;&#x7EBF;&#x6267;&#x884C;&#x3002;  
</code></pre>
<p>&#x6B64;&#x65B9;&#x4E3B;&#x7EBF;&#x7A0B;&#x53EA;&#x662F;&#x7761;&#x4E86; 5 &#x79D2;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x5168;&#x90E8;&#x7684;&#x5B50;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x6210;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x513F;&#x7684;5&#x79D2;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x4F30;&#x503C;&#x3002;</p>
<p>&#xFF08;2&#xFF09;&#x4F7F;&#x7528; Thread &#x7684; join() &#x7B49;&#x5F85;&#x6240;&#x6709;&#x7684;&#x5B50;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;&#x4E3B;&#x7EBF;&#x7A0B;&#x5728;&#x6267;&#x884C;&#x3002;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public class ThreadSubMain2 {  
  
    public static void main(String[] args) {  
        // &#x4F7F;&#x7528;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;Vector   
        Vector&lt;Thread&gt; threads = new Vector&lt;Thread&gt;();  
        for (int i = 0; i &lt; 10; i++) {  
  
            Thread iThread = new Thread(new Runnable() {  
                public void run() {  
  
                    try {  
                        Thread.sleep(1000);  
                        // &#x6A21;&#x62DF;&#x5B50;&#x7EBF;&#x7A0B;&#x4EFB;&#x52A1;  
                    } catch (InterruptedException e) {  
                    }  
                    System.out.println(&quot;&#x5B50;&#x7EBF;&#x7A0B;&quot; + Thread.currentThread() + &quot;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&quot;);  
  
                }  
            });  
  
            threads.add(iThread);  
            iThread.start();  
        }  
  
        for (Thread iThread : threads) {  
            try {  
                // &#x7B49;&#x5F85;&#x6240;&#x6709;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
                iThread.join();  
            } catch (InterruptedException e) {  
                e.printStackTrace();  
            }  
        }  
  
        System.out.println(&quot;&#x4E3B;&#x7EBF;&#x6267;&#x884C;&#x3002;&quot;);  
    }  
  
}  
</code></pre>
<p>&#x6267;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-1,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-2,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-0,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-3,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-4,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-9,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-7,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-5,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-8,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[Thread-6,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x4E3B;&#x7EBF;&#x6267;&#x884C;&#x3002; 
</code></pre>
<p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x7B26;&#x5408;&#x8981;&#x6C42;&#xFF0C;&#x5B83;&#x80FD;&#x591F;&#x7B49;&#x5F85;&#x6240;&#x6709;&#x7684;&#x5B50;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#xFF0C;&#x4E3B;&#x7EBF;&#x7A0B;&#x624D;&#x4F1A;&#x6267;&#x884C;&#x3002;</p>
<p>&#xFF08;3&#xFF09;&#x4F7F;&#x7528; ExecutorService &#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x7B49;&#x5F85;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x518D;&#x6267;&#x884C;&#x4E3B;&#x7EBF;&#x7A0B; awaitTermination&#x3002;</p>
<p>awaitTermination(long timeout,TimeUnit unit) &#x8BF7;&#x6C42;&#x5173;&#x95ED;&#x3001;&#x53D1;&#x751F;&#x8D85;&#x65F6;&#x6216;&#x8005;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x4E2D;&#x65AD;&#xFF0C;&#x65E0;&#x8BBA;&#x54EA;&#x4E00;&#x4E2A;&#x9996;&#x5148;&#x53D1;&#x751F;&#x4E4B;&#x540E;&#xFF0C;&#x90FD;&#x5C06;&#x5BFC;&#x81F4;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x5B8C;&#x6210;&#x6267;&#x884C;&#x3002;</p>
<pre><code>public class ThreadSubMain3 {  
  
    public static void main(String[] args) {  
        // &#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x7F13;&#x51B2;&#x7684;&#x7EBF;&#x7A0B;&#x503C; &#x7EBF;&#x7A0B;&#x6C60;&#x7684;&#x5927;&#x5C0F;&#x6839;&#x636E;&#x4EFB;&#x52A1;&#x53D8;&#x5316;  
        ExecutorService threadPool = Executors.newCachedThreadPool();  
        for (int i = 0; i &lt; 10; i++) {  
  
            threadPool.execute(new Runnable() {  
                public void run() {  
  
                    try {  
                        Thread.sleep(1000);  
                        // &#x6A21;&#x62DF;&#x5B50;&#x7EBF;&#x7A0B;&#x4EFB;&#x52A1;  
                    } catch (InterruptedException e) {  
                    }  
                    System.out.println(&quot;&#x5B50;&#x7EBF;&#x7A0B;&quot; + Thread.currentThread() + &quot;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&quot;);  
  
                }  
            });  
  
        }  
  
        // &#x542F;&#x52A8;&#x4E00;&#x6B21;&#x987A;&#x5E8F;&#x5173;&#x95ED;&#xFF0C;&#x6267;&#x884C;&#x4EE5;&#x524D;&#x63D0;&#x4EA4;&#x7684;&#x4EFB;&#x52A1;&#xFF0C;&#x4F46;&#x4E0D;&#x63A5;&#x53D7;&#x65B0;&#x4EFB;&#x52A1;&#x3002;  
        threadPool.shutdown();  
  
        try {  
            // &#x8BF7;&#x6C42;&#x5173;&#x95ED;&#x3001;&#x53D1;&#x751F;&#x8D85;&#x65F6;&#x6216;&#x8005;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x4E2D;&#x65AD;&#xFF0C;&#x65E0;&#x8BBA;&#x54EA;&#x4E00;&#x4E2A;&#x9996;&#x5148;&#x53D1;&#x751F;&#x4E4B;&#x540E;&#xFF0C;&#x90FD;&#x5C06;&#x5BFC;&#x81F4;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x4EFB;&#x52A1;&#x5B8C;&#x6210;&#x6267;&#x884C;  
            // &#x8BBE;&#x7F6E;&#x6700;&#x957F;&#x7B49;&#x5F85;10&#x79D2;  
            threadPool.awaitTermination(10, TimeUnit.SECONDS);  
        } catch (InterruptedException e) {  
            //  
            e.printStackTrace();  
        }  
  
        System.out.println(&quot;&#x4E3B;&#x7EBF;&#x6267;&#x884C;&#x3002;&quot;);  
    }  
  
}  
</code></pre>
<p>&#x6267;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-4,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-1,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-7,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-6,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-5,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-2,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-3,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-8,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-10,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x5B50;&#x7EBF;&#x7A0B;Thread[pool-1-thread-9,5,main]&#x6267;&#x884C;&#x5B8C;&#x6BD5;  
&#x4E3B;&#x7EBF;&#x6267;&#x884C;&#x3002;  
</code></pre>
<p>&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x548C;&#x65B9;&#x6CD5; 2 &#x4E00;&#x6837;&#xFF0C;&#x5C06;&#x7B49;&#x5F85;&#x6240;&#x6709;&#x5B50;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#x624D;&#x6267;&#x884C;&#x4E3B;&#x7EBF;&#x7A0B;&#x3002;</p>
<p>&#xFF08;4&#xFF09;&#x4F7F;&#x7528; Java.util.concurrent &#x4E2D;&#x7684; CountDownLatch&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x5012;&#x6570;&#x8BA1;&#x6570;&#x5668;&#x3002;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x5148;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x5012;&#x6570;&#x8BA1;&#x6570;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x6BCF;&#x8C03;&#x7528;&#x4E00;&#x6B21; countDown() &#x65B9;&#x6CD5;&#xFF0C;&#x5012;&#x6570;&#x503C;&#x51CF;&#x4E00;&#xFF0C;&#x4ED6;&#x7684; await() &#x65B9;&#x6CD5;&#x4F1A;&#x963B;&#x585E;&#x5F53;&#x524D;&#x8FDB;&#x7A0B;&#xFF0C;&#x76F4;&#x5230;&#x5012;&#x6570;&#x81F3;0&#x3002;</p>
<pre><code>Thread t = new Thread() {
  public void run() {
	try {
        //TODO &#x4F60;&#x7684;&#x5E94;&#x7528;
    } catch (Exception e) {
        //TODO &#x5F02;&#x5E38;&#x5904;&#x7406;
    } finally {
       latch.countDown();  //&#x8FD9;&#x53E5;&#x662F;&#x5173;&#x952E;
       System.out.println(&quot;ok&quot;);  //5&#x4E2A;&#x7EBF;&#x7A0B;&#x90FD;&#x8DD1;&#x5B8C;&#x540E;&#x8F93;&#x51FA;
	}
  }
};
 t.start();
</code></pre>
<p>&#x7136;&#x540E;&#x8BA9;&#x4EE5;&#x4E0A;&#x64CD;&#x4F5C;&#x5FAA;&#x73AF;&#x4E94;&#x6B21;(&#x5C31;&#x662F;&#x8BF4;&#x540C;&#x65F6;&#x5F00;5&#x4E2A;&#x7EBF;&#x7A0B;)&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&quot;ok&quot;&#x5C31;&#x4F1A;&#x5728;&#x7B49;&#x5230;&#x8FD9;5&#x4E2A;&#x7EBF;&#x7A0B;&#x90FD;ok&#x540E;&#x624D;&#x4F1A;&#x88AB;&#x8F93;&#x51FA;&#x4E00;&#x6B21;&#x3002;</p>
<p>&#x5177;&#x4F53;&#x8BF7;&#x770B;&#xFF1A;<a href="http://blog.csdn.net/fengshizty/article/details/41356845?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">http://blog.csdn.net/fengshizty/article/details/41356845?utm_source=tuicool&amp;utm_medium=referral</a></p>
<p><strong>11. &#x8FDB;&#x7A0B;&#x548C;&#x7EBF;&#x7A0B;&#x7684;&#x533A;&#x522B;</strong></p>
<p><strong>12. &#x4EC0;&#x4E48;&#x53EB;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#xFF1F;</strong></p>
<p><strong>13. &#x7EBF;&#x7A0B;&#x7684;&#x51E0;&#x79CD;&#x72B6;&#x6001;</strong></p>
<p><strong>14. &#x5E76;&#x53D1;&#x3001;&#x540C;&#x6B65;&#x7684;&#x63A5;&#x53E3;&#x6216;&#x65B9;&#x6CD5;</strong></p>
<p><strong>15. HashMap &#x662F;&#x5426;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#xFF0C;&#x4E3A;&#x4F55;&#x4E0D;&#x5B89;&#x5168;&#x3002; ConcurrentHashMap&#xFF0C;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#xFF0C;&#x4E3A;&#x4F55;&#x5B89;&#x5168;&#x3002;&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x662F;&#x600E;&#x4E48;&#x6837;&#x7684;&#x3002;</strong></p>
<p><strong>16. J.U.C&#x4E0B;&#x7684;&#x5E38;&#x89C1;&#x7C7B;&#x7684;&#x4F7F;&#x7528;&#x3002; ThreadPool&#x7684;&#x6DF1;&#x5165;&#x8003;&#x5BDF;&#xFF1B; BlockingQueue&#x7684;&#x4F7F;&#x7528;&#x3002;&#xFF08;take&#xFF0C;poll&#x7684;&#x533A;&#x522B;&#xFF0C;put&#xFF0C;offer&#x7684;&#x533A;&#x522B;&#xFF09;&#xFF1B;&#x539F;&#x5B50;&#x7C7B;&#x7684;&#x5B9E;&#x73B0;&#x3002;</strong></p>
<p><strong>17. &#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x4E0B;&#x591A;&#x7EBF;&#x7A0B;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x4ECE;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x5F00;&#x59CB;&#x3002;&#x7136;&#x540E;&#x600E;&#x4E48;&#x63A7;&#x5236;&#x540C;&#x6B65;&#x8FC7;&#x7A0B;&#xFF0C;&#x591A;&#x7EBF;&#x7A0B;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x7ED3;&#x6784;</strong></p>
<p><strong>18. volatile&#x7684;&#x7406;&#x89E3;</strong></p>
<p><strong>19. &#x5B9E;&#x73B0;&#x591A;&#x7EBF;&#x7A0B;&#x6709;&#x51E0;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x591A;&#x7EBF;&#x7A0B;&#x540C;&#x6B65;&#x600E;&#x4E48;&#x505A;&#xFF0C;&#x8BF4;&#x8BF4;&#x51E0;&#x4E2A;&#x7EBF;&#x7A0B;&#x91CC;&#x5E38;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x3002;</strong></p>
<h2 id="&#x7F51;&#x7EDC;&#x901A;&#x4FE1;"><a class="header-anchor" href="#&#x7F51;&#x7EDC;&#x901A;&#x4FE1;"></a>&#x7F51;&#x7EDC;&#x901A;&#x4FE1;</h2>
<ol>
<li>
<p>http&#x662F;&#x65E0;&#x72B6;&#x6001;&#x901A;&#x4FE1;&#xFF0C;http&#x7684;&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#x6709;&#x54EA;&#x4E9B;&#xFF0C;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5B9A;&#x4E49;&#x65B0;&#x7684;&#x8BF7;&#x6C42;&#x65B9;&#x5F0F;&#x4E48;&#x3002;</p>
</li>
<li>
<p>socket&#x901A;&#x4FE1;&#xFF0C;&#x4EE5;&#x53CA;&#x957F;&#x8FDE;&#x63A5;&#xFF0C;&#x5206;&#x5305;&#xFF0C;&#x8FDE;&#x63A5;&#x5F02;&#x5E38;&#x65AD;&#x5F00;&#x7684;&#x5904;&#x7406;&#x3002;</p>
</li>
<li>
<p>socket&#x901A;&#x4FE1;&#x6A21;&#x578B;&#x7684;&#x4F7F;&#x7528;&#xFF0C;AIO&#x548C;NIO&#x3002;</p>
</li>
<li>
<p>socket&#x6846;&#x67B6;netty&#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x4EE5;&#x53CA;NIO&#x7684;&#x5B9E;&#x73B0;&#x539F;&#x7406;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x662F;&#x5F02;&#x6B65;&#x975E;&#x963B;&#x585E;&#x3002;</p>
</li>
<li>
<p>&#x540C;&#x6B65;&#x548C;&#x5F02;&#x6B65;&#xFF0C;&#x963B;&#x585E;&#x548C;&#x975E;&#x963B;&#x585E;&#x3002;</p>
</li>
<li>
<p>OSI&#x4E03;&#x5C42;&#x6A21;&#x578B;&#xFF0C;&#x5305;&#x62EC;TCP,IP&#x7684;&#x4E00;&#x4E9B;&#x57FA;&#x672C;&#x77E5;&#x8BC6;</p>
</li>
<li>
<p>http&#x4E2D;&#xFF0C;get post&#x7684;&#x533A;&#x522B;</p>
</li>
<li>
<p>&#x8BF4;&#x8BF4;http,tcp,udp&#x4E4B;&#x95F4;&#x5173;&#x7CFB;&#x548C;&#x533A;&#x522B;&#x3002;</p>
</li>
<li>
<p><a href="http://xn--www-n25e006hty9aw4c9la856w.taobao.com" target="_blank" rel="external">&#x8BF4;&#x8BF4;&#x6D4F;&#x89C8;&#x5668;&#x8BBF;&#x95EE;www.taobao.com</a>&#xFF0C;&#x7ECF;&#x5386;&#x4E86;&#x600E;&#x6837;&#x7684;&#x8FC7;&#x7A0B;&#x3002;</p>
</li>
<li>
<p>HTTP&#x534F;&#x8BAE;&#x3001;  HTTPS&#x534F;&#x8BAE;&#xFF0C;SSL&#x534F;&#x8BAE;&#x53CA;&#x5B8C;&#x6574;&#x4EA4;&#x4E92;&#x8FC7;&#x7A0B;&#xFF1B;</p>
</li>
<li>
<p>tcp&#x7684;&#x62E5;&#x585E;&#xFF0C;&#x5FEB;&#x56DE;&#x4F20;&#xFF0C;ip&#x7684;&#x62A5;&#x6587;&#x4E22;&#x5F03;</p>
</li>
<li>
<p>https&#x5904;&#x7406;&#x7684;&#x4E00;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF0C;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;&#x548C;&#x975E;&#x5BF9;&#x79F0;&#x52A0;&#x5BC6;</p>
</li>
<li>
<p>head&#x5404;&#x4E2A;&#x7279;&#x70B9;&#x548C;&#x533A;&#x522B;</p>
</li>
<li>
<p><a href="http://xn--www-n25e006hty9aw4c9la856w.taobao.com" target="_blank" rel="external">&#x8BF4;&#x8BF4;&#x6D4F;&#x89C8;&#x5668;&#x8BBF;&#x95EE;www.taobao.com</a>&#xFF0C;&#x7ECF;&#x5386;&#x4E86;&#x600E;&#x6837;&#x7684;&#x8FC7;&#x7A0B;&#x3002;</p>
</li>
</ol>
<h2 id="&#x6570;&#x636E;&#x5E93;mysql"><a class="header-anchor" href="#&#x6570;&#x636E;&#x5E93;mysql"></a>&#x6570;&#x636E;&#x5E93;MySql</h2>
<ol>
<li>
<p>MySql&#x7684;&#x5B58;&#x50A8;&#x5F15;&#x64CE;&#x7684;&#x4E0D;&#x540C;</p>
</li>
<li>
<p>&#x5355;&#x4E2A;&#x7D22;&#x5F15;&#x3001;&#x8054;&#x5408;&#x7D22;&#x5F15;&#x3001;&#x4E3B;&#x952E;&#x7D22;&#x5F15;</p>
</li>
<li>
<p>Mysql&#x600E;&#x4E48;&#x5206;&#x8868;&#xFF0C;&#x4EE5;&#x53CA;&#x5206;&#x8868;&#x540E;&#x5982;&#x679C;&#x60F3;&#x6309;&#x6761;&#x4EF6;&#x5206;&#x9875;&#x67E5;&#x8BE2;&#x600E;&#x4E48;&#x529E;</p>
</li>
<li>
<p>&#x5206;&#x8868;&#x4E4B;&#x540E;&#x60F3;&#x8BA9;&#x4E00;&#x4E2A;id&#x591A;&#x4E2A;&#x8868;&#x662F;&#x81EA;&#x589E;&#x7684;&#xFF0C;&#x6548;&#x7387;&#x5B9E;&#x73B0;</p>
</li>
<li>
<p>MySql&#x7684;&#x4E3B;&#x4ECE;&#x5B9E;&#x65F6;&#x5907;&#x4EFD;&#x540C;&#x6B65;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x4EE5;&#x53CA;&#x539F;&#x7406;(&#x4ECE;&#x5E93;&#x8BFB;&#x4E3B;&#x5E93;&#x7684;binlog)&#xFF0C;&#x8BFB;&#x5199;&#x5206;&#x79BB;&#x3002;</p>
</li>
<li>
<p>&#x5199;SQL&#x8BED;&#x53E5;&#x548C;SQL&#x4F18;&#x5316;</p>
</li>
<li>
<p>&#x7D22;&#x5F15;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;B+&#x6811;</p>
</li>
<li>
<p>&#x4E8B;&#x52A1;&#x7684;&#x56DB;&#x4E2A;&#x7279;&#x6027;&#xFF0C;&#x4EE5;&#x53CA;&#x5404;&#x81EA;&#x7684;&#x7279;&#x70B9;&#xFF08;&#x539F;&#x5B50;&#x3001;&#x9694;&#x79BB;&#xFF09;&#x7B49;&#x7B49;&#xFF0C;&#x9879;&#x76EE;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x3002;</p>
</li>
<li>
<p>&#x6570;&#x636E;&#x5E93;&#x7684;&#x9501;&#xFF1A;&#x884C;&#x9501;&#xFF0C;&#x8868;&#x9501;&#xFF1B;&#x4E50;&#x89C2;&#x9501;&#xFF0C;&#x60B2;&#x89C2;&#x9501;</p>
</li>
<li>
<p>&#x6570;&#x636E;&#x5E93;&#x4E8B;&#x52A1;&#x7684;&#x51E0;&#x79CD;&#x7C92;&#x5EA6;</p>
</li>
<li>
<p>&#x5173;&#x7CFB;&#x578B;&#x548C;&#x975E;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x533A;&#x522B;</p>
</li>
</ol>
<h2 id="&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;"><a class="header-anchor" href="#&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;"></a>&#x8BBE;&#x8BA1;&#x6A21;&#x5F0F;</h2>
<ol>
<li>
<p>&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#xFF1A;&#x9971;&#x6C49;&#x3001;&#x997F;&#x6C49;&#x3002;&#x4EE5;&#x53CA;&#x997F;&#x6C49;&#x4E2D;&#x7684;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#xFF0C;&#x53CC;&#x91CD;&#x68C0;&#x67E5;&#x3002;</p>
</li>
<li>
<p>&#x5DE5;&#x5382;&#x6A21;&#x5F0F;&#x3001;&#x88C5;&#x9970;&#x8005;&#x6A21;&#x5F0F;&#x3001;&#x89C2;&#x5BDF;&#x8005;&#x6A21;&#x5F0F;&#x3002;</p>
</li>
<li>
<p>&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6A21;&#x5F0F;&#x7684;&#x4F18;&#x70B9;&#xFF08;&#x4F4E;&#x8026;&#x5408;&#x3001;&#x9AD8;&#x5185;&#x805A;&#xFF0C;&#x5F00;&#x653E;&#x5C01;&#x95ED;&#x539F;&#x5219;&#xFF09;</p>
</li>
</ol>
<h2 id="&#x7B97;&#x6CD5;"><a class="header-anchor" href="#&#x7B97;&#x6CD5;"></a>&#x7B97;&#x6CD5;</h2>
<ol>
<li>
<p>&#x4F7F;&#x7528;&#x968F;&#x673A;&#x7B97;&#x6CD5;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x6570;&#xFF0C;&#x8981;&#x6C42;&#x628A;1-1000W&#x4E4B;&#x95F4;&#x8FD9;&#x4E9B;&#x6570;&#x5168;&#x90E8;&#x751F;&#x6210;&#x3002;</p>
</li>
<li>
<p>&#x4E24;&#x4E2A;&#x6709;&#x5E8F;&#x6570;&#x7EC4;&#x7684;&#x5408;&#x5E76;&#x6392;&#x5E8F;</p>
</li>
<li>
<p>&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x5012;&#x5E8F;</p>
</li>
<li>
<p>&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x7684;&#x6B63;&#x5E73;&#x65B9;&#x6839;</p>
</li>
<li>
<p>&#x8BF4;&#x767D;&#x4E86;&#x5C31;&#x662F;&#x5E38;&#x89C1;&#x7684;&#x90A3;&#x4E9B;&#x67E5;&#x627E;&#x3001;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x4EE5;&#x53CA;&#x5404;&#x81EA;&#x7684;&#x65F6;&#x95F4;&#x590D;&#x6742;&#x5EA6;&#x3002;</p>
</li>
<li>
<p>&#x4E8C;&#x53C9;&#x6811;&#x7684;&#x904D;&#x5386;&#x7B97;&#x6CD5;</p>
</li>
<li>
<p>DFS,BFS&#x7B97;&#x6CD5;</p>
</li>
<li>
<p>&#x6BD4;&#x8F83;&#x91CD;&#x8981;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5982;&#x94FE;&#x8868;&#xFF0C;&#x961F;&#x5217;&#xFF0C;&#x6808;&#x7684;&#x57FA;&#x672C;&#x7406;&#x89E3;&#x53CA;&#x5927;&#x81F4;&#x5B9E;&#x73B0;&#x3002;</p>
</li>
<li>
<p>&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x4E0E;&#x65F6;&#x7A7A;&#x590D;&#x6742;&#x5EA6;&#xFF08;&#x5FEB;&#x6392;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x8FD8;&#x5728;&#x7528;&#xFF09;</p>
</li>
<li>
<p>&#x9006;&#x6CE2;&#x5170;&#x8BA1;&#x7B97;&#x5668;</p>
</li>
<li>
<p>Hoffman &#x7F16;&#x7801;</p>
</li>
<li>
<p>&#x67E5;&#x627E;&#x6811;&#x4E0E;&#x7EA2;&#x9ED1;&#x6811;</p>
</li>
</ol>
<h2 id="&#x5E76;&#x53D1;&#x4E0E;&#x6027;&#x80FD;&#x8C03;&#x4F18;"><a class="header-anchor" href="#&#x5E76;&#x53D1;&#x4E0E;&#x6027;&#x80FD;&#x8C03;&#x4F18;"></a>&#x5E76;&#x53D1;&#x4E0E;&#x6027;&#x80FD;&#x8C03;&#x4F18;</h2>
<ol>
<li>
<p>&#x6709;&#x4E2A;&#x6BCF;&#x79D2;&#x949F;5k&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x67E5;&#x8BE2;&#x624B;&#x673A;&#x53F7;&#x6240;&#x5C5E;&#x5730;&#x7684;&#x7B14;&#x8BD5;&#x9898;&#xFF0C;&#x5982;&#x4F55;&#x8BBE;&#x8BA1;&#x7B97;&#x6CD5;?&#x8BF7;&#x6C42;&#x518D;&#x591A;&#xFF0C;&#x6BD4;&#x5982;5w&#xFF0C;&#x5982;&#x4F55;&#x8BBE;&#x8BA1;&#x6574;&#x4E2A;&#x7CFB;&#x7EDF;?</p>
</li>
<li>
<p>&#x9AD8;&#x5E76;&#x53D1;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x7CFB;&#x7EDF;&#x662F;&#x5982;&#x4F55;&#x652F;&#x6491;&#x5927;&#x91CF;&#x7684;&#x8BF7;&#x6C42;&#x7684;</p>
</li>
<li>
<p>&#x96C6;&#x7FA4;&#x5982;&#x4F55;&#x540C;&#x6B65;&#x4F1A;&#x8BDD;&#x72B6;&#x6001;</p>
</li>
<li>
<p>&#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x7684;&#x539F;&#x7406;</p>
</li>
</ol>
<p>5 .&#x5982;&#x679C;&#x6709;&#x4E00;&#x4E2A;&#x7279;&#x522B;&#x5927;&#x7684;&#x8BBF;&#x95EE;&#x91CF;&#xFF0C;&#x5230;&#x6570;&#x636E;&#x5E93;&#x4E0A;&#xFF0C;&#x600E;&#x4E48;&#x505A;&#x4F18;&#x5316;&#xFF08;DB&#x8BBE;&#x8BA1;&#xFF0C;DBIO&#xFF0C;SQL&#x4F18;&#x5316;&#xFF0C;Java&#x4F18;&#x5316;&#xFF09;</p>
<ol start="6">
<li>
<p>&#x5982;&#x679C;&#x51FA;&#x73B0;&#x5927;&#x9762;&#x79EF;&#x5E76;&#x53D1;&#xFF0C;&#x5728;&#x4E0D;&#x589E;&#x52A0;&#x670D;&#x52A1;&#x5668;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x5982;&#x4F55;&#x89E3;&#x51B3;&#x670D;&#x52A1;&#x5668;&#x54CD;&#x5E94;&#x4E0D;&#x53CA;&#x65F6;&#x95EE;&#x9898;&#x201C;&#x3002;</p>
</li>
<li>
<p>&#x5047;&#x5982;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x51FA;&#x73B0;&#x6027;&#x80FD;&#x74F6;&#x9888;&#x4E86;&#xFF0C;&#x4F60;&#x89C9;&#x5F97;&#x53EF;&#x80FD;&#x4F1A;&#x662F;&#x54EA;&#x4E9B;&#x65B9;&#x9762;&#xFF0C;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;</p>
</li>
<li>
<p>&#x5982;&#x4F55;&#x67E5;&#x627E; &#x9020;&#x6210; &#x6027;&#x80FD;&#x74F6;&#x9888;&#x51FA;&#x73B0;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x662F;&#x54EA;&#x4E2A;&#x4F4D;&#x7F6E;&#x7167;&#x6210;&#x6027;&#x80FD;&#x74F6;&#x9888;&#x3002;</p>
</li>
<li>
<p>&#x4F60;&#x7684;&#x9879;&#x76EE;&#x4E2D;&#x4F7F;&#x7528;&#x8FC7;&#x7F13;&#x5B58;&#x673A;&#x5236;&#x5417;&#xFF1F;&#x6709;&#x6CA1;&#x7528;&#x7528;&#x6237;&#x975E;&#x672C;&#x5730;&#x7F13;&#x5B58;</p>
</li>
</ol>
<h2 id="&#x5176;&#x4ED6;"><a class="header-anchor" href="#&#x5176;&#x4ED6;"></a>&#x5176;&#x4ED6;</h2>
<p>1.&#x5E38;&#x7528;&#x7684;linux&#x4E0B;&#x7684;&#x547D;&#x4EE4;</p>
<p><a href="https://yq.aliyun.com/articles/71569?utm_content=m_13205" target="_blank" rel="external">https://yq.aliyun.com/articles/71569?utm_content=m_13205</a> Java&#x9762;&#x8BD5;&#x5FC5;&#x770B;&#x4E8C;&#x5341;&#x95EE;&#x9898;</p>
<p><strong>&#x6162;&#x6162;&#x5B8C;&#x5584;&#x4E2D;&#x2026;</strong></p>]]></content>
    
    <summary type="html">
    
      本篇汇总了 Java 面试题的部分知识点，正在持续添加中，方便复习之用......
    
    </summary>
    
      <category term="编程" scheme="http://ngudream.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Java" scheme="http://ngudream.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Android Binder机制</title>
    <link href="http://ngudream.com/2017/03/14/android-binder/"/>
    <id>http://ngudream.com/2017/03/14/android-binder/</id>
    <published>2017-03-14T14:47:29.000Z</published>
    <updated>2017-03-14T14:59:03.482Z</updated>
    
    <content type="html"><![CDATA[<h2 id="&#x4E3A;&#x4EC0;&#x4E48;&#x662F;binder&#xFF1F;"><a class="header-anchor" href="#&#x4E3A;&#x4EC0;&#x4E48;&#x662F;binder&#xFF1F;"></a>&#x4E3A;&#x4EC0;&#x4E48;&#x662F;Binder&#xFF1F;</h2>
<p>Binder&#x67B6;&#x6784;&#x4E5F;&#x662F;&#x91C7;&#x7528;&#x5206;&#x5C42;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;, &#x6BCF;&#x4E00;&#x5C42;&#x90FD;&#x6709;&#x5176;&#x4E0D;&#x540C;&#x7684;&#x529F;&#x80FD;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/03/14/android-binder/binder.png" class="lazy">
</div>
<ul>
<li>Java &#x5E94;&#x7528;&#x5C42;: &#x5BF9;&#x4E8E;&#x4E0A;&#x5C42;&#x5E94;&#x7528;&#x901A;&#x8FC7;&#x8C03;&#x7528; AMP.startService, &#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x5173;&#x5FC3;&#x5E95;&#x5C42;,&#x7ECF;&#x8FC7;&#x5C42;&#x5C42;&#x8C03;&#x7528;,&#x6700;&#x7EC8;&#x5FC5;&#x7136;&#x4F1A;&#x8C03;&#x7528;&#x5230; AMS.startService&#x3002;</li>
<li>Java IPC&#x5C42;: Binder &#x901A;&#x4FE1;&#x662F;&#x91C7;&#x7528;C/S&#x67B6;&#x6784;, Android&#x7CFB;&#x7EDF;&#x7684;&#x57FA;&#x7840;&#x67B6;&#x6784;&#x4FBF;&#x5DF2;&#x8BBE;&#x8BA1;&#x597D; Binder &#x5728; Java framework &#x5C42;&#x7684; Binder &#x5BA2;&#x6237;&#x7C7B; BinderProxy&#x548C;&#x670D;&#x52A1;&#x7C7B;Binder;</li>
<li>Native IPC&#x5C42;: &#x5BF9;&#x4E8E; Native &#x5C42;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x76F4;&#x63A5;&#x4F7F;&#x7528; Binder(&#x6BD4;&#x5982; media &#x76F8;&#x5173;), &#x5219;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528; BpBinder &#x548C; BBinder (&#x5F53;&#x7136;&#x8FD9;&#x91CC;&#x8FD8;&#x6709; JavaBBinder)&#x5373;&#x53EF;, &#x5BF9;&#x4E8E;&#x4E0A;&#x4E00;&#x5C42; Java IPC &#x7684;&#x901A;&#x4FE1;&#x4E5F;&#x662F;&#x57FA;&#x4E8E;&#x8FD9;&#x4E2A;&#x5C42;&#x9762;.</li>
<li>Kernel&#x7269;&#x7406;&#x5C42;: &#x8FD9;&#x91CC;&#x662F; Binder Driver, &#x524D;&#x9762;3&#x5C42;&#x90FD;&#x8DD1;&#x5728;&#x7528;&#x6237;&#x7A7A;&#x95F4;,&#x5BF9;&#x4E8E;&#x7528;&#x6237;&#x7A7A;&#x95F4;&#x7684;&#x5185;&#x5B58;&#x8D44;&#x6E90;&#x662F;&#x4E0D;&#x5171;&#x4EAB;&#x7684;,&#x6BCF;&#x4E2A; Android &#x7684;&#x8FDB;&#x7A0B;&#x53EA;&#x80FD;&#x8FD0;&#x884C;&#x5728;&#x81EA;&#x5DF1;&#x8FDB;&#x7A0B;&#x6240;&#x62E5;&#x6709;&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;, &#x800C;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x5374;&#x662F;&#x53EF;&#x5171;&#x4EAB;&#x7684;. &#x771F;&#x6B63;&#x901A;&#x4FE1;&#x7684;&#x6838;&#x5FC3;&#x73AF;&#x8282;&#x8FD8;&#x662F;&#x5728; Binder Driver.</li>
</ul>
<p><strong>&#x5404;&#x79CD;IPC&#x65B9;&#x5F0F;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#x6B21;&#x6570;&#xFF1A;</strong></p>
<table>
<thead>
<tr>
<th>IPC</th>
<th>&#x6570;&#x636E;&#x62F7;&#x8D1D;&#x6B21;&#x6570;</th>
</tr>
</thead>
<tbody>
<tr>
<td>&#x5171;&#x4EAB;&#x5185;&#x5B58;</td>
<td>0</td>
</tr>
<tr>
<td>Binder</td>
<td>1</td>
</tr>
<tr>
<td>Socket/&#x7BA1;&#x9053;/&#x6D88;&#x606F;&#x961F;&#x5217;</td>
<td>2</td>
</tr>
</tbody>
</table>
<p>&#x901A;&#x8FC7;&#x4E0A;&#x8868;&#x6570;&#x636E;&#x7684;&#x5BF9;&#x6BD4;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4E86;&#x89E3;&#x5230;&#x4F20;&#x7EDF;IPC&#x7684;&#x4E00;&#x4E9B;&#x5C40;&#x9650;&#x6027;&#xFF1A;</p>
<ul>
<li>&#x7BA1;&#x9053;&#x548C;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF1A;&#x56E0;&#x4E3A;&#x91C7;&#x7528;&#x5B58;&#x50A8;&#x8F6C;&#x53D1;&#x65B9;&#x5F0F;&#xFF0C;&#x5373;&#x6570;&#x636E;&#x5148;&#x4ECE;&#x53D1;&#x9001;&#x65B9;&#x7F13;&#x5B58;&#x533A;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x5F00;&#x8F9F;&#x7684;&#x7F13;&#x5B58;&#x533A;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4ECE;&#x5185;&#x6838;&#x7F13;&#x5B58;&#x533A;&#x62F7;&#x8D1D;&#x5230;&#x63A5;&#x6536;&#x65B9;&#x7F13;&#x5B58;&#x533A;&#xFF0C;&#x6240;&#x4EE5;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x62F7;&#x8D1D;2&#x6B21;&#x6570;&#x636E;&#xFF0C;&#x6548;&#x7387;&#x4F4E;&#xFF1B;</li>
<li>socket&#xFF1A;&#x4F5C;&#x4E3A;&#x4E00;&#x6B3E;&#x901A;&#x7528;&#x63A5;&#x53E3;&#xFF0C;&#x5176;&#x4F20;&#x8F93;&#x6548;&#x7387;&#x4F4E;&#xFF0C;&#x5F00;&#x9500;&#x5927;&#xFF0C;&#x4E3B;&#x8981;&#x7528;&#x5728;&#x8DE8;&#x7F51;&#x7EDC;&#x7684;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x548C;&#x672C;&#x673A;&#x4E0A;&#x8FDB;&#x7A0B;&#x95F4;&#x7684;&#x4F4E;&#x901F;&#x901A;&#x4FE1;&#x3002;</li>
<li>&#x5171;&#x4EAB;&#x5185;&#x5B58;&#xFF1A;&#x867D;&#x7136;&#x5728;&#x4F20;&#x8F93;&#x65F6;&#x6CA1;&#x6709;&#x62F7;&#x8D1D;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x5176;&#x63A7;&#x5236;&#x673A;&#x5236;&#x590D;&#x6742;&#xFF0C;&#x6BD4;&#x5982;&#x8DE8;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1;&#x65F6;&#xFF0C;&#x9700;&#x83B7;&#x53D6;&#x5BF9;&#x65B9;&#x8FDB;&#x7A0B;&#x7684;pid&#xFF0C;&#x5F97;&#x591A;&#x79CD;&#x673A;&#x5236;&#x534F;&#x540C;&#x64CD;&#x4F5C;&#xFF0C;&#x96BE;&#x4EE5;&#x4F7F;&#x7528;&#x3002;</li>
</ul>
<p>Binder&#x5F62;&#x5F0F;&#x7684;&#x4F18;&#x52BF;&#xFF1A;</p>
<ul>
<li>&#x6709;&#x66F4;&#x597D;&#x7684;&#x4F20;&#x8F93;&#x6027;&#x80FD;&#x3002;</li>
<li>&#x91C7;&#x7528;C/S&#x7684;&#x901A;&#x4FE1;&#x6A21;&#x5F0F;&#x3002;&#x800C;&#x5728; linux &#x901A;&#x4FE1;&#x673A;&#x5236;&#x4E2D;&#xFF0C;&#x76EE;&#x524D;&#x53EA;&#x6709;socket&#x652F;&#x6301;C/S&#x7684;&#x901A;&#x4FE1;&#x6A21;&#x5F0F;&#xFF0C;&#x4F46;socket&#x6709;&#x5176;&#x52A3;&#x52BF;&#xFF0C;&#x5177;&#x4F53;&#x53C2;&#x770B;&#x7B2C;&#x4E8C;&#x6761;&#x3002;</li>
<li>&#x5B89;&#x5168;&#x6027;&#x66F4;&#x9AD8;&#x3002; &#x9996;&#x5148;&#x4F20;&#x7EDF; IPC &#x7684;&#x63A5;&#x6536;&#x65B9;&#x65E0;&#x6CD5;&#x83B7;&#x5F97;&#x5BF9;&#x65B9;&#x8FDB;&#x7A0B;&#x53EF;&#x9760;&#x7684; UID &#x548C; PID&#xFF08;&#x7528;&#x6237;ID&#x8FDB;&#x7A0B;ID&#xFF09;&#xFF0C;&#x4ECE;&#x800C;&#x65E0;&#x6CD5;&#x9274;&#x522B;&#x5BF9;&#x65B9;&#x8EAB;&#x4EFD;&#x3002;Binder &#x673A;&#x5236;&#x662F;&#x7531; Android &#x5185;&#x6838;&#x81EA;&#x52A8;&#x5206;&#x914D;&#x7684;&#xFF0C;&#x65E0;&#x6CD5;&#x4FEE;&#x6539;&#xFF0C;&#x6240;&#x4EE5;&#x5B89;&#x5168;&#x6027;&#x66F4;&#x9AD8;&#x3002;</li>
</ul>
<p>&#x6E90;&#x7801;&#x4E2D;&#xFF0C;&#x5B8F;&#x5B9A;&#x4E49;&#xFF1A;<em><em>#define BINDER_SERVICE_MANAGER ((void</em>)0)</em>*<br>
&#x8868;&#x793A; ServiceManager &#x5BF9;&#x5E94;&#x7684;&#x53E5;&#x67C4;&#x4E3A;0&#xFF0C;&#x8868;&#x9762;&#x81EA;&#x5DF1;&#x662F;&#x670D;&#x52A1;&#x5668;&#x7BA1;&#x7406;&#x8005;&#x3002;&#x5176;&#x4ED6;&#x7684;Server&#x8FDB;&#x7A0B;&#x53E5;&#x67C4;&#x503C;&#x90FD;&#x662F;&#x5927;&#x4E8E;0&#x7684;&#x3002;</p>
<p>Binder &#x901A;&#x4FE1;&#x673A;&#x5236;&#x4F7F;&#x7528;&#x53E5;&#x67C4;&#x6765;&#x4EE3;&#x8868;&#x8FDC;&#x7A0B;&#x63A5;&#x53E3;&#xFF0C;&#x8FD9;&#x4E2A;&#x53E5;&#x67C4;&#x7684;&#x610F;&#x4E49;&#x548C; Windows &#x7F16;&#x7A0B;&#x4E2D;&#x7528;&#x5230;&#x7684;&#x53E5;&#x67C4;&#x662F;&#x5DEE;&#x4E0D;&#x591A;&#x7684;&#x6982;&#x5FF5;&#x3002;&#x524D;&#x9762;&#x8BF4;&#x5230;&#xFF0C;Service Manager &#x5728;&#x5145;&#x5F53;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x5B83;&#x5145;&#x5F53; Server &#x7684;&#x89D2;&#x8272;&#xFF0C;&#x5F53;&#x5B83;&#x4F5C;&#x4E3A;&#x8FDC;&#x7A0B;&#x63A5;&#x53E3;&#x4F7F;&#x7528;&#x65F6;&#xFF0C;&#x5B83;&#x7684;&#x53E5;&#x67C4;&#x503C;&#x4FBF;&#x4E3A;0&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x5B83;&#x7684;&#x7279;&#x6B8A;&#x4E4B;&#x5904;&#xFF0C;&#x5176;&#x4F59;&#x7684; Server &#x7684;&#x8FDC;&#x7A0B;&#x63A5;&#x53E3;&#x53E5;&#x67C4;&#x503C;&#x90FD;&#x662F;&#x4E00;&#x4E2A;&#x5927;&#x4E8E;0 &#x800C;&#x4E14;&#x7531; Binder &#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x81EA;&#x52A8;&#x8FDB;&#x884C;&#x5206;&#x914D;&#x7684;&#x3002;</p>
<h2 id="&#x51E0;&#x70B9;&#x7591;&#x95EE;"><a class="header-anchor" href="#&#x51E0;&#x70B9;&#x7591;&#x95EE;"></a>&#x51E0;&#x70B9;&#x7591;&#x95EE;</h2>
<p><strong>&#xFF08;1&#xFF09;&#x662F;&#x8C01;&#xFF0C;&#x600E;&#x4E48;&#x6837;&#x6210;&#x4E3A;SM&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#xFF0C;handle&#x4E3A;0&#x7684;binder&#x5B9E;&#x4F53;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x521B;&#x5EFA;&#xFF1F;</strong></p>
<p>&#x5F53;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x4F7F;&#x7528; BINDER_SET_CONTEXT_MGR &#x547D;&#x4EE4;&#x5C06;&#x81EA;&#x5DF1;&#x6CE8;&#x518C;&#x6210; SM &#x65F6; Binder &#x9A71;&#x52A8;&#x4F1A;&#x81EA;&#x52A8;&#x4E3A;&#x5B83;&#x521B;&#x5EFA; Binder &#x5B9E;&#x4F53;&#xFF08;&#x8FD9;&#x5C31;&#x662F;&#x90A3;&#x53EA;&#x9884;&#x5148;&#x9020;&#x597D;&#x7684;&#x9E21;&#xFF09;&#x3002;&#x5176;&#x6B21;&#x8FD9;&#x4E2A;Binder&#x7684;&#x5F15;&#x7528;&#x5728;&#x6240;&#x6709;Client&#x4E2D;&#x90FD;&#x56FA;&#x5B9A;&#x4E3A;0&#x800C;&#x65E0;&#x987B;&#x901A;&#x8FC7;&#x5176;&#x5B83;&#x624B;&#x6BB5;&#x83B7;&#x5F97;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x4E00;&#x4E2A; Server &#x82E5;&#x8981;&#x5411; SM &#x6CE8;&#x518C;&#x81EA;&#x5DF1; Binder &#x5C31;&#x5FC5;&#x9700;&#x901A;&#x8FC7;0&#x8FD9;&#x4E2A;&#x5F15;&#x7528;&#x548C; SM &#x7684; Binder &#x901A;&#x4FE1;&#x3002;</p>
<p><strong>&#xFF08;2&#xFF09;binder&#x5F15;&#x7528;&#x548C;&#x5B9E;&#x4F53;&#x662F;&#x5982;&#x4F55;&#x521B;&#x5EFA;&#x7684;&#xFF1F;&#x5728;&#x9A71;&#x52A8;&#x4E2D;&#x5982;&#x4F55;&#x5B9E;&#x73B0;&#x7684;&#x901A;&#x4FE1;&#xFF1F;</strong></p>
<p>Server &#x521B;&#x5EFA;&#x4E86; Binder &#x5B9E;&#x4F53;&#xFF0C;&#x4E3A;&#x5176;&#x53D6;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x5F62;&#x5F0F;&#xFF0C;&#x53EF;&#x8BFB;&#x6613;&#x8BB0;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x5C06;&#x8FD9;&#x4E2A; Binder &#x8FDE;&#x540C;&#x540D;&#x5B57;&#x4EE5;&#x6570;&#x636E;&#x5305;&#x7684;&#x5F62;&#x5F0F;&#x901A;&#x8FC7; Binder &#x9A71;&#x52A8;&#x53D1;&#x9001;&#x7ED9; SM&#xFF0C;&#x901A;&#x77E5; SM &#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x540D;&#x53EB;&#x5F20;&#x4E09;&#x7684; Binder&#xFF0C;&#x5B83;&#x4F4D;&#x4E8E;&#x67D0;&#x4E2A; Server &#x4E2D;&#x3002;&#x9A71;&#x52A8;&#x4E3A;&#x8FD9;&#x4E2A;&#x7A7F;&#x8FC7;&#x8FDB;&#x7A0B;&#x8FB9;&#x754C;&#x7684; Binder &#x521B;&#x5EFA;&#x4F4D;&#x4E8E;&#x5185;&#x6838;&#x4E2D;&#x7684;&#x5B9E;&#x4F53;&#x8282;&#x70B9;&#x4EE5;&#x53CA; SM &#x5BF9;&#x5B9E;&#x4F53;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x5C06;&#x540D;&#x5B57;&#x53CA;&#x65B0;&#x5EFA;&#x7684;&#x5F15;&#x7528;&#x4F20;&#x9012;&#x7ED9; SM&#x3002; SM &#x6536;&#x6570;&#x636E;&#x5305;&#x540E;&#xFF0C;&#x4ECE;&#x4E2D;&#x53D6;&#x51FA;&#x540D;&#x5B57;&#x548C;&#x5F15;&#x7528;&#x586B;&#x5165;&#x4E00;&#x5F20;&#x67E5;&#x627E;&#x8868;&#x4E2D;&#x3002;</p>
<p>Server &#x5411; SM &#x6CE8;&#x518C;&#x4E86; Binder &#x5B9E;&#x4F53;&#x53CA;&#x5176;&#x540D;&#x5B57;&#x540E;(service_manager.c)&#xFF0C;Client &#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x540D;&#x5B57;&#x83B7;&#x5F97;&#x8BE5; Binder &#x7684;&#x5F15;&#x7528;&#x4E86;&#x3002;Client &#x4E5F;&#x5229;&#x7528;&#x4FDD;&#x7559;&#x7684;0&#x53F7;&#x5F15;&#x7528;&#x5411;SMgr&#x8BF7;&#x6C42;&#x8BBF;&#x95EE;&#x67D0;&#x4E2A; Binder&#xFF1A;&#x6211;&#x7533;&#x8BF7;&#x83B7;&#x5F97;&#x540D;&#x5B57;&#x53EB;&#x5F20;&#x4E09;&#x7684; Binder &#x7684;&#x5F15;&#x7528;&#x3002;SM &#x6536;&#x5230;&#x8FD9;&#x4E2A;&#x8FDE;&#x63A5;&#x8BF7;&#x6C42;&#xFF0C;&#x4ECE;&#x8BF7;&#x6C42;&#x6570;&#x636E;&#x5305;&#x91CC;&#x83B7;&#x5F97; Binder &#x7684;&#x540D;&#x5B57;&#xFF0C;&#x5728;&#x67E5;&#x627E;&#x8868;&#x91CC;&#x627E;&#x5230;&#x8BE5;&#x540D;&#x5B57;&#x5BF9;&#x5E94;&#x7684;&#x6761;&#x76EE;&#xFF0C;&#x4ECE;&#x6761;&#x76EE;&#x4E2D;&#x53D6;&#x51FA; Binder &#x7684;&#x5F15;&#x7528;&#xFF0C;&#x5C06;&#x8BE5;&#x5F15;&#x7528;&#x4F5C;&#x4E3A;&#x56DE;&#x590D;&#x53D1;&#x9001;&#x7ED9;&#x53D1;&#x8D77;&#x8BF7;&#x6C42;&#x7684; Client&#x3002;</p>
<p><strong>&#xFF08;3&#xFF09;&#x5728;SM&#x4E2D;&#xFF0C;binder&#x5B9E;&#x4F53;&#x662F;&#x600E;&#x6837;&#x8F6C;&#x6362;&#x6210;&#x4E3A;&#x5F15;&#x7528;&#x7684;&#xFF1F;</strong></p>
<p>&#x9996;&#x5148;&#xFF0C;XXXServer(XXX&#x4EE3;&#x8868;&#x67D0;&#x4E2A;)&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x8FDB;&#x7A0B;&#x4E2D;&#x5411;Binder&#x9A71;&#x52A8;&#x7533;&#x8BF7;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; XXXService &#x7684; Binder &#x7684;&#x5B9E;&#x4F53;&#xFF0C;</p>
<p>Binder &#x9A71;&#x52A8;&#x4E3A;&#x8FD9;&#x4E2A; XXXService &#x521B;&#x5EFA;&#x4F4D;&#x4E8E;&#x5185;&#x6838;&#x4E2D;&#x7684; Binder &#x5B9E;&#x4F53;&#x8282;&#x70B9;&#x4EE5;&#x53CA; Binder &#x7684;&#x5F15;&#x7528;&#xFF0C;&#x6CE8;&#x610F;&#xFF0C;&#x662F;&#x5C06;&#x540D;&#x5B57;&#x548C;&#x65B0;&#x5EFA;&#x7684;&#x5F15;&#x7528;&#x6253;&#x5305;&#x4F20;&#x9012;&#x7ED9; SM&#xFF08;&#x5B9E;&#x4F53;&#x6CA1;&#x6709;&#x4F20;&#x7ED9; SM&#xFF09;&#xFF0C;&#x901A;&#x77E5;SM&#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x540D;&#x53EB; XXX&#x7684;Service&#x3002;</p>
<p>SM &#x6536;&#x5230;&#x6570;&#x636E;&#x5305;&#x540E;&#xFF0C;&#x4ECE;&#x4E2D;&#x53D6;&#x51FA; XXXService &#x540D;&#x5B57;&#x548C;&#x5F15;&#x7528;&#xFF0C;&#x586B;&#x5165;&#x4E00;&#x5F20;&#x67E5;&#x627E;&#x8868;&#x4E2D;&#x3002;</p>
<p>&#x6B64;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x6709; Client &#x5411; SM &#x53D1;&#x9001;&#x7533;&#x8BF7;&#x670D;&#x52A1; XXXService &#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x90A3;&#x4E48;SM&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x67E5;&#x627E;&#x8868;&#x4E2D;&#x627E;&#x5230;&#x8BE5; Service &#x7684; Binder &#x5F15;&#x7528;&#xFF0C;&#x5E76;&#x628A; Binder &#x5F15;&#x7528;(XXXBpBinder)&#x8FD4;&#x56DE;&#x7ED9; Client&#x3002;</p>
<p><strong>&#xFF08;4&#xFF09;Server&#x662F;&#x5982;&#x4F55;&#x6CE8;&#x518C;&#x670D;&#x52A1;&#xFF0C;Client&#x662F;&#x5982;&#x4F55;&#x83B7;&#x53D6;&#x670D;&#x52A1;&#x7684;&#xFF1F;</strong></p>
<p>&#x5BF9;&#x4E8E;Server&#x8FDB;&#x7A0B;&#xFF0C;&#x8C03;&#x7528;IServiceManager::addService&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x6765;&#x548C;Binder&#x9A71;&#x52A8;&#x8FDB;&#x884C;&#x4EA4;&#x4E92;&#xFF0C;&#x5373;BpServiceManager::addService&#x3002;&#x7136;&#x540E;BpServiceManager::addService&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x5176;&#x57FA;&#x7C7B;BpRefBase&#x7684;&#x6210;&#x5458;&#x51FD;&#x6570;remote&#x83B7;&#x53D6;&#x539F;&#x5148;&#x521B;&#x5EFA;&#x7684;BpBinder&#x5B9E;&#x4F8B;&#xFF1B;&#x63A5;&#x7740;&#x8C03;&#x7528;BpBinder::transact&#x6210;&#x5458;&#x51FD;&#x6570;&#x3002;&#x5728;transact&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x53C8;&#x4F1A;&#x8C03;&#x7528;IPCThreadState::transact&#x6210;&#x5458;&#x51FD;&#x6570;&#x4E0E;Binder&#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x8FDB;&#x884C;&#x4EA4;&#x4E92;&#x3002;&#x539F;&#x56E0;&#x662F;IPCThreadState&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;mProcess&#x662F;ProcessState&#x7C7B;&#x578B;&#xFF0C;&#x5176;&#x53EF;&#x4EE5;&#x6253;&#x5F00;Binder&#x8BBE;&#x5907;&#x3002;</p>
<p>&#x5BF9;&#x4E8E; Client &#x8FDB;&#x7A0B;&#xFF0C;&#x8C03;&#x7528; IServiceManager::getService &#x63A5;&#x53E3;&#x6765;&#x548C; Binder &#x9A71;&#x52A8;&#x8FDB;&#x884C;&#x4EA4;&#x4E92;&#x3002;&#x540E;&#x7EED;&#x6B65;&#x9AA4;&#x8DDF; Server &#x8FDB;&#x7A0B;&#x4E00;&#x6837;&#x3002;</p>
<p>&#x5BF9;&#x4E00;&#x822C;&#x7684; Service &#x7EC4;&#x4EF6;&#x6765;&#x8BF4;&#xFF0C;Client &#x8FDB;&#x7A0B;&#x9996;&#x5148;&#x8981;&#x901A;&#x8FC7; Binder &#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x6765;&#x83B7;&#x53D6;&#x5B83;&#x7684;&#x4E00;&#x4E2A;&#x53E5;&#x67C4;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x53E5;&#x67C4;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; Binder &#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#xFF0C;&#x6700;&#x540E;&#x5C06;&#x8FD9;&#x4E2A; Binder &#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x7279;&#x5B9A;&#x63A5;&#x53E3;&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x3002;&#x7531;&#x4E8E; ServiceManager &#x7684;&#x53E5;&#x67C4;&#x503C;&#x4E3A;0&#xFF0C;&#x56E0;&#x6B64;&#x83B7;&#x53D6;&#x5B83;&#x7684;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4E0D;&#x9700;&#x8981;&#x8DDF; Binder &#x9A71;&#x52A8;&#x7A0B;&#x5E8F;&#x8FDB;&#x7A0B;&#x4EA4;&#x4E92;&#x3002;</p>
<p><strong>&#xFF08;5&#xFF09;&#x4E3A;&#x4EC0;&#x4E48;Binder&#x673A;&#x5236;&#x53EA;&#x7528;&#x4E00;&#x6B21;&#x62F7;&#x8D1D;&#xFF1F;</strong></p>
<p>Binder &#x673A;&#x5236;&#x4F1A;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x8FDB;&#x7A0B;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x548C;&#x5185;&#x6838;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#x6765;&#x6620;&#x5C04;&#x540C;&#x4E00;&#x4E2A;&#x7269;&#x7406;&#x9875;&#x9762;&#x3002;&#x8FD9;&#x4E5F;&#x662F; Binder &#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x673A;&#x5236;&#x7684;&#x7CBE;&#x9AD3;&#x6240;&#x5728;&#x4E86;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x7269;&#x7406;&#x9875;&#x9762;&#xFF0C;&#x4E00;&#x65B9;&#x6620;&#x5C04;&#x5230;&#x8FDB;&#x7A0B;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x6620;&#x5C04;&#x5230;&#x5185;&#x6838;&#x865A;&#x62DF;&#x5730;&#x5740;&#x7A7A;&#x95F4;&#xFF0C;&#x8FD9;&#x6837;&#xFF0C;&#x8FDB;&#x7A0B;&#x548C;&#x5185;&#x6838;&#x4E4B;&#x95F4;&#x5C31;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x4E00;&#x6B21;&#x5185;&#x5B58;&#x62F7;&#x8D1D;&#x4E86;&#xFF0C;&#x63D0;&#x5230;&#x4E86;&#x8FDB;&#x7A0B;&#x95F4;&#x901A;&#x4FE1;&#x6548;&#x7387;&#x3002;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#x5982;&#xFF0C;Client &#x8981;&#x5C06;&#x4E00;&#x5757;&#x5185;&#x5B58;&#x6570;&#x636E;&#x4F20;&#x9012;&#x7ED9; Server&#xFF0C;&#x4E00;&#x822C;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF0C;Client &#x5C06;&#x8FD9;&#x5757;&#x6570;&#x636E;&#x4ECE;&#x5B83;&#x7684;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x62F7;&#x8D1D;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x5185;&#x6838;&#x518D;&#x5C06;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x4ECE;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#x62F7;&#x8D1D;&#x5230; Server &#x7684;&#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#xFF0C;&#x8FD9;&#x6837;&#xFF0C;Server &#x5C31;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x4E86;&#x3002;&#x4F46;&#x662F;&#x5728;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x6267;&#x884C;&#x4E86;&#x4E24;&#x6B21;&#x5185;&#x5B58;&#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x91C7;&#x7528;&#x6211;&#x4EEC;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x628A; Client &#x8FDB;&#x7A0B;&#x7A7A;&#x95F4;&#x7684;&#x6570;&#x636E;&#x62F7;&#x8D1D;&#x4E00;&#x6B21;&#x5230;&#x5185;&#x6838;&#x7A7A;&#x95F4;&#xFF0C;&#x7136;&#x540E; Server &#x4E0E;&#x5185;&#x6838;&#x5171;&#x4EAB;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x53EA;&#x9700;&#x8981;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x5185;&#x5B58;&#x62F7;&#x8D1D;&#xFF0C;&#x63D0;&#x9AD8;&#x4E86;&#x6548;&#x7387;&#x3002;</p>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6621566" target="_blank" rel="external">http://blog.csdn.net/luoshengyang/article/details/6621566</a></li>
<li><a href="https://segmentfault.com/a/1190000007997113" target="_blank" rel="external">https://segmentfault.com/a/1190000007997113</a></li>
<li><a href="http://blog.csdn.net/snake_hope/article/details/50994923" target="_blank" rel="external">http://blog.csdn.net/snake_hope/article/details/50994923</a></li>
<li><a href="http://blog.csdn.net/kevinx_xu/article/details/20170655" target="_blank" rel="external">http://blog.csdn.net/kevinx_xu/article/details/20170655</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      直观来说，Binder是Android中的一个类，它继承了IBinder接口；从IPC角度来说，Binder是Android中的一种跨进程通信方式，Binder还可以理解为一种虚拟的物理设备，它的设备驱动是/dev/binder，该通信方式在linux中没有；从Android Framework角度来说，Binder是ServiceManager连接各种Manager（ActivityManager、WindowManager，etc）和相应ManagerService的桥梁；从Android应用层来说，Binder是客户端和服务端进行通信的媒介。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>RxJava Subject解析</title>
    <link href="http://ngudream.com/2017/03/06/rxjava-subject/"/>
    <id>http://ngudream.com/2017/03/06/rxjava-subject/</id>
    <published>2017-03-06T11:46:05.000Z</published>
    <updated>2017-03-06T13:45:43.786Z</updated>
    
    <content type="html"><![CDATA[<p>&#x4EE5;&#x4E0B;&#x4E3A;&#x5B98;&#x65B9;&#x4ECB;&#x7ECD;&#xFF1A;</p>
<h2 id="subject-&#x7C7B;&#x5B9A;&#x4E49;"><a class="header-anchor" href="#subject-&#x7C7B;&#x5B9A;&#x4E49;"></a>Subject &#x7C7B;&#x5B9A;&#x4E49;</h2>
<p>Subject &#x53EF;&#x4EE5;&#x770B;&#x6210;&#x662F;&#x4E00;&#x4E2A;&#x6865;&#x6881;&#x6216;&#x8005;&#x4EE3;&#x7406;&#xFF0C;&#x5728;&#x67D0;&#x4E9B; ReactiveX &#x5B9E;&#x73B0;&#x4E2D;&#xFF08;&#x5982; RxJava &#xFF09;&#xFF0C;&#x5B83;&#x540C;&#x65F6;&#x5145;&#x5F53;&#x4E86; Observer &#x548C; Observable &#x7684;&#x89D2;&#x8272;&#x3002;&#x56E0;&#x4E3A;&#x5B83;&#x662F;&#x4E00;&#x4E2A; Observer&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x8BA2;&#x9605;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;Observable&#xFF1B;&#x53C8;&#x56E0;&#x4E3A;&#x5B83;&#x662F;&#x4E00;&#x4E2A; Observable&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x8F6C;&#x53D1;&#x5B83;&#x6536;&#x5230;(Observe)&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x53D1;&#x5C04;&#x65B0;&#x7684;&#x6570;&#x636E;&#x3002;</p>
<p>&#x7531;&#x4E8E;&#x4E00;&#x4E2A; Observable &#x8BA2;&#x9605;&#x4E00;&#x4E2A; Observable&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x89E6;&#x53D1;&#x8FD9;&#x4E2A; Observable &#x5F00;&#x59CB;&#x53D1;&#x5C04;&#x6570;&#x636E;&#xFF08;&#x5982;&#x679C;&#x90A3;&#x4E2A; Observable &#x662F;&#x201C;&#x51B7;&#x201D;&#x7684;&#xFF0C;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5B83;&#x7B49;&#x5F85;&#x6709;&#x8BA2;&#x9605;&#x624D;&#x5F00;&#x59CB;&#x53D1;&#x5C04;&#x6570;&#x636E;&#xFF09;&#x3002;&#x56E0;&#x6B64;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x6548;&#x679C;&#xFF0C;Subject &#x53EF;&#x4EE5;&#x628A;&#x539F;&#x6765;&#x90A3;&#x4E2A;&#x201D;&#x51B7;&#x201D;&#x7684; Observable &#x53D8;&#x6210;&#x201C;&#x70ED;&#x201D;&#x7684;&#x3002;</p>
<p>Subject &#x7C7B;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>/**
 * Represents an object that is both an Observable and an Observer.
 */
public abstract class Subject&lt;T, R&gt; extends Observable&lt;R&gt; implements Observer&lt;T&gt; {
    protected Subject(OnSubscribe&lt;R&gt; onSubscribe) {
        super(onSubscribe);
    }
</code></pre>
<p>&#x901A;&#x8FC7;&#x6E90;&#x7801;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;Subject &#x7EE7;&#x627F;&#x81EA; Observable&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4; Subject &#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x88AB;&#x89C2;&#x5BDF;&#x8005;&#xFF0C;&#x8FD8;&#x6709;&#xFF0C;&#x5B83;&#x53C8;&#x5B9E;&#x73B0;&#x4E86; Observer &#x63A5;&#x53E3;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x8BF4;&#x5B83;&#x4E5F;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x89C2;&#x5BDF;&#x8005;&#x3002;</p>
<p>&#x4E00;&#x5171;&#x6709;&#x4E94;&#x79CD;&#x7C7B;&#x578B;&#x7684;Subject&#xFF0C;&#x5206;&#x522B;&#x4E3A;</p>
<ul>
<li><a href="http://reactivex.io/RxJava/javadoc/rx/subjects/AsyncSubject.html" target="_blank" rel="external">AsyncSubject</a></li>
<li><a href="http://reactivex.io/RxJava/javadoc/rx/subjects/BehaviorSubject.html" target="_blank" rel="external">BehaviorSubject</a></li>
<li><a href="http://reactivex.io/RxJava/javadoc/rx/subjects/PublishSubject.html" target="_blank" rel="external">PublishSubject</a></li>
<li><a href="http://reactivex.io/RxJava/javadoc/rx/subjects/ReplaySubject.html" target="_blank" rel="external">ReplaySubject</a></li>
<li><a href="http://reactivex.io/RxJava/javadoc/rx/subjects/SerializedSubject.html" target="_blank" rel="external">SerializedSubject</a></li>
</ul>
<h2 id="asyncsubject"><a class="header-anchor" href="#asyncsubject"></a>AsyncSubject</h2>
<p>&#x4E00;&#x4E2A; AsyncSubject &#x53EA;&#x5728;&#x539F;&#x59CB; Observable &#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x53D1;&#x5C04;&#x6765;&#x81EA;&#x539F;&#x59CB; Observable &#x7684;<strong>&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x503C;</strong>&#x3002;&#xFF08;&#x5982;&#x679C;&#x539F;&#x59CB; Observable &#x6CA1;&#x6709;&#x53D1;&#x5C04;&#x4EFB;&#x4F55;&#x503C;&#xFF0C;AsyncObject &#x4E5F;&#x4E0D;&#x53D1;&#x5C04;&#x4EFB;&#x4F55;&#x503C;&#xFF09;&#x5B83;&#x4F1A;&#x628A;&#x8FD9;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x503C;&#x53D1;&#x5C04;&#x7ED9;&#x4EFB;&#x4F55;&#x540E;&#x7EED;&#x7684;&#x89C2;&#x5BDF;&#x8005;&#x3002;</p>
<div align="center">
<img data-original="/2017/03/06/rxjava-subject/AsyncSubject_1.jpg" class="lazy">
</div>
<p>&#x7136;&#x800C;&#xFF0C;&#x5982;&#x679C;&#x539F;&#x59CB;&#x7684; Observable &#x56E0;&#x4E3A;&#x53D1;&#x751F;&#x4E86;&#x9519;&#x8BEF;&#x800C;&#x7EC8;&#x6B62;&#xFF0C;AsyncSubject &#x5C06;&#x4E0D;&#x4F1A;&#x53D1;&#x5C04;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#xFF0C;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x5411;&#x524D;&#x4F20;&#x9012;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x901A;&#x77E5;&#x3002;</p>
<div align="center">
<img data-original="/2017/03/06/rxjava-subject/AsyncSubject_2.jpg" class="lazy">
</div>
<p>&#x6837;&#x4F8B;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        final AsyncSubject&lt;Integer&gt; asyncSub = AsyncSubject.create();
        asyncSub.subscribe(new Observer&lt;Integer&gt;() {
            @Override
            public void onCompleted() {
                Log.d(TAG, &quot;AsyncSubject : OnCompleted&quot;);
            }

            @Override
            public void onError(Throwable e) {
                Log.d(TAG, &quot;AsyncSubject : OnError: &quot; + e.getMessage());
            }

            @Override
            public void onNext(Integer value) {
                Log.d(TAG, &quot;AsyncSubject : onNext:&quot; + value);
            }
        });


        Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                for (int i = 0; i &lt; 5; i++) {
                    subscriber.onNext(i);
                }
                subscriber.onCompleted();
            }
        }).subscribe(new Observer&lt;Integer&gt;() {
            @Override
            public void onCompleted() {
                Log.d(TAG, &quot;Observable OnCompleted&quot;);
                asyncSub.onCompleted();
            }

            @Override
            public void onError(Throwable e) {
                Log.d(TAG, &quot; Observable onError&quot;);
                asyncSub.onError(e);
            }

            @Override
            public void onNext(Integer value) {
                Log.d(TAG, &quot; Observable onNext:&quot; + value);
                asyncSub.onNext(value);
            }
        });
    }
</code></pre>
<p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>03-06 21:12:39.933 6746-6746/? D/MainActivity:  Observable onNext:0
03-06 21:12:39.933 6746-6746/? D/MainActivity:  Observable onNext:1
03-06 21:12:39.933 6746-6746/? D/MainActivity:  Observable onNext:2
03-06 21:12:39.933 6746-6746/? D/MainActivity: Observable OnCompleted
03-06 21:12:39.933 6746-6746/? D/MainActivity: AsyncSubject : onNext:2 //&#x53D1;&#x5C04;&#x6700;&#x540E;&#x7684;&#x503C;&#xFF0C;&#x4E3A;2
03-06 21:12:39.933 6746-6746/? D/MainActivity: AsyncSubject : OnCompleted
</code></pre>
<h2 id="behaviorsubject"><a class="header-anchor" href="#behaviorsubject"></a>BehaviorSubject</h2>
<p>&#x5F53;&#x89C2;&#x5BDF;&#x8005;&#x8BA2;&#x9605; BehaviorSubject &#x65F6;&#xFF0C;&#x5B83;&#x5F00;&#x59CB;&#x53D1;&#x5C04;&#x539F;&#x59CB; Observable &#x6700;&#x8FD1;&#x53D1;&#x5C04;&#x7684;&#x6570;&#x636E;**&#xFF08;&#x5982;&#x679C;&#x6B64;&#x65F6;&#x8FD8;&#x6CA1;&#x6709;&#x6536;&#x5230;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#xFF0C;&#x5B83;&#x4F1A;&#x53D1;&#x5C04;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x503C;&#xFF09;**&#xFF0C;&#x7136;&#x540E;&#x7EE7;&#x7EED;&#x53D1;&#x5C04;&#x5176;&#x5B83;&#x4EFB;&#x4F55;&#x6765;&#x81EA;&#x539F;&#x59CB; Observable &#x7684;&#x6570;&#x636E;&#x3002;</p>
<div align="center">
<img data-original="/2017/03/06/rxjava-subject/BehaviorSubject_1.jpg" class="lazy">
</div>
<p>&#x7136;&#x800C;&#xFF0C;&#x5982;&#x679C;&#x539F;&#x59CB;&#x7684; Observable &#x56E0;&#x4E3A;&#x53D1;&#x751F;&#x4E86;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x800C;&#x7EC8;&#x6B62;&#xFF0C;BehaviorSubject &#x5C06;&#x4E0D;&#x4F1A;&#x53D1;&#x5C04;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#xFF0C;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x5411;&#x524D;&#x4F20;&#x9012;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x901A;&#x77E5;&#x3002;</p>
<div align="center">
<img data-original="/2017/03/06/rxjava-subject/BehaviorSubject_2.jpg" class="lazy">
</div>
<p>&#x53D1;&#x9001;&#x9ED8;&#x8BA4;&#x503C;&#x6837;&#x4F8B;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final BehaviorSubject&lt;Integer&gt; behaviorSub = BehaviorSubject.create(10);//&#x9ED8;&#x8BA4;&#x503C;
        behaviorSub.subscribe(new Observer&lt;Integer&gt;() {
            @Override
            public void onCompleted() {
                Log.d(TAG, &quot;BehaviorSubject : OnCompleted&quot;);
            }

            @Override
            public void onError(Throwable e) {
                Log.d(TAG, &quot;BehaviorSubject : OnError: &quot; + e.getMessage());
            }

            @Override
            public void onNext(Integer value) {
                Log.d(TAG, &quot;BehaviorSubject : onNext:&quot; + value);
            }
        });


        Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                for (int i = 0; i &lt;= 2; i++) {
                    subscriber.onNext(i);
                }
                subscriber.onCompleted();
            }
        }).subscribe(new Observer&lt;Integer&gt;() {
            @Override
            public void onCompleted() {
                Log.d(TAG, &quot;Observable OnCompleted&quot;);
                behaviorSub.onCompleted();
            }

            @Override
            public void onError(Throwable e) {
                Log.d(TAG, &quot; Observable onError&quot;);
                behaviorSub.onError(e);
            }

            @Override
            public void onNext(Integer value) {
                Log.d(TAG, &quot; Observable onNext:&quot; + value);
                behaviorSub.onNext(value);
            }
        });
    }
</code></pre>
<p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>03-06 21:15:20.955 10545-10545/? D/MainActivity: BehaviorSubject : onNext:10  //&#x5148;&#x53D1;&#x5C04;&#x4E86;&#x9ED8;&#x8BA4;&#x503C;
03-06 21:15:20.955 10545-10545/? D/MainActivity:  Observable onNext:0
03-06 21:15:20.955 10545-10545/? D/MainActivity: BehaviorSubject : onNext:0
03-06 21:15:20.955 10545-10545/? D/MainActivity:  Observable onNext:1
03-06 21:15:20.955 10545-10545/? D/MainActivity: BehaviorSubject : onNext:1
03-06 21:15:20.955 10545-10545/? D/MainActivity:  Observable onNext:2
03-06 21:15:20.955 10545-10545/? D/MainActivity: BehaviorSubject : onNext:2
03-06 21:15:20.955 10545-10545/? D/MainActivity: Observable OnCompleted
03-06 21:15:20.955 10545-10545/? D/MainActivity: BehaviorSubject : OnCompleted
</code></pre>
<p>&#x4E0D;&#x53D1;&#x9001;&#x9ED8;&#x8BA4;&#x503C;&#x6837;&#x4F8B;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final BehaviorSubject&lt;Integer&gt; behaviorSub = BehaviorSubject.create(10);

        Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                for (int i = 0; i &lt;= 5; i++) {
                    if(i == 1){
                        behaviorSub.subscribe(new Observer&lt;Integer&gt;() {
                            @Override
                            public void onCompleted() {
                                Log.d(TAG, &quot;BehaviorSubject : OnCompleted&quot;);
                            }

                            @Override
                            public void onError(Throwable e) {
                                Log.d(TAG, &quot;BehaviorSubject : OnError: &quot; + e.getMessage());
                            }

                            @Override
                            public void onNext(Integer value) {
                                Log.d(TAG, &quot;BehaviorSubject : onNext:&quot; + value);
                            }
                        });
                    }
                    subscriber.onNext(i);
                }
                subscriber.onCompleted();
            }
        }).subscribe(new Observer&lt;Integer&gt;() {
            @Override
            public void onCompleted() {
                Log.d(TAG, &quot;Observable OnCompleted&quot;);
                behaviorSub.onCompleted();
            }

            @Override
            public void onError(Throwable e) {
                Log.d(TAG, &quot; Observable onError&quot;);
                behaviorSub.onError(e);
            }

            @Override
            public void onNext(Integer value) {
                Log.d(TAG, &quot; Observable onNext:&quot; + value);
                behaviorSub.onNext(value);
            }
        });
    }
</code></pre>
<p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>03-06 21:31:42.768 32375-32375/? D/MainActivity:  Observable onNext:0
03-06 21:31:42.769 32375-32375/? D/MainActivity: BehaviorSubject : onNext:0
03-06 21:31:42.769 32375-32375/? D/MainActivity:  Observable onNext:1
03-06 21:31:42.769 32375-32375/? D/MainActivity: BehaviorSubject : onNext:1
03-06 21:31:42.769 32375-32375/? D/MainActivity:  Observable onNext:2
03-06 21:31:42.769 32375-32375/? D/MainActivity: BehaviorSubject : onNext:2
03-06 21:31:42.769 32375-32375/? D/MainActivity:  Observable onNext:3
03-06 21:31:42.769 32375-32375/? D/MainActivity: BehaviorSubject : onNext:3
03-06 21:31:42.769 32375-32375/? D/MainActivity:  Observable onNext:4
03-06 21:31:42.769 32375-32375/? D/MainActivity: BehaviorSubject : onNext:4
03-06 21:31:42.769 32375-32375/? D/MainActivity:  Observable onNext:5
03-06 21:31:42.769 32375-32375/? D/MainActivity: BehaviorSubject : onNext:5
03-06 21:31:42.769 32375-32375/? D/MainActivity: Observable OnCompleted
03-06 21:31:42.769 32375-32375/? D/MainActivity: BehaviorSubject : OnCompleted
</code></pre>
<h2 id="publishsubject"><a class="header-anchor" href="#publishsubject"></a>PublishSubject</h2>
<p>PublishSubject &#x53EA;&#x4F1A;&#x628A;&#x5728;<strong>&#x8BA2;&#x9605;&#x53D1;&#x751F;&#x7684;&#x65F6;&#x95F4;&#x70B9;&#x4E4B;&#x540E;&#x6765;&#x81EA;&#x539F;&#x59CB; Observable &#x7684;&#x6570;&#x636E;&#x53D1;&#x5C04;&#x7ED9;&#x89C2;&#x5BDF;&#x8005;</strong>&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;PublishSubject &#x53EF;&#x80FD;&#x4F1A;&#x4E00;&#x521B;&#x5EFA;&#x5B8C;&#x6210;&#x5C31;&#x7ACB;&#x523B;&#x5F00;&#x59CB;&#x53D1;&#x5C04;&#x6570;&#x636E;&#xFF08;&#x9664;&#x975E;&#x4F60;&#x53EF;&#x4EE5;&#x963B;&#x6B62;&#x5B83;&#x53D1;&#x751F;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x98CE;&#x9669;&#xFF1A;&#x5728; Subject &#x88AB;&#x521B;&#x5EFA;&#x540E;&#x5230;&#x6709;&#x89C2;&#x5BDF;&#x8005;&#x8BA2;&#x9605;&#x5B83;&#x4E4B;&#x524D;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x6BB5;&#x5185;&#xFF0C;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x53EF;&#x80FD;&#x4F1A;&#x4E22;&#x5931;&#x3002;&#x5982;&#x679C;&#x8981;&#x786E;&#x4FDD;&#x6765;&#x81EA;&#x539F;&#x59CB; Observable &#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x90FD;&#x88AB;&#x5206;&#x53D1;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x8FD9;&#x6837;&#x505A;&#xFF1A;&#x6216;&#x8005;&#x4F7F;&#x7528; Create &#x521B;&#x5EFA;&#x90A3;&#x4E2A; Observable &#x4EE5;&#x4FBF;&#x624B;&#x52A8;&#x7ED9;&#x5B83;&#x5F15;&#x5165;&#x201C;&#x51B7;&#x201D; Observable &#x7684;&#x884C;&#x4E3A;&#xFF08;&#x5F53;&#x6240;&#x6709;&#x89C2;&#x5BDF;&#x8005;&#x90FD;&#x5DF2;&#x7ECF;&#x8BA2;&#x9605;&#x65F6;&#x624D;&#x5F00;&#x59CB;&#x53D1;&#x5C04;&#x6570;&#x636E;&#xFF09;&#xFF0C;&#x6216;&#x8005;&#x6539;&#x7528; ReplaySubject&#x3002;</p>
<div align="center">
<img data-original="/2017/03/06/rxjava-subject/PublishSubject_1.jpg" class="lazy">
</div>
<p>&#x5982;&#x679C;&#x539F;&#x59CB;&#x7684; Observable &#x56E0;&#x4E3A;&#x53D1;&#x751F;&#x4E86;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x800C;&#x7EC8;&#x6B62;&#xFF0C;BehaviorSubject &#x5C06;&#x4E0D;&#x4F1A;&#x53D1;&#x5C04;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#xFF0C;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x5411;&#x524D;&#x4F20;&#x9012;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x901A;&#x77E5;&#x3002;</p>
<div align="center">
<img data-original="/2017/03/06/rxjava-subject/PublishSubject_2.jpg" class="lazy">
</div>
<p>&#x6837;&#x4F8B;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final PublishSubject&lt;Integer&gt; pubSubject = PublishSubject.create();

        Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                for (int i = 0; i &lt;= 5; i++) {
                    if(i == 1){//&#x5230;1&#x624D;&#x8BA2;&#x9605;&#xFF0C;&#x4E4B;&#x524D;&#x7684;0&#x5C31;&#x4E0D;&#x4F1A;&#x88AB;&#x53D1;&#x9001;
                        pubSubject.subscribe(new Observer&lt;Integer&gt;() {
                            @Override
                            public void onCompleted() {
                                Log.d(TAG, &quot;PublishSubject : OnCompleted&quot;);
                            }

                            @Override
                            public void onError(Throwable e) {
                                Log.d(TAG, &quot;PublishSubject : OnError: &quot; + e.getMessage());
                            }

                            @Override
                            public void onNext(Integer value) {
                                Log.d(TAG, &quot;PublishSubject : onNext:&quot; + value);
                            }
                        });
                    }
                    subscriber.onNext(i);
                }
                subscriber.onCompleted();
            }
        }).subscribe(new Observer&lt;Integer&gt;() {
            @Override
            public void onCompleted() {
                Log.d(TAG, &quot;Observable OnCompleted&quot;);
                pubSubject.onCompleted();
            }

            @Override
            public void onError(Throwable e) {
                Log.d(TAG, &quot; Observable onError&quot;);
                pubSubject.onError(e);
            }

            @Override
            public void onNext(Integer value) {
                Log.d(TAG, &quot; Observable onNext:&quot; + value);
                pubSubject.onNext(value);
            }
        });
    }
</code></pre>
<p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>03-06 21:29:11.442 28789-28789/? D/MainActivity:  Observable onNext:0 //&#x6CA1;&#x6709;&#x8BA2;&#x9605;&#xFF0C;&#x4E0D;&#x88AB;&#x53D1;&#x9001;&#x7ED9;PublishSubject
03-06 21:29:11.442 28789-28789/? D/MainActivity:  Observable onNext:1
03-06 21:29:11.442 28789-28789/? D/MainActivity: PublishSubject : onNext:1
03-06 21:29:11.442 28789-28789/? D/MainActivity:  Observable onNext:2
03-06 21:29:11.442 28789-28789/? D/MainActivity: PublishSubject : onNext:2
03-06 21:29:11.442 28789-28789/? D/MainActivity:  Observable onNext:3
03-06 21:29:11.442 28789-28789/? D/MainActivity: PublishSubject : onNext:3
03-06 21:29:11.442 28789-28789/? D/MainActivity:  Observable onNext:4
03-06 21:29:11.442 28789-28789/? D/MainActivity: PublishSubject : onNext:4
03-06 21:29:11.442 28789-28789/? D/MainActivity:  Observable onNext:5
03-06 21:29:11.442 28789-28789/? D/MainActivity: PublishSubject : onNext:5
03-06 21:29:11.442 28789-28789/? D/MainActivity: Observable OnCompleted
03-06 21:29:11.442 28789-28789/? D/MainActivity: PublishSubject : OnCompleted
</code></pre>
<h2 id="replaysubject"><a class="header-anchor" href="#replaysubject"></a>ReplaySubject</h2>
<p>ReplaySubject &#x4F1A;&#x53D1;&#x5C04;<strong>&#x6240;&#x6709;&#x6765;&#x81EA;&#x539F;&#x59CB; Observable &#x7684;&#x6570;&#x636E;&#x7ED9;&#x89C2;&#x5BDF;&#x8005;&#xFF0C;&#x65E0;&#x8BBA;&#x5B83;&#x4EEC;&#x662F;&#x4F55;&#x65F6;&#x8BA2;&#x9605;&#x7684;</strong>&#x3002;&#x4E5F;&#x6709;&#x5176;&#x5B83;&#x7248;&#x672C;&#x7684; ReplaySubject&#xFF0C;&#x5728;&#x91CD;&#x653E;&#x7F13;&#x5B58;&#x589E;&#x957F;&#x5230;&#x4E00;&#x5B9A;&#x5927;&#x5C0F;&#x7684;&#x65F6;&#x5019;&#x6216;&#x8FC7;&#x4E86;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x540E;&#x4F1A;&#x4E22;&#x5F03;&#x65E7;&#x7684;&#x6570;&#x636E;&#xFF08;&#x539F;&#x59CB; Observable &#x53D1;&#x5C04;&#x7684;&#xFF09;&#x3002;</p>
<p>&#x5982;&#x679C;&#x4F60;&#x628A; ReplaySubject &#x5F53;&#x4F5C;&#x4E00;&#x4E2A;&#x89C2;&#x5BDF;&#x8005;&#x4F7F;&#x7528;&#xFF0C;&#x6CE8;&#x610F;&#x4E0D;&#x8981;&#x4ECE;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;&#x5B83;&#x7684; onNext &#x65B9;&#x6CD5;&#xFF08;&#x5305;&#x62EC;&#x5176;&#x5B83;&#x7684;on&#x7CFB;&#x5217;&#x65B9;&#x6CD5;&#xFF09;&#xFF0C;&#x8FD9;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x540C;&#x65F6;&#xFF08;&#x975E;&#x987A;&#x5E8F;&#xFF09;&#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x4F1A;&#x8FDD;&#x53CD; Observable &#x534F;&#x8BAE;&#xFF0C;&#x7ED9;Subject &#x7684;&#x7ED3;&#x679C;&#x589E;&#x52A0;&#x4E86;&#x4E0D;&#x786E;&#x5B9A;&#x6027;&#x3002;</p>
<div align="center">
<img data-original="/2017/03/06/rxjava-subject/ReplaySubject.jpg" class="lazy">
</div>
<p>&#x6837;&#x4F8B;&#x4EE3;&#x7801;&#xFF1A;</p>
<pre><code>@Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        final ReplaySubject&lt;Integer&gt; replaySub = ReplaySubject.create();

        Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                for (int i = 0; i &lt;= 5; i++) {
                    if(i == 3){//&#x5230;3&#x7684;&#x65F6;&#x5019;&#x518D;&#x8BA2;&#x9605;&#xFF0C;&#x4F46;&#x5B83;&#x4E4B;&#x524D;&#x7684;0&#x3001;1&#x3001;2&#x90FD;&#x88AB;&#x91CD;&#x65B0;&#x53D1;&#x9001;&#x4E86;
                        replaySub.subscribe(new Observer&lt;Integer&gt;() {
                            @Override
                            public void onCompleted() {
                                Log.d(TAG, &quot;ReplaySubject : OnCompleted&quot;);
                            }

                            @Override
                            public void onError(Throwable e) {
                                Log.d(TAG, &quot;ReplaySubject : OnError: &quot; + e.getMessage());
                            }

                            @Override
                            public void onNext(Integer value) {
                                Log.d(TAG, &quot;ReplaySubject : onNext:&quot; + value);
                            }
                        });
                    }
                    subscriber.onNext(i);
                }
                subscriber.onCompleted();
            }
        }).subscribe(new Observer&lt;Integer&gt;() {
            @Override
            public void onCompleted() {
                Log.d(TAG, &quot;Observable OnCompleted&quot;);
                replaySub.onCompleted();
            }

            @Override
            public void onError(Throwable e) {
                Log.d(TAG, &quot; Observable onError&quot;);
                replaySub.onError(e);
            }

            @Override
            public void onNext(Integer value) {
                Log.d(TAG, &quot; Observable onNext:&quot; + value);
                replaySub.onNext(value);
            }
        });
    }
</code></pre>
<p>&#x8FD0;&#x884C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>03-06 21:35:57.907 5864-5864/? D/MainActivity:  Observable onNext:0
03-06 21:35:57.907 5864-5864/? D/MainActivity:  Observable onNext:1
03-06 21:35:57.907 5864-5864/? D/MainActivity:  Observable onNext:2
03-06 21:35:57.908 5864-5864/? D/MainActivity: ReplaySubject : onNext:0 //&#x4E4B;&#x524D;&#x7684;0&#x3001;1&#x3001;2&#x90FD;&#x88AB;&#x91CD;&#x65B0;&#x53D1;&#x9001;&#x4E86;
03-06 21:35:57.908 5864-5864/? D/MainActivity: ReplaySubject : onNext:1
03-06 21:35:57.908 5864-5864/? D/MainActivity: ReplaySubject : onNext:2
03-06 21:35:57.908 5864-5864/? D/MainActivity:  Observable onNext:3
03-06 21:35:57.908 5864-5864/? D/MainActivity: ReplaySubject : onNext:3
03-06 21:35:57.908 5864-5864/? D/MainActivity:  Observable onNext:4
03-06 21:35:57.908 5864-5864/? D/MainActivity: ReplaySubject : onNext:4
03-06 21:35:57.908 5864-5864/? D/MainActivity:  Observable onNext:5
03-06 21:35:57.908 5864-5864/? D/MainActivity: ReplaySubject : onNext:5
03-06 21:35:57.908 5864-5864/? D/MainActivity: Observable OnCompleted
03-06 21:35:57.908 5864-5864/? D/MainActivity: ReplaySubject : OnCompleted
</code></pre>
<h2 id="subjcet-&#x6CE8;&#x610F;&#x70B9;"><a class="header-anchor" href="#subjcet-&#x6CE8;&#x610F;&#x70B9;"></a>Subjcet &#x6CE8;&#x610F;&#x70B9;</h2>
<ul>
<li>Subjcet &#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x3002;</li>
</ul>
<p>&#x4F7F;&#x7528; Subject &#x4E0D;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684; &#xFF0C;&#x5982;&#x679C;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x7EBF;&#x7A0B;&#x8C03;&#x7528;&#x5B83;&#x7684; onNext &#x65B9;&#x6CD5;&#xFF0C;&#x5F88;&#x6709;&#x53EF;&#x80FD;&#x9020;&#x6210;&#x7ADE;&#x6001;&#x6761;&#x4EF6;&#xFF08;race conditions&#xFF09;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x5C3D;&#x53EF;&#x80FD;&#x907F;&#x514D;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x7684;&#x51FA;&#x73B0;&#xFF0C;&#x56E0;&#x4E3A;&#x9664;&#x975E;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x5199;&#x8DB3;&#x591F;&#x8BE6;&#x7EC6;&#x7684;&#x6CE8;&#x91CA;&#xFF0C;&#x5426;&#x5219;&#x65E5;&#x540E;&#x7EF4;&#x62A4;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#x5F88;&#x53EF;&#x80FD;&#x83AB;&#x540D;&#x5176;&#x5999;&#x5730;&#x8E29;&#x4E86;&#x5751;&#x3002;&#x5982;&#x679C;&#x4F60;&#x8BA4;&#x4E3A;&#x4F60;&#x786E;&#x5B9E;&#x6709;&#x5FC5;&#x8981;&#x4F7F;&#x7528; Subject, &#x90A3;&#x4E48;&#x8BF7;&#x628A;&#x5B83;&#x8F6C;&#x5316;&#x4E3A; SerializedSubject&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x5982;&#x679C;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x540C;&#x65F6;&#x8C03;&#x7528; onNext &#x65B9;&#x6CD5;&#xFF0C;&#x4F9D;&#x7136;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x3002;</p>
<pre><code>SerializedSubject&lt;Integer,Integer&gt; subject = PublishSubject.&lt;Integer&gt;create().toSerialized();
</code></pre>]]></content>
    
    <summary type="html">
    
      Subject 可以看成是一个桥梁或者代理，在某些 ReactiveX 实现中（如RxJava），它同时充当了 Observer 和 Observable 的角色。因为它是一个 Observer，它可以订阅一个或多个 Observable；又因为它是一个 Observable，它可以转发它收到(Observe)的数据，也可以发射新的数据。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>Android 动画分析与优化</title>
    <link href="http://ngudream.com/2017/02/28/android-animation-theory/"/>
    <id>http://ngudream.com/2017/02/28/android-animation-theory/</id>
    <published>2017-02-28T13:59:14.000Z</published>
    <updated>2017-03-19T04:29:52.911Z</updated>
    
    <content type="html"><![CDATA[<h2 id="&#x539F;&#x7406;"><a class="header-anchor" href="#&#x539F;&#x7406;"></a>&#x539F;&#x7406;</h2>
<h3 id="timeinterpolator&#x548C;typeevaluator"><a class="header-anchor" href="#timeinterpolator&#x548C;typeevaluator"></a>TimeInterpolator&#x548C;TypeEvaluator</h3>
<ul>
<li>TimeInterpolator&#x4E2D;&#x6587;&#x7FFB;&#x8BD1;&#x4E3A;&#x65F6;&#x95F4;&#x63D2;&#x503C;&#x5668;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x6839;&#x636E;&#x65F6;&#x95F4;&#x6D41;&#x901D;&#x7684;&#x767E;&#x5206;&#x6BD4;&#x6765;&#x8BA1;&#x7B97;&#x51FA;&#x5F53;&#x524D;&#x5C5E;&#x6027;&#x503C;&#x6539;&#x53D8;&#x7684;&#x767E;&#x5206;&#x6BD4;&#xFF0C;&#x7CFB;&#x7EDF;&#x9884;&#x7F6E;&#x7684;&#x6709;LinearInterpolator&#xFF08;&#x7EBF;&#x6027;&#x63D2;&#x503C;&#x5668;&#xFF1A;&#x5300;&#x901F;&#x52A8;&#x753B;&#xFF09;&#x3001;AccelerateDecelerateInterpolator&#xFF08;&#x52A0;&#x901F;&#x51CF;&#x901F;&#x63D2;&#x503C;&#x5668;&#xFF1A;&#x52A8;&#x753B;&#x4E24;&#x5934;&#x6162;&#x4E2D;&#x95F4;&#x5FEB;&#xFF09;&#x548C;DecelerateInterpolator&#xFF08;&#x51CF;&#x901F;&#x63D2;&#x503C;&#x5668;&#xFF1A;&#x52A8;&#x753B;&#x8D8A;&#x6765;&#x8D8A;&#x6162;&#xFF09;&#x7B49;&#xFF1B;</li>
<li>TypeEvaluator&#x7684;&#x4E2D;&#x6587;&#x7FFB;&#x8BD1;&#x4E3A;&#x7C7B;&#x578B;&#x4F30;&#x503C;&#x7B97;&#x6CD5;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x6839;&#x636E;&#x5F53;&#x524D;&#x5C5E;&#x6027;&#x6539;&#x53D8;&#x7684;&#x767E;&#x5206;&#x6BD4;&#x6765;&#x8BA1;&#x7B97;&#x6539;&#x53D8;&#x540E;&#x7684;&#x5C5E;&#x6027;&#x503C;&#xFF0C;&#x7CFB;&#x7EDF;&#x9884;&#x7F6E;&#x7684;&#x6709;IntEvaluator&#xFF08;&#x9488;&#x5BF9;&#x6574;&#x578B;&#x5C5E;&#x6027;&#xFF09;&#x3001;FloatEvaluator&#xFF08;&#x9488;&#x5BF9;&#x6D6E;&#x70B9;&#x578B;&#x5C5E;&#x6027;&#xFF09;&#x548C;ArgbEvaluator&#xFF08;&#x9488;&#x5BF9;Color&#x5C5E;&#x6027;&#xFF09;&#x3002;&#x53EF;&#x80FD;&#x8FD9;&#x4E48;&#x8BF4;&#x8FD8;&#x6709;&#x70B9;&#x6666;&#x6DA9;&#xFF0C;&#x6CA1;&#x5173;&#x7CFB;&#xFF0C;&#x4E0B;&#x9762;&#x7ED9;&#x51FA;&#x4E00;&#x4E2A;&#x5B9E;&#x4F8B;&#x5C31;&#x5F88;&#x597D;&#x7406;&#x89E3;&#x4E86;&#x3002;</li>
</ul>
<div align="center">
<img data-original="/2017/02/28/android-animation-theory/animation-linear.png" class="lazy">
</div>
<p>&#x770B;&#x4E0A;&#x8FF0;&#x52A8;&#x753B;&#xFF0C;&#x5F88;&#x663E;&#x7136;&#x4E0A;&#x8FF0;&#x52A8;&#x753B;&#x662F;&#x4E00;&#x4E2A;&#x5300;&#x901F;&#x52A8;&#x753B;&#xFF0C;&#x5176;&#x91C7;&#x7528;&#x4E86;&#x7EBF;&#x6027;&#x63D2;&#x503C;&#x5668;&#x548C;&#x6574;&#x578B;&#x4F30;&#x503C;&#x7B97;&#x6CD5;&#xFF0C;&#x5728;40ms&#x5185;&#xFF0C;View&#x7684;x&#x5C5E;&#x6027;&#x5B9E;&#x73B0;&#x4ECE;0&#x5230;40&#x7684;&#x53D8;&#x6362;&#xFF0C;&#x7531;&#x4E8E;&#x52A8;&#x753B;&#x7684;&#x9ED8;&#x8BA4;&#x5237;&#x65B0;&#x7387;&#x4E3A;10ms/&#x5E27;&#xFF0C;&#x6240;&#x4EE5;&#x8BE5;&#x52A8;&#x753B;&#x5C06;&#x5206;5&#x5E27;&#x8FDB;&#x884C;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x8003;&#x8651;&#x7B2C;&#x4E09;&#x5E27;&#xFF08;x=20 t=20ms&#xFF09;&#xFF0C;&#x5F53;&#x65F6;&#x95F4;t=20ms&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x65F6;&#x95F4;&#x6D41;&#x901D;&#x7684;&#x767E;&#x5206;&#x6BD4;&#x662F;0.5 (20/40=0.5)&#xFF0C;&#x610F;&#x5473;&#x8FD9;&#x73B0;&#x5728;&#x65F6;&#x95F4;&#x8FC7;&#x4E86;&#x4E00;&#x534A;&#xFF0C;&#x90A3;x&#x5E94;&#x8BE5;&#x6539;&#x53D8;&#x591A;&#x5C11;&#x5462;&#xFF0C;&#x8FD9;&#x4E2A;&#x5C31;&#x7531;&#x63D2;&#x503C;&#x5668;&#x548C;&#x4F30;&#x503C;&#x7B97;&#x6CD5;&#x6765;&#x786E;&#x5B9A;&#x3002;&#x62FF;&#x7EBF;&#x6027;&#x63D2;&#x503C;&#x5668;&#x6765;&#x8BF4;&#xFF0C;&#x5F53;&#x65F6;&#x95F4;&#x6D41;&#x901D;&#x4E00;&#x534A;&#x7684;&#x65F6;&#x5019;&#xFF0C;x&#x7684;&#x53D8;&#x6362;&#x4E5F;&#x5E94;&#x8BE5;&#x662F;&#x4E00;&#x534A;&#xFF0C;&#x5373;x&#x7684;&#x6539;&#x53D8;&#x662F;0.5&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x5B83;&#x662F;&#x7EBF;&#x6027;&#x63D2;&#x503C;&#x5668;&#xFF0C;&#x662F;&#x5B9E;&#x73B0;&#x5300;&#x901F;&#x52A8;&#x753B;&#x7684;&#xFF0C;&#x4E0B;&#x9762;&#x770B;&#x5B83;&#x7684;&#x6E90;&#x7801;&#xFF1A;</p>
<pre><code>public class LinearInterpolator implements Interpolator {  
  
    public LinearInterpolator() {  
    }  
      
    public LinearInterpolator(Context context, AttributeSet attrs) {  
    }  
      
    public float getInterpolation(float input) {  
        return input;  
    }  
}  
</code></pre>
<p>&#x5F88;&#x663E;&#x7136;&#xFF0C;&#x7EBF;&#x6027;&#x63D2;&#x503C;&#x5668;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x548C;&#x8F93;&#x5165;&#x503C;&#x4E00;&#x6837;&#xFF0C;&#x56E0;&#x6B64;&#x63D2;&#x503C;&#x5668;&#x8FD4;&#x56DE;&#x7684;&#x503C;&#x662F;0.5&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;x&#x7684;&#x6539;&#x53D8;&#x662F;0.5&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x63D2;&#x503C;&#x5668;&#x7684;&#x5DE5;&#x4F5C;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x3002;</p>
<p>&#x5177;&#x4F53;x&#x53D8;&#x6210;&#x4E86;&#x4EC0;&#x4E48;&#x503C;&#xFF0C;&#x8FD9;&#x4E2A;&#x9700;&#x8981;&#x4F30;&#x503C;&#x7B97;&#x6CD5;&#x6765;&#x786E;&#x5B9A;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x6574;&#x578B;&#x4F30;&#x503C;&#x7B97;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#xFF1A;</p>
<pre><code>public class IntEvaluator implements TypeEvaluator&lt;Integer&gt; {  
  
    public Integer evaluate(float fraction, Integer startValue, Integer endValue) {  
        int startInt = startValue;  
        return (int)(startInt + fraction * (endValue - startInt));  
    }  
}  
</code></pre>
<p>&#x4E0A;&#x8FF0;&#x7B97;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;evaluate&#x7684;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x5206;&#x522B;&#x8868;&#x793A;&#xFF1A;&#x4F30;&#x503C;&#x5C0F;&#x6570;&#x3001;&#x5F00;&#x59CB;&#x503C;&#x548C;&#x7ED3;&#x675F;&#x503C;&#xFF0C;&#x5BF9;&#x5E94;&#x4E8E;&#x6211;&#x4EEC;&#x7684;&#x4F8B;&#x5B50;&#x5C31;&#x5206;&#x522B;&#x662F;&#xFF1A;0.5&#xFF0C;0&#xFF0C;40&#x3002;&#x6839;&#x636E;&#x4E0A;&#x8FF0;&#x7B97;&#x6CD5;&#xFF0C;&#x6574;&#x578B;&#x4F30;&#x503C;&#x8FD4;&#x56DE;&#x7ED9;&#x6211;&#x4EEC;&#x7684;&#x7ED3;&#x679C;&#x662F;20&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#xFF08;x=20 t=20ms&#xFF09;&#x7684;&#x7531;&#x6765;&#x3002;</p>
<p>&#x8BF4;&#x660E;&#xFF1A;&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x8981;&#x6C42;&#x8BE5;&#x5C5E;&#x6027;&#x6709;set&#x65B9;&#x6CD5;&#x548C;get&#x65B9;&#x6CD5;&#xFF08;&#x53EF;&#x9009;&#xFF09;&#xFF1B;&#x63D2;&#x503C;&#x5668;&#x548C;&#x4F30;&#x503C;&#x7B97;&#x6CD5;&#x9664;&#x4E86;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x7684;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x81EA;&#x5B9A;&#x4E49;&#xFF0C;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x56E0;&#x4E3A;&#x63D2;&#x503C;&#x5668;&#x548C;&#x4F30;&#x503C;&#x7B97;&#x6CD5;&#x90FD;&#x662F;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x4E14;&#x5185;&#x90E8;&#x90FD;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x6D3E;&#x751F;&#x4E00;&#x4E2A;&#x7C7B;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x7136;&#x540E;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x505A;&#x51FA;&#x5343;&#x5947;&#x767E;&#x602A;&#x7684;&#x52A8;&#x753B;&#x6548;&#x679C;&#x3002;&#x5177;&#x4F53;&#x4E00;&#x70B9;&#x5C31;&#x662F;&#xFF1A;&#x81EA;&#x5B9A;&#x4E49;&#x63D2;&#x503C;&#x5668;&#x9700;&#x8981;&#x5B9E;&#x73B0;Interpolator&#x6216;&#x8005;TimeInterpolator&#xFF0C;&#x81EA;&#x5B9A;&#x4E49;&#x4F30;&#x503C;&#x7B97;&#x6CD5;&#x9700;&#x8981;&#x5B9E;&#x73B0;TypeEvaluator&#x3002;&#x8FD8;&#x6709;&#x5C31;&#x662F;&#x5982;&#x679C;&#x4F60;&#x5BF9;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#xFF08;&#x975E;int&#x3001;float&#x3001;color&#xFF09;&#x505A;&#x52A8;&#x753B;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x8981;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#x4F30;&#x503C;&#x7B97;&#x6CD5;&#x3002;</p>
<h3 id="timeinterplator"><a class="header-anchor" href="#timeinterplator"></a>TimeInterplator</h3>
<p>time interplator&#x5B9A;&#x4E49;&#x4E86;&#x5C5E;&#x6027;&#x503C;&#x53D8;&#x5316;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5982;&#x7EBF;&#x6027;&#x5747;&#x5300;&#x6539;&#x53D8;&#xFF0C;&#x5F00;&#x59CB;&#x6162;&#x7136;&#x540E;&#x9010;&#x6E10;&#x5FEB;&#x7B49;&#x3002;&#x5728;Property Animation&#x4E2D;&#x662F;TimeInterplator&#xFF0C;&#x5728;View Animation&#x4E2D;&#x662F;Interplator&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5728;3.0&#x4E4B;&#x524D;&#x53EA;&#x6709;Interplator&#xFF0C;3.0&#x4E4B;&#x540E;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x8F6C;&#x79FB;&#x81F3;&#x4E86; TimeInterplator&#x3002;Interplator&#x7EE7;&#x627F;&#x81EA;TimeInterplator&#xFF0C;&#x5185;&#x90E8;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x4EE3;&#x7801;&#x3002;</p>
<ul>
<li>AccelerateInterpolator&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;     &#x52A0;&#x901F;&#xFF0C;&#x5F00;&#x59CB;&#x65F6;&#x6162;&#x4E2D;&#x95F4;&#x52A0;&#x901F;</li>
<li>DecelerateInterpolator&#x3000;&#x3000;&#x3000; &#x3000;&#x3000;   &#x51CF;&#x901F;&#xFF0C;&#x5F00;&#x59CB;&#x65F6;&#x5FEB;&#x7136;&#x540E;&#x51CF;&#x901F;</li>
<li>AccelerateDecelerateInterolator&#x3000;   &#x5148;&#x52A0;&#x901F;&#x540E;&#x51CF;&#x901F;&#xFF0C;&#x5F00;&#x59CB;&#x7ED3;&#x675F;&#x65F6;&#x6162;&#xFF0C;&#x4E2D;&#x95F4;&#x52A0;&#x901F;</li>
<li>AnticipateInterpolator&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;  &#x53CD;&#x5411; &#xFF0C;&#x5148;&#x5411;&#x76F8;&#x53CD;&#x65B9;&#x5411;&#x6539;&#x53D8;&#x4E00;&#x6BB5;&#x518D;&#x52A0;&#x901F;&#x64AD;&#x653E;</li>
<li>AnticipateOvershootInterpolator&#x3000; &#x53CD;&#x5411;&#x52A0;&#x8D85;&#x8D8A;&#xFF0C;&#x5148;&#x5411;&#x76F8;&#x53CD;&#x65B9;&#x5411;&#x6539;&#x53D8;&#xFF0C;&#x518D;&#x52A0;&#x901F;&#x64AD;&#x653E;&#xFF0C;&#x4F1A;&#x8D85;&#x51FA;&#x76EE;&#x7684;&#x503C;&#x7136;&#x540E;&#x7F13;&#x6162;&#x79FB;&#x52A8;&#x81F3;&#x76EE;&#x7684;&#x503C;</li>
<li>BounceInterpolator&#x3000;&#x3000;&#x3000;&#x8DF3;&#x8DC3;&#xFF0C;&#x5FEB;&#x5230;&#x76EE;&#x7684;&#x503C;&#x65F6;&#x503C;&#x4F1A;&#x8DF3;&#x8DC3;&#xFF0C;&#x5982;&#x76EE;&#x7684;&#x503C;100&#xFF0C;&#x540E;&#x9762;&#x7684;&#x503C;&#x53EF;&#x80FD;&#x4F9D;&#x6B21;&#x4E3A;85&#xFF0C;77&#xFF0C;70&#xFF0C;80&#xFF0C;90&#xFF0C;100</li>
<li>CycleIinterpolator&#x3000;&#x3000;&#x3000;  &#x5FAA;&#x73AF;&#xFF0C;&#x52A8;&#x753B;&#x5FAA;&#x73AF;&#x4E00;&#x5B9A;&#x6B21;&#x6570;&#xFF0C;&#x503C;&#x7684;&#x6539;&#x53D8;&#x4E3A;&#x4E00;&#x6B63;&#x5F26;&#x51FD;&#x6570;&#xFF1A;Math.sin(2 * mCycles * Math.PI * input)</li>
<li>LinearInterpolator&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;  &#x7EBF;&#x6027;&#xFF0C;&#x7EBF;&#x6027;&#x5747;&#x5300;&#x6539;&#x53D8;</li>
<li>OvershottInterpolator&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;  &#x8D85;&#x8D8A;&#xFF0C;&#x6700;&#x540E;&#x8D85;&#x51FA;&#x76EE;&#x7684;&#x503C;&#x7136;&#x540E;&#x7F13;&#x6162;&#x6539;&#x53D8;&#x5230;&#x76EE;&#x7684;&#x503C;</li>
<li>TimeInterpolator&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000;&#x3000; &#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x5141;&#x8BB8;&#x4F60;&#x81EA;&#x5B9A;&#x4E49;interpolator&#xFF0C;&#x4EE5;&#x4E0A;&#x51E0;&#x4E2A;&#x90FD;&#x662F;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;</li>
</ul>
<h2 id="frame-animation"><a class="header-anchor" href="#frame-animation"></a>Frame Animation</h2>
<p>Frame&#x52A8;&#x753B;&#x662F;&#x4E00;&#x5E27;&#x4E00;&#x5E27;&#x7684;&#x7ED8;&#x5236;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x662F;&#x4E00;&#x7CFB;&#x5217;&#x56FE;&#x7247;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7684;&#x987A;&#x5E8F;&#x5C55;&#x793A;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x548C;&#x653E;&#x7535;&#x5F71;&#x7684;&#x673A;&#x5236;&#x5F88;&#x76F8;&#x4F3C;&#xFF0C;&#x6211;&#x4EEC;&#x79F0;&#x4E3A;&#x9010;&#x5E27;&#x52A8;&#x753B;&#x3002;Frame&#x52A8;&#x753B;&#x53EF;&#x4EE5;&#x88AB;&#x5B9A;&#x4E49;&#x5728;XML&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5B8C;&#x5168;&#x7F16;&#x7801;&#x5B9E;&#x73B0;&#x3002;</p>
<p>&#x6B63;&#x5982;&#x4E0A;&#x9762;&#x6240;&#x8BF4;&#xFF0C;&#x5E27;&#x52A8;&#x753B;&#x5C31;&#x50CF;&#x7535;&#x5F71;&#x4E00;&#x6837;&#xFF0C;&#x6BCF;&#x4E00;&#x5E27;&#x5C31;&#x662F;&#x4E00;&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x56E0;&#x6B64;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x5E27;&#x52A8;&#x753B;&#x7684;&#x9996;&#x8981;&#x6761;&#x4EF6;&#x5C31;&#x662F;&#x5EFA;&#x7ACB;&#x56FE;&#x7247;&#x5E8F;&#x5217;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;&#x5B83;&#x6765;&#x6A21;&#x62DF;&#x7B80;&#x5355;&#x7684; gif &#x52A8;&#x56FE;&#x3002;</p>
<p>&#x5E27;&#x52A8;&#x753B;&#x6709;&#x4E24;&#x79CD;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x4F7F;&#x7528;XML&#x6587;&#x4EF6;&#xFF0C;&#x53E6;&#x4E00;&#x79CD;&#x662F;&#x4F7F;&#x7528; AnimationDrawable &#x7C7B;&#xFF0C;&#x5728;&#x4EE3;&#x7801;&#x91CC;&#x9762;&#x5B9E;&#x73B0;&#x52A8;&#x753B;&#x3002;</p>
<p><strong>AnimationDrawable&#x5E38;&#x89C1;api:</strong></p>
<ul>
<li>void start()  &#x5F00;&#x59CB;&#x64AD;&#x653E;&#x52A8;&#x753B;</li>
<li>void stop()  &#x505C;&#x6B62;&#x64AD;&#x653E;&#x52A8;&#x753B;</li>
<li>addFrame(Drawable frame, int duration) -  &#x6DFB;&#x52A0;&#x4E00;&#x5E27;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x8BE5;&#x5E27;&#x663E;&#x793A;&#x7684;&#x6301;&#x7EED;&#x65F6;&#x95F4;</li>
<li>void setOneShoe(boolean flag) - false&#x4E3A;&#x5FAA;&#x73AF;&#x64AD;&#x653E;&#xFF0C;true&#x4E3A;&#x4EC5;&#x64AD;&#x653E;&#x4E00;&#x6B21;</li>
<li>boolean isRunning()  &#x662F;&#x5426;&#x6B63;&#x5728;&#x64AD;&#x653E;</li>
</ul>
<h3 id="xml&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;"><a class="header-anchor" href="#xml&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;"></a>XML&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;</h3>
<p>XML&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x53C8;&#x5206;&#x4E24;&#x79CD;&#xFF0C;&#x4E00;&#x79CD;&#x662F; Animation-list&#xFF0C;&#x53E6;&#x4E00;&#x79CD;&#x662F; Animated-selector&#x3002;</p>
<p>&#x54B1;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x7B2C;&#x4E00;&#x79CD; Animation-list &#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x5DE5;&#x7A0B; res &#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA; drawable &#x6587;&#x4EF6;&#x5939;&#xFF08;&#x6CE8;&#x610F;&#xFF0C;animation-list&#x4E0D;&#x662F;&#x653E;&#x5728; anim &#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A; animation_list_test.xml &#x6587;&#x4EF6;&#xFF0C;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;animation-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:oneshot=&quot;false&quot;&gt; &lt;!-- &#x662F;&#x5426;&#x53EA;&#x5C55;&#x793A;&#x4E00;&#x904D; --&gt;
    &lt;item
        android:drawable=&quot;@mipmap/a1&quot;
        android:duration=&quot;150&quot;&gt;&lt;/item&gt;
    &lt;item
        android:drawable=&quot;@mipmap/a2&quot;
        android:duration=&quot;150&quot;&gt;&lt;/item&gt;
    &lt;item
        android:drawable=&quot;@mipmap/a3&quot;
        android:duration=&quot;150&quot;&gt;&lt;/item&gt;
    &lt;item
        android:drawable=&quot;@mipmap/a1&quot;
        android:duration=&quot;150&quot;&gt;&lt;/item&gt;
&lt;/animation-list&gt;
</code></pre>
<p>MainActivity.java&#xFF1A;</p>
<pre><code>public class MainActivity extends AppCompatActivity implements View.OnClickListener{

    private final String TAG = MainActivity.class.getSimpleName();

    private ImageView mIVTest;
    private AnimationDrawable mAnimDrawable;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mIVTest = (ImageView) findViewById(R.id.iv_test);
        mAnimDrawable = (AnimationDrawable) mIVTest.getBackground();
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.btn_start_animation:
                mAnimDrawable.start();
                break;
            case R.id.btn_stop_animation:
                mAnimDrawable.stop();
                break;
        }
    }
}
</code></pre>
<p>&#x5E03;&#x5C40;&#x6587;&#x4EF6; activity_main.xml&#xFF1A;</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;
    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;
    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;
    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;
    tools:context=&quot;com.meizu.rxjava.example.MainActivity&quot;&gt;

    &lt;TextView
        android:layout_width=&quot;wrap_content&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:text=&quot;Hello World!&quot; /&gt;

    &lt;ImageView
        android:id=&quot;@+id/iv_test&quot;
        android:layout_width=&quot;120dp&quot;
        android:layout_height=&quot;120dp&quot;
        android:layout_centerInParent=&quot;true&quot;
        android:background=&quot;@drawable/animator_selector&quot; /&gt;

    &lt;Button
        android:id=&quot;@+id/btn_start_animation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:onClick=&quot;onClick&quot;
        android:text=&quot;&#x5F00;&#x59CB;&#x52A8;&#x753B;&quot; /&gt;

    &lt;Button
        android:id=&quot;@+id/btn_stop_animation&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;wrap_content&quot;
        android:layout_below=&quot;@+id/btn_start_animation&quot;
	android:layout_marginTop=&quot;16dp&quot;
        android:onClick=&quot;onClick&quot;
        android:text=&quot;&#x7ED3;&#x675F;&#x52A8;&#x753B;&quot; /&gt;
&lt;/RelativeLayout&gt;

</code></pre>
<p>&#x6700;&#x540E;&#x5448;&#x73B0;&#x7684;&#x52A8;&#x753B;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x5B83;&#x662F;&#x7531; 4 &#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x5373; 4 &#x5E27;&#x7EC4;&#x6210;&#x7684;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/02/28/android-animation-theory/animation-list.gif" class="lazy">
</div>
<p>&#x63A5;&#x7740;&#x6765;&#x770B;&#x7B2C;&#x4E8C;&#x79CD;&#x5B9E;&#x73B0;&#xFF0C;&#x5373; Animated-Selector &#x65B9;&#x5F0F;&#xFF0C;&#x5728; drawable &#x76EE;&#x5F55;&#x4E0B;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A; animator_selector.xml &#x6587;&#x4EF6;&#xFF0C;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;animated-selector xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item
        android:id=&quot;@+id/state_on&quot;
        android:drawable=&quot;@mipmap/a1&quot;
        android:state_checked=&quot;false&quot; /&gt;

    &lt;item
        android:id=&quot;@+id/state_off&quot;
        android:state_checked=&quot;true&quot;
        android:drawable=&quot;@mipmap/a2&quot; /&gt;

    &lt;transition
        android:fromId=&quot;@id/state_on&quot;
        android:toId=&quot;@id/state_off&quot;&gt;
        &lt;animation-list&gt;
            &lt;item
                android:drawable=&quot;@mipmap/a1&quot;
                android:duration=&quot;150&quot; /&gt;
            &lt;item
                android:drawable=&quot;@mipmap/a2&quot;
                android:duration=&quot;150&quot; /&gt;
            &lt;item
                android:drawable=&quot;@mipmap/a3&quot;
                android:duration=&quot;150&quot; /&gt;
            &lt;item
                android:drawable=&quot;@mipmap/a4&quot;
                android:duration=&quot;150&quot; /&gt;
        &lt;/animation-list&gt;
    &lt;/transition&gt;
&lt;/animated-selector&gt;
</code></pre>
<p>MainActivity.java&#xFF1A;</p>
<pre><code>private ImageView mIVTest;
    private static final int[] STATE_CHECKED = new int[]{android.R.attr.state_checked};
    private static final int[] STATE_UNCHECKED = new int[]{};
    private boolean mIsChecked;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mIVTest = (ImageView) findViewById(R.id.iv_test);
        mIVTest.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if (mIsChecked) {
                    mIVTest.setImageState(STATE_UNCHECKED, true);
                    mIsChecked = false;
                } else {
                    mIVTest.setImageState(STATE_CHECKED, true);
                    mIsChecked = true;
                }
            }
        });
    }
</code></pre>
<p>&#x70B9;&#x51FB;&#x56FE;&#x7247;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x52A8;&#x753B;&#x4E86;&#x3002;</p>
<h3 id="&#x52A8;&#x6001;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;"><a class="header-anchor" href="#&#x52A8;&#x6001;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;"></a>&#x52A8;&#x6001;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;</h3>
<p>&#x52A8;&#x6001;&#x5B9E;&#x73B0;&#x5C31;&#x662F;&#x5C06;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x91CC;&#x9762;&#x7684;&#x56FE;&#x7247;&#x6309;&#x987A;&#x5E8F;&#x7684;&#x4EE5;&#x5E27;&#x7684;&#x5F62;&#x5F0F;&#x6DFB;&#x52A0;&#x5230; AnimationDrawable &#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x64AD;&#x653E;&#x3002;</p>
<pre><code>public class MainActivity extends AppCompatActivity implements View.OnClickListener{

    private final String TAG = MainActivity.class.getSimpleName();

    private ImageView mIVTest;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mIVTest = (ImageView) findViewById(R.id.iv_test);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.btn_start_animation:
                playAnimation();
                break;
            case R.id.btn_stop_animation:
                break;
        }
    }

    /**
     * &#x52A8;&#x6001;&#x4EE3;&#x7801;&#x5236;&#x4F5C;&#x5E27;&#x52A8;&#x753B;
     */
    private void playAnimation(){
        AnimationDrawable ad = new AnimationDrawable();
        for(int i = 1; i &lt; 5; i++){
            int resId = getResources().getIdentifier(&quot;a&quot; + i, &quot;mipmap&quot;, getPackageName());
            Drawable drawable = getResources().getDrawable(resId);
            ad.addFrame(drawable, 150);//&#x6DFB;&#x52A0;&#x5E27;
        }
        ad.setOneShot(false);//&#x52A8;&#x753B;&#x91CD;&#x590D;&#x8FD0;&#x884C;
        mIVTest.setImageDrawable(ad);
        ad.start();
    }
}
</code></pre>
<h2 id="tween-animation"><a class="header-anchor" href="#tween-animation"></a>Tween Animation</h2>
<p>&#x662F;&#x5BF9;&#x67D0;&#x4E2A;View&#x8FDB;&#x884C;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x52A8;&#x753B;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5305;&#x62EC;&#x6DE1;&#x5165;&#x6DE1;&#x51FA;&#xFF08;Alpha&#xFF09;&#xFF0C;&#x7F29;&#x653E;&#xFF08;Scale&#xFF09;&#xFF0C;&#x5E73;&#x79FB;&#xFF08;Translate&#xFF09;&#xFF0C;&#x65CB;&#x8F6C;&#xFF08;Rotate&#xFF09;&#x56DB;&#x79CD;&#x6A21;&#x5F0F;&#x3002;&#x539F;&#x7406;&#x662F;&#x7ED9;&#x51FA;&#x4E24;&#x4E2A;&#x5173;&#x952E;&#x5E27;&#xFF0C;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x7B97;&#x6CD5;&#x5C06;&#x7ED9;&#x5B9A;&#x7684;&#x5C5E;&#x6027;&#x503C;&#x5728;&#x7ED9;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x5185;&#x5728;&#x4E24;&#x4E2A;&#x5173;&#x952E;&#x5E27;&#x4E4B;&#x95F4;&#x6E10;&#x53D8;&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x5C31;&#x662F;&#x8BE5;&#x52A8;&#x753B;&#x53EA;&#x80FD;&#x5E94;&#x7528;&#x4E8E;View&#x5BF9;&#x8C61;&#x3002;</p>
<p>Android Tween &#x52A8;&#x753B;&#x5C31;&#x662F;&#x901A;&#x8FC7;ParentView &#x6765;&#x4E0D;&#x65AD;&#x8C03;&#x6574; ChildView &#x7684;&#x753B;&#x5E03;&#x5750;&#x6807;&#x7CFB;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x4E0B;&#x9762;&#x4EE5;&#x5E73;&#x79FB;&#x52A8;&#x753B;&#x6765;&#x505A;&#x793A;&#x4F8B;&#xFF0C;&#x5047;&#x8BBE;&#x5728;&#x52A8;&#x753B;&#x5F00;&#x59CB;&#x65F6; ChildView &#x5728; ParentView &#x4E2D;&#x7684;&#x521D;&#x59CB;&#x4F4D;&#x7F6E;&#x5728; (100,200) &#x5904;&#xFF0C;&#x8FD9;&#x65F6; ParentView &#x4F1A;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x5750;&#x6807;&#x6765;&#x8BBE;&#x7F6E; ChildView &#x7684;&#x753B;&#x5E03;&#xFF0C;&#x5728; ParentView&#x7684; dispatchDraw &#x4E2D;&#x5B83;&#x53D1;&#x73B0; ChildView &#x6709;&#x4E00;&#x4E2A;&#x5E73;&#x79FB;&#x52A8;&#x753B;&#xFF0C;&#x800C;&#x4E14;&#x5F53;&#x524D;&#x7684;&#x5E73;&#x79FB;&#x4F4D;&#x7F6E;&#x662F; (100, 200)&#xFF0C;&#x4E8E;&#x662F;&#x5B83;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x753B;&#x5E03;&#x7684;&#x51FD;&#x6570;traslate(100, 200) &#x6765;&#x544A;&#x8BC9; ChildView &#x5728;&#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x753B;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x52A8;&#x753B;&#x7684;&#x7B2C;&#x4E00;&#x5E27;&#x3002;&#x5982;&#x679C; ParentView &#x53D1;&#x73B0; ChildView &#x6709;&#x52A8;&#x753B;&#xFF0C;&#x5C31;&#x4F1A;&#x4E0D;&#x65AD;&#x7684;&#x8C03;&#x7528; invalidate() &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;&#x81EA;&#x5DF1;&#x4F1A;&#x4E0D;&#x65AD;&#x7684;&#x91CD;&#x753B;&#xFF0C;&#x5C31;&#x4F1A;&#x4E0D;&#x65AD;&#x7684;&#x8C03;&#x7528; dispatchDraw &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x4EA7;&#x751F;&#x4E86;&#x52A8;&#x753B;&#x7684;&#x540E;&#x7EED;&#x5E27;&#xFF0C;&#x5F53;&#x518D;&#x6B21;&#x8FDB;&#x5165; dispatchDraw &#x65F6;&#xFF0C;ParentView &#x6839;&#x636E;&#x5E73;&#x79FB;&#x52A8;&#x753B;&#x4EA7;&#x751F;&#x51FA;&#x7B2C;&#x4E8C;&#x5E27;&#x7684;&#x5E73;&#x79FB;&#x4F4D;&#x7F6E; (500, 200)&#xFF0C;&#x7136;&#x540E;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x4E0A;&#x8FF0;&#x64CD;&#x4F5C;&#xFF0C;&#x7136;&#x540E;&#x4EA7;&#x751F;&#x7B2C;&#x4E09;&#x5E27;&#xFF0C;&#x7B2C;&#x56DB;&#x5E27;&#xFF0C;&#x76F4;&#x5230;&#x52A8;&#x753B;&#x64AD;&#x5B8C;&#x3002;</p>
<p>&#x8865;&#x95F4;&#x52A8;&#x753B;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x81F4;&#x547D;&#x7684;&#x7F3A;&#x9677;&#xFF0C;&#x5C31;&#x662F;&#x5B83;&#x53EA;&#x662F;&#x6539;&#x53D8;&#x4E86;View&#x7684;&#x663E;&#x793A;&#x6548;&#x679C;&#x800C;&#x5DF2;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x771F;&#x6B63;&#x53BB;&#x6539;&#x53D8;View&#x7684;&#x5C5E;&#x6027;&#x3002;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#x5462;&#xFF1F;&#x6BD4;&#x5982;&#x8BF4;&#xFF0C;&#x73B0;&#x5728;&#x5C4F;&#x5E55;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#x6709;&#x4E00;&#x4E2A;&#x6309;&#x94AE;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x8865;&#x95F4;&#x52A8;&#x753B;&#x5C06;&#x5B83;&#x79FB;&#x52A8;&#x5230;&#x4E86;&#x5C4F;&#x5E55;&#x7684;&#x53F3;&#x4E0B;&#x89D2;&#xFF0C;&#x73B0;&#x5728;&#x4F60;&#x53EF;&#x4EE5;&#x53BB;&#x5C1D;&#x8BD5;&#x70B9;&#x51FB;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x6309;&#x94AE;&#xFF0C;&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;&#x662F;&#x7EDD;&#x5BF9;&#x4E0D;&#x4F1A;&#x89E6;&#x53D1;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5B9E;&#x9645;&#x4E0A;&#x8FD9;&#x4E2A;&#x6309;&#x94AE;&#x8FD8;&#x662F;&#x505C;&#x7559;&#x5728;&#x5C4F;&#x5E55;&#x7684;&#x5DE6;&#x4E0A;&#x89D2;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x8865;&#x95F4;&#x52A8;&#x753B;&#x5C06;&#x8FD9;&#x4E2A;&#x6309;&#x94AE;&#x7ED8;&#x5236;&#x5230;&#x4E86;&#x5C4F;&#x5E55;&#x7684;&#x53F3;&#x4E0B;&#x89D2;&#x800C;&#x5DF2;&#x3002;</p>
<p>Tween Animation &#x4E2D;&#x4E3B;&#x8981;&#x5305;&#x542B;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x7C7B;&#xFF1A;</p>
<ul>
<li>ScaleAnimation		&#x5C3A;&#x5BF8;&#x5927;&#x5C0F;&#x7F29;&#x653E;</li>
<li>AlphaAnimation		&#x6E10;&#x53D8;&#x900F;&#x660E;&#x5EA6;</li>
<li>RotateAnimation		&#x753B;&#x9762;&#x65CB;&#x8F6C;</li>
<li>TranslateAnimation	&#x4F4D;&#x7F6E;&#x79FB;&#x52A8;</li>
<li>AnimationSet 			&#x52A8;&#x753B;&#x96C6;</li>
</ul>
<h3 id="scaleanimation"><a class="header-anchor" href="#scaleanimation"></a>ScaleAnimation</h3>
<ul>
<li>fromXScale &#x5C5E;&#x6027;&#x4E3A;&#x52A8;&#x753B;&#x8D77;&#x59CB;&#x65F6; X &#x5750;&#x6807;&#x4E0A;&#x7684;&#x4F38;&#x7F29;&#x5C3A;&#x5BF8;</li>
<li>toXScale &#x5C5E;&#x6027;&#x4E3A;&#x52A8;&#x753B;&#x7ED3;&#x675F;&#x65F6; X &#x5750;&#x6807;&#x4E0A;&#x7684;&#x4F38;&#x7F29;&#x5C3A;&#x5BF8;</li>
<li>fromYScale &#x5C5E;&#x6027;&#x4E3A;&#x52A8;&#x753B;&#x8D77;&#x59CB;&#x65F6; Y &#x5750;&#x6807;&#x4E0A;&#x7684;&#x4F38;&#x7F29;&#x5C3A;&#x5BF8;</li>
<li>toYScale &#x5C5E;&#x6027;&#x4E3A;&#x52A8;&#x753B;&#x7ED3;&#x675F;&#x65F6; Y &#x5750;&#x6807;&#x4E0A;&#x7684;&#x4F38;&#x7F29;&#x5C3A;&#x5BF8;</li>
</ul>
<p>&#x8FD8;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x4F38;&#x7F29;&#x6A21;&#x5F0F;pivotXType&#x3001;pivotYType&#xFF0C; &#x4F38;&#x7F29;&#x52A8;&#x753B;&#x76F8;&#x5BF9;&#x4E8E;x,y &#x5750;&#x6807;&#x7684;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;pivotXValue&#x3001;pivotYValue&#x7B49;&#x3002;</p>
<p>1&#x3001;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;</p>
<pre><code>View view = new View(this);
Animation scaleAnimation = new ScaleAnimation(0.5f, 1.0f, 0.5f, 1.0f);
scaleAnimation.setDuration(500);
view.startAnimation(scaleAnimation);
</code></pre>
<p>2&#x3001;xml&#x6587;&#x4EF6;&#x5B9E;&#x73B0;</p>
<pre><code>&lt;scale xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:duration=&quot;500&quot;
    android:fillAfter=&quot;false&quot;
    android:fromXScale=&quot;0.5&quot;
    android:fromYScale=&quot;0.5&quot;
    android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot;
    android:pivotX=&quot;50%&quot;
    android:pivotY=&quot;50%&quot;
    android:repeatCount=&quot;1&quot;
    android:toXScale=&quot;1.0&quot;
    android:toYScale=&quot;1.0&quot; /&gt;

//&#x4EE3;&#x7801;&#x52A0;&#x8F7D;
View view = new View(this);
Animation scaleAnimation = AnimationUtils.loadAnimation(this, R.anim.scale_animation);
view.startAnimation(scaleAnimation);
</code></pre>
<h3 id="alphaanimation"><a class="header-anchor" href="#alphaanimation"></a>AlphaAnimation</h3>
<p>&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570; fromAlpha &#x8868;&#x793A;&#x52A8;&#x753B;&#x8D77;&#x59CB;&#x65F6;&#x7684;&#x900F;&#x660E;&#x5EA6;&#xFF0C; &#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;toAlpha&#x8868;&#x793A;&#x52A8;&#x753B;&#x7ED3;&#x675F;&#x65F6;&#x7684;&#x900F;&#x660E;&#x5EA6;</p>
<p>1&#x3001;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;</p>
<pre><code>View view = new View(this);
Animation alphaAnimation = new AlphaAnimation(0f, 1.0f);
alphaAnimation.setDuration(500);
view.startAnimation(alphaAnimation);
</code></pre>
<p>2&#x3001;xml&#x6587;&#x4EF6;&#x5B9E;&#x73B0;</p>
<pre><code>&lt;alpha xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:duration=&quot;500&quot;
    android:fromAlpha=&quot;0&quot;
    android:toAlpha=&quot;1.0&quot; /&gt;
</code></pre>
<h3 id="rotateanimation"><a class="header-anchor" href="#rotateanimation"></a>RotateAnimation</h3>
<ul>
<li>fromDegrees &#x4E3A;&#x52A8;&#x753B;&#x8D77;&#x59CB;&#x65F6;&#x7269;&#x4EF6;&#x7684;&#x89D2;&#x5EA6;&#xFF0C;&#x8BF4;&#x660E;&#xFF1A;
<ul>
<li>&#x5F53;&#x89D2;&#x5EA6;&#x4E3A;&#x8D1F;&#x6570;&#x2014;&#x2014;&#x8868;&#x793A;&#x9006;&#x65F6;&#x9488;&#x65CB;&#x8F6C;</li>
<li>&#x5F53;&#x89D2;&#x5EA6;&#x4E3A;&#x6B63;&#x6570;&#x2014;&#x2014;&#x8868;&#x793A;&#x987A;&#x65F6;&#x9488;&#x65CB;&#x8F6C;</li>
<li>(&#x8D1F;&#x6570; from&#x2014;&#x2014;to &#x6B63;&#x6570;:&#x987A;&#x65F6;&#x9488;&#x65CB;&#x8F6C;)</li>
<li>(&#x8D1F;&#x6570; from&#x2014;&#x2014;to &#x8D1F;&#x6570;:&#x9006;&#x65F6;&#x9488;&#x65CB;&#x8F6C;)</li>
<li>(&#x6B63;&#x6570; from&#x2014;&#x2014;to &#x6B63;&#x6570;:&#x987A;&#x65F6;&#x9488;&#x65CB;&#x8F6C;)</li>
<li>(&#x6B63;&#x6570; from&#x2014;&#x2014;to &#x8D1F;&#x6570;:&#x9006;&#x65F6;&#x9488;&#x65CB;&#x8F6C;)</li>
</ul>
</li>
<li>toDegrees &#x5C5E;&#x6027;&#x4E3A;&#x52A8;&#x753B;&#x7ED3;&#x675F;&#x65F6;&#x7269;&#x4EF6;&#x65CB;&#x8F6C;&#x7684;&#x89D2;&#x5EA6; &#x53EF;&#x4EE5;&#x5927;&#x4E8E;360&#x5EA6;</li>
<li>pivotX pivotY &#x4E3A;&#x52A8;&#x753B;&#x76F8;&#x5BF9;&#x4E8E;&#x7269;&#x4EF6;&#x7684; X&#x3001;Y &#x5750;&#x6807;&#x7684;&#x5F00;&#x59CB;&#x4F4D; &#x8BF4;&#x660E;&#xFF1A;
<ul>
<li>&#x4EE5;&#x4E0A;&#x4E24;&#x4E2A;&#x5C5E;&#x6027;&#x503C; &#x4ECE; 0%-100% &#x4E2D;&#x53D6;&#x503C;</li>
<li>50%&#x4E3A;&#x7269;&#x4EF6;&#x7684;X&#x6216;Y&#x65B9;&#x5411;&#x5750;&#x6807;&#x4E0A;&#x7684;&#x4E2D;&#x70B9;&#x4F4D;&#x7F6E;</li>
</ul>
</li>
</ul>
<p>1&#x3001;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;</p>
<pre><code>View view = new View(this);
Animation rotateAnimation = new RotateAnimation(0f, 180f);
rotateAnimation.setDuration(500);
view.startAnimation(rotateAnimation);
</code></pre>
<p>2&#x3001;xml&#x6587;&#x4EF6;&#x5B9E;&#x73B0;</p>
<pre><code>&lt;rotate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:interpolator=&quot;@android:anim/accelerate_interpolator&quot;
    android:repeatCount=&quot;2&quot;
    android:fromDegrees=&quot;0&quot;
    android:toDegrees=&quot;180&quot;
    android:pivotX=&quot;50%&quot;
    android:pivotY=&quot;50%&quot;
    android:duration=&quot;500&quot; /&gt;
</code></pre>
<h3 id="translateanimation"><a class="header-anchor" href="#translateanimation"></a>TranslateAnimation</h3>
<ul>
<li>fromXDelta&#x3001;toXDelta &#x52A8;&#x753B;&#x8D77;&#x59CB;&#x3001;&#x7ED3;&#x675F;&#x65F6;X&#x5750;&#x6807;</li>
<li>fromYDelta&#x3001;toYDelta &#x52A8;&#x753B;&#x8D77;&#x59CB;&#x3001;&#x7ED3;&#x675F;&#x65F6;Y&#x5750;&#x6807;</li>
</ul>
<p>1&#x3001;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;</p>
<pre><code>View view = new View(this);
Animation transAnimation = new TranslateAnimation(50f, 100f, 50f, 180f);
transAnimation.setDuration(500);
view.startAnimation(transAnimation);
</code></pre>
<p>2&#x3001;xml&#x6587;&#x4EF6;&#x5B9E;&#x73B0;</p>
<pre><code>&lt;translate xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:interpolator=&quot;@android:anim/accelerate_interpolator&quot;
    android:fromXDelta=&quot;50&quot;
    android:fromYDelta=&quot;50&quot;
    android:toXDelta=&quot;100&quot;
    android:toYDelta=&quot;180&quot;
    android:duration=&quot;500&quot; /&gt;
</code></pre>
<h3 id="animationset"><a class="header-anchor" href="#animationset"></a>AnimationSet</h3>
<p>&#x52A8;&#x753B;&#x96C6;&#x5408;&#xFF0C;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C;&#x5C31;&#x662F;&#x591A;&#x4E2A;&#x76F8;&#x540C;&#x6216;&#x8005;&#x4E0D;&#x76F8;&#x540C;&#x79CD;&#x7C7B;&#x7684;&#x52A8;&#x753B;&#x96C6;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x7136;&#x540E;&#x64AD;&#x653E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x52A8;&#x753B;&#x7684;&#x53E0;&#x52A0;&#x3002;</p>
<p>1&#x3001;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;</p>
<pre><code>View view = new View(this);
Animation transAnimation = new TranslateAnimation(50f, 100f, 50f, 180f);
transAnimation.setDuration(500);
view.startAnimation(transAnimation);

Animation rotateAnimation = new RotateAnimation(0f, 180f);
rotateAnimation.setDuration(500);
view.startAnimation(rotateAnimation);

AnimationSet animationSet = new AnimationSet(true);
animationSet.addAnimation(transAnimation);
animationSet.addAnimation(rotateAnimation);
animationSet.setStartOffset(1000);//&#x4E00;&#x79D2;&#x540E;&#x518D;&#x6267;&#x884C;&#x52A8;&#x753B; = &#x7B49;&#x5F85;1&#x79D2;&#x540E;&#x6267;&#x884C;&#x52A8;&#x753B;
animationSet.setFillAfter(true);//&#x8BBE;&#x7F6E;&#x52A8;&#x753B;&#x6267;&#x884C;&#x540E;&#x4FDD;&#x6301;&#x6700;&#x540E;&#x72B6;&#x6001;
view.startAnimation(animationSet);
</code></pre>
<p>2&#x3001;xml&#x6587;&#x4EF6;&#x5B9E;&#x73B0;</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:interpolator=&quot;@android:anim/accelerate_interpolator&quot;
    android:shareInterpolator=&quot;true&quot;&gt;
    &lt;alpha
        android:fromAlpha=&quot;0&quot;
        android:toAlpha=&quot;1&quot; /&gt;
    &lt;translate
        android:fromXDelta=&quot;50&quot;
        android:fromYDelta=&quot;50&quot;
        android:toXDelta=&quot;100&quot;
        android:toYDelta=&quot;180&quot; /&gt;
    &lt;rotate
        android:fromDegrees=&quot;0&quot;
        android:pivotX=&quot;50&quot;
        android:pivotY=&quot;50&quot;
        android:toDegrees=&quot;180&quot; /&gt;
    &lt;!--&lt;set&gt;
        //&#x8FD8;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x6DFB;&#x52A0;&#x5B50;&#x52A8;&#x753B;&#x96C6;&#x5408;
    &lt;/set&gt;--&gt;
&lt;/set&gt;
</code></pre>
<h2 id="property-animation"><a class="header-anchor" href="#property-animation"></a>Property Animation</h2>
<h3 id="valueanimator"><a class="header-anchor" href="#valueanimator"></a>ValueAnimator</h3>
<p>ValueAnimator &#x662F;&#x8BA1;&#x7B97;&#x52A8;&#x753B;&#x8FC7;&#x7A0B;&#x4E2D;&#x53D8;&#x5316;&#x7684;&#x503C;&#xFF0C;&#x5305;&#x542B;&#x52A8;&#x753B;&#x7684;&#x5F00;&#x59CB;&#x503C;&#xFF0C;&#x7ED3;&#x675F;&#x503C;&#xFF0C;&#x6301;&#x7EED;&#x65F6;&#x95F4;&#x7B49;&#x5C5E;&#x6027;&#x3002;&#x4F46;&#x5E76;&#x6CA1;&#x6709;&#x628A;&#x8FD9;&#x4E9B;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x503C;&#x5E94;&#x7528;&#x5230;&#x5177;&#x4F53;&#x7684;&#x5BF9;&#x8C61;&#x4E0A;&#x9762;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x4E0D;&#x4F1A;&#x6709;&#x4EC0;&#x4E48;&#x7684;&#x52A8;&#x753B;&#x663E;&#x793A;&#x51FA;&#x6765;&#x3002;&#x8981;&#x628A;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x7684;&#x503C;&#x5E94;&#x7528;&#x5230;&#x5BF9;&#x8C61;&#x4E0A;&#xFF0C;&#x5FC5;&#x987B;&#x4E3A; ValueAnimator &#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x76D1;&#x542C;&#x5668; ValueAnimator.AnimatorUpdateListener&#xFF0C;&#x8BE5;&#x76D1;&#x542C;&#x5668;&#x8D1F;&#x8D23;&#x66F4;&#x65B0;&#x5BF9;&#x8C61;&#x7684;&#x5C5E;&#x6027;&#x503C;&#x3002;</p>
<p>ValueAnimator &#x5B83;&#x662F;&#x8C03;&#x7528; TypeEvaluator &#x6765;&#x5B8C;&#x6210;&#x8BA1;&#x7B97; view &#x5728;&#x52A8;&#x753B;&#x4E2D;&#x7684;&#x5C5E;&#x6027;&#x503C;&#x7684;&#x3002;&#x90A3; TypeEvaluator &#x7684;&#x4F5C;&#x7528;&#x5230;&#x5E95;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x7B80;&#x5355;&#x6765;&#x8BF4;&#xFF0C;&#x5C31;&#x662F;&#x544A;&#x8BC9;&#x52A8;&#x753B;&#x7CFB;&#x7EDF;&#x5982;&#x4F55;&#x4ECE;&#x521D;&#x59CB;&#x503C;&#x8FC7;&#x5EA6;&#x5230;&#x7ED3;&#x675F;&#x503C;&#xFF0C;&#x5373;&#x5B83;&#x57FA;&#x4E8E;&#x63D2;&#x503C;&#x51FD;&#x6570;&#x3001;&#x5F00;&#x59CB;&#x503C;&#x3001;&#x7ED3;&#x675F;&#x503C;&#x8BA1;&#x7B97;&#x4F60;&#x5728;&#x52A8;&#x753B;&#x7684;&#x5C5E;&#x6027;&#x7684;&#x503C;&#x3002;</p>
<p>&#x6BD4;&#x5982;&#x8BF4; FloatEvaluator&#xFF0C;&#x5B83;&#x5B9E;&#x73B0;&#x4E86; TypeEvaluator &#x63A5;&#x53E3;&#xFF1A;</p>
<pre><code>/**
     * This evaluator can be used to perform type interpolation between &lt;code&gt;float&lt;/code&gt; values.
     */
    public class FloatEvaluator implements TypeEvaluator&lt;Number&gt; {

        /**
         * @param fraction   &#x7528;&#x4E8E;&#x8868;&#x793A;&#x52A8;&#x753B;&#x7684;&#x5B8C;&#x6210;&#x5EA6;&#x7684;&#xFF0C;&#x6839;&#x636E;&#x5B83;&#x6765;&#x8BA1;&#x7B97;&#x5F53;&#x524D;&#x52A8;&#x753B;&#x7684;&#x503C;&#x5E94;&#x8BE5;&#x662F;&#x591A;&#x5C11;
         * @param startValue &#x52A8;&#x753B;&#x7684;&#x521D;&#x59CB;&#x503C;
         * @param endValue   &#x52A8;&#x753B;&#x7684;&#x7ED3;&#x675F;&#x503C;
         * @return A linear interpolation between the start and end values, given the
         *         &lt;code&gt;fraction&lt;/code&gt; parameter.
         */
        public Float evaluate(float fraction, Number startValue, Number endValue) {
            float startFloat = startValue.floatValue();
            //&#x521D;&#x59CB;&#x503C;&#x52A0;&#x4E0A;&#x5DF2;&#x5B8C;&#x6210;&#x7684;&#x52A8;&#x753B;&#x7684;&#x503C;&#xFF0C;&#x5373;&#x4E3A;&#x5F53;&#x524D;&#x52A8;&#x753B;&#x7684;&#x503C;
            return startFloat + fraction * (endValue.floatValue() - startFloat);
        }
    }
</code></pre>
<p>&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x9700;&#x6C42;&#x81EA;&#x5B9A;&#x4E49; TypeEvaluator&#xFF0C;&#x5B8C;&#x6210;&#x81EA;&#x5DF1;&#x60F3;&#x8981;&#x7684;&#x52A8;&#x753B;&#x6548;&#x679C;&#x3002;</p>
<pre><code>class PointEvaluator implements TypeEvaluator&lt;Point&gt; {

    /**
     * @param fraction   &#x52A8;&#x753B;&#x53D8;&#x5316;&#x4E2D;&#x7684;&#x6D6E;&#x70B9;&#x53C2;&#x6570;,0-1
     * @param startValue &#x52A8;&#x753B;&#x5F00;&#x59CB;&#x65F6;&#x7684;Point&#x5BF9;&#x8C61;
     * @param endValue   &#x52A8;&#x753B;&#x7ED3;&#x675F;&#x65F6;&#x7684;Point&#x5BF9;&#x8C61;
     * @return &#x52A8;&#x753B;&#x8FC7;&#x7A0B;&#x4E2D;&#x901A;&#x8FC7;&#x8BA1;&#x7B97;&#x83B7;&#x53D6;&#x534A;&#x5F84;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x7684;Point&#x5BF9;&#x8C61;
     */
    @Override
    public Point evaluate(float fraction, Point startValue, Point endValue) {
        int startRadius = startValue.getRadius();
        int endRadius = endValue.getRadius();
        int newRadius = (int) (startRadius + fraction * (endRadius - startRadius));
        return new Point(newRadius);
    }
}
//&#x4F7F;&#x7528;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x662F;
 ValueAnimator animator = ValueAnimator.ofObject(new PointEvaluator()&#xFF0C;new Point(0), new Point(minValue * 2 / 5));
</code></pre>
<h3 id="objectanimator"><a class="header-anchor" href="#objectanimator"></a>ObjectAnimator</h3>
<p>&#x76F8;&#x6BD4;&#x4E8E; ValueAnimator&#xFF0C;ObjectAnimator &#x53EF;&#x80FD;&#x624D;&#x662F;&#x6211;&#x4EEC;&#x6700;&#x5E38;&#x63A5;&#x89E6;&#x5230;&#x7684;&#x7C7B;&#xFF0C;&#x56E0;&#x4E3A; ValueAnimator &#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x5BF9;&#x503C;&#x8FDB;&#x884C;&#x4E86;&#x4E00;&#x4E2A;&#x5E73;&#x6ED1;&#x7684;&#x52A8;&#x753B;&#x8FC7;&#x6E21;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x5230;&#x8FD9;&#x79CD;&#x529F;&#x80FD;&#x7684;&#x573A;&#x666F;&#x597D;&#x50CF;&#x5E76;&#x4E0D;&#x591A;&#x3002;&#x800C; ObjectAnimator &#x5219;&#x5C31;&#x4E0D;&#x540C;&#x4E86;&#xFF0C;&#x5B83;&#x662F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5BF9;&#x4EFB;&#x610F;&#x5BF9;&#x8C61;&#x7684;&#x4EFB;&#x610F;&#x5C5E;&#x6027;&#x8FDB;&#x884C;&#x52A8;&#x753B;&#x64CD;&#x4F5C;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x8BF4; View &#x7684; alpha &#x5C5E;&#x6027;&#x3002;</p>
<p>&#x4E0D;&#x8FC7;&#x867D;&#x8BF4; ObjectAnimator &#x4F1A;&#x66F4;&#x52A0;&#x5E38;&#x7528;&#x4E00;&#x4E9B;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x5176;&#x5B9E;&#x662F;&#x7EE7;&#x627F;&#x81EA; ValueAnimator &#x7684;&#xFF0C;&#x5E95;&#x5C42;&#x7684;&#x52A8;&#x753B;&#x5B9E;&#x73B0;&#x673A;&#x5236;&#x4E5F;&#x662F;&#x57FA;&#x4E8E; ValueAnimator &#x6765;&#x5B8C;&#x6210;&#x7684;&#xFF0C;&#x56E0;&#x6B64; ValueAnimator &#x4ECD;&#x7136;&#x662F;&#x6574;&#x4E2A;&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x5F53;&#x4E2D;&#x6700;&#x6838;&#x5FC3;&#x7684;&#x4E00;&#x4E2A;&#x7C7B;&#x3002;&#x90A3;&#x4E48;&#x65E2;&#x7136;&#x662F;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#xFF0C;&#x8BF4;&#x660E; ValueAnimator &#x4E2D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x5728; ObjectAnimator &#x4E2D;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x4F7F;&#x7528;&#x7684;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x7528;&#x6CD5;&#x4E5F;&#x975E;&#x5E38;&#x7C7B;&#x4F3C;&#x3002;</p>
<h3 id="animatorset"><a class="header-anchor" href="#animatorset"></a>AnimatorSet</h3>
<p>&#x662F;&#x9488;&#x5BF9;&#x89C6;&#x56FE;&#x5C5E;&#x6027;&#x7684;&#x52A8;&#x753B;&#x96C6;&#x5408;&#x3002;&#x5B83;&#x652F;&#x6301;&#x8BBE;&#x7F6E;&#x7EC4;&#x4E2D;&#x52A8;&#x753B;&#x7684;&#x65F6;&#x5E8F;&#x5173;&#x7CFB;&#xFF0C;&#x5982;&#x540C;&#x65F6;&#x64AD;&#x653E;&#xFF0C;&#x987A;&#x5E8F;&#x64AD;&#x653E;&#x7B49;&#x3002;AnimatorSet &#x5C31;&#x6BD4; AnimationSet &#x529F;&#x80FD;&#x5F3A;&#x5927;&#x5F88;&#x591A;&#x4E86;&#xFF0C; AnimatorSet &#x53EF;&#x4EE5;&#x4F7F;&#x7528; playSequentially&#x3001;playTogether &#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x6765;&#x8BA9;&#x4E00;&#x4E9B;&#x5217;&#x7684;&#x52A8;&#x753B;&#x4E32;&#x884C;&#x548C;&#x5E76;&#x884C;&#x3002;</p>
<p>1&#x3001;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;</p>
<pre><code>View view = new View(this);
ObjectAnimator animatorA = ObjectAnimator.ofFloat(view, &quot;TranslationX&quot;, -300, 300, 0);
ObjectAnimator animatorB = ObjectAnimator.ofFloat(view, &quot;scaleY&quot;, 0.5f, 1.5f, 1f);
ObjectAnimator animatorC = ObjectAnimator.ofFloat(view, &quot;rotation&quot;, 0, 270, 90, 180, 0);
AnimatorSet animatorSet = new AnimatorSet();
animatorSet.playTogether(animatorA, animatorB, animatorC);//&#x5E76;&#x884C;&#x64AD;&#x653E;
//animatorSet.playSequentially(animatorA, animatorB, animatorC);//&#x987A;&#x5E8F;&#x64AD;&#x653E;
animatorSet.start();
</code></pre>
<p>2&#x3001;xml&#x6587;&#x4EF6;&#x5B9E;&#x73B0;</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    android:ordering=&quot;sequentially&quot;&gt;

    &lt;objectAnimator
        android:interpolator=&quot;@android:anim/accelerate_decelerate_interpolator&quot;
        android:propertyName=&quot;alpha&quot;
        android:duration=&quot;3000&quot;
        android:valueType=&quot;floatType&quot;
        android:valueFrom=&quot;0&quot;
        android:valueTo=&quot;1&quot;/&gt;

    &lt;objectAnimator
        android:interpolator=&quot;@android:anim/anticipate_overshoot_interpolator&quot;
        android:propertyName=&quot;scaleX&quot;
        android:duration=&quot;3000&quot;
        android:valueType=&quot;floatType&quot;
        android:valueFrom=&quot;0.5&quot;
        android:valueTo=&quot;1.5&quot; /&gt;

&lt;/set&gt;

//&#x4EE3;&#x7801;&#x52A0;&#x8F7D;
View view = new View(this);
AnimatorSet animatorSet = (AnimatorSet) AnimatorInflater.loadAnimator(MainActivity.this, R.animator.animator_set);
animatorSet.setTarget(view);
animatorSet.start();
</code></pre>
<h2 id="&#x81EA;&#x5B9A;&#x4E49;&#x52A8;&#x753B;"><a class="header-anchor" href="#&#x81EA;&#x5B9A;&#x4E49;&#x52A8;&#x753B;"></a>&#x81EA;&#x5B9A;&#x4E49;&#x52A8;&#x753B;</h2>
<h2 id="&#x52A8;&#x753B;&#x4F18;&#x5316;"><a class="header-anchor" href="#&#x52A8;&#x753B;&#x4F18;&#x5316;"></a>&#x52A8;&#x753B;&#x4F18;&#x5316;</h2>
<h3 id="&#x4F18;&#x5316;&#x70B9;1"><a class="header-anchor" href="#&#x4F18;&#x5316;&#x70B9;1"></a>&#x4F18;&#x5316;&#x70B9;1</h3>
<p>&#x5177;&#x4F53;&#x8BF7;&#x53C2;&#x8003;&#xFF1A;<a href="http://blog.csdn.net/rentee/article/details/52251829" target="_blank" rel="external">http://blog.csdn.net/rentee/article/details/52251829</a></p>
<ul>
<li>&#x4F7F;&#x7528; PropertyValuesHolder</li>
</ul>
<p>&#x60F3;&#x5FC5;&#x5927;&#x5BB6;&#x90FD;&#x8FD9;&#x6837;&#x5199;&#x8FC7;&#xFF1A;</p>
<pre><code>ObjectAnimator animX = ObjectAnimator.ofFloat(myView, &quot;x&quot;, 50f);
ObjectAnimator animY = ObjectAnimator.ofFloat(myView, &quot;y&quot;, 100f);
AnimatorSet animSetXY = new AnimatorSet();
animSetXY.playTogether(animX, animY);
animSetXY.start();
</code></pre>
<p>&#x4F46;&#x662F;&#x8FD9;&#x6837;&#x5199;&#x4F1A;&#x4EA7;&#x751F;&#x4E24;&#x4E2A; ObjectAnimator &#x5BF9;&#x8C61;&#xFF0C;&#x6548;&#x7387;&#x8F83;&#x4F4E;&#xFF0C;&#x5B98;&#x65B9;&#x5EFA;&#x7ACB;&#x8FD9;&#x6837;&#x5199;&#xFF1A;</p>
<pre><code>PropertyValuesHolder pvhX = PropertyValuesHolder.ofFloat(&quot;x&quot;, 50f);
PropertyValuesHolder pvhY = PropertyValuesHolder.ofFloat(&quot;y&quot;, 100f);

ObjectAnimator.ofPropertyValuesHolder(myView, pvhX, pvyY).start();
</code></pre>
<p>&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x4E86; PropertyValuesHolder&#xFF0C;&#x53EA;&#x4EA7;&#x751F;&#x4E00;&#x4E2A; ObjectAnimator &#x5BF9;&#x8C61;&#xFF0C;&#x66F4;&#x52A0;&#x9AD8;&#x6548;&#x3002;</p>
<p>&#x4E00;&#x4E2A; view &#x540C;&#x65F6;&#x53D1;&#x751F;&#x591A;&#x79CD;&#x6548;&#x679C;&#x65F6;&#xFF0C;&#x5EFA;&#x8BAE;&#x8FD9;&#x79CD;&#x5199;&#x6CD5;&#x3002;</p>
<ul>
<li>&#x4F7F;&#x7528; Keyframe</li>
</ul>
<p>&#x540C;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x80AF;&#x5B9A;&#x4E5F;&#x8FD9;&#x6837;&#x5199;&#x8FC7;&#xFF1A;</p>
<pre><code>AnimatorSet animSet = new AnimatorSet();

ObjectAnimator transYFirstAnim = ObjectAnimator.ofFloat(mView, &quot;translationY&quot;, 0, 100);
ObjectAnimator transYSecondAnim = ObjectAnimator.ofFloat(mView, &quot;translationY&quot;, 100, 0);

animSet.playSequentially(transYFirstAnim, transYSecondAnim);
</code></pre>
<p>&#x4EA7;&#x751F;&#x4E24;&#x4E2A; ObjectAnimator &#x5BF9;&#x8C61;&#xFF0C;&#x4E00;&#x4E2A; AnimatorSet&#xFF0C;&#x4EE3;&#x7801;&#x7E41;&#x7410;&#xFF0C;&#x5BF9;&#x8C61;&#x5197;&#x6742;&#x3002;<br>
&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528; Keyframe &#x7F16;&#x5199;&#x5176;&#x884C;&#x4E3A;&#x3002;&#x4ECE;&#x8BCD;&#x4E49;&#x4E0A;&#x6765;&#x7406;&#x89E3; Keyframe &#x662F;&#x5173;&#x952E;&#x5E27;&#xFF0C;&#x4E0B;&#x9762;&#x662F;&#x4F7F;&#x7528;&#x5173;&#x952E;&#x5E27;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;</p>
<pre><code>Keyframe k0 = Keyframe.ofFloat(0f, 0); //&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x201C;&#x4F55;&#x65F6;&#x201D;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x201C;&#x4F55;&#x5730;&#x201D;
Keyframe k1 = Keyframe.ofFloat(0.5f, 100);
Keyframe k2 = Keyframe.ofFloat(1f, 0);

PropertyValuesHolder p = PropertyValuesHolder.ofKeyframe(&quot;translationY&quot;, k0, k1, k2);

ObjectAnimator objectAnimator = ObjectAnimator.ofPropertyValuesHolder(mView, p);
objectAnimator.start();
</code></pre>
<p>&#x6240;&#x4EE5;&#x6548;&#x679C;&#x5C31;&#x662F;&#xFF1A;<br>
&#x5F00;&#x59CB;&#x65F6;&#x4F4D;&#x7F6E;&#x4E3A; 0&#xFF1B;<br>
&#x52A8;&#x753B;&#x5F00;&#x59CB; 1/2 &#x65F6;&#x4F4D;&#x7F6E;&#x4E3A; 100&#xFF1B;<br>
&#x52A8;&#x753B;&#x7ED3;&#x675F;&#x65F6;&#x4F4D;&#x7F6E;&#x4E3A; 0&#x3002;</p>
<p>&#x4E00;&#x4E2A; view &#x7684;&#x5355;&#x4E2A;&#x5C5E;&#x6027;&#x5148;&#x540E;&#x53D1;&#x751F;&#x4E00;&#x7CFB;&#x5217;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528; Keyframe &#x8FBE;&#x5230;&#x6548;&#x679C;&#x3002;</p>
<p>&#x603B;&#x7ED3;&#x5C31;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x540C;&#x4E00;&#x4E2A; view &#x7684;&#x4E00;&#x7CFB;&#x5217;&#x52A8;&#x753B;&#xFF0C;&#x5747;&#x53EF;&#x4F7F;&#x7528;&#x4EE5;&#x4E0A;&#x7EC4;&#x5408;&#x65B9;&#x5F0F;&#x8FBE;&#x5230;&#x53EA;&#x4F7F;&#x7528;&#x4E00;&#x4E2A; ObjectAnimator &#x7684;&#x6548;&#x679C; &#x3002;&#x591A;&#x4E2A; view &#x7684;&#x52A8;&#x753B;&#x7528; AnimatorSet &#x8FDB;&#x884C;&#x52A8;&#x753B;&#x7EC4;&#x5408;&#x548C;&#x6392;&#x5E8F;&#xFF0C;&#x4EE3;&#x7801;&#x67B6;&#x6784;&#x548C;&#x6267;&#x884C;&#x6548;&#x7387;&#x57FA;&#x672C;&#x80FD;&#x8FBE;&#x5230;&#x6700;&#x4F18;&#x5316;&#x3002;</p>
<ul>
<li>&#x4F7F;&#x7528; AnimatorListenerAdapter &#x4EE3;&#x66FF; AnimatorListener</li>
</ul>
<p>&#x7531;&#x4E8E; AnimatorListener &#x662F;&#x63A5;&#x53E3;&#xFF0C;&#x6240;&#x4EE5;&#x5B9E;&#x73B0;&#x5B83;&#x5F97;&#x5B9E;&#x73B0;&#x5B83;&#x6240;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x6709;&#x65F6;&#x53EA;&#x7528;&#x5230;&#x5B83;&#x7684;&#x4E2A;&#x522B;&#x56DE;&#x8C03;&#xFF08;&#x5982;&#xFF1A;onAnimationStart&#xFF09;&#xFF0C;&#x4F7F;&#x7528;&#x5B83;&#x4F1A;&#x5BFC;&#x81F4;&#x4EE3;&#x7801;&#x770B;&#x8D77;&#x6765;&#x975E;&#x5E38;&#x5197;&#x6742;&#x3002;&#x800C; AnimatorListenerAdapter &#x662F;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;&#x4E86; AnimatorListener &#x7684;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x6309;&#x9700;&#x8981;&#x91CD;&#x5199;&#x5176;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x4EE3;&#x7801;&#x4F1A;&#x4F18;&#x96C5;&#x4E00;&#x70B9;&#x3002;</p>
<ul>
<li>&#x4F7F;&#x7528; ViewPropertyAnimator</li>
</ul>
<p>&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x7684;&#x673A;&#x5236;&#x5DF2;&#x7ECF;&#x4E0D;&#x662F;&#x518D;&#x9488;&#x5BF9;&#x4E8E; View &#x800C;&#x8FDB;&#x884C;&#x8BBE;&#x8BA1;&#x7684;&#x4E86;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x79CD;&#x4E0D;&#x65AD;&#x5730;&#x5BF9;&#x503C;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x7684;&#x673A;&#x5236;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x5C06;&#x503C;&#x8D4B;&#x503C;&#x5230;&#x6307;&#x5B9A;&#x5BF9;&#x8C61;&#x7684;&#x6307;&#x5B9A;&#x5C5E;&#x6027;&#x4E0A;&#x3002;<br>
&#x4F46;&#x662F;&#xFF0C;&#x5728;&#x7EDD;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD8;&#x662F;&#x5BF9; View &#x8FDB;&#x884C;&#x52A8;&#x753B;&#x64CD;&#x4F5C;&#x7684;&#x3002;Android &#x5F00;&#x53D1;&#x56E2;&#x961F;&#x4E5F;&#x662F;&#x610F;&#x8BC6;&#x5230;&#x4E86;&#x8FD9;&#x4E00;&#x70B9;&#xFF0C;&#x4E8E;&#x662F;&#x5728; Android 3.1 &#x7CFB;&#x7EDF;&#x5F53;&#x4E2D;&#x8865;&#x5145;&#x4E86; ViewPropertyAnimator &#x8FD9;&#x4E2A;&#x673A;&#x5236;&#x3002;</p>
<pre><code>ObjectAnimator animator = ObjectAnimator.ofFloat(textview, &#x201C;alpha&#x201D;, 0f); animator.start(); 
//&#x7B49;&#x540C; 
textview.animate().alpha(0f);
</code></pre>
<p>animate() &#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x5728; Android 3.1 &#x7CFB;&#x7EDF;&#x4E0A;&#x65B0;&#x589E;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x662F;&#x4E00;&#x4E2A; ViewPropertyAnimator &#x5BF9;&#x8C61;&#x3002;&#xFF08;&#x7B80;&#x660E;&#x65B9;&#x4FBF;&#xFF09;</p>
<pre><code>textview.animate().x(500).y(500).setDuration(5000).setInterpolator(new BounceInterpolator());
</code></pre>
<ul>
<li>
<p>&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x5176;&#x4ED6;&#x4E00;&#x4E9B;&#x5B9E;&#x7528;&#x65B9;&#x6CD5;&#xFF1A;&#xFF08;&#x6682;&#x65F6;&#x53EA;&#x8BB2;&#x4E86;API 14&#x2014;Android 4.0&#x53CA;&#x4EE5;&#x4E0B;&#x7684;&#x90E8;&#x5206;&#xFF09;</p>
<ul>
<li>setStartDelay():&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x52A8;&#x753B;&#x5F00;&#x59CB;&#x524D;&#x7684;&#x5EF6;&#x8FDF;&#x65F6;&#x95F4;&#x3002;&#x6CE8;&#x610F;&#xFF1A;&#x6B64;&#x65B9;&#x6CD5; API 14 &#x52A0;&#x5165;&#xFF1B;&#x5982;&#x679C;&#x7ED9;&#x52A8;&#x753B;&#x6DFB;&#x52A0;&#x4E86; AnimatorListener&#xFF0C;Listener &#x7684; onAnimationStart &#x65B9;&#x6CD5;&#x4F1A;&#x5728;&#x52A8;&#x753B;&#x6700;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x56DE;&#x8C03;&#xFF0C;&#x800C;&#x4E0D;&#x662F; delay &#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x540E;&#x56DE;&#x8C03;&#x3002;</li>
<li>isStarted()&#xFF08;API 14&#xFF09;&#x4E0E; isRunning()&#xFF1A;&#x8FD9;&#x4E2A;&#x5F97;&#x4E0E; setStartDelay() &#x653E;&#x5728;&#x4E00;&#x8D77;&#x8BB2;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5F53;&#x52A8;&#x753B;&#x5728; delay &#x4E2D;&#x5E76;&#x6CA1;&#x6709;&#x771F;&#x6B63;&#x5F00;&#x59CB;&#x65F6;&#xFF0C;isStarted &#x8FD4;&#x56DE; false&#xFF0C;&#x800C; isRunning &#x8FD4;&#x56DE; true&#x3002;&#x4E5F;&#x5C31;&#x662F;&#xFF0C;isRunning &#x7684;&#x5468;&#x671F;&#x662F;&#x5927;&#x4E8E; isStarted &#x7684;&#x3002;</li>
<li>cancel() &#x4E0E; end():cancel &#x65B9;&#x6CD5;&#x4F1A;&#x7ACB;&#x5373;&#x505C;&#x6B62;&#x52A8;&#x753B;&#xFF0C;&#x5E76;&#x4E14;&#x505C;&#x7559;&#x5728;&#x5F53;&#x524D;&#x5E27;&#x3002;end &#x65B9;&#x6CD5;&#x4F1A;&#x7ACB;&#x5373;&#x505C;&#x6B62;&#x52A8;&#x753B;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x52A8;&#x753B;&#x8FC5;&#x901F;&#x7F6E;&#x5230;&#x6700;&#x540E;&#x4E00;&#x5E27;&#x7684;&#x72B6;&#x6001;&#x3002;</li>
<li>setupStartValues() &#x4E0E; setupEndValues()&#xFF1A;&#x8BBE;&#x7F6E;&#x52A8;&#x753B;&#x8FDB;&#x884C;&#x5230;&#x7684;&#x5F53;&#x524D;&#x503C;&#x4E3A;&#x5F00;&#x59CB;&#x503C;(&#x7ED3;&#x675F;&#x503C;)&#x3002;</li>
</ul>
</li>
</ul>
<p>&#x4EE5;&#x4E0B;&#x8FD9;&#x4E2A;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x5F53; view &#x79FB;&#x52A8;&#x4E86; 2.5s &#x7684;&#x65F6;&#x5019;&#xFF0C;cancel &#x5F53;&#x524D;&#x52A8;&#x753B;&#xFF0C;&#x5E76;&#x91CD;&#x65B0;&#x8BBE;&#x5B9A;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;&#x4E3A;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#xFF0C;&#x7ED3;&#x675F;&#x4F4D;&#x7F6E;&#x4E3A; 400&#xFF0C;&#x518D;&#x5F00;&#x59CB;&#x6B64;&#x52A8;&#x753B;&#x3002;</p>
<pre><code>final ObjectAnimator o = ObjectAnimator.ofFloat(mTextView, &quot;x&quot;, 0, 500);
o.setDuration(5000);
o.start();

mTextView.postDelayed(new Runnable() {
      @Override
      public void run() {
           if (o.isRunning()) {
                o.cancel();
            }
            o.setupStartValues();
            o.setFloatValues(400);
            o.start();
      }
},2500);
</code></pre>
<h3 id="&#x4F18;&#x5316;&#x70B9;2"><a class="header-anchor" href="#&#x4F18;&#x5316;&#x70B9;2"></a>&#x4F18;&#x5316;&#x70B9;2</h3>
<p>&#x76EE;&#x7684;&#x8FD8;&#x662F;&#x5C3D;&#x91CF;&#x51CF;&#x5C11; ObjectAnimator &#x7684;&#x521B;&#x5EFA;&#x3002;</p>
<p>&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x5BF9;&#x4E00;&#x4E2A;&#x70B9;&#x7684; XY &#x5750;&#x6807;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x52A8;&#x753B;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x4F1A;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x4F1A;&#x521B;&#x5EFA;&#x4E24;&#x4E2A; ObjectAnimator&#xFF1A;</p>
<pre><code>ObjectAnimator aPaintX = ObjectAnimator.ofFloat(this, &quot;translationX&quot;, 0, 100);
		//PaintY
		ObjectAnimator aPaintY = ObjectAnimator.ofFloat(this, &quot;translationY&quot;, 0, 100);
		//AnimatorSet
		AnimatorSet set = new AnimatorSet();
		set.playTogether(aPaintX, aPaintY);
		set.start();
</code></pre>
<p>&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E86; AnimatorSet &#x6765;&#x7BA1;&#x7406;&#x52A8;&#x753B;&#x96C6;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x770B; AnimatorSet &#x4E2D;&#x7684;&#x6E90;&#x7801;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;&#x5176;&#x6700;&#x540E;&#x4E5F;&#x662F;&#x542F;&#x52A8;&#x6BCF;&#x4E00;&#x4E2A;&#x7684;&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x8FDB;&#x884C;&#x64AD;&#x653E;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x540C;&#x65F6;&#x6539;&#x53D8;&#x5BF9;&#x8C61;&#x7684;&#x591A;&#x4E2A;&#x5C5E;&#x6027;&#xFF0C;&#x5C31;&#x5F97;&#x521B;&#x5EFA;&#x591A;&#x4E2A; ObjectAnimator&#x3002;&#x6211;&#x4EEC;&#x6362;&#x4E2A;&#x601D;&#x8DEF;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x53EF;&#x4EE5;&#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x96C6;&#x5408;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x53EA;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x4E86;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x56DE;&#x60F3;&#x4E00;&#x4E0B;&#xFF0C;&#x524D;&#x9762;&#x6709;&#x63D0;&#x5230;&#x8FC7; TypeEvaluator&#xFF0C;&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x7684;&#x503C;&#x5C31;&#x662F;&#x5728;&#x5B83;&#x91CC;&#x9762;&#x505A;&#x4FEE;&#x6539;&#x7684;&#x3002;&#x901A;&#x8FC7;&#x7FFB;&#x770B; ObjectAnimator &#x7684;&#x6E90;&#x7801;&#xFF0C;&#x53D1;&#x73B0;&#x5B83;&#x662F;&#x63D0;&#x4F9B;&#x4E86;&#x4F20;&#x5165;&#x81EA;&#x5B9A;&#x4E49; TypeEvaluator &#x7684;&#x65B9;&#x6CD5;&#xFF1A;</p>
<pre><code>public static ObjectAnimator ofObject(Object target, String propertyName,
            TypeEvaluator evaluator, Object... values) {
        ObjectAnimator anim = new ObjectAnimator(target, propertyName);
        anim.setObjectValues(values);
        anim.setEvaluator(evaluator);
        return anim;
    }
</code></pre>
<p>&#x90A3;OK&#xFF0C;&#x53EF;&#x4EE5;&#x8FD9;&#x6837;&#x6765;&#x4F18;&#x5316;&#x3002;&#x5B9E;&#x73B0;&#x81EA;&#x5B9A;&#x4E49; TypeEvaluator&#xFF0C;&#x4F7F;&#x7528;&#x5B83;&#x7684; evaluate &#x51FD;&#x6570;&#x6765;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x5C5E;&#x6027;&#x53D8;&#x66F4;&#x903B;&#x8F91;&#x3002;</p>
<pre><code>public static class PaintEvaluator implements TypeEvaluator {
        private static final PaintEvaluator sInstance = new PaintEvaluator();
        public static PaintEvaluator getInstance() {
	return sInstance;
        }
        public Object evaluate(float fraction, Object startValue, Object endValue) {
	ViewProperty start = (ViewProperty) startValue;
	ViewProperty end = (ViewProperty) endValue;
	float x = start.paintX + fraction * (end.paintX - start.paintX); //&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x5B9A;&#x4E49;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x5206;&#x522B;&#x8BA1;&#x7B97; x y &#x503C;&#xFF0C;&#x7136;&#x540E;&#x8FD4;&#x56DE;
	float y = start.paintY + fraction * (end.paintY - start.paintY);
	return new ViewProperty(x, y); //&#x4E0D;&#x9650;&#x53EF;&#x4EE5;&#x662F; xy &#x5750;&#x6807;&#x503C;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x9700;&#x6C42;&#x81EA;&#x5B9A;&#x4E49;&#x5176;&#x5B83;&#x5C5E;&#x6027;&#xFF0C;&#x4F8B;&#x5982; alpha &#x503C;&#x7B49;&#x7B49;
        }
    }
</code></pre>
<h3 id="&#x4F18;&#x5316;&#x70B9;3"><a class="header-anchor" href="#&#x4F18;&#x5316;&#x70B9;3"></a>&#x4F18;&#x5316;&#x70B9;3</h3>
<p>&#x89E3;&#x51B3;animation&#x5FAA;&#x73AF;&#x4E2D;&#x505C;&#x6B62;&#x65F6;&#x5361;&#x987F;&#x4E00;&#x4E0B;&#x7684;&#x95EE;&#x9898;&#x3002;</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;  
&lt;set xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;  
    &lt;rotate  
        android:fromDegrees=&quot;0&quot;  
        android:toDegrees=&quot;359&quot;  
        android:duration=&quot;500&quot;  
        android:repeatCount=&quot;-1&quot;  
        android:pivotX=&quot;50%&quot;  
        android:pivotY=&quot;50%&quot; /&gt;  
&lt;/set&gt;  
</code></pre>
<p>&#x542B;&#x4E49;&#x8868;&#x793A;&#x4ECE;0&#x5230;359&#x5EA6;&#x5F00;&#x59CB;&#x5FAA;&#x73AF;&#x65CB;&#x8F6C;&#xFF0C;0-359(&#x82E5;&#x8BBE;&#x7F6E;&#x6210;360&#x5728;&#x505C;&#x6B62;&#x65F6;&#x4F1A;&#x51FA;&#x73B0;&#x505C;&#x987F;&#x73B0;&#x8C61;)&#x5EA6;&#x65CB;&#x8F6C;&#x6240;&#x7528;&#x65F6;&#x95F4;&#x4E3A;500ms&#xFF0C;&#x65CB;&#x8F6C;&#x4E2D;&#x5FC3;&#x8DDD;&#x79BB;view&#x7684;&#x5DE6;&#x9876;&#x70B9;&#x4E3A;50%&#x8DDD;&#x79BB;&#xFF0C;&#x8DDD;&#x79BB;view&#x7684;&#x4E0A;&#x8FB9;&#x7F18;&#x4E3A;50%&#x8DDD;&#x79BB;&#xFF0C;&#x5373;&#x6B63;&#x4E2D;&#x5FC3;&#x3002;</p>
<h3 id="&#x4F18;&#x5316;&#x70B9;4"><a class="header-anchor" href="#&#x4F18;&#x5316;&#x70B9;4"></a>&#x4F18;&#x5316;&#x70B9;4</h3>
<p>&#x5F53;&#x754C;&#x9762;&#x7684;&#x7ED8;&#x5236;&#x548C;&#x52A8;&#x753B;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x8BA1;&#x7B97;&#x91CF;&#x6BD4;&#x8F83;&#x5927;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5C31;&#x4E0D;&#x518D;&#x9002;&#x5408;&#x4F7F;&#x7528; View &#x7684;&#x5C5E;&#x6027;&#x52A8;&#x753B;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x6B21;&#x5C5E;&#x6027;&#x7684;&#x53D8;&#x66F4;&#x90FD;&#x9700;&#x8981;&#x591A;&#x6B21;&#x8C03;&#x7528; onMeasure&#x3001;onLayout&#x3001;onDraw&#xFF0C;&#x91CD;&#x65B0;&#x7ED8;&#x5236; View &#x672C;&#x8EAB;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x77E5;&#x9053;&#xFF0C;&#x6BCF;&#x4E2A; View &#x4E2D;&#x90FD;&#x6709; Canvas &#x53EF;&#x4EE5;&#x7528;&#x6765;&#x7ED8;&#x5236;&#x52A8;&#x753B;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5728;&#x8FD9;&#x4E2A; View &#x4E2D;&#x91CD;&#x8F7D;onDraw()&#x65B9;&#x6CD5;&#x5C31;&#x53EF;&#x4EE5;&#x3002;&#x90A3;&#x7528;&#x4EC0;&#x4E48;&#x6765;&#x7ED8;&#x5236;&#x52A8;&#x753B;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x4F7F;&#x7528; SurfaceView&#xFF0C;&#x5B83;&#x80FD;&#x591F;&#x5728;&#x975E; UI &#x7EBF;&#x7A0B;&#x4E2D;&#x8FDB;&#x884C;&#x56FE;&#x5F62;&#x7ED8;&#x5236;&#xFF0C;&#x91CA;&#x653E;&#x4E86; UI &#x7EBF;&#x7A0B;&#x7684;&#x538B;&#x529B;&#x3002;</p>
<p><a href="https://github.com/xxss0903/SimpleCircleDemo/blob/master/Circle.java" target="_blank" rel="external">Demo&#x53C2;&#x8003;xxss0903</a></p>
<pre><code>public class MainActivity extends Activity {  
	@Override  
    protected void onCreate(Bundle savedInstanceState) {  
        super.onCreate(savedInstanceState);  
        setContentView(new Circle(this)); // &#x6DFB;&#x52A0;&#x81EA;&#x5B9A;&#x4E49;&#x7684;SurfaceView  
    }  
  
    @Override  
    public boolean onCreateOptionsMenu(Menu menu) {  
        // Inflate the menu; this adds items to the action bar if it is present.  
        getMenuInflater().inflate(R.menu.main, menu);  
        return true;  
    }  
}

public class Circle extends SurfaceView implements SurfaceHolder.Callback {

    private OnCircleAnimationListener mListener;

    private int mWidth;
    private int mHeight;
    private SurfaceHolder mHolder;
    private static final String TEXT_CIRCLE = &quot;&#x8DF3;&#x8FC7;&quot;;

    private int mDegree = 0;

    private long mDelay = 3000; // &#x9ED8;&#x8BA4;&#x8FD0;&#x884C;&#x65F6;&#x95F4;3&#x79D2;
    private boolean mStop = false;
    private Paint mClearPaint;

    public Circle(Context context) {
        super(context);

        //
        mHolder = getHolder();
        mHolder.addCallback(this);
    }

    public Circle(Context context, AttributeSet attrs) {
        super(context, attrs);
        mHolder = getHolder();
        mHolder.addCallback(this);
        // &#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4F1A;&#x80FD;&#x591F;&#x53BB;&#x9664;&#x6389;&#x5706;&#x5708;&#x4E4B;&#x5916;&#x7684;&#x9ED1;&#x8272;&#x80CC;&#x666F;
        setZOrderOnTop(true);
        mHolder.setFormat(PixelFormat.TRANSLUCENT);
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
//        setMeasuredDimension(100, 100);
    }

    @Override
    public void surfaceCreated(SurfaceHolder surfaceHolder) {
        // &#x83B7;&#x53D6;&#x5BBD;&#x9AD8;
        mWidth = getMeasuredWidth();
        mHeight = getMeasuredHeight();
        if (mListener != null) {
            mListener.onAnimationPrepared(Circle.this);
        }
    }

    @Override
    public void surfaceChanged(SurfaceHolder surfaceHolder, int i, int i1, int i2) {
        Log.e(&quot;John&quot;, &quot;Circle&quot; + &quot; # &quot; + &quot;surface changed&quot;);
    }

    @Override
    public void surfaceDestroyed(SurfaceHolder surfaceHolder) {

    }

    public void setCircleAnimationListener(OnCircleAnimationListener listener) {
        mListener = listener;
    }

    public void startCircleAnimation() {
        new DrawThread().start();
    }

    public void setAnimationDelay(long delay) {
        mDelay = delay;
    }

    public void stopAnimation() {
        mStop = true;
    }

    public class DrawThread extends Thread {

        private Paint mPaint;
        private Paint mTextPaint;
        private Paint mArcPaint;

        public DrawThread() {
            mPaint = new Paint();
            mPaint.setAntiAlias(true);
            mTextPaint = new TextPaint();
            mTextPaint.setTextSize(mHeight / 2-5);
            mTextPaint.setColor(Color.WHITE);
            mPaint.setColor(Color.RED);
            mArcPaint = new Paint();
            mArcPaint.setStrokeWidth((float) (mWidth / 2 * 0.1));
            mArcPaint.setColor(Color.BLUE);
            mArcPaint.setAntiAlias(true);
            mArcPaint.setStyle(Paint.Style.STROKE);

            //&#x8FD9;&#x662F;&#x5B9A;&#x4E49;&#x6A61;&#x76AE;&#x64E6;&#x753B;&#x7B14;
            mClearPaint = new Paint();
            mClearPaint.setAntiAlias(true);
            mClearPaint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.CLEAR));

        }

        @Override
        public void run() {
            mListener.onAnimationStart(Circle.this);
            while (!mStop) {
                drawCircle();
                if (mDegree &gt;= 360) {
                    mListener.onAnimationFinished(Circle.this);
                    break;
                }
                // &#x628A;&#x603B;&#x7684;&#x52A8;&#x753B;&#x65F6;&#x95F4;&#x5206;&#x6210;360&#x4EFD;
                long animation_duration = mDelay / 360;
                SystemClock.sleep(animation_duration);
                mDegree++;
            }
        }

        // &#x7ED8;&#x5236;&#x5706;&#x5708;
        private void drawCircle() {
            mListener.onAnimationRunning(Circle.this);
            Canvas canvas = mHolder.lockCanvas();
            if (canvas == null) {
                return;
            }
            canvas.drawRect(0, 0, mWidth, mHeight, mClearPaint);
            canvas.drawColor(Color.TRANSPARENT, PorterDuff.Mode.CLEAR);

            canvas.save();
            canvas.scale(0.9f, 0.9f, mWidth * 1f / 2, mHeight * 1f / 2);
            canvas.drawCircle(mWidth * 1.0f / 2, mHeight * 1.0f / 2, mWidth * 1.0f / 2, mPaint);
            float centerY = mHeight * 1f / 2;
            // &#x8FD9;&#x4E2A;&#x662F;&#x83B7;&#x53D6;&#x6BCF;&#x4E2A;&#x6587;&#x5B57;&#x7684;&#x5BBD;&#x5EA6;&#xFF0C;&#x90A3;&#x4E48;&#x600E;&#x4E48;&#x77E5;&#x9053;&#x6709;&#x51E0;&#x4E2A;&#x6587;&#x5B57;&#x5462;?
            float widths[] = new float[2];
            mTextPaint.getTextWidths(TEXT_CIRCLE, widths);
            canvas.drawText(TEXT_CIRCLE, 5, centerY + (widths[0] * 1f / 2) - 10, mTextPaint);
            canvas.restore();

            // &#x65CB;&#x8F6C;&#x5750;&#x6807;&#x753B;&#x5706;&#x5708;
            canvas.save();
            canvas.rotate(-90, mWidth / 2, mHeight / 2);
            RectF rectF = new RectF((float) (mWidth / 2 * 0.1) / 2, (float) (mWidth / 2 * 0.1) / 2, mWidth - (float) (mWidth / 2 * 0.1) / 2, mHeight - (float) (mWidth / 2 * 0.1) / 2);
            canvas.drawArc(rectF, 0, mDegree, false, mArcPaint);
            canvas.restore();

            mHolder.unlockCanvasAndPost(canvas);
        }
    }

    public interface OnCircleAnimationListener {
        void onAnimationPrepared(View view);

        void onAnimationFinished(View view);

        void onAnimationRunning(View view);

        void onAnimationStart(View view);
    }
}  
</code></pre>
<p>&#x660E;&#x5929;&#x5F85;&#x7EED;&#x2026;</p>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="http://blog.csdn.net/singwhatiwanna/article/details/17639987" target="_blank" rel="external">http://blog.csdn.net/singwhatiwanna/article/details/17639987</a></li>
<li><a href="http://www.cnblogs.com/zxcblog/p/3259920.html" target="_blank" rel="external">http://www.cnblogs.com/zxcblog/p/3259920.html</a></li>
<li><a href="http://blog.csdn.net/rentee/article/details/52251829" target="_blank" rel="external">http://blog.csdn.net/rentee/article/details/52251829</a></li>
<li><a href="http://blog.csdn.net/qiujuer/article/details/42531485" target="_blank" rel="external">http://blog.csdn.net/qiujuer/article/details/42531485</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      Android 平台提供了一套完整的动画框架，使得应用开发者可以用它来实现各种动画效果。比如：按扭的弹入弹出效果、Activity 的切换动画、文本图片的旋转效果等。本文将介绍 Android 的三种动画，帧动画、补间动画、属性动画，介绍它们的原理和使用举例。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>只能用 flatmap 而不能用 map 的场景</title>
    <link href="http://ngudream.com/2017/02/27/rxjava-only-flatmap/"/>
    <id>http://ngudream.com/2017/02/27/rxjava-only-flatmap/</id>
    <published>2017-02-27T15:02:35.000Z</published>
    <updated>2017-02-28T15:50:43.735Z</updated>
    
    <content type="html"><![CDATA[<p>&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x95EE;&#xFF1A;&#x8BF7;&#x4E3E;&#x4E2A;&#x53EA;&#x80FD;&#x4F7F;&#x7528;flatmap&#x800C;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;map&#x7684;&#x4F8B;&#x5B50;&#xFF1F;&#x7B14;&#x8005;&#x5F53;&#x65F6;&#x601D;&#x8003;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x5934;&#x8111;&#x53D1;&#x70ED;&#xFF0C;&#x6CA1;&#x6709;&#x601D;&#x8003;&#x5B8C;&#x6574;&#x5440;&#xFF01;&#xFF01;&#xFF01;</p>
<h2 id="&#x533A;&#x522B;"><a class="header-anchor" href="#&#x533A;&#x522B;"></a>&#x533A;&#x522B;</h2>
<ul>
<li>map&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x7ED3;&#x679C;&#x96C6;&#xFF0C;flatmap&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x5305;&#x542B;&#x7ED3;&#x679C;&#x96C6;&#x7684;Observable&#x3002;</li>
<li>map&#x53EA;&#x80FD;&#x8FDB;&#x884C;&#x4E00;&#x5BF9;&#x4E00;&#x7684;&#x5BF9;&#x8C61;&#x8F6C;&#x6362;&#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x5C06;&#x5BF9;&#x8C61;&#x8F6C;&#x6362;&#x6210;&#x5BF9;&#x8C61;&#x6570;&#x7EC4;&#x3002;</li>
<li>map&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x4E00;&#x5BF9;&#x4E00;&#xFF0C;&#x800C;flatmap&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x4E00;&#x5BF9;&#x591A;&#x6216;&#x8005;&#x591A;&#x5BF9;&#x591A;&#x3002;</li>
<li>flatMap() &#x4E2D;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4E2A; Observable &#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A; Observable &#x5BF9;&#x8C61;&#x5E76;&#x4E0D;&#x662F;&#x88AB;&#x76F4;&#x63A5;&#x53D1;&#x9001;&#x5230;&#x4E86; Subscriber&#x7684;&#x56DE;&#x8C03;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x800C;&#x662F;&#x7ACB;&#x5373;&#x6FC0;&#x6D3B;&#x5E76;&#x6267;&#x884C;&#x3002;</li>
</ul>
<h2 id="&#x4E3E;&#x4F8B;"><a class="header-anchor" href="#&#x4E3E;&#x4F8B;"></a>&#x4E3E;&#x4F8B;</h2>
<p>&#x7B54;&#xFF1A;&#x5F53;&#x6211;&#x4EEC;&#x8F93;&#x5165;&#x4E00;&#x4E2A;urls&#x5217;&#x8868;&#xFF0C;&#x5E0C;&#x671B;&#x6309;&#x987A;&#x5E8F;&#x7684;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x7684;&#x53D1;&#x8D77;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#xFF0C;&#x53EA;&#x8981;&#x6709;&#x4E00;&#x4E2A;&#x8BF7;&#x8BF7;&#x4E2D;&#x65AD;&#xFF0C;&#x5219;&#x540E;&#x7EED;&#x8BF7;&#x6C42;&#x5168;&#x90E8;&#x4E2D;&#x65AD;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x53EA;&#x80FD;&#x4F7F;&#x7528;flatmap&#x3002;&#x539F;&#x56E0;&#x662F;flatmap&#x662F;&#x8FD4;&#x56DE; Observable &#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528; Observable &#x5BF9;&#x7ED3;&#x679C;&#x96C6;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#xFF0C;&#x5C06;&#x5355;&#x4E00;&#x7ED3;&#x679C;&#x96C6;&#x5BF9;&#x8C61;&#x8F6C;&#x6362;&#x6210;&#x6570;&#x7EC4;&#x7ED3;&#x679C;&#x96C6;&#x5BF9;&#x8C61;&#xFF0C;&#x800C;map&#x662F;&#x505A;&#x4E0D;&#x5230;&#x8FD9;&#x4E00;&#x70B9;&#x7684;&#x3002;</p>
<p><strong>map&#x8C03;&#x7528;&#xFF1A;</strong></p>
<pre><code> Observable.just(urlList)
                .map(new Func1&lt;List&lt;String&gt;, String&gt;() {
                    @Override
                    public String call(List&lt;String&gt; urls) {
                        return urls.get(0);
                    }
                })
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;String&gt;() {
                    @Override
                    public void call(String url) {
                        Log.d(TAG, &quot;url = &quot; + url);
                    }
                }, new Action1&lt;Throwable&gt;() {
                    @Override
                    public void call(Throwable throwable) {

                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;</p>
<pre><code>02-27 23:13:48.335 1565-1565/? D/MainActivity: url = http://www.baidu.com
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x5165;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;map&#x7684;&#x6BCF;&#x6B21;&#x8FD4;&#x56DE;&#x53EA;&#x662F;&#x8FD4;&#x56DE;&#x4E86;&#x4E00;&#x4E2A;&#x5355;&#x4E00;&#x7684;&#x7ED3;&#x679C;&#x3002;</p>
<p><strong>flatmap&#x8C03;&#x7528;&#xFF1A;</strong></p>
<pre><code>Observable.just(urlList)
                .flatMap(new Func1&lt;List&lt;String&gt;, Observable&lt;String&gt;&gt;() {
                    @Override
                    public Observable&lt;String&gt; call(List&lt;String&gt; urls) {
                        return Observable.from(urls);
                    }
                })
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;String&gt;() {
                    @Override
                    public void call(String s) {
                        Log.d(TAG, &quot;url = &quot; + s);
                    }
                }, new Action1&lt;Throwable&gt;() {
                    @Override
                    public void call(Throwable throwable) {

                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;</p>
<pre><code>02-27 23:17:13.265 6527-6527/com.meizu.rxjava.example D/MainActivity: url = http://www.baidu.com
02-27 23:17:13.265 6527-6527/com.meizu.rxjava.example D/MainActivity: url = http://ngudream.com
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x5165;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230; flatmap &#x901A;&#x8FC7; Observable.from(urls) &#x7684;&#x8F6C;&#x6362;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x7ED3;&#x679C;&#x5206;&#x6563;&#x6210;&#x5355;&#x4E00;&#x7684; item&#xFF0C;&#x987A;&#x5E8F;&#x8FD4;&#x56DE;&#x3002;</p>
<p>&#x5BF9;&#x4EE5;&#x4E0A;&#x56DE;&#x7B54;&#x5E76;&#x4E0D;&#x6EE1;&#x610F;&#x5427;&#xFF0C;&#x55EF;&#x55EF;&#xFF0C;&#x662F;&#x7684;&#xFF01;</p>
<p>&#x90A3;&#x518D;&#x6765;&#x8003;&#x8651;&#x53E6;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#xFF1A;&#x5728;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x8F93;&#x5165;&#x6570;&#x636E;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x5F02;&#x6B65;&#x5904;&#x7406;&#x518D;&#x5C06;&#x5904;&#x7406;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x5206;&#x53D1;&#x5230;&#x4E0B;&#x4E00;&#x6B65;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F7F;&#x7528; map &#x5C31;&#x65E0;&#x6CD5;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#xFF0C;&#x56E0;&#x4E3A; map &#x662F;&#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x95ED;&#x5305;&#x65B9;&#x6CD5;&#xFF0C;&#x662F;&#x9700;&#x8981;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x7684;&#xFF0C;&#x4F46;&#x662F; flatmap &#x5C31;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; Observable &#x6765;&#x8FDB;&#x884C;&#x8F6C;&#x5316;&#xFF0C;&#x5C06;&#x65B0;&#x7684; Observable &#x8F6C;&#x5316;&#x5728;&#x522B;&#x7684;&#x7EBF;&#x7A0B;&#x4E2D;&#x6FC0;&#x6D3B;&#x6267;&#x884C;&#x3002;</p>
<p>&#x5148;&#x5199;&#x5230;&#x8FD9;&#xFF0C;&#x5BB9;&#x6211;&#x518D;&#x60F3;&#x60F3;&#x2026;</p>]]></content>
    
    <summary type="html">
    
      问：RxJava的使用中，请举个只能使用 flatmap 而不能使用 map 的场景。@_@ (((^^)(^^)))
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>android 判断应用是否处于前台</title>
    <link href="http://ngudream.com/2017/02/26/android-app-is-foreground/"/>
    <id>http://ngudream.com/2017/02/26/android-app-is-foreground/</id>
    <published>2017-02-26T04:25:59.000Z</published>
    <updated>2017-02-26T05:09:25.208Z</updated>
    
    <content type="html"><![CDATA[<h2 id="&#x5224;&#x65AD;-app-&#x662F;&#x5426;&#x5904;&#x4E8E;&#x524D;&#x53F0;"><a class="header-anchor" href="#&#x5224;&#x65AD;-app-&#x662F;&#x5426;&#x5904;&#x4E8E;&#x524D;&#x53F0;"></a>&#x5224;&#x65AD; app &#x662F;&#x5426;&#x5904;&#x4E8E;&#x524D;&#x53F0;</h2>
<h3 id="&#x65B9;&#x6CD5;1"><a class="header-anchor" href="#&#x65B9;&#x6CD5;1"></a>&#x65B9;&#x6CD5;1</h3>
<p>&#x4F7F;&#x7528; RunningAppProcessInfo &#x7C7B;&#x63D0;&#x4F9B;&#x7684;&#x4FE1;&#x606F;&#x6765;&#x5224;&#x65AD;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x4F9D;&#x636E;&#x8FDB;&#x7A0B;&#x7B49;&#x7EA7;&#x6765;&#x5224;&#x65AD;&#x3002;</p>
<p>&#x8FDB;&#x7A0B;&#x7B49;&#x7EA7;&#x5206;5&#x7EA7;&#xFF1A;</p>
<ul>
<li>IMPORTANCE_FOREGROUND &#x6B63;&#x5904;&#x4E8E;activity resume&#x72B6;&#x6001;&#xFF0C;&#x6B63;&#x5904;&#x4E8E;bound&#x670D;&#x52A1;&#x4EA4;&#x4E92;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x6B63;&#x5904;&#x4E8E;&#x670D;&#x52A1;&#x5728;&#x524D;&#x53F0;&#x8FD0;&#x884C;&#x7684;&#x72B6;&#x6001;&#xFF08;StartForeGround&#xFF08;&#xFF09;&#x88AB;&#x8C03;&#x7528;&#xFF09;&#xFF0C;Service&#x751F;&#x547D;&#x5468;&#x671F;&#x6B63;&#x5728;&#x88AB;&#x6267;&#x884C;nCreate&#xFF08;&#xFF09;&#xFF0C;onStart&#xFF08;&#xFF09;&#xFF0C;onDestroy&#xFF08;&#xFF09;&#xFF09;&#xFF0C;BroadcastReceiver&#x6B63;&#x5728;&#x6267;&#x884C;onReceive&#xFF08;&#xFF09;&#x65B9;&#x6CD5;&#xFF0C; &#x6740;&#x6B7B;foreground&#x9700;&#x8981;&#x7528;&#x6237;&#x54CD;&#x5E94;&#xFF0C;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x5B89;&#x5168;&#x4F18;&#x5148;&#x7EA7;&#x662F;&#x6700;&#x9AD8;&#x7684;</li>
<li>IMPORTANCE_VISIBLE activity&#x4E0D;&#x5728;&#x524D;&#x7AEF;&#x663E;&#x793A;&#xFF0C;&#x4F46;&#x4E5F;&#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x9690;&#x85CF;&#xFF0C;&#x80FD;&#x591F;&#x770B;&#x5F97;&#x89C1;&#xFF0C;&#x6BD4;&#x5982;&#x5F39;&#x51FA;&#x4E00;&#x4E2A;&#x5BF9;&#x8BDD;&#x6846;&#xFF0C;&#x6CA1;&#x6709;&#x524D;&#x53F0;&#x7EC4;&#x4EF6;&#xFF0C;&#x4F46;&#x4ECD;&#x53EF;&#x88AB;&#x7528;&#x6237;&#x5728;&#x5C4F;&#x5E55;&#x4E0A;&#x6240;&#x89C1;&#x3002;</li>
<li>IMPORTANCE_SERVICE &#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;&#xFF0C;&#x4E0D;&#x5728;&#x4E0A;&#x8FF0;&#x4E24;&#x79CD;&#x72B6;&#x6001;&#x7684;service&#xFF0C;&#x662F;&#x7531; startService() &#x65B9;&#x6CD5;&#x542F;&#x52A8;&#x7684;&#x670D;&#x52A1;&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x53D8;&#x6210;&#x4E0A;&#x8FF0;&#x4E24;&#x7C7B;&#x3002;</li>
<li>IMPORTANCE_BACKGROUND &#x4E0D;&#x53EF;&#x89C1;&#x72B6;&#x6001;&#x7684;activity&#x8FDB;&#x7A0B;&#xFF0C;onstop&#x88AB;&#x8C03;&#x7528;</li>
<li>IMPORTANCE_EMPTY &#x6CA1;&#x6709;&#x8FD0;&#x884C;&#x4EFB;&#x4F55;component&#x7684;&#x8FDB;&#x7A0B;&#xFF0C;&#x4FDD;&#x7559;&#x8FD9;&#x4E2A;&#x8FDB;&#x7A0B;&#x4E3B;&#x8981;&#x662F;&#x4E3A;&#x4E86;&#x7F13;&#x5B58;&#x7684;&#x9700;&#x8981;</li>
</ul>
<p>&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>/**
     * &#x5E94;&#x7528;&#x662F;&#x5426;&#x5904;&#x4E8E;&#x524D;&#x53F0;
     * @return
     */
    private boolean isAppForeground(){
        ActivityManager manager = (ActivityManager) getSystemService(ACTIVITY_SERVICE);
        List&lt;ActivityManager.RunningAppProcessInfo&gt; appProcessInfos = manager.getRunningAppProcesses();
        if(appProcessInfos == null || appProcessInfos.isEmpty()){
            return false;
        }
        for(ActivityManager.RunningAppProcessInfo info : appProcessInfos){
            //&#x5F53;&#x524D;&#x5E94;&#x7528;&#x5904;&#x4E8E;&#x8FD0;&#x884C;&#x4E2D;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x524D;&#x53F0;
            if(info.processName.equals(getPackageName()) &amp;&amp; info.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND){
                return true;
            }
        }
        return false;
    }
</code></pre>
<h3 id="&#x65B9;&#x6CD5;2"><a class="header-anchor" href="#&#x65B9;&#x6CD5;2"></a>&#x65B9;&#x6CD5;2</h3>
<p>&#x4E3B;&#x8981;&#x662F;&#x5B9E;&#x73B0; ActivityLifecycleCallbacks &#x63A5;&#x53E3;&#xFF0C;&#x539F;&#x7406;&#x5C31;&#x662F;&#x6839;&#x636E; activity &#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x4F1A;&#x56DE;&#x8C03;&#x76F8;&#x5E94;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x6837;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BB0;&#x5F55;&#x524D;&#x53F0; activity &#x7684;&#x6570;&#x91CF;&#x6765;&#x8FBE;&#x5230;&#x5224;&#x65AD;&#x5E94;&#x7528;&#x662F;&#x5426;&#x5904;&#x4E8E;&#x524D;&#x53F0;&#x7684;&#x76EE;&#x7684;&#x3002;</p>
<p>&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>package com.meizu.rxjava.example;

import android.app.Activity;
import android.app.Application;
import android.os.Bundle;

/**
 * Created by ngudream on 2017/2/26.
 */
public class MyApplication extends Application {

    private MyActivitiesLife myActivitiesLife;

    @Override
    public void onCreate() {
        super.onCreate();
        registerActivityLifecycleCallbacks(myActivitiesLife);
    }

    private static class MyActivitiesLife implements ActivityLifecycleCallbacks{

        private static int resumed;
        private static int paused;

        @Override
        public void onActivityCreated(Activity activity, Bundle savedInstanceState) {
        }

        @Override
        public void onActivityStarted(Activity activity) {
        }

        @Override
        public void onActivityResumed(Activity activity) {
            ++resumed;
        }

        @Override
        public void onActivityPaused(Activity activity) {
            ++paused;
        }

        @Override
        public void onActivityStopped(Activity activity) {
        }

        @Override
        public void onActivityDestroyed(Activity activity) {
        }

        @Override
        public void onActivitySaveInstanceState(Activity activity, Bundle outState) {
        }

        /**
         * &#x5224;&#x65AD;&#x5E94;&#x7528;&#x662F;&#x5426;&#x5728;&#x524D;&#x53F0;
         * @return
         */
        public static boolean isAppForeground() {
            return resumed &gt; paused;
        }
    }
}

</code></pre>
<p>&#x5F53; resumed &#x72B6;&#x6001;&#x7684; activity&#xFF0C;&#x5373;&#x53EF;&#x89C1;&#x72B6;&#x6001;&#x7684; activity &#x7684;&#x6570;&#x91CF;&#x5927;&#x4E8E;&#x4E0D;&#x53EF;&#x89C1;&#x72B6;&#x6001;&#x7684; activity &#x7684;&#x6570;&#x91CF;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x5E94;&#x7528;&#x5904;&#x4E8E;&#x524D;&#x53F0;&#x3002;</p>
<h2 id="&#x521B;&#x5EFA;&#x524D;&#x53F0;-service"><a class="header-anchor" href="#&#x521B;&#x5EFA;&#x524D;&#x53F0;-service"></a>&#x521B;&#x5EFA;&#x524D;&#x53F0; service</h2>
<p>&#x524D;&#x53F0;&#x670D;&#x52A1;&#x662F;&#x90A3;&#x4E9B;&#x88AB;&#x8BA4;&#x4E3A;&#x7528;&#x6237;&#x77E5;&#x9053;&#x4E14;&#x5728;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x4E0D;&#x8DB3;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x5141;&#x8BB8;&#x7CFB;&#x7EDF;&#x6740;&#x6B7B;&#x7684;&#x670D;&#x52A1;&#x3002;&#x524D;&#x53F0;&#x670D;&#x52A1;&#x5FC5;&#x987B;&#x7ED9;&#x72B6;&#x6001;&#x680F;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x901A;&#x77E5;&#xFF0C;&#x5373;&#x4F9D;&#x8D56;&#x901A;&#x77E5;&#x680F;&#x7684;&#x5B58;&#x5728;&#x6765;&#x4FDD;&#x8BC1;&#x670D;&#x52A1;&#x4E0D;&#x88AB;&#x6740;&#x6B7B;&#xFF0C;&#x76F4;&#x5230;&#x901A;&#x77E5;&#x88AB;&#x5173;&#x6389;&#x3002;</p>
<p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;service&#xFF1A;</p>
<pre><code>package com.meizu.rxjava.example;

import android.app.Service;
import android.content.Intent;
import android.os.IBinder;
import android.support.annotation.Nullable;

/**
 * Created by ngudream on 2017/2/26.
 */

public class MyForegroundService extends Service {

    @Override
    public void onCreate() {
        super.onCreate();
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        return super.onStartCommand(intent, flags, startId);
    }

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }
}

</code></pre>
<p>&#x7136;&#x540E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x901A;&#x77E5;&#x680F;&#x6D88;&#x606F;&#xFF1A;</p>
<pre><code>/**
     * &#x6784;&#x5EFA;&#x901A;&#x77E5;&#x680F;&#x6D88;&#x606F;
     * @return
     */
    private Notification createNotification() {
        Notification.Builder builder = new Notification.Builder(this.getApplicationContext()); //&#x83B7;&#x53D6;&#x4E00;&#x4E2A;Notification&#x6784;&#x9020;&#x5668;
        Intent newIntent = new Intent(this, MainActivity.class);
        builder.setContentIntent(PendingIntent.getActivity(this, 0, newIntent, 0))
                .setContentTitle(&quot;&#x524D;&#x53F0; service &#x6807;&#x9898;&quot;)
                .setContentText(&quot;&#x524D;&#x53F0; service &#x5185;&#x5BB9;&quot;)
                .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))
                .setSmallIcon(R.mipmap.ic_launcher);
        
        return builder.build();
    }
</code></pre>
<p>&#x90A3;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x673A;&#x8C03;&#x7528;&#xFF08;&#x542F;&#x52A8;&#x524D;&#x53F0;&#x670D;&#x52A1;&#xFF09;&#x8FD9;&#x4E2A;&#x901A;&#x77E5;&#x680F;&#x6D88;&#x606F;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728; onStartCommand &#x65B9;&#x6CD5;&#x4E2D;&#x8C03;&#x7528;&#x3002;service &#x63D0;&#x4F9B;&#x4E86; startForeground &#x65B9;&#x6CD5;&#x3002;</p>
<pre><code>@Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        startForeground(FOREGROUND_SERVICE_ID, createNotification());
        return super.onStartCommand(intent, flags, startId);
    }
</code></pre>
<p>&#x5982;&#x4F55;&#x60F3;&#x505C;&#x6B62;&#x524D;&#x53F0;&#x670D;&#x52A1;&#xFF0C;&#x5373;&#x5220;&#x9664;&#x901A;&#x77E5;&#x680F;&#x6D88;&#x606F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5728; service &#x7684; onDestroy &#x65B9;&#x6CD5;&#x4E2D;&#x8C03;&#x7528; stopForeground &#x6765;&#x5B8C;&#x6210;&#xFF1A;</p>
<pre><code>@Override
    public void onDestroy() {
        super.onDestroy();
        stopForeground(true);
    }
</code></pre>
<p>stopForeground &#x65B9;&#x6CD5;&#x7684;&#x539F;&#x578B;&#x5982;&#x4E0B;&#xFF0C;&#x53C2;&#x6570;&#x8868;&#x793A;&#x662F;&#x5426;&#x79FB;&#x9664;&#x901A;&#x77E5;&#x680F;&#x6D88;&#x606F;&#xFF1A;</p>
<pre><code>/**
     * Synonym for {@link #stopForeground(int)}.
     * @param removeNotification If true, the {@link #STOP_FOREGROUND_REMOVE} flag
     * will be supplied.
     * @see #stopForeground(int)
     * @see #startForeground(int, Notification)
     */
    public final void stopForeground(boolean removeNotification) {
        stopForeground(removeNotification ? STOP_FOREGROUND_REMOVE : 0);
    }
</code></pre>
<p>&#x6574;&#x4E2A; service &#x7684;&#x5B8C;&#x6574;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>package com.meizu.rxjava.example;

import android.app.Notification;
import android.app.PendingIntent;
import android.app.Service;
import android.content.Intent;
import android.graphics.BitmapFactory;
import android.os.IBinder;
import android.support.annotation.Nullable;

/**
 * Created by ngudream on 2017/2/26.
 * &#x524D;&#x53F0;&#x670D;&#x52A1;&#x4F18;&#x5148;&#x7EA7;&#x6BD4;&#x8F83;&#x9AD8;&#xFF0C;&#x5728;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x4E0D;&#x8DB3;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E0D;&#x4F1A;&#x88AB;&#x7CFB;&#x7EDF;&#x6740;&#x6B7B;
 */

public class MyForegroundService extends Service {

    private final static int FOREGROUND_SERVICE_ID = 100;

    @Override
    public void onCreate() {
        super.onCreate();
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        startForeground(FOREGROUND_SERVICE_ID, createNotification());//&#x542F;&#x52A8;&#x524D;&#x53F0;&#x670D;&#x52A1;&#xFF0C;&#x5728;&#x901A;&#x77E5;&#x680F;&#x663E;&#x793A;&#x4E00;&#x4E2A;&#x6D88;&#x606F;
        return super.onStartCommand(intent, flags, startId);
    }

    @Nullable
    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        stopForeground(true);//&#x505C;&#x6B62;&#x524D;&#x53F0;&#x670D;&#x52A1;&#x5E76;&#x4E14;&#x79FB;&#x9664;&#x901A;&#x77E5;&#x680F;
    }

    /**
     * &#x6784;&#x5EFA;&#x901A;&#x77E5;&#x680F;&#x6D88;&#x606F;
     * @return
     */
    private Notification createNotification() {
        Notification.Builder builder = new Notification.Builder(this.getApplicationContext()); //&#x83B7;&#x53D6;&#x4E00;&#x4E2A;Notification&#x6784;&#x9020;&#x5668;
        Intent newIntent = new Intent(this, MainActivity.class);
        builder.setContentIntent(PendingIntent.getActivity(this, 0, newIntent, 0))
                .setContentTitle(&quot;&#x524D;&#x53F0; service &#x6807;&#x9898;&quot;)
                .setContentText(&quot;&#x524D;&#x53F0; service &#x5185;&#x5BB9;&quot;)
                .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))
                .setSmallIcon(R.mipmap.ic_launcher);

        return builder.build();
    }
}

</code></pre>]]></content>
    
    <summary type="html">
    
      Android 中判断应用程序在前台还是在后台运行，我们可以通过 RunningAppProcessInfo，获取应用本身的优先等级去判断，也可能使用 ActivityLifecycleCallbacks，根据 activity 的生命周期去判断（Android 4.0 以上）。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Linux Shell 脚本切换 IP</title>
    <link href="http://ngudream.com/2017/02/09/linux-ip-switch-shell/"/>
    <id>http://ngudream.com/2017/02/09/linux-ip-switch-shell/</id>
    <published>2017-02-09T12:43:41.000Z</published>
    <updated>2017-02-19T14:41:06.256Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>&#x8F6C;&#x8F7D;&#x81EA;&#xFF1A;<a href="http://diaocow.iteye.com/blog/1674074" target="_blank" rel="external">http://diaocow.iteye.com/blog/1674074</a></p>
</blockquote>
<p>&#x5728;web&#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x7ECF;&#x5E38;&#x9700;&#x8981;&#x5207;&#x6362;hosts&#x7ED1;&#x5B9A;&#xFF0C;&#x6BD4;&#x8F83;&#x597D;&#x7528;&#x5DE5;&#x5177;&#x706B;&#x72D0;&#x63D2;&#x4EF6;&#xFF1A;hostAdmin.</p>
<p>&#x4ECA;&#x5929;&#x7A81;&#x53D1;&#x5947;&#x60F3;&#xFF08;&#x6700;&#x8FD1;&#x770B;&#x4E86;&#x5F88;&#x591A; shell&#xFF0C;&#x4E5F;&#x60F3;&#x953B;&#x70BC;&#x4E00;&#x4E0B;&#xFF09;&#xFF0C;&#x4EFF;&#x7167; hostAdmin &#x5199;&#x4E86;&#x4E00;&#x4E2A; shell &#x811A;&#x672C;&#xFF0C;&#x76EE;&#x524D;&#x8FD0;&#x884C;&#x826F;&#x597D;&#x3002;</p>
<h2 id="&#x6E90;&#x7801;"><a class="header-anchor" href="#&#x6E90;&#x7801;"></a>&#x6E90;&#x7801;</h2>
<pre><code>#!/bin/bash

##############################
#  &#x5207;&#x6362;hosts&#x7684;&#x5DE5;&#x5177;&#x7C7B; swich hosts
#
#  --------hosts &#x6587;&#x4EF6;&#x683C;&#x5F0F;--------
#  ==offline
#  ip list...
#  ==offline
#
#  ==online
#  ip list...
#  ==online
#  --------hosts &#x6587;&#x4EF6;&#x683C;&#x5F0F;--------
#  
#  &#x64CD;&#x4F5C;&#xFF1A;sh shosts.sh offline &#x5F00;&#x542F;offline&#x8FD9;&#x7EC4;host&#x7ED1;&#x5B9A;
#
#  diaocow 2012-9-8
#
##############################

# &#x68C0;&#x6D4B;&#x7528;&#x6237;&#x662F;&#x5426;&#x8F93;&#x5165;&#x4E86;group tag
if [[ -z $1 ]] ; then
        echo &quot;Error: Please input a group tag! eg. offline&quot;
        exit 1
fi

HOSTS=&quot;testdata&quot;         # hosts&#x6587;&#x4EF6;(&#x8FD9;&#x91CC;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x66FF;&#x6362;&#x6210;/etc/hosts)
HOSTS_TEMP=&quot;host.tmp&quot;    # hosts&#x4E34;&#x65F6;&#x6587;&#x4EF6;
GROUP_TAG=&quot;==$1&quot;         # &#x9700;&#x8981;&#x6253;&#x5F00;&#x7684;&#x7EC4;

# &#x68C0;&#x6D4B;group tag&#x6709;&#x6548;&#x6027;
if ! grep -q  &quot;$GROUP_TAG&quot;  &quot;$HOSTS&quot; ; then
        echo &quot;Error: there is no group tag named $GROUP_TAG in $HOSTS&quot;
        exit 1
fi

# &#x51FD;&#x6570;&#xFF1A;&#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x4E3A;IP
isIp() {
	echo $1 | grep -E -q &apos;([0-9]+\.){3}[0-9]&apos;
    ip_result=`echo $?`
}

# clean&#x4E34;&#x65F6;&#x6587;&#x4EF6;
: &gt; $HOSTS_TEMP
# group tag &#x8BA1;&#x6570;
start_flag=0

# &#x5904;&#x7406;hosts
cat $HOSTS | while read line ; do

        if echo $line | grep -q $GROUP_TAG; then
                start_flag=$((start_flag + 1))
        fi

        isIp &quot;$line&quot;

        if [[ $start_flag == 1 &amp;&amp; $ip_result == 0 ]] ; then
                # &#x53BB;&#x6389;&#x5F00;&#x5934;&#x7684;&#x6CE8;&#x91CA;&#x7B26;
                line=${line/#\#/}
        elif [[ $ip_result == 0 ]] ; then
                # &#x5728;&#x884C;&#x5F00;&#x5934;&#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#x7B26;
                if ! echo $line | grep -q &apos;^ *#&apos; ; then
                     line=\#$line
                fi
        fi
        echo &quot;$line&quot; &gt;&gt; $HOSTS_TEMP

done

# &#x91CD;&#x65B0;&#x751F;&#x6210;hosts
cat $HOSTS_TEMP &gt; $HOSTS

rm -rf $HOSTS_TEMP
</code></pre>
<h2 id="&#x8C03;&#x8BD5;"><a class="header-anchor" href="#&#x8C03;&#x8BD5;"></a>&#x8C03;&#x8BD5;</h2>
<p>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x6765;&#x6D4B;&#x8BD5;&#x4E0B;&#x8FD9;&#x4E2A;&#x811A;&#x672C;&#xFF1A;</p>
<p>&#x6211;&#x4EEC;&#x51C6;&#x5907;&#x4E0B;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#xFF08;&#x811A;&#x672C;&#x4E2D;&#x7684;HOSTS&#x53D8;&#x91CF;&#x6307;&#x5B9A;hosts&#x6587;&#x4EF6;&#xFF0C;&#x76EE;&#x524D;&#x6211;&#x4EEC;&#x6682;&#x5B9A;&#x4E49;&#x4E3A;testdata)&#xFF1A;</p>
<pre><code>[diaocow@ubuntu]$ cat testdata
==offline
72.51.30.13    offline.test1.com
72.20.123.321  offline.test2.com

==offline

==online
12.56.92.97 online.test1.com    
12.56.38.84 online.test2.com
==online
</code></pre>
<p>&#x5C06;host&#x5207;&#x6362;&#x5230;&#x7EBF;&#x4E0A;&#x73AF;&#x5883;</p>
<pre><code>[diaocow@ubuntu]$ sh shosts.sh  online
[diaocow@ubuntu]$ cat testdata
==offline
#72.51.30.13    offline.test1.com
#72.20.123.321  offline.test2.com

==offline

==online
12.56.92.97 online.test1.com
12.56.38.84 online.test2.com
==online
</code></pre>
<p>&#x91CD;&#x590D;&#x6267;&#x884C;  sh <a href="http://shosts.sh" target="_blank" rel="external">shosts.sh</a>  online &#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x95EE;&#x9898;</p>
<p>&#x6211;&#x4EEC;&#x5728;&#x5C1D;&#x8BD5;&#x5207;&#x6362;&#x6210;&#x7EBF;&#x4E0B;&#x73AF;&#x5883;</p>
<pre><code>[diaocow@ubuntu]$ sh shosts.sh  offline
[diaocow@ubuntu]$ cat testdata
==offline
72.51.30.13    offline.test1.com
72.20.123.321  offline.test2.com

==offline

==online
#12.56.92.97 online.test1.com
#12.56.38.84 online.test2.com
==online
</code></pre>
<p>&#x4E00;&#x5207;OK &#xFF0C;&#x6CE8;&#xFF1A;<strong>&#x4E0A;&#x9762;&#x6240;&#x5199;&#x7684;online&#x3001;offline&#x4E0D;&#x662F;&#x5FC5;&#x987B;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x540D;&#x5B57;&#xFF0C;&#x5B83;&#x4EEC;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x6807;&#x8BB0;&#x4F4D;&#x800C;&#x5DF2;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x5176;&#x5B83;&#x540D;&#x5B57;&#xFF0C;&#x6BD4;&#x5982;inweb&#x2026;</strong></p>
<p>&#x5728;&#x811A;&#x672C;&#x7684;&#x7F16;&#x5199;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x7ECF;&#x5E38;&#x4F7F;&#x7528;&#x8FD9;&#x4E24;&#x4E2A;&#x547D;&#x4EE4;</p>
<p>sh -n <a href="http://shosts.sh" target="_blank" rel="external">shosts.sh</a> online              # &#x68C0;&#x6D4B;&#x811A;&#x672C;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;<br>
sh -x <a href="http://shosts.sh" target="_blank" rel="external">shosts.sh</a> online                 # &#x8BE6;&#x7EC6;&#x6253;&#x51FA;&#x811A;&#x672C;&#x6BCF;&#x4E00;&#x6B65;&#x6267;&#x884C;&#x8FC7;&#x7A0B;</p>]]></content>
    
    <summary type="html">
    
      笔者常在 linux 下开发，时不时需要进行内外网的切换，但没有像 windows 下的 SwitchHosts 一样方便的工具；虽然可以使用火狐浏览器的插件 hostAdmin，但是感觉也不太方便，没有命令行直接操作来得快。今天就介绍一个网友的脚本，原理是将 /etc/hosts 文件下的非选择的地址注释掉，只保留选择的地址。
    
    </summary>
    
      <category term="编程" scheme="http://ngudream.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="linux" scheme="http://ngudream.com/tags/linux/"/>
    
      <category term="Shell" scheme="http://ngudream.com/tags/Shell/"/>
    
      <category term="IP" scheme="http://ngudream.com/tags/IP/"/>
    
  </entry>
  
  <entry>
    <title>WebView异步加载自定义CSS/JS</title>
    <link href="http://ngudream.com/2017/02/08/android-webview-asyncload-css-js/"/>
    <id>http://ngudream.com/2017/02/08/android-webview-asyncload-css-js/</id>
    <published>2017-02-07T16:27:01.000Z</published>
    <updated>2017-02-14T13:15:50.739Z</updated>
    
    <content type="html"><![CDATA[<p>&#x8FD1;&#x6765;&#x63A5;&#x5230;&#x4E00;&#x4E2A;&#x9700;&#x6C42;&#xFF0C;&#x5C31;&#x662F; webview &#x8981;&#x52A8;&#x6001;&#x52A0;&#x8F7D; css &#x6587;&#x4EF6;&#xFF0C;&#x66FF;&#x6362; html &#x6587;&#x4EF6;&#x539F;&#x6765;&#x7684;&#xFF0C;&#x8FBE;&#x5230;&#x5B9A;&#x5236;&#x754C;&#x9762;&#x7684;&#x76EE;&#x7684;&#x3002;&#x81EA;&#x5DF1;&#x505A;demo &#x8BD5;&#x9A8C;&#x8BC1;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;webview &#x672C;&#x8EAB;&#x63D0;&#x4F9B;&#x8FD9;&#x6837;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x8981;&#x6C42;&#x3002;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x4F7F;&#x7528; webview &#x7684; shouldInterceptRequest &#x63A5;&#x53E3;&#xFF0C;&#x62E6;&#x622A;&#x8BF7;&#x6C42;&#x3002;</p>
<h2 id="&#x62E6;&#x622A;&#x63A5;&#x53E3;"><a class="header-anchor" href="#&#x62E6;&#x622A;&#x63A5;&#x53E3;"></a>&#x62E6;&#x622A;&#x63A5;&#x53E3;</h2>
<p>WebView &#x8C03;&#x7528; loadUrl &#x540E;&#xFF0C;&#x4F1A;&#x9996;&#x5148;&#x6839;&#x636E;&#x4F20;&#x5165;&#x7684;URL&#x83B7;&#x53D6;&#x54CD;&#x5E94;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5C06;&#x54CD;&#x5E94;&#x663E;&#x793A;&#x5230;&#x9875;&#x9762;&#x4E0A;&#x3002;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x539F;&#x7406;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x83B7;&#x53D6;&#x54CD;&#x5E94;&#x8FC7;&#x7A0B;&#x4E2D;&#x91CD;&#x65B0;&#x6539;&#x53D8;&#x8BF7;&#x6C42;URL&#x6216;&#x8005;&#x76F4;&#x63A5;&#x5C06;&#x54CD;&#x5E94;&#x66FF;&#x6362;&#x3002;&#x8981;&#x60F3;&#x62E6;&#x622A; WebView &#x52A0;&#x8F7D;&#x7F51;&#x9875;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x91CD;&#x5199; WebViewClient &#x7C7B;&#xFF0C;&#x5728; WebViewClient &#x7C7B;&#x4E2D;&#x6211;&#x4EEC;&#x91CD;&#x5199; <strong>shouldInterceptRequest()</strong> &#x65B9;&#x6CD5;&#x3002;</p>
<p>&#x901A;&#x8FC7;&#x67E5;&#x770B; WebViewClient &#x7684;&#x6E90;&#x7801;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;&#x6709;&#x4E24;&#x4E2A;&#x540C;&#x540D;&#x65B9;&#x6CD5;&#xFF0C;&#x5206;&#x522B;&#x662F;&#xFF1A;</p>
<pre><code>/**
     * Notify the host application of a resource request and allow the
     * application to return the data.  If the return value is null, the WebView
     * will continue to load the resource as usual.  Otherwise, the return
     * response and data will be used.  NOTE: This method is called on a thread
     * other than the UI thread so clients should exercise caution
     * when accessing private data or the view system.
     *
     * @param view The {@link android.webkit.WebView} that is requesting the
     *             resource.
     * @param url The raw url of the resource.
     * @return A {@link android.webkit.WebResourceResponse} containing the
     *         response information or null if the WebView should load the
     *         resource itself.
     * @deprecated Use {@link #shouldInterceptRequest(WebView, WebResourceRequest)
     *             shouldInterceptRequest(WebView, WebResourceRequest)} instead.
     */
    @Deprecated
    public WebResourceResponse shouldInterceptRequest(WebView view,
            String url) {
        return null;
    }
</code></pre>
<p><strong>&#x4E3A;&#x4E86;&#x8BA9;&#x6BCF;&#x6B21;&#x52A0;&#x8F7D; html &#x9875;&#x9762;&#x90FD;&#x80FD;&#x591F;&#x56DE;&#x8C03; shouldInterceptRequest &#x51FD;&#x6570;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x521B;&#x5EFA; webview &#x7684;&#x65F6;&#x5019;&#x8C03;&#x7528; webView.clearCache(true) &#x6E05;&#x7A7A;&#x7F13;&#x5B58;&#x3002;&#x5355;&#x72EC;&#x8BBE;&#x7F6E; WebView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE)&#xFF0C;&#x4E0D;&#x4F7F;&#x7528;&#x7F13;&#x5B58;&#xFF0C;&#x53EA;&#x4ECE;&#x7F51;&#x7EDC;&#x83B7;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x7528;&#x3002;</strong></p>
<p>&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#xFF1A;</p>
<pre><code>/**
     * Notify the host application of a resource request and allow the
     * application to return the data.  If the return value is null, the WebView
     * will continue to load the resource as usual.  Otherwise, the return
     * response and data will be used.  NOTE: This method is called on a thread
     * other than the UI thread so clients should exercise caution
     * when accessing private data or the view system.
     *
     * @param view The {@link android.webkit.WebView} that is requesting the
     *             resource.
     * @param request Object containing the details of the request.
     * @return A {@link android.webkit.WebResourceResponse} containing the
     *         response information or null if the WebView should load the
     *         resource itself.
     */
    public WebResourceResponse shouldInterceptRequest(WebView view,
            WebResourceRequest request) {
        return shouldInterceptRequest(view, request.getUrl().toString());
    }
</code></pre>
<p>&#x7B2C;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;@Deprecated&#xFF0C;&#x5373;&#x5728; SDK API 20 &#x53CA;&#x4EE5;&#x4E0B;&#x7684;&#x4F1A;&#x6267;&#x884C;&#x65B9;&#x6CD5;1&#xFF0C;SDK API 20 &#x4EE5;&#x4E0A;&#x7684;&#x4F1A;&#x6267;&#x884C;&#x65B9;&#x6CD5;2&#x3002;</p>
<h2 id="demo-&#x5B9E;&#x4F8B;"><a class="header-anchor" href="#demo-&#x5B9E;&#x4F8B;"></a>demo &#x5B9E;&#x4F8B;</h2>
<p>&#x6211;&#x4EEC;&#x7528;&#x4E00;&#x4E2A; map &#x6765;&#x4F20;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x7684; css&#x3001;js &#x6587;&#x4EF6;&#xFF0C;key&#x4E3A;&#x6587;&#x4EF6;&#x540D;(&#x4E0E;&#x73B0;&#x6709;html&#x6587;&#x4EF6;&#x4E0A;&#x52A0;&#x8F7D;&#x7684;&#x4E00;&#x81F4;&#xFF0C;&#x65B9;&#x4FBF;&#x5224;&#x65AD;)&#xFF0C;value&#x4E3A;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;<br>
map &#x662F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x7528; intent &#x4F20;&#x8F93;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#x4E86; Serializable &#x63A5;&#x53E3;&#x7684;&#x7C7B;&#xFF0C;&#x7528;&#x6765;&#x4F20;&#x76F8;&#x5E94;&#x7684;&#x53C2;&#x6570;&#x3002;</p>
<pre><code>/**
 * Created on 17-2-8.
 */
public class SerializableMap implements Serializable {

    private Map&lt;String, String&gt; map;

    public Map&lt;String, String&gt; getMap() {
        return map;
    }

    public void setMap(Map&lt;String, String&gt; map) {
        this.map = map;
    }
}
</code></pre>
<p>&#x4E0B;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5B9E;&#x73B0;&#x4FEE;&#x6539;&#x6253;&#x5F00;&#x9875;&#x9762;&#x7684;&#x80CC;&#x666F;&#x8272;&#x3002;&#x9875;&#x9762;&#x7684;&#x539F;&#x59CB;&#x80CC;&#x666F;&#x5982;&#x4E0B;&#x56FE;&#xFF1A;</p>
<div align="center">
<img style="width:300px;height:300px" data-original="/2017/02/08/android-webview-asyncload-css-js/original.jpg" class="lazy">
</div>
<p>&#x6211;&#x4EEC;&#x8981;&#x5C06;&#x9875;&#x9762;&#x7684;&#x80CC;&#x666F;&#x53D8;&#x6210;&#x7EA2;&#x8272;&#xFF0C;&#x9996;&#x5148;&#x4FEE;&#x6539;&#x4E00;&#x4E0B; css &#x6587;&#x4EF6;&#x7684; body &#x80CC;&#x666F;&#xFF1A;</p>
<pre><code>body {
    background: red !important;
}
</code></pre>
<p>&#x9996;&#x5148;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#xFF1A;</p>
<pre><code>//&#x5C01;&#x88C5;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x7684;css
Map&lt;String, String&gt; map = new HashMap&lt;&gt;();
        map.put(&quot;style.css&quot;, &quot;file:///android_asset/style.css&quot;);

Intent intent = new Intent(MzAccountManager.getInstance().getContext(), HtmlLoginActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
        if(map != null &amp;&amp; map.size() &gt; 0){
            SerializableMap serializableMap = new SerializableMap();
            serializableMap.setMap(map);
            Bundle bundle = new Bundle();
            bundle.putSerializable(&quot;map&quot;, serializableMap);//&#x4F20;&#x7ED9;activity
            intent.putExtras(bundle);
        }
        getContext().startActivity(intent);
</code></pre>
<p>&#x7136;&#x540E;&#x5728; activity &#x91CC;&#x9762;&#x53D6;&#x51FA;&#x6765;&#x4F7F;&#x7528;&#x5373;&#x53EF;&#xFF1A;</p>
<pre><code>/**
     * &#x52A0;&#x8F7D;&#x81EA;&#x5B9A;&#x4E49;&#x7684;css/js
     */
    private Map mExtraCssJsMap;

    SerializableMap serializableMap = (SerializableMap) intent.getSerializableExtra(&quot;map&quot;);
                if(serializableMap != null){
                    mExtraCssJsMap = serializableMap.getMap();
                }
</code></pre>
<p>&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x91CD;&#x8F7D; shouldInterceptRequest &#x63A5;&#x53E3;&#xFF0C;&#x9996;&#x5148;&#x5B9E;&#x73B0; SDK 20 &#x7248;&#x672C;&#x4EE5;&#x4E0A;&#x7684;&#xFF1A;</p>
<pre><code>private class AccountWebViewClient extends WebViewClient {

        public AccountWebViewClient() {
        }

        @Override
        public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) {
//            handleSslError(handler);
            handler.proceed();//&#x9047;&#x5230;&#x8BC1;&#x4E66;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x7EE7;&#x7EED;&#x6267;&#x884C;
        }

        @TargetApi(Build.VERSION_CODES.LOLLIPOP)
        @Override
        public WebResourceResponse shouldInterceptRequest(WebView view, WebResourceRequest request) {
            String url = request.getUrl().toString();
            if(mExtraCssJsMap != null &amp;&amp; mExtraCssJsMap.size() &gt; 0){
                Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = mExtraCssJsMap.entrySet().iterator();
                while (iterator.hasNext()){
                    Map.Entry&lt;String, String&gt; entry = iterator.next();
                    String key = entry.getKey();
                    String value = entry.getValue();
                    if(url.contains(key)){
                        WebResourceResponse response = null;
                        File fileCss = new File(value);
                        if(fileCss.exists()){
                            try {
                                InputStream inputStream = new FileInputStream(fileCss);//&#x8BFB;&#x53D6;&#x6587;&#x4EF6;&#xFF0C;&#x8FD4;&#x56DE;&#x81EA;&#x5B9A;&#x4E49;&#x7684; response
                                response = new WebResourceResponse(getMimeType(url), &quot;UTF-8&quot;, inputStream);
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        } else {
                            try {
                                response = new WebResourceResponse(getMimeType(url), &quot;UTF-8&quot;, getAssets().open(key));
                            } catch (IOException e) {
                                e.printStackTrace();
                            }
                        }
                        if(response != null){
                            return response;
                        }
                    }
                }
            }
            return super.shouldInterceptRequest(view, request);
        }
    }

    //get mime type by url
   public String getMimeType(String url) {
       String type = null;
       String extension = MimeTypeMap.getFileExtensionFromUrl(url);
       if (extension != null) {
           if (extension.equals(&quot;js&quot;)) {
               return &quot;text/javascript&quot;;
           }
           else if (extension.equals(&quot;woff&quot;)) {
               return &quot;application/font-woff&quot;;
           }
           else if (extension.equals(&quot;woff2&quot;)) {
               return &quot;application/font-woff2&quot;;
           }
           else if (extension.equals(&quot;ttf&quot;)) {
               return &quot;application/x-font-ttf&quot;;
           }
           else if (extension.equals(&quot;eot&quot;)) {
               return &quot;application/vnd.ms-fontobject&quot;;
           }
           else if (extension.equals(&quot;svg&quot;)) {
               return &quot;image/svg+xml&quot;;
           }
           type = MimeTypeMap.getSingleton().getMimeTypeFromExtension(extension);
       }
       return type;
   }
</code></pre>
<p>&#x5176;&#x5B9E; SDK 20 &#x4EE5;&#x4E0B;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x5DEE;&#x4E0D;&#x591A;&#x7684;&#xFF0C;&#x5C31;&#x662F;&#x91CD;&#x8F7D;&#x7684;&#x65B9;&#x6CD5;&#x4E0D;&#x4E00;&#x6837;&#x800C;&#x5DF2;&#xFF1A;</p>
<pre><code>private class AccountWebViewClient extends WebViewClient {

        public AccountWebViewClient() {
        }

        @Override
        public void onReceivedSslError(WebView view, SslErrorHandler handler, SslError error) {
//            handleSslError(handler);
            handler.proceed();//&#x9047;&#x5230;&#x8BC1;&#x4E66;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x7EE7;&#x7EED;&#x6267;&#x884C;
        }

        @Override
        public WebResourceResponse shouldInterceptRequest(WebView view, String url) {
            if(mExtraCssJsMap != null &amp;&amp; mExtraCssJsMap.size() &gt; 0){
                Iterator&lt;Map.Entry&lt;String, String&gt;&gt; iterator = mExtraCssJsMap.entrySet().iterator();
                while (iterator.hasNext()){
                    Map.Entry&lt;String, String&gt; entry = iterator.next();
                    String key = entry.getKey();
                    String value = entry.getValue();
                    if(url.contains(key)){
                        WebResourceResponse response = null;
                        File fileCss = new File(value);
                        if(fileCss.exists()){
                            try {
                                InputStream inputStream = new FileInputStream(fileCss);
                                response = new WebResourceResponse(&quot;text/css&quot;, &quot;UTF-8&quot;, inputStream);
                            } catch (Exception e) {
                                e.printStackTrace();
                            }
                        } else {
                            try {
                                response = new WebResourceResponse(&quot;text/css&quot;, &quot;UTF-8&quot;, getAssets().open(key));
                            } catch (IOException e) {
                                e.printStackTrace();
                            }
                        }
                        if(response != null){
                            return response;
                        }
                    }
                }
            }
            return super.shouldInterceptRequest(view, url);
        }
    }
</code></pre>
<p>&#x901A;&#x8FC7;&#x62E6;&#x622A;&#x8BF7;&#x6C42;&#xFF0C;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x5B9A;&#x4E49;&#x7684; style.css &#x6587;&#x4EF6;&#xFF0C;&#x6253;&#x5F00;&#x9875;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x9875;&#x9762;&#x7684;&#x80CC;&#x666F;&#x8272;&#x5DF2;&#x7ECF;&#x53D8;&#x6210;&#x4E86;&#x7EA2;&#x8272;&#xFF1A;</p>
<div align="center">
<img style="width:300px;height:300px" data-original="/2017/02/08/android-webview-asyncload-css-js/red.jpg" class="lazy">
</div>
<p>&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x6587;&#x7AE0;&#xFF0C;&#x6BD4;&#x8F83;&#x8BE6;&#x7EC6;&#x7684;&#x5B9E;&#x73B0;&#xFF1A;<br>
<a href="http://stackoverflow.com/questions/8273991/webview-shouldinterceptrequest-example" target="_blank" rel="external">webview-shouldinterceptrequest-example</a></p>]]></content>
    
    <summary type="html">
    
      Android WebView 如何动态改变一个 html 页面原有样式？可以通过拦截请求，在加载 html 文件原有的 css/jss 文件前，将它们替换成自定义的新文件，这个具体要用到的就是 webview 的 shouldInterceptRequest 接口，重载此接口，然后返回重新生成的响应。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android Airbnb Lottie 复杂动画</title>
    <link href="http://ngudream.com/2017/02/05/android-airbnb-lottie/"/>
    <id>http://ngudream.com/2017/02/05/android-airbnb-lottie/</id>
    <published>2017-02-05T14:27:31.000Z</published>
    <updated>2017-03-04T12:37:48.940Z</updated>
    
    <content type="html"><![CDATA[<p>&#x65B0;&#x5E74;&#x7B2C;&#x4E00;&#x5929;&#x4E0A;&#x73ED;&#xFF0C;&#x6CA1;&#x60F3;&#x5230;&#x5C31;&#x7ACB;&#x6625;&#x4E86;&#xFF0C;&#x4FD7;&#x8BDD;&#x8BF4;&#xFF0C;&#x4E00;&#x5E74;&#x4E4B;&#x8BA1;&#x5728;&#x4E8E;&#x6625;&#xFF0C;&#x5168;&#x65B0;&#x7684; 17 &#x5E74;&#x5F00;&#x59CB;&#x5566;&#xFF0C;&#x6765;&#xFF0C;&#x6536;&#x62FE;&#x4E0B;&#x5FC3;&#x60C5;&#xFF0C;&#x6295;&#x5165;&#x5230;&#x5DE5;&#x4F5C;&#x4E2D;&#xFF0C;&#x64B8;&#x8D77;&#x8896;&#x5B50;&#xFF0C;&#x5C31;&#x662F;&#x5E72;&#xFF01;</p>
<p>&#x5C31;&#x5728;&#x524D;&#x51E0;&#x5929;&#xFF0C;Airbnb &#x5F00;&#x6E90;&#x4E86;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x53EB;&#x505A; Lottie&#xFF0C;&#x6211;&#x4E2A;&#x4EBA;&#x89C9;&#x5F97;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x7B80;&#x76F4;&#x7889;&#x5821;&#x4E86;&#xFF01;</p>
<p>&#x52A8;&#x753B;&#x76F8;&#x4FE1;&#x5927;&#x5BB6;&#x90FD;&#x4E0D;&#x964C;&#x751F;&#xFF0C;&#x5728; App &#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x9002;&#x5F53;&#x7684;&#x4F7F;&#x7528;&#x52A8;&#x753B;&#x53EF;&#x4EE5;&#x63D0;&#x5347;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#xFF0C;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x4EA7;&#x54C1;&#x9526;&#x4E0A;&#x6DFB;&#x82B1;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x6211;&#x4EEC;&#x5F88;&#x5BB9;&#x6613;&#x5C31;&#x80FD;&#x5B9E;&#x73B0;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x5B9E;&#x73B0;&#x8D77;&#x6765;&#x5C31;&#x6BD4;&#x8F83;&#x9EBB;&#x70E6;&#x4E86;&#xFF0C;&#x6BD4;&#x5982;&#x4E0B;&#x56FE;&#x7684;&#x4E00;&#x4E9B;&#x52A8;&#x753B;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/02/05/android-airbnb-lottie/Example1.gif" class="lazy">
</div>
<div align="center">
<img data-original="/2017/02/05/android-airbnb-lottie/Example2.gif" class="lazy">
</div>
<div align="center">
<img data-original="/2017/02/05/android-airbnb-lottie/Example3.gif" class="lazy">
</div>
<div align="center">
<img data-original="/2017/02/05/android-airbnb-lottie/Example4.gif" class="lazy">
</div>
<p>&#x600E;&#x4E48;&#x6837;&#xFF1F;&#x8FD9;&#x4E9B;&#x53EF;&#x4E0D;&#x662F;&#x7B80;&#x5355;&#x7684;&#x79FB;&#x52A8;&#x3001;&#x7F29;&#x653E;&#x3001;&#x65CB;&#x8F6C;&#x5C31;&#x641E;&#x5F97;&#x5B9A;&#x7684;&#xFF0C;&#x53EF;&#x80FD;&#x6709;&#x4E9B;&#x4EBA;&#x601D;&#x8003;&#x4E86;&#x4E4B;&#x540E;&#x5927;&#x6982;&#x6709;&#x4EE5;&#x4E0B;&#x5B9E;&#x73B0;&#x601D;&#x8DEF;&#xFF1A;</p>
<ul>
<li>&#x4F7F;&#x7528; Gif&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5F53;&#x7136;&#x53EF;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x4F7F;&#x7528; Gif &#x5360;&#x7528;&#x7A7A;&#x95F4;&#x8F83;&#x5927;&#xFF0C;&#x800C;&#x4E14;&#x9700;&#x8981;&#x4E3A;&#x5404;&#x79CD;&#x5C4F;&#x5E55;&#x5C3A;&#x5BF8;&#x3001;&#x5206;&#x8FA8;&#x7387;&#x505A;&#x9002;&#x914D;&#xFF0C;&#x56E0;&#x4E3A; Android &#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x539F;&#x751F; Gif &#x7684; api &#x652F;&#x6301;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x79CD;&#x65B9;&#x6848;&#x8FD8;&#x4F1A;&#x9047;&#x5230;&#x517C;&#x5BB9;&#x6027;&#x95EE;&#x9898;&#xFF1B;</li>
<li>&#x4F7F;&#x7528;&#x5E27;&#x52A8;&#x753B;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x8FD8;&#x4E0D;&#x5982;&#x4F7F;&#x7528; Gif&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x4F7F;&#x7528;&#x5E27;&#x52A8;&#x753B;&#x5360;&#x7528;&#x7A7A;&#x95F4;&#x6BD4; Gif &#x8FD8;&#x8981;&#x5927;&#x7684;&#x591A;&#xFF0C;&#x800C;&#x4E14;&#x4E00;&#x6837;&#x8981;&#x505A;&#x591A;&#x5C4F;&#x5E55;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x9002;&#x914D;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E0D;&#x4F1A;&#x9047;&#x5230;&#x517C;&#x5BB9;&#x6027;&#x95EE;&#x9898;&#xFF1B;</li>
<li>&#x4F7F;&#x7528;&#x89C6;&#x9891;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5F53;&#x7136;&#x53EF;&#x4EE5;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#x5BA3;&#x4F20;&#x7247;&#x624D;&#x7528;&#x7684;&#x4E0A;&#x89C6;&#x9891;&#xFF0C;&#x4E00;&#x822C;&#x7684;&#x52A8;&#x753B;&#x8FDC;&#x4E0D;&#x9700;&#x8981;&#x7528;&#x89C6;&#x9891;&#x624D;&#x80FD;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x672A;&#x514D;&#x6709;&#x4E9B;&#x5927;&#x6750;&#x5C0F;&#x7528;&#x4E86;&#xFF0C;&#x800C;&#x4E14;&#x5360;&#x7528;&#x7A7A;&#x95F4;&#x4F9D;&#x7136;&#x5F88;&#x5927;&#x3002;</li>
</ul>
<p>&#x5C31;&#x6CA1;&#x6709;&#x66F4;&#x597D;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x4E86;&#x4E48;&#xFF1F;</p>
<p>&#x5F53;&#x7136;&#x6709;&#xFF0C;Android 5.x &#x4E4B;&#x540E;&#x63D0;&#x4F9B;&#x4E86;&#x5BF9; SVG &#x7684;&#x652F;&#x6301;&#xFF0C;&#x901A;&#x8FC7; VectorDrawable&#x3001;AnimatedVectorDrawable &#x7684;&#x7ED3;&#x5408;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4E00;&#x4E9B;&#x7A0D;&#x5FAE;&#x590D;&#x6742;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x4F46;&#x662F;&#x517C;&#x5BB9;&#x6027;&#x662F;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x4E2A;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E9B;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x6765;&#x89E3;&#x51B3;&#xFF0C;&#x4E0D;&#x8FC7;&#x6574;&#x4E2A;&#x5B9E;&#x73B0;&#x6D41;&#x7A0B;&#x975E;&#x5E38;&#x9EBB;&#x70E6;&#xFF0C;&#x6BCF;&#x6B21;&#x5168;&#x65B0;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x52A8;&#x753B;&#x90FD;&#x5F97;&#x91CD;&#x5934;&#x6765;&#x8FC7;&#xFF0C;&#x6700;&#x6700;&#x5173;&#x952E;&#x7684;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x516C;&#x53F8;&#x4E0B;&#x7684; App&#xFF0C;iOS &#x4E5F;&#x8981;&#x5B9E;&#x73B0;&#x4E00;&#x5957;&#x4E00;&#x6837;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x8D44;&#x6E90;&#x7684;&#x5360;&#x7528;&#x4E0E;&#x5F00;&#x53D1;&#x6210;&#x672C;&#x5C31;&#x663E;&#x5F97;&#x8FC7;&#x5927;&#x4E86;&#x3002;</p>
<p>&#x800C; Airbnb &#x5F00;&#x6E90;&#x7684;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x5B8C;&#x7F8E;&#x7684;&#x89E3;&#x51B3;&#x4EE5;&#x4E0A;&#x96BE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E0B;&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x3002;</p>
<p>&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x8981;&#x505A;&#x4E00;&#x4E2A;&#x5F15;&#x5BFC;&#x9875;&#x9762;&#x7684;&#x6B22;&#x8FCE;&#x52A8;&#x753B;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E00;&#x822C;&#x8BBE;&#x8BA1;&#x5E08;&#x4F1A;&#x7528; Adobe &#x65D7;&#x4E0B;&#x7684; After Effects &#xFF08;&#x7B80;&#x79F0; AE&#xFF09;&#x6765;&#x505A;&#x4E2A;&#x52A8;&#x753B;&#x51FA;&#x6765;&#xFF0C;&#x8BBE;&#x8BA1;&#x5E08;&#x7528; AE &#x505A;&#x4E2A;&#x52A8;&#x753B;&#x6BD4;&#x5DE5;&#x7A0B;&#x5E08;&#x7528;&#x4EE3;&#x7801;&#x53BB;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x52A8;&#x753B;&#x8981;&#x5FEB;&#x7684;&#x591A;&#x7684;&#x591A;&#xFF0C;&#x8C03;&#x6574;&#x8D77;&#x6765;&#x4E5F;&#x5F88;&#x65B9;&#x4FBF;&#xFF0C;&#x4E4B;&#x540E; AE &#x4E0A;&#x6709;&#x4E00;&#x6B3E;&#x63D2;&#x4EF6;&#x53EB;&#x505A; <a href="https://github.com/bodymovin/bodymovin" target="_blank" rel="external">Bodymovin</a>&#xFF0C;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x4E5F;&#x6BD4;&#x8F83;&#x5C4C;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x6839;&#x636E; AE &#x4E0A;&#x7684;&#x52A8;&#x753B;&#x6587;&#x4EF6;&#x5BFC;&#x51FA; json &#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E2A; json &#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x4E86;&#x8BE5;&#x52A8;&#x753B;&#x7684;&#x4E00;&#x4E9B;&#x5173;&#x952E;&#x70B9;&#x7684;&#x5750;&#x6807;&#x4EE5;&#x53CA;&#x8FD0;&#x52A8;&#x8F68;&#x8FF9;&#xFF0C;&#x4E4B;&#x540E;&#x6211;&#x4EEC;&#x5728;&#x9879;&#x76EE;&#x4E2D;&#x5F15;&#x7528; Lottie &#x5F00;&#x6E90;&#x5E93;&#xFF0C;&#x5728;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x4E2D;&#x7B80;&#x5355;&#x7684;&#x52A0;&#x4E0A;&#x8FD9;&#x4E48;&#x4E00;&#x53E5;&#x5C31;&#x5B8C;&#x7F8E;&#x7684;&#x5B9E;&#x73B0;&#x4E86;&#x3002;</p>
<pre><code>&lt;com.airbnb.lottie.LottieAnimationView
    android:id=&quot;@+id/animation_view&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    app:lottie_fileName=&quot;hello-world.json&quot;
    app:lottie_loop=&quot;true&quot;
    app:lottie_autoPlay=&quot;true&quot; /&gt;
</code></pre>
<p>&#x6216;&#x8005;&#x4EE3;&#x7801;&#x4E2D;&#x8FD9;&#x6837;&#x4F7F;&#x7528;&#xFF1A;</p>
<pre><code>LottieAnimationView animationView = findViewById(R.id.animation_view);
animationView.setAnimation(&quot;hello-world.json&quot;);
animationView.loop(true);
</code></pre>
<p>&#x503C;&#x5F97;&#x4E00;&#x63D0;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x4EEC;&#x7684; hello-world.json &#x6587;&#x4EF6;&#x53EA;&#x9700;&#x8981;&#x653E;&#x5728; app/src/main/assets &#x76EE;&#x5F55;&#x4E0B;&#x5C31; ok &#x4E86;&#x3002;</p>
<p>&#x5F53;&#x7136;&#xFF0C;&#x8FD8;&#x6709;&#x66F4;&#x591A;&#x7684;&#x7528;&#x6CD5;&#xFF0C;&#x6BD4;&#x5982;&#x7ED9;&#x52A8;&#x753B;&#x6DFB;&#x52A0;&#x4E8B;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982;&#x63CF;&#x8FF0;&#x52A8;&#x753B;&#x7684; json &#x6587;&#x4EF6;&#x53EF;&#x4EE5;&#x8FDC;&#x7A0B;&#x66F4;&#x65B0;&#x4E0B;&#x8F7D;&#x5230;&#x672C;&#x5730;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x52A8;&#x58F0;&#x8272;&#x7684;&#x5B9A;&#x671F;&#x66F4;&#x65B0;&#x4F60;&#x7684;&#x52A8;&#x753B;&#x4E86;&#x3002;</p>
<p>&#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x5E93;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5145;&#x5206;&#x53D1;&#x6325;&#x6211;&#x4EEC;&#x7684;&#x60F3;&#x8C61;&#x529B;&#xFF0C;&#x5F88;&#x7B80;&#x5355;&#x65B9;&#x4FBF;&#x7684;&#x5C31;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x5957;&#x5F88;&#x9177;&#x70AB;&#x7684;&#x52A8;&#x753B;&#xFF0C;&#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x4E2A;&#x5E93;&#x662F;&#x8DE8;&#x5E73;&#x53F0;&#x7684;&#xFF0C;&#x652F;&#x6301; Android&#x3001;iOS &#x4EE5;&#x53CA; ReactNative&#xFF0C;&#x5171;&#x7528;&#x4E00;&#x5957; json &#x52A8;&#x753B;&#x63CF;&#x8FF0;&#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5176;&#x5B9E; Facebook &#x524D;&#x6BB5;&#x65F6;&#x95F4;&#x5F00;&#x6E90;&#x4E86;&#x4E00;&#x4E2A;&#x7C7B;&#x4F3C;&#x7684;&#x5E93;&#x53EB;&#x505A; <a href="https://github.com/facebookincubator/Keyframes" target="_blank" rel="external">Keyframes</a>&#xFF0C;&#x4E5F;&#x662F;&#x8DE8;&#x5E73;&#x53F0;&#x7684;&#xFF0C;&#x4F46;&#x662F; Lottie &#x6BD4; Keyframes &#x652F;&#x6301;&#x7684;&#x7279;&#x6027;&#x66F4;&#x591A;&#xFF0C;&#x800C;&#x4E14;&#x636E; Airbnb &#x5B98;&#x65B9;&#x535A;&#x5BA2;&#x4ECB;&#x7ECD;&#xFF0C;&#x4EE5;&#x540E;&#x5BF9;&#x8BA9;&#x8FD9;&#x4E2A;&#x5E93;&#x652F;&#x6301;&#x66F4;&#x591A;&#x7684;&#x7279;&#x6027;&#x4E0E;&#x529F;&#x80FD;&#xFF0C;&#x4E0D;&#x5F97;&#x4E0D;&#x8BF4;&#xFF0C;&#x771F;&#x4E43;&#x826F;&#x5FC3;&#xFF01;</p>
<p>&#x6700;&#x540E;&#xFF0C;&#x8FD9;&#x4E2A;&#x5E93;&#x7684;&#x5F00;&#x6E90;&#x5730;&#x5740;&#x5728;&#x8FD9;&#x91CC;&#xFF1A;</p>
<ul>
<li>Android: <a href="https://github.com/airbnb/lottie-android" target="_blank" rel="external">https://github.com/airbnb/lottie-android</a></li>
<li>iOS: <a href="https://github.com/airbnb/lottie-ios" target="_blank" rel="external">https://github.com/airbnb/lottie-ios</a></li>
<li>ReactNative: <a href="https://github.com/airbnb/lottie-react-native" target="_blank" rel="external">https://github.com/airbnb/lottie-react-native</a></li>
</ul>
<p>&#x6700;&#x6700;&#x540E;&#xFF0C;Airbnb &#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A; sample apk&#xFF0C;&#x8003;&#x8651;&#x5230;&#x90E8;&#x5206;&#x4EBA;&#x5728; Google Play &#x4E0A;&#x4E0B;&#x8F7D; apk &#x6709;&#x4E9B;&#x56F0;&#x96BE;&#xFF0C;&#x6211;&#x4E5F;&#x8D34;&#x5FC3;&#x7684;&#x628A; sample apk &#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x4E86;&#xFF0C;&#x516C;&#x4F17;&#x53F7; AndroidDeveloper &#x540E;&#x53F0;&#x56DE;&#x590D;&#x300C;lottie&#x300D;&#x5173;&#x952E;&#x5B57;&#x83B7;&#x53D6;&#x3002;</p>
<blockquote>
<p>&#x539F;&#x8C05;&#x94FE;&#x63A5;&#xFF1A;<a href="http://stormzhang.com/2017/02/03/airbnb-lottie-android/" target="_blank" rel="external">http://stormzhang.com/2017/02/03/airbnb-lottie-android/</a></p>
</blockquote>]]></content>
    
    <summary type="html">
    
      就在前几天，Airbnb 开源了一个项目叫做 Lottie，我个人觉得这个项目简直碉堡了！动画相信大家都不陌生，在 App 开发过程中，适当的使用动画可以提升用户体验，使我们的产品锦上添花，对于一些简单的动画，我们很容易就能实现，但是对于一些比较复杂的动画，实现起来就比较麻烦了。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android安全–DexClassLoader动态加载分析</title>
    <link href="http://ngudream.com/2017/02/05/android-dexclassloader/"/>
    <id>http://ngudream.com/2017/02/05/android-dexclassloader/</id>
    <published>2017-02-05T14:05:43.000Z</published>
    <updated>2017-02-19T02:46:37.388Z</updated>
    
    <content type="html"><![CDATA[<p>&#x770B;&#x5230;&#x539F;&#x6765;&#x6709;&#x628A;&#x539F;&#x59CB;&#x7684;dex&#x6587;&#x4EF6;&#x52A0;&#x5BC6;&#x4FDD;&#x5B58;&#xFF0C;&#x7136;&#x540E;&#x89E3;&#x5BC6;&#x540E;&#x4F7F;&#x7528;DexClassLoader&#x52A0;&#x8F7D;&#x6587;&#x4EF6;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x6765;&#x5206;&#x6790;&#x4E0B;DexClassLoader&#x7684;&#x52A0;&#x8F7D;&#x6D41;&#x7A0B;&#xFF1A;</p>
<h2 id="java-&#x90E8;&#x5206;"><a class="header-anchor" href="#java-&#x90E8;&#x5206;"></a>java &#x90E8;&#x5206;</h2>
<p>&#x6E90;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="http://androidxref.com/4.4_r1/xref/libcore/dalvik/src/main/java/dalvik/system/DexClassLoader.java" target="_blank" rel="external">http://androidxref.com/4.4_r1/xref/libcore/dalvik/src/main/java/dalvik/system/DexClassLoader.java</a></p>
<p>&#x8BE5;class&#x52A0;&#x8F7D;&#x5668;&#x662F;&#x52A0;&#x8F7D;&#x5305;&#x542B;classes.dex&#x6587;&#x4EF6;&#x7684;jar&#x6587;&#x4EF6;&#x6216;&#x8005;apk&#x6587;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x79C1;&#x6709;&#x7684;&#xFF0C;&#x53EF;&#x5199;&#x7684;&#x76EE;&#x5F55;&#x53BB;&#x7F13;&#x5B58;&#x4F18;&#x5316;&#x7684;classes&#x3002;&#x53EF;&#x4EE5;&#x7528;&#x4F7F;&#x7528;File dexoutputDir = context.getDir(&#x201C;dex&#x201D;,0);&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x5916;&#x90E8;&#x7F13;&#x5B58;&#xFF0C;&#x4EE5;&#x4FDD;&#x62A4;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x88AB;&#x4EE3;&#x7801;&#x6CE8;&#x5165;&#x3002;</p>
<p>&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public class DexClassLoader extends BaseDexClassLoader {
    &#x4E0B;&#x9762;&#x8FD9;&#x6BB5;&#x6CE8;&#x91CA;&#x8BE6;&#x7EC6;&#x5730;&#x8BF4;&#x660E;&#x4E86;&#x8FD9;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x5404;&#x4E2A;&#x53C2;&#x6570;&#x5730;&#x610F;&#x4E49;&#xFF0C;&#x4E0D;&#x4F5C;&#x9610;&#x8FF0;&#x4E86;&#xFF0C;&#x5E0C;&#x671B;&#x5927;&#x5BB6;&#x80FD;&#x591F;&#x8BA4;&#x771F;&#x9605;&#x8BFB;&#xFF0C;&#x601D;&#x8003;&#xFF1B;

public DexClassLoader(String dexPath, String optimizedDirectory,
            String libraryPath, ClassLoader parent) {
        super(dexPath, new File(optimizedDirectory), libraryPath, parent);
    }
}
</code></pre>
<ul>
<li>dexpath&#x4E3A;jar&#x6216;apk&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x3002;</li>
<li>optimizedDirectory&#x4E3A;&#x4F18;&#x5316;dex&#x7F13;&#x5B58;&#x76EE;&#x5F55;&#x3002;</li>
<li>libraryPath&#x5305;&#x542B;native lib&#x7684;&#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#x3002;</li>
<li>parent&#x7236;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x3002;</li>
</ul>
<p>&#x7136;&#x540E;&#x6267;&#x884C;&#x7684;&#x662F;&#x7236;&#x7C7B;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>super(dexPath, new File(optimizedDirectory), libraryPath, parent);
</code></pre>
<p>BaseDexClassLoader &#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public BaseDexClassLoader(String dexPath, File optimizedDirectory,
          String libraryPath, ClassLoader parent) {
    super(parent);
    this.pathList = new DexPathList(this, dexPath, libraryPath, optimizedDirectory);
}
</code></pre>
<p>&#x7B2C;&#x4E00;&#x53E5;&#x8C03;&#x7528;&#x7684;&#x8FD8;&#x662F;&#x7236;&#x7C7B;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;ClassLoader&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>protected ClassLoader(ClassLoader parentLoader) {
        this(parentLoader, false);
    }
    /*
     * constructor for the BootClassLoader which needs parent to be null.
     */
    ClassLoader(ClassLoader parentLoader, boolean nullAllowed) {
       if (parentLoader == null &amp;&amp; !nullAllowed) {
            throw new NullPointerException(&#x201C;parentLoader == null &amp;&amp; !nullAllowed&#x201D;);
      }
      parent = parentLoader;
}
</code></pre>
<p>&#x8BE5;&#x6784;&#x9020;&#x51FD;&#x6570;&#x628A;&#x4F20;&#x8FDB;&#x6765;&#x7684;&#x7236;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x8D4B;&#x7ED9;&#x4E86;&#x79C1;&#x6709;&#x53D8;&#x91CF;parent&#x3002;</p>
<p>&#x518D;&#x6765;&#x770B;</p>
<pre><code>this.pathList = new DexPathList(this, dexPath, libraryPath, optimizedDirectory);
</code></pre>
<p>pathList&#x4E3A;&#x8BE5;&#x7C7B;&#x7684;&#x79C1;&#x6709;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x7C7B;&#x578B;&#x4E3A;DexPathList&#xFF0C;&#x8FDB;&#x53BB;DexPathList&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>public DexPathList(ClassLoader definingContext, String dexPath,
            String libraryPath, File optimizedDirectory) {
    &#x2026;&#x2026;&#x2026;..    
    this.dexElements = makeDexElements(splitDexPath(dexPath), optimizedDirectory,
                                           suppressedExceptions);
    &#x2026;&#x2026;&#x2026;..
}
</code></pre>
<p>&#x524D;&#x9762;&#x662F;&#x4E00;&#x4E9B;&#x5BF9;&#x4E8E;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x7684;&#x9A8C;&#x8BC1;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;&#x4E86;makeDexElements&#x3002;</p>
<pre><code>private static Element[] makeDexElements(ArrayList&lt;File&gt; files, File optimizedDirectory,
                                             ArrayList&lt;IOException&gt; suppressedExceptions) {
        ArrayList&lt;Element&gt; elements = new ArrayList&lt;Element&gt;();
        for (File file : files) {
            File zip = null;
            DexFile dex = null;
            String name = file.getName();

            if (name.endsWith(DEX_SUFFIX)) {               //dex&#x6587;&#x4EF6;&#x5904;&#x7406;
                // Raw dex file (not inside a zip/jar).
                try {
                    dex = loadDexFile(file, optimizedDirectory);
                } catch (IOException ex) {
                    System.logE(&#x201C;Unable to load dex file: &#x201D; + file, ex);
                }
            } else if (name.endsWith(APK_SUFFIX) || name.endsWith(JAR_SUFFIX)
                    || name.endsWith(ZIP_SUFFIX)) {   //apk&#xFF0C;jar&#xFF0C;zip&#x6587;&#x4EF6;&#x5904;&#x7406;
                zip = file;

                try {
                    dex = loadDexFile(file, optimizedDirectory);
                } catch (IOException suppressed) {
                    suppressedExceptions.add(suppressed);
                }
            } else if (file.isDirectory()) {
                elements.add(new Element(file, true, null, null));
            } else {
                System.logW(&#x201C;Unknown file type for: &#x201D; + file);
            }

            if ((zip != null) || (dex != null)) {
                elements.add(new Element(file, false, zip, dex));
            }
        }

        return elements.toArray(new Element[elements.size()]);
    }
}
</code></pre>
<p>&#x4E0D;&#x7BA1;&#x662F;dex&#x6587;&#x4EF6;&#xFF0C;&#x8FD8;&#x662F;apk&#x6587;&#x4EF6;&#x6700;&#x7EC8;&#x52A0;&#x8F7D;&#x7684;&#x90FD;&#x662F;loadDexFile&#xFF0C;&#x8DDF;&#x8FDB;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>private static DexFile loadDexFile(File file, File optimizedDirectory)
            throws IOException {
        if (optimizedDirectory == null) {
            return new DexFile(file);
        } else {
            String optimizedPath = optimizedPathFor(file, optimizedDirectory);
            return DexFile.loadDex(file.getPath(), optimizedPath, 0);
        }
}
</code></pre>
<p>&#x5982;&#x679C;optimizedDirectory&#x4E3A;null&#x5C31;&#x4F1A;&#x8C03;&#x7528;openDexFile(fileName, null, 0);&#x52A0;&#x8F7D;&#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5426;&#x5219;&#x8C03;&#x7528;DexFile.loadDex(file.getPath(), optimizedPath, 0);</p>
<p>&#x800C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E5F;&#x53EA;&#x662F;&#x76F4;&#x63A5;&#x8C03;&#x7528;new DexFile(sourcePathName, outputPathName, flags);</p>
<p>&#x91CC;&#x9762;&#x8C03;&#x7528;&#x7684;&#x4E5F;&#x662F;openDexFile(sourceName, outputName, flags);</p>
<p>&#x6240;&#x4EE5;&#x6700;&#x540E;&#x90FD;&#x662F;&#x8C03;&#x7528;openDexFile&#xFF0C;&#x8DDF;&#x8FDB;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF1A;</p>
<pre><code>private static int openDexFile(String sourceName, String outputName,
        int flags) throws IOException {
        return openDexFileNative(new File(sourceName).getCanonicalPath(),
                                 (outputName == null) ? null : new File(outputName).getCanonicalPath(),
                                 flags);
}
</code></pre>
<p>&#x800C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x662F;so&#x7684;openDexFileNative&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x3002;&#x6253;&#x5F00;&#x6210;&#x529F;&#x5219;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;cookie&#x3002;</p>
<h2 id="native-&#x90E8;&#x5206;"><a class="header-anchor" href="#native-&#x90E8;&#x5206;"></a>native &#x90E8;&#x5206;</h2>
<p>&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x5206;&#x6790;native&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x90E8;&#x5206;&#x4E86;&#x3002;</p>
<p>&#x4EE3;&#x7801;&#x5730;&#x5740;&#xFF1A;<a href="http://androidxref.com/4.4_r1/xref/dalvik/vm/native/dalvik_system_DexFile.cpp" target="_blank" rel="external">http://androidxref.com/4.4_r1/xref/dalvik/vm/native/dalvik_system_DexFile.cpp</a></p>
<pre><code>static void Dalvik_dalvik_system_DexFile_openDexFileNative(const u4* args,
    JValue* pResult)
{
    &#x2026;&#x2026;&#x2026;&#x2026;&#x2026;
if (hasDexExtension(sourceName)
            &amp;&amp; dvmRawDexFileOpen(sourceName, outputName, &amp;pRawDexFile, false) == 0) {
        ALOGV(&#x201C;Opening DEX file &#x2018;%s&#x2019; (DEX)&#x201D;, sourceName);

        pDexOrJar = (DexOrJar*) malloc(sizeof(DexOrJar));
        pDexOrJar-&gt;isDex = true;
        pDexOrJar-&gt;pRawDexFile = pRawDexFile;
        pDexOrJar-&gt;pDexMemory = NULL;
    } else if (dvmJarFileOpen(sourceName, outputName, &amp;pJarFile, false) == 0) {
        ALOGV(&#x201C;Opening DEX file &#x2018;%s&#x2019; (Jar)&#x201D;, sourceName);

        pDexOrJar = (DexOrJar*) malloc(sizeof(DexOrJar));
        pDexOrJar-&gt;isDex = false;
        pDexOrJar-&gt;pJarFile = pJarFile;
        pDexOrJar-&gt;pDexMemory = NULL;
    } else {
        ALOGV(&#x201C;Unable to open DEX file &#x2018;%s&#x2019;&#x201D;, sourceName);
        dvmThrowIOException(&#x201C;unable to open DEX file&#x201D;);
    }
    &#x2026;&#x2026;&#x2026;&#x2026;&#x2026;
}
</code></pre>
<p>&#x8FD9;&#x91CC;&#x4F1A;&#x6839;&#x636E;&#x662F;&#x5426;&#x4E3A;dex&#x6587;&#x4EF6;&#x6216;&#x8005;&#x5305;&#x542B;classes.dex&#x6587;&#x4EF6;&#x7684;jar&#xFF0C;&#x5206;&#x522B;&#x8C03;&#x7528;&#x51FD;&#x6570;dvmRawDexFileOpen&#x548C;dvmJarFileOpen&#x6765;&#x5904;&#x7406;&#xFF0C;&#x6700;&#x7EC8;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;DexOrJar&#x7684;&#x7ED3;&#x6784;&#x3002;</p>
<p>&#x9996;&#x5148;&#x6765;&#x770B;dvmRawDexFileOpen&#x51FD;&#x6570;&#x7684;&#x5904;&#x7406;&#xFF1A;</p>
<pre><code>int dvmRawDexFileOpen(const char* fileName, const char* odexOutputName,
    RawDexFile** ppRawDexFile, bool isBootstrap)
{
    .................
    dexFd = open(fileName, O_RDONLY);
    if (dexFd &lt; 0) goto bail;

    /* If we fork/exec into dexopt, don&apos;t let it inherit the open fd. */
    dvmSetCloseOnExec(dexFd);

    //&#x6821;&#x9A8C;&#x524D;8&#x4E2A;&#x5B57;&#x8282;&#x7684;magic&#x662F;&#x5426;&#x6B63;&#x786E;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x6821;&#x9A8C;&#x548C;&#x4FDD;&#x5B58;&#x5230;adler32
    if (verifyMagicAndGetAdler32(dexFd, &amp;adler32) &lt; 0) {
        ALOGE(&quot;Error with header for %s&quot;, fileName);
        goto bail;
    }
    //&#x5F97;&#x5230;&#x6587;&#x4EF6;&#x4FEE;&#x6539;&#x65F6;&#x95F4;&#x4EE5;&#x53CA;&#x6587;&#x4EF6;&#x5927;&#x5C0F;
   if (getModTimeAndSize(dexFd, &amp;modTime, &amp;fileSize) &lt; 0) {
        ALOGE(&quot;Error with stat for %s&quot;, fileName);
        goto bail;
    }
    .................
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dexOptCreateEmptyHeader,&#x6784;&#x9020;&#x4E86;&#x4E00;&#x4E2A;DexOptHeader&#x7ED3;&#x6784;&#x4F53;&#xFF0C;&#x5199;&#x5165;fd&#x5E76;&#x8FD4;&#x56DE;
    optFd = dvmOpenCachedDexFile(fileName, cachedName, modTime,
        adler32, isBootstrap, &amp;newFile, /*createIfMissing=*/true);

    if (optFd &lt; 0) {
        ALOGI(&quot;Unable to open or create cache for %s (%s)&quot;,
                fileName, cachedName);
        goto bail;
    }
    locked = true;

       //&#x5982;&#x679C;&#x6210;&#x529F;&#x751F;&#x4E86;opt&#x5934;
    if (newFile) {
        u8 startWhen, copyWhen, endWhen;
        bool result;
       off_t dexOffset;

        dexOffset = lseek(optFd, 0, SEEK_CUR);
        result = (dexOffset &gt; 0);

        if (result) {
            startWhen = dvmGetRelativeTimeUsec();
            // &#x5C06;dex&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5199;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4ECE;dexOffset&#x7684;&#x504F;&#x79FB;&#x5904;&#x5F00;&#x59CB;&#x5199;
            result = copyFileToFile(optFd, dexFd, fileSize) == 0;
            copyWhen = dvmGetRelativeTimeUsec();
        }

        if (result) {
            //&#x5BF9;dex&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x4F18;&#x5316;
            result = dvmOptimizeDexFile(optFd, dexOffset, fileSize,
                fileName, modTime, adler32, isBootstrap);
        }

        if (!result) {
            ALOGE(&quot;Unable to extract+optimize DEX from &apos;%s&apos;&quot;, fileName);
            goto bail;
        }

        endWhen = dvmGetRelativeTimeUsec();
        ALOGD(&quot;DEX prep &apos;%s&apos;: copy in %dms, rewrite %dms&quot;,
            fileName,
            (int) (copyWhen - startWhen) / 1000,
            (int) (endWhen - copyWhen) / 1000);
    }

     //dvmDexFileOpenFromFd&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6700;&#x4E3B;&#x8981;&#x5728;&#x8FD9;&#x91CC;&#x5E72;&#x4E86;&#x4E24;&#x4EF6;&#x4E8B;&#x60C5;
     // 1.&#x5C06;&#x4F18;&#x5316;&#x540E;&#x5F97;dex&#x6587;&#x4EF6;&#xFF08;&#x4E5F;&#x5C31;&#x662F;odex&#x6587;&#x4EF6;&#xFF09;&#x901A;&#x8FC7;mmap&#x6620;&#x5C04;&#x5230;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;mprotect&#x4FEE;&#x6539;&#x5B83;&#x7684;&#x6620;&#x5C04;&#x5185;&#x5B58;&#x4E3A;&#x53EA;&#x8BFB;&#x6743;&#x9650;
     // 2.&#x5C06;&#x6620;&#x5C04;&#x4E3A;&#x53EA;&#x8BFB;&#x7684;&#x8FD9;&#x5757;dex&#x6570;&#x636E;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5168;&#x90E8;&#x63D0;&#x53D6;&#x5230;DexFile&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E2D;&#x53BB;
    if (dvmDexFileOpenFromFd(optFd, &amp;pDvmDex) != 0) {
        ALOGI(&quot;Unable to map cached %s&quot;, fileName);
        goto bail;
    }

    if (locked) {
        /* unlock the fd */
       if (!dvmUnlockCachedDexFile(optFd)) {
            /* uh oh -- this process needs to exit or we&apos;ll wedge the system */
            ALOGE(&quot;Unable to unlock DEX file&quot;);
            goto bail;
        }
        locked = false;
    }

    ALOGV(&quot;Successfully opened &apos;%s&apos;&quot;, fileName);
    //&#x586B;&#x5145;&#x7ED3;&#x6784;&#x4F53; RawDexFile
    *ppRawDexFile = (RawDexFile*) calloc(1, sizeof(RawDexFile));
    (*ppRawDexFile)-&gt;cacheFileName = cachedName;
   (*ppRawDexFile)-&gt;pDvmDex = pDvmDex;
    cachedName = NULL;      // don&apos;t free it below
    result = 0;

bail:
    free(cachedName);
    if (dexFd &gt;= 0) {
        close(dexFd);
    }
    if (optFd &gt;= 0) {
        if (locked)
            (void) dvmUnlockCachedDexFile(optFd);
        close(optFd);
    }
    return result;
}
</code></pre>
<p>&#x6700;&#x540E;&#x6210;&#x529F;&#x7684;&#x8BDD;&#xFF0C;&#x586B;&#x5145;RawDexFile&#x3002;</p>
<p>dvmJarFileOpen&#x7684;&#x4EE3;&#x7801;&#x5904;&#x7406;&#x4E5F;&#x662F;&#x5DEE;&#x4E0D;&#x591A;&#x7684;&#x3002;</p>
<pre><code>int dvmJarFileOpen(const char* fileName, const char* odexOutputName,
    JarFile** ppJarFile, bool isBootstrap)
{
    ...
    ...
    ...
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dexZipOpenArchive&#x6765;&#x6253;&#x5F00;zip&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x7F13;&#x5B58;&#x5230;&#x7CFB;&#x7EDF;&#x5185;&#x5B58;&#x91CC;
    if (dexZipOpenArchive(fileName, &amp;archive) != 0)
        goto bail;
    archiveOpen = true;
    ...
    //&#x8FD9;&#x884C;&#x4EE3;&#x7801;&#x8BBE;&#x7F6E;&#x5F53;&#x6267;&#x884C;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5173;&#x95ED;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x53E5;&#x67C4;
    dvmSetCloseOnExec(dexZipGetArchiveFd(&amp;archive));
    ...
    //&#x4F18;&#x5148;&#x5904;&#x7406;&#x5DF2;&#x7ECF;&#x4F18;&#x5316;&#x4E86;&#x7684;Dex&#x6587;&#x4EF6;
    fd = openAlternateSuffix(fileName, &quot;odex&quot;, O_RDONLY, &amp;cachedName);
    ...
    //&#x4ECE;&#x538B;&#x7F29;&#x5305;&#x91CC;&#x627E;&#x5230;Dex&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x6253;&#x5F00;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;
    entry = dexZipFindEntry(&amp;archive, kDexInJarName);
    ...
    //&#x628A;&#x672A;&#x7ECF;&#x8FC7;&#x4F18;&#x5316;&#x7684;Dex&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#x5904;&#x7406;&#xFF0C;&#x5E76;&#x8F93;&#x51FA;&#x5230;&#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;
    if (odexOutputName == NULL) {
                cachedName = dexOptGenerateCacheFileName(fileName,
                                kDexInJarName);
    }
    ...
    //&#x521B;&#x5EFA;&#x7F13;&#x5B58;&#x7684;&#x4F18;&#x5316;&#x6587;&#x4EF6;
    fd = dvmOpenCachedDexFile(fileName, cachedName,
                    dexGetZipEntryModTime(&amp;archive, entry),
                    dexGetZipEntryCrc32(&amp;archive, entry),
                    isBootstrap, &amp;newFile, /*createIfMissing=*/true);
    ...
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dexZipExtractEntryToFile&#x4ECE;&#x538B;&#x7F29;&#x5305;&#x91CC;&#x89E3;&#x538B;&#x6587;&#x4EF6;&#x51FA;&#x6765;
    if (result) {
                    startWhen = dvmGetRelativeTimeUsec();
                    result = dexZipExtractEntryToFile(&amp;archive, entry, fd) == 0;
                    extractWhen = dvmGetRelativeTimeUsec();
                 }
    ...
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dvmOptimizeDexFile&#x5BF9;&#xFF24;ex&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x4F18;&#x5316;&#x5904;&#x7406;
    if (result) {
                    result = dvmOptimizeDexFile(fd, dexOffset,
                                dexGetZipEntryUncompLen(&amp;archive, entry),
                                fileName,
                                dexGetZipEntryModTime(&amp;archive, entry),
                                dexGetZipEntryCrc32(&amp;archive, entry),
                                isBootstrap);
                }
    ...
    //&#x8C03;&#x7528;&#x51FD;&#x6570;dvmDexFileOpenFromFd&#x6765;&#x7F13;&#x5B58;dex&#x6587;&#x4EF6;
    //&#x5E76;&#x5206;&#x6790;&#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x6BD4;&#x5982;&#x6807;&#x8BB0;&#x662F;&#x5426;&#x4F18;&#x5316;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x901A;&#x8FC7;&#x7B7E;&#x540D;&#x68C0;&#x67E5;Dex&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5408;&#x6CD5;
    if (dvmDexFileOpenFromFd(fd, &amp;pDvmDex) != 0) {
        ALOGI(&quot;Unable to map %s in %s&quot;, kDexInJarName, fileName);
        goto bail;
    }
    ...
    //&#x4FDD;&#x5B58;&#x6587;&#x4EF6;&#x5230;&#x7F13;&#x5B58;&#x91CC;&#xFF0C;&#x6807;&#x8BB0;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x53E5;&#x67C4;&#x5DF2;&#x7ECF;&#x4FDD;&#x5B58;&#x5230;&#x7F13;&#x5B58;
    if (locked) {
        /* unlock the fd */
        if (!dvmUnlockCachedDexFile(fd)) {
            /* uh oh -- this process needs to exit or we&apos;ll wedge the system */
            ALOGE(&quot;Unable to unlock DEX file&quot;);
            goto bail;
        }
        locked = false;
    }
    ...
     //&#x8BBE;&#x7F6E;&#x4E00;&#x4E9B;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x8FD4;&#x56DE;&#x524D;&#x9762;&#x7684;&#x51FD;&#x6570;&#x5904;&#x7406;&#x3002;
    *ppJarFile = (JarFile*) calloc(1, sizeof(JarFile));
    (*ppJarFile)-&gt;archive = archive;
    (*ppJarFile)-&gt;cacheFileName = cachedName;
    (*ppJarFile)-&gt;pDvmDex = pDvmDex;
    cachedName = NULL;      // don&apos;t free it below
    result = 0;
    ...

}
</code></pre>
<p>&#x6700;&#x540E;&#x6210;&#x529F;&#x7684;&#x8BDD;&#xFF0C;&#x586B;&#x5145;JarFile&#x3002;</p>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="http://bbs.pediy.com/showthread.php?t=199230" target="_blank" rel="external">http://bbs.pediy.com/showthread.php?t=199230</a></li>
<li><a href="http://0nly3nd.sinaapp.com/?p=688" target="_blank" rel="external">http://0nly3nd.sinaapp.com/?p=688</a></li>
<li><a href="http://blog.csdn.net/roland_sun/article/details/47183119" target="_blank" rel="external">http://blog.csdn.net/roland_sun/article/details/47183119</a></li>
</ul>
<blockquote>
<p>&#x539F;&#x6587;&#x94FE;&#x63A5;&#xFF1A;<a href="http://www.blogfshare.com/dexclassloader.html" target="_blank" rel="external">http://www.blogfshare.com/dexclassloader.html</a></p>
</blockquote>]]></content>
    
    <summary type="html">
    
      看到原来有把原始的dex文件加密保存，然后解密后使用DexClassLoader加载文件的方法，就来分析下DexClassLoader的加载流程。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>笔者博客源代码</title>
    <link href="http://ngudream.com/2017/01/24/n-hexo-blog/"/>
    <id>http://ngudream.com/2017/01/24/n-hexo-blog/</id>
    <published>2017-01-24T09:35:19.000Z</published>
    <updated>2017-03-10T15:47:25.447Z</updated>
    
    <content type="html"><![CDATA[<div><img class="pic lazy" data-original="/2017/01/24/n-hexo-blog/1.gif" style="float:left; margin-right:16px" alt="">
<img class="pic lazy" id="img_right" data-original="/2017/01/24/n-hexo-blog/2.gif" style="float:right; margin-right:16px" alt="">
<span>&#x53F7;&#x5916;&#x53F7;&#x5916;&#xFF01;&#xFF01; &#x7B14;&#x8005;&#x5BF9;&#x535A;&#x5BA2;&#x4FEE;&#x6539;&#x7684;&#x6E90;&#x7801;&#x5DF2;&#x653E;&#x5230;<a href="https://github.com/ngudream/N-Hexo-Blog" target="_blank"> github </a>&#x4E0A;&#x3002;&#x5306;&#x5306;&#x6765;&#x5306;&#x5306;&#x53BB;&#x4F60;&#x662F;&#x4F55;&#x610F;&#xFF1F;&#x6765;&#x4E86;&#x5C31;&#x4E0A;&#x53BB;&#x770B;&#x770B;&#x5457;&#x3002;&#x95EE;&#x541B;&#x4F55;&#x5904;&#x53BB;&#xFF1F;&#x5C3D;&#x5728;&#x4E0D;&#x8A00;&#x4E2D;&#x3002;&#x201C;&#x6D45;&#x6D45;&#x6C34;&#xFF0C;&#x957F;&#x60A0;&#x60A0;&#xFF0C;&#x6765;&#x65E0;&#x5C3D;&#xFF0C;&#x53BB;&#x65E0;&#x4F11;&#x3002;&#x66F2;&#x66F2;&#x6298;&#x6298;&#x5411;&#x4E1C;&#x6D41;&#xFF0C;&#x5C71;&#x5C71;&#x5CAD;&#x5CAD;&#x96BE;&#x963B;&#x7559;&#x3002;&#x95EE;&#x4F0A;&#x5954;&#x817E;&#x4F55;&#x65F6;&#x6B47;&#xFF0C;&#x4E0D;&#x5230;&#x5927;&#x6D77;&#x4E0D;&#x56DE;&#x5934;&#x3002;&#x201D;<a style="color:#660066">&#x5B9E;&#x9A8C;&#x6027;&#x7684;&#x52A0;&#x5165;&#x4E86;&#xFF08;&#x5751;&#x6BD4;&#x8F83;&#x591A;^_~&#xFF09;&#xFF1A;InstantClick&#xFF0C;&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x4F53;&#x9A8C;&#x4E00;&#x4E0B;&#x6587;&#x7AE0;&#x7684;&#x52A0;&#x8F7D;&#x901F;&#x5EA6;</a>&#x3002;</span></div>
<script>
if(navigator.userAgent.match(/(iPhone|iPod|Android|ios|Opera Mini|BlackBerry|webOS)/i)){
$("#img_right").remove();
}
</script>
<a id="more"></a>
<br>
<br>
<p><strong>github&#x5730;&#x5740;&#xFF1A;<a href="https://github.com/ngudream/N-Hexo-Blog" target="_blank" rel="external">https://github.com/ngudream/N-Hexo-Blog</a></strong></p>
<p><strong>&#x4FEE;&#x6539;&#x81EA; <a href="http://moxfive.xyz/" target="_blank" rel="external">MOxFIVE</a> &#x7684; <a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">yelee</a> &#x4E3B;&#x9898;</strong></p>
<ul>
<li><a href="http://moxfive.coding.me/yelee/" target="_blank" rel="external">Yelee&#x4E3B;&#x9898;&#x4F7F;&#x7528;&#x8BF4;&#x660E;</a></li>
</ul>
<h2 id="&#x5B89;&#x88C5;-node-js"><a class="header-anchor" href="#&#x5B89;&#x88C5;-node-js"></a>&#x5B89;&#x88C5; Node.js</h2>
<pre><code>sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get update
sudo apt-get install nodejs
</code></pre>
<h2 id="&#x5B89;&#x88C5;-hexo"><a class="header-anchor" href="#&#x5B89;&#x88C5;-hexo"></a>&#x5B89;&#x88C5; hexo</h2>
<pre><code>sudo npm install hexo -g
</code></pre>
<h2 id="&#x63D2;&#x4EF6;&#x5B89;&#x88C5;"><a class="header-anchor" href="#&#x63D2;&#x4EF6;&#x5B89;&#x88C5;"></a>&#x63D2;&#x4EF6;&#x5B89;&#x88C5;</h2>
<p>&#xFF08;1&#xFF09;&#x5B89;&#x88C5; hexo-deployer-Git</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre>
<p>&#xFF08;2&#xFF09;&#x5B57;&#x6570;&#x7EDF;&#x8BA1;&#x63D2;&#x4EF6;</p>
<pre><code>npm install hexo-wordcount --save
</code></pre>
<p>&#xFF08;3&#xFF09;&#x7528;&#x4E8E;&#x751F;&#x6210;&#x641C;&#x7D22;&#x5F15;&#x64CE;&#x7F51;&#x7AD9;&#x5730;&#x56FE;</p>
<pre><code>npm install hexo-generator-sitemap --save
</code></pre>
<p>&#xFF08;4&#xFF09;&#x535A;&#x5BA2;&#x5907;&#x4EFD;&#x8BF7;&#x53C2;&#x8003;</p>
<p><a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">https://github.com/coneycode/hexo-git-backup</a></p>
<p>&#xFF08;5&#xFF09;&#x53F3;&#x4E0B;&#x89D2;&#x7684;&#x7AD9;&#x5185;&#x641C;&#x7D22;</p>
<p><a href="https://github.com/androiddevelop/hexo-search" target="_blank" rel="external">https://github.com/androiddevelop/hexo-search</a></p>
<p>&#xFF08;6&#xFF09;&#x5DE6;&#x8FB9;&#x62E6;&#x7684;&#x7AD9;&#x5185;&#x641C;&#x7D22;&#x4F18;&#x5316;</p>
<p><a href="http://www.tuicool.com/articles/ZRZnErq" target="_blank" rel="external">http://www.tuicool.com/articles/ZRZnErq</a></p>
<p><a href="http://gaomf.cn/2016/10/10/%E4%B8%BAHexo%E5%8D%9A%E5%AE%A2Yilia%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%9C%AC%E5%9C%B0%E7%AB%99%E5%86%85%E6%90%9C%E7%B4%A2%E5%8A%9F%E8%83%BD/" target="_blank" rel="external">http://gaomf.cn/2016/10/10/&#x4E3A;Hexo&#x535A;&#x5BA2;Yilia&#x4E3B;&#x9898;&#x6DFB;&#x52A0;&#x672C;&#x5730;&#x7AD9;&#x5185;&#x641C;&#x7D22;&#x529F;&#x80FD;/</a></p>
<p>&#x7B14;&#x8005;&#x4FEE;&#x6539;&#x7684; Hexo\node_modules\hexo-generator-search &#x4E0B;&#x7684;&#x6587;&#x4EF6; index.js&#x3001;search.ejs &#x5DF2;&#x9644;&#x4E0A;&#xFF0C;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x751F;&#x6210;&#x7684; search.xml &#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x3002;</p>
<p>&#xFF08;7&#xFF09;&#x4EE3;&#x7801;&#x9AD8;&#x4EAE;</p>
<p><a href="http://ngudream.com/2016/09/13/hexo-install-prettify/">http://ngudream.com/2016/09/13/hexo-install-prettify/</a></p>
<p>&#xFF08;8&#xFF09;css&#x3001;js&#x3001;image &#x7B49;&#x538B;&#x7F29;</p>
<p><a href="http://luckykun.com/work/2016-07-10/hexo-faster.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">http://luckykun.com/work/2016-07-10/hexo-faster.html?utm_source=tuicool&amp;utm_medium=referral</a></p>
<p>&#x7B14;&#x8005;&#x4FEE;&#x6539;&#x7684; gulpfile.js &#x6587;&#x4EF6;&#x4E5F;&#x5DF2;&#x9644;&#x4E0A;&#x3002;</p>
<p>&#xFF08;9&#xFF09;&#x535A;&#x5BA2;&#x56FE;&#x7247;&#x6587;&#x4EF6;&#x5939;&#xFF0C;hexo new page &#x7684;&#x65F6;&#x5019;&#x540C;&#x65F6;&#x5728; _post &#x76EE;&#x5F55;&#x4E0B;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x540C;&#x540D;&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x8FD9;&#x6837;&#x6BCF;&#x7BC7;&#x6587;&#x7AE0;&#x7528;&#x5230;&#x7684;&#x56FE;&#x7247;&#x5C31;&#x662F;&#x5355;&#x72EC;&#x653E;&#x5728;&#x76F8;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#xFF0C;&#x65B9;&#x4FBF;&#x5BFB;&#x627E;&#x3001;&#x5904;&#x7406;&#x3002;</p>
<p><a href="http://www.jianshu.com/p/c2ba9533088a" target="_blank" rel="external">http://www.jianshu.com/p/c2ba9533088a</a></p>
<h2 id="&#x7F51;&#x9875;&#x52A0;&#x901F;-&#x5B9E;&#x9A8C;&#x6027;"><a class="header-anchor" href="#&#x7F51;&#x9875;&#x52A0;&#x901F;-&#x5B9E;&#x9A8C;&#x6027;"></a>&#x7F51;&#x9875;&#x52A0;&#x901F;&#xFF08;&#x5B9E;&#x9A8C;&#x6027;&#xFF09;</h2>
<p>&#x8D81;&#x5FEB;&#x653E;&#x5047;&#x8FD9;&#x4E24;&#x5929;&#xFF0C;&#x5DE5;&#x4F5C;&#x4E0A;&#x6CA1;&#x4EC0;&#x4E48;&#x4E8B;&#x505A;&#xFF08;&#x5176;&#x5B9E;&#x662F;&#x4E0D;&#x60F3;&#x505A;*<sup>&#xF7;</sup>*&#xFF09;&#xFF0C;&#x5B9E;&#x9A8C;&#x6027;&#x7684;&#x52A0;&#x5165;&#x4E86; <a href="http://instantclick.io/" target="_blank" rel="external">InstantClick</a>&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x52A0;&#x901F;&#x4F60;&#x7684;&#x7F51;&#x7AD9;&#x54CD;&#x5E94;&#x901F;&#x5EA6;&#x3002;&#x539F;&#x7406;&#x5C31;&#x662F;&#x5728;&#x8BBF;&#x95EE;&#x8005;&#x70B9;&#x51FB;&#x4E00;&#x4E2A;&#x94FE;&#x63A5;&#x4E4B;&#x524D;&#xFF0C;&#x9F20;&#x6807;&#x4F1A;&#x60AC;&#x505C;&#x5728;&#x94FE;&#x63A5;&#x4E0A;&#x9762;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x4E8B;&#x4EF6;&#x4E4B;&#x95F4;&#x901A;&#x5E38;&#x6709;200ms~300ms&#x7684;&#x95F4;&#x9694;&#xFF0C;InstantClick &#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x95F4;&#x9694;&#x9884;&#x52A0;&#x8F7D;&#x9875;&#x9762;&#x3002;</p>
<p>&#x56E0;&#x4E3A;&#x4F7F;&#x7528; InstantClick &#x4F1A;&#x5E26;&#x6765;&#x6BD4;&#x8F83;&#x591A;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x76F4;&#x6CA1;&#x6253;&#x5F00;&#x8FD9;&#x4E2A;&#x5F00;&#x5173;&#xFF0C;&#x73B0;&#x5728;&#x6709;&#x65F6;&#x95F4;&#x4E86;&#xFF0C;&#x507F;&#x8BD5;&#x7740;&#x89E3;&#x51B3;&#x4E86;&#x90E8;&#x5206;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x6709;&#x6BD4;&#x8F83;&#x591A;&#x7684;bug&#xFF0C;&#x73B0;&#x5728;&#x53EA;&#x5F00;&#x653E;&#x4E86;<strong>&#x6587;&#x7AE0;&#x4F7F;&#x7528; InstantClick</strong>&#xFF0C;&#x5DE6;&#x8FB9;&#x680F;&#x7684;&#x5206;&#x7C7B;&#x6807;&#x7B7E;&#x8FD8;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#xFF0C;&#x5E74;&#x524D;&#x6CA1;&#x65F6;&#x95F4;&#x4FEE;&#x6539;bug&#x4E86;&#x3002;<strong>&#x6B22;&#x8FCE;&#x4E0B;&#x8F7D;&#x8BD5;&#x7528;&#xFF0C;&#x5E76;&#x586B;&#x5751;</strong>(&#x2022;&#x203E;&#x311;&#x2323;&#x203E;&#x311;&#x2022;)&#x2727;&#x2D6;&#xB0;<a href="https://github.com/ngudream/N-Hexo-Blog" target="_blank" rel="external">N-Hexo-Blog</a></p>
<p>&#x4E3B;&#x8981;&#x4FEE;&#x6539;&#x70B9;&#x5982;&#x4E0B;&#xFF1A;<br>
&#xFF08;1&#xFF09;&#x3001;&#x5728;&#x8FDB;&#x5165;&#x6587;&#x7AE0;&#x9875;&#x9762;&#x65F6;&#xFF0C;&#x8981;&#x8BBE;&#x7F6E;&#x4EE5;&#x4E0B;&#xFF0C;&#x8981;&#x4E0D;&#x6587;&#x7AE0;&#x662F;&#x770B;&#x4E0D;&#x89C1;&#x7684;&#xFF1A;</p>
<pre><code>$(&quot;.article&quot;).css(&quot;opacity&quot;, &quot;1.0&quot;);
</code></pre>
<p>&#xFF08;2&#xFF09;&#x3001;&#x591A;&#x8BF4;&#x8BC4;&#x8BBA;&#x5728;click2show.ejs&#x4E2D;&#x8981;&#x4E3B;&#x52A8;&#x8C03;&#x7528;</p>
<pre><code>if (typeof DUOSHUO !== &apos;undefined&apos;){
	DUOSHUO.EmbedThread(&apos;.ds-thread&apos;);
}
</code></pre>
<p>&#xFF08;3&#xFF09;&#x3001;&#x5904;&#x7406;&#x6587;&#x7AE0;&#x76EE;&#x5F55;&#xFF0C;&#x8981;&#x5728; InstantClick change &#x540E;&#x4E3B;&#x52A8;&#x8C03;&#x7528; toc.js &#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8981;&#x4E0D;&#x7136;&#x76EE;&#x5F55;&#x7684;&#x663E;&#x793A;&#x9690;&#x85CF;&#x3001;&#x53CC;&#x51FB;&#x6253;&#x5F00;&#x7B49;&#x90FD;&#x65E0;&#x6CD5;&#x4F7F;&#x7528;&#x3002;&#x8BE6;&#x60C5;&#x89C1; after-footer.ejs &#x6587;&#x4EF6;&#xFF1B;<br>
&#xFF08;4&#xFF09;&#x3001;&#x5DE6;&#x8FB9;&#x680F;&#x7684;&#x641C;&#x7D22;&#xFF0C;&#x8981;&#x5728; InstantClick change &#x540E;&#x4E3B;&#x52A8;&#x8C03;&#x7528; main.js &#x4E2D;&#x7684;&#x641C;&#x7D22;&#x51FD;&#x6570;&#xFF0C;&#x5373; after-footer.ejs &#x6587;&#x4EF6;&#x4E2D;&#x7684; leftSearch()&#xFF1B;<br>
&#xFF08;5&#xFF09;&#x3001;&#x5728;&#x6587;&#x7AE0;&#x9875;&#x9762;&#xFF0C;&#x5DE6;&#x8FB9;&#x680F;&#x7684;&#x9E1F;&#x5C4B;&#x5F39;&#x51FA;&#x83DC;&#x5355;&#xFF0C;&#x8981;&#x5728; InstantClick change &#x540E;&#x4E3B;&#x52A8;&#x8C03;&#x7528; pc.js &#x4E2D;&#x7684;&#x641C;&#x7D22;&#x51FD;&#x6570;&#xFF0C;&#x5373; after-footer.ejs &#x6587;&#x4EF6;&#x4E2D;&#x7684; tipBoxFunc()&#xFF1B;<br>
&#xFF08;6&#xFF09;&#x3001;&#x8FD8;&#x4FEE;&#x6539;&#x4E86;&#x793E;&#x4EA4;&#x56FE;&#x6807;&#x70B9;&#x51FB;&#x3001;&#x4E0D;&#x849C;&#x5B50;&#x7EDF;&#x8BA1;&#x3001;&#x590D;&#x5236;&#x529F;&#x80FD; clipboard &#x7B49;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x6E90;&#x4EE3;&#x7801; <a href="https://github.com/ngudream/N-Hexo-Blog" target="_blank" rel="external">N-Hexo-Blog</a><br>
&#xFF08;7&#xFF09;&#x3001;to-do&#xFF1A;&#x5E74;&#x540E;&#x627E;&#x65F6;&#x95F4;&#x5C06;&#x535A;&#x5BA2;&#x5168;&#x90E8;&#x9002;&#x914D; InstantClick</p>
<h2 id="&#x90E8;&#x7F72;"><a class="header-anchor" href="#&#x90E8;&#x7F72;"></a>&#x90E8;&#x7F72;</h2>
<p>&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;&#x662F;&#x540C;&#x65F6;&#x90E8;&#x7F72;&#x5728; github &#x548C; coding&#xFF0C;&#x56FD;&#x5185;&#x8D70;&#x7684;&#x662F; coding&#xFF0C;&#x7F51;&#x7AD9;&#x7684;&#x8BBF;&#x95EE;&#x901F;&#x5EA6;&#x4F1A;&#x5FEB;&#x70B9;&#x3002;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#xFF1A;<br>
<a href="http://www.jianshu.com/p/7ad9d3cd4d6e" target="_blank" rel="external">http://www.jianshu.com/p/7ad9d3cd4d6e</a></p>
<h2 id="&#x8BF4;&#x660E;"><a class="header-anchor" href="#&#x8BF4;&#x660E;"></a>&#x8BF4;&#x660E;</h2>
<p>&#xFF08;1&#xFF09;plugins &#x6587;&#x4EF6;&#x5939;&#x91CC;&#x9762;&#x662F;&#x653E;&#x4E00;&#x4E9B;&#x535A;&#x5BA2;&#x989D;&#x5916;&#x7528;&#x5230;&#x7684; css&#x3001;js &#x6587;&#x4EF6;&#xFF0C;&#x7B14;&#x8005;&#x73B0;&#x5728;&#x662F;&#x653E;&#x5728;hexo/source&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x653E;&#x5728; yelee &#x4E3B;&#x9898;&#x7684; source &#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x8BF7;&#x81EA;&#x884C;&#x4FEE;&#x6539;&#x8D44;&#x6E90;&#x7684;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;</p>
<ul>
<li>font &#x4E0B;&#x9762;&#x7684;&#x662F;&#x5DE6;&#x8FB9;&#x680F; Never Give Up Dream &#x5F80;&#x4E0B;&#x6389;</li>
<li>hint &#x662F;&#x535A;&#x5BA2;&#x7528;&#x5230;&#x7684;&#x63D0;&#x793A;&#x6846; css</li>
<li>prettify &#x662F;&#x535A;&#x5BA2;&#x7528;&#x5230;&#x7684;&#x4EE3;&#x7801;&#x9AD8;&#x4EAE;&#x63D2;&#x4EF6;</li>
</ul>
<p>&#xFF08;2&#xFF09;&#x9996;&#x9875;&#x6587;&#x7AE0;&#x6982;&#x8981;&#x6837;&#x5F0F;&#x662F;&#x4F7F;&#x7528;&#x7684; semantic-ui&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x559C;&#x6B22;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;y elee/layout/_partial/article.ejs &#x6587;&#x4EF6;&#x4E0B;&#x9762;&#x7684;&#x6982;&#x8981;div&#x7684;&#x6837;&#x5F0F;</p>
<p>&#xFF08;3&#xFF09;404 &#x5728; pc &#x7AEF;&#x7B14;&#x8005;&#x4F7F;&#x7528;&#x7684;&#x662F; iframe &#x52A0;&#x8F7D;&#x7F51;&#x6613;&#x7684;&#xFF0C;&#x79FB;&#x52A8;&#x7AEF;&#x5219;&#x662F;&#x4F7F;&#x7528; yelee/source/publicwelfare &#x7684;&#x52A0;&#x8F7D;&#x817E;&#x8BAF;&#x7684;</p>
<p>&#xFF08;4&#xFF09;&#x591A;&#x8BF4;&#x6837;&#x5F0F;&#x4F7F;&#x7528;&#x7684;&#x662F; yelee/source/duoshuo/shejidaren.css</p>
<h2 id="&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;"><a class="header-anchor" href="#&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;"></a>&#x4E2A;&#x4EBA;&#x535A;&#x5BA2;</h2>
<p><a href="http://ngudream.com">&#x79FB;&#x52A8;&#x5F00;&#x53D1; | ngudream</a></p>
<h2 id="&#x611F;&#x8C22;"><a class="header-anchor" href="#&#x611F;&#x8C22;"></a>&#x611F;&#x8C22;</h2>
<p>&#x518D;&#x6B21;&#x5F3A;&#x8C03;&#x672C;&#x4E3B;&#x9898;&#x662F;&#x5728; <a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" rel="external">hexo-theme-yelee</a> &#x8FD9;&#x6B3E;&#x4E3B;&#x9898;&#x7684;&#x57FA;&#x7840;&#x4E0A;&#x4FEE;&#x6539;&#x7684;&#xFF0C;&#x5411;&#x539F;&#x4F5C;&#x8005;&#x8868;&#x793A;&#x611F;&#x8C22;&#xFF01;&#x540C;&#x65F6;&#x611F;&#x8C22;&#x5404;&#x4F4D;&#x7F51;&#x53CB;&#x63D0;&#x4F9B;&#x7684;&#x4FEE;&#x6539;&#x3001;&#x4F18;&#x5316;&#x65B9;&#x6CD5;&#xFF0C;&#x7B14;&#x8005;&#x53EA;&#x662F;&#x642C;&#x8FD0;&#x5DE5;&#x3002;</p>
<p><strong>&#x4E2A;&#x4EBA;&#x4F7F;&#x7528;&#xFF08;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF09;</strong></p>
<p>1&#x3001;&#x538B;&#x7F29;&#x63D2;&#x4EF6; gulp</p>
<pre><code>npm install xxx --save&#x547D;&#x4EE4;&#x5B89;&#x88C5;&#x4EE5;&#x4E0B;&#x63D2;&#x4EF6;
gulp
gulp-htmlclean
gulp-htmlmin
gulp-minify-css
gulp-uglify
</code></pre>
<p>2&#x3001;&#x6DFB;&#x52A0; emoji &#x8868;&#x60C5;</p>
<pre><code>cd hexo
npm un hexo-renderer-marked --save
npm i hexo-renderer-markdown-it --save
npm install markdown-it-emoji --save
</code></pre>
<p>3&#x3001;&#x5907;&#x4EFD;&#x63D2;&#x4EF6;&#xFF1A;<a href="https://github.com/coneycode/hexo-git-backup" target="_blank" rel="external">https://github.com/coneycode/hexo-git-backup</a></p>
<pre><code>npm install hexo-git-backup --save
</code></pre>
<p>4&#x3001;&#x8FD8;&#x539F; hexo &#x535A;&#x5BA2;</p>
<ol>
<li>&#x4F7F;&#x7528; git clone &#x62F7;&#x8D1D;&#x4ED3;&#x5E93;&#xFF08;&#x9ED8;&#x8BA4;&#x5206;&#x652F;&#x4E3A;hexo&#xFF09;&#xFF1B;</li>
<li>&#x5728;&#x672C;&#x5730;&#x65B0;&#x62F7;&#x8D1D;&#x7684; hexo &#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x901A;&#x8FC7; Git bash &#x4F9D;&#x6B21;&#x6267;&#x884C;&#x4E0B;&#x5217;&#x6307;&#x4EE4;&#xFF1A;</li>
</ol>
<pre><code>npm install hexo
npm install
npm install hexo-deployer-git&#xFF08;&#x8BB0;&#x5F97;&#xFF0C;&#x4E0D;&#x9700;&#x8981;hexo init&#x8FD9;&#x6761;&#x6307;&#x4EE4;&#xFF09;&#x3002;
</code></pre>
<p>5&#x3001;&#x538B;&#x7F29; js&#x3001;css &#x7B49;&#x63D2;&#x4EF6;</p>
<pre><code>npm install hexo-all-minifier --save
</code></pre>
<p>&#x7136;&#x540E;&#x5728; hexo &#x535A;&#x5BA2;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684; config.yml &#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p>
<pre><code>html_minifier:
  enable: true
  exclude:
css_minifier:
  enable: true
  exclude:
    - &apos;*.min.css&apos;
js_minifier:
  enable: true
  mangle: true
  output:
  compress:
  exclude:
    - &apos;*.min.js&apos;
image_minifier:
  enable: true
  interlaced: false
  multipass: false
  optimizationLevel: 2
  pngquant: false
  progressive: false
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2017/01/24/n-hexo-blog/1.gif&quot; style=&quot;float:left; margin-right:16px&quot; alt=&quot;&quot;&gt;
&lt;img class=&quot;pic lazy&quot; id=&quot;img_right&quot; data-original=&quot;/2017/01/24/n-hexo-blog/2.gif&quot; style=&quot;float:right; margin-right:16px&quot; alt=&quot;&quot;&gt;
&lt;span&gt;&amp;#x53F7;&amp;#x5916;&amp;#x53F7;&amp;#x5916;&amp;#xFF01;&amp;#xFF01; &amp;#x7B14;&amp;#x8005;&amp;#x5BF9;&amp;#x535A;&amp;#x5BA2;&amp;#x4FEE;&amp;#x6539;&amp;#x7684;&amp;#x6E90;&amp;#x7801;&amp;#x5DF2;&amp;#x653E;&amp;#x5230;&lt;a href=&quot;https://github.com/ngudream/N-Hexo-Blog&quot; target=&quot;_blank&quot;&gt; github &lt;/a&gt;&amp;#x4E0A;&amp;#x3002;&amp;#x5306;&amp;#x5306;&amp;#x6765;&amp;#x5306;&amp;#x5306;&amp;#x53BB;&amp;#x4F60;&amp;#x662F;&amp;#x4F55;&amp;#x610F;&amp;#xFF1F;&amp;#x6765;&amp;#x4E86;&amp;#x5C31;&amp;#x4E0A;&amp;#x53BB;&amp;#x770B;&amp;#x770B;&amp;#x5457;&amp;#x3002;&amp;#x95EE;&amp;#x541B;&amp;#x4F55;&amp;#x5904;&amp;#x53BB;&amp;#xFF1F;&amp;#x5C3D;&amp;#x5728;&amp;#x4E0D;&amp;#x8A00;&amp;#x4E2D;&amp;#x3002;&amp;#x201C;&amp;#x6D45;&amp;#x6D45;&amp;#x6C34;&amp;#xFF0C;&amp;#x957F;&amp;#x60A0;&amp;#x60A0;&amp;#xFF0C;&amp;#x6765;&amp;#x65E0;&amp;#x5C3D;&amp;#xFF0C;&amp;#x53BB;&amp;#x65E0;&amp;#x4F11;&amp;#x3002;&amp;#x66F2;&amp;#x66F2;&amp;#x6298;&amp;#x6298;&amp;#x5411;&amp;#x4E1C;&amp;#x6D41;&amp;#xFF0C;&amp;#x5C71;&amp;#x5C71;&amp;#x5CAD;&amp;#x5CAD;&amp;#x96BE;&amp;#x963B;&amp;#x7559;&amp;#x3002;&amp;#x95EE;&amp;#x4F0A;&amp;#x5954;&amp;#x817E;&amp;#x4F55;&amp;#x65F6;&amp;#x6B47;&amp;#xFF0C;&amp;#x4E0D;&amp;#x5230;&amp;#x5927;&amp;#x6D77;&amp;#x4E0D;&amp;#x56DE;&amp;#x5934;&amp;#x3002;&amp;#x201D;&lt;a style=&quot;color:#660066&quot;&gt;&amp;#x5B9E;&amp;#x9A8C;&amp;#x6027;&amp;#x7684;&amp;#x52A0;&amp;#x5165;&amp;#x4E86;&amp;#xFF08;&amp;#x5751;&amp;#x6BD4;&amp;#x8F83;&amp;#x591A;^_~&amp;#xFF09;&amp;#xFF1A;InstantClick&amp;#xFF0C;&amp;#x5927;&amp;#x5BB6;&amp;#x53EF;&amp;#x4EE5;&amp;#x4F53;&amp;#x9A8C;&amp;#x4E00;&amp;#x4E0B;&amp;#x6587;&amp;#x7AE0;&amp;#x7684;&amp;#x52A0;&amp;#x8F7D;&amp;#x901F;&amp;#x5EA6;&lt;/a&gt;&amp;#x3002;&lt;/span&gt;&lt;/div&gt;
&lt;script&gt;
if(navigator.userAgent.match(/(iPhone|iPod|Android|ios|Opera Mini|BlackBerry|webOS)/i)){
$(&quot;#img_right&quot;).remove();
}
&lt;/script&gt;
    
    </summary>
    
      <category term="服务器" scheme="http://ngudream.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="Hexo" scheme="http://ngudream.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Android 动态改变 App 桌面图标</title>
    <link href="http://ngudream.com/2017/01/14/android-change-app-launcher-icon-dynamically/"/>
    <id>http://ngudream.com/2017/01/14/android-change-app-launcher-icon-dynamically/</id>
    <published>2017-01-14T12:10:28.000Z</published>
    <updated>2017-02-19T15:09:46.555Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://developer.android.com/guide/topics/manifest/activity-alias-element.html" target="_blank" rel="external">activity-alias-element &#x5B98;&#x65B9;&#x6587;&#x6863;</a></p>
<h2 id="&#x5199;&#x5728;&#x524D;&#x5934;"><a class="header-anchor" href="#&#x5199;&#x5728;&#x524D;&#x5934;"></a>&#x5199;&#x5728;&#x524D;&#x5934;</h2>
<p>&#x5148;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x7B2C;&#x4E00;&#x3001;&#x4E8C;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;</p>
<h3 id="&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;1&#xFF1A;intent-filter"><a class="header-anchor" href="#&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;1&#xFF1A;intent-filter"></a>&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;1&#xFF1A;intent-filter</h3>
<p>&#x7ED9;&#x76F8;&#x5E94;&#x7684;Activity&#x589E;&#x52A0;intent-filter</p>
<pre><code>&lt;ativity android:name=&quot;A2&quot; android:label=&quot;@string/app_name2&quot;&gt;   
  &lt;intent-filter&gt;
        &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
        &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
  &lt;/intent-filter&gt;  
&lt;/activity&gt;  
</code></pre>
<p></p>
<h3 id="&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;2&#xFF1A;process&#x5C5E;&#x6027;"><a class="header-anchor" href="#&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;2&#xFF1A;process&#x5C5E;&#x6027;"></a>&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;2&#xFF1A;process&#x5C5E;&#x6027;</h3>
<p>Activity &#x6709;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x5C5E;&#x6027; process&#xFF0C;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x662F;&#x6307;&#x5B9A; Activity &#x8FD0;&#x884C;&#x65F6;&#x6240;&#x5728;&#x7684;&#x8FDB;&#x7A0B;&#x3002;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x6B64;&#x5C5E;&#x6027;&#x7684;&#x8BDD;&#xFF0C;&#x6240;&#x6709;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;&#x8FD0;&#x884C;&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x9ED8;&#x8BA4;&#x7684;&#x8FDB;&#x7A0B;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FDB;&#x7A0B;&#x540D;&#x8DDF;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x5305;&#x540D;&#x4E00;&#x81F4;&#x3002;&#x4E2D;&#x6240;&#x6709;&#x7EC4;&#x5EFA;&#x5143;&#x7D20;&#x7684; process &#x5C5E;&#x6027;&#x80FD;&#x591F;&#x4E3A;&#x8BE5;&#x7EC4;&#x4EF6;&#x8BBE;&#x5B9A;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x3002;&#x4F46;&#x662F;&#x4EFB;&#x4F55;&#x7EC4;&#x4EF6;&#x90FD;&#x53EF;&#x4EE5;&#x8986;&#x76D6;&#x8FD9;&#x4E2A;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x5141;&#x8BB8;&#x4F60;&#x5C06;&#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x653E;&#x5728;&#x591A;&#x8FDB;&#x7A0B;&#x4E2D;&#x8FD0;&#x884C;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x88AB;&#x5206;&#x914D;&#x7684;&#x540D;&#x5B57;&#x4EE5;:&#x5F00;&#x5934;&#xFF0C;&#x5F53;&#x8FD9;&#x4E2A; activity &#x8FD0;&#x884C;&#x65F6;,&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x4E13;&#x5C5E;&#x4E8E;&#x8FD9;&#x4E2A;&#x7A0B;&#x5E8F;&#x7684;&#x8FDB;&#x7A0B;&#x5C06;&#x4F1A;&#x88AB;&#x521B;&#x5EFA;&#x3002;<br>
&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>&lt;activity android:name=&quot;.A1&quot;
    android:label=&quot;@string/app_name&quot;
    android:process=&quot;:process.main&quot;&gt;
    &lt;intent-filter&gt;
       &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
       &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
    &lt;/intent-filter&gt;
&lt;/activity&gt;
&lt;activity android:name=&quot;.A2&quot;
    android:label=&quot;@string/app_name2&quot;
    android:process=&quot;:process.sub&quot;
    android:icon=&quot;@drawable/icon2&quot;
    android:launchMode =&quot;singleInstance&quot;&gt;
    &lt;intent-filter&gt;
      &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;
      &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
    &lt;/intent-filter&gt;
&lt;/activity&gt;
</code></pre>
<p>&#x6700;&#x8FD1;&#x770B;&#x5230;&#x300C;&#x533B;&#x751F;&#x300D;&#x5199;&#x7684;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#xFF1A;<a href="http://blog.csdn.net/eclipsexys/article/details/53791818" target="_blank" rel="external">&#x4E0A;&#x6B21;&#x53D1;&#x7248;&#x6211;&#x5C31;&#x6539;&#x4E86;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#xFF01;</a>&#xFF0C;&#x771F;&#x662F;&#x8111;&#x6D1E;&#x5927;&#x5F00;&#xFF0C;&#x6CA1;&#x60F3;&#x5230;&#x5B89;&#x5353;&#x5E94;&#x7528;&#x7684;&#x684C;&#x9762;&#x56FE;&#x6807;&#x8FD8;&#x80FD;&#x52A8;&#x6001;&#x6539;&#x53D8;&#xFF0C;&#x6DA8;&#x77E5;&#x8BC6;&#x4E86;&#xFF0C;&#x63A5;&#x89E6;&#x5B89;&#x5353;&#x5F00;&#x53D1;&#x4EE5;&#x6765;&#x8FD8;&#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x77E5;&#x9053;&#x8FD9;&#x73A9;&#x610F;&#x513F;&#xFF0C;&#x987F;&#x611F;&#x65E0;&#x5730;&#x81EA;&#x5BB9;&#x3002;&#x4E8E;&#x662F;&#x7EC6;&#x7EC6;&#x8BFB;&#x6765;&#xFF0C;&#x7740;&#x624B;&#x5B9E;&#x8DF5;&#xFF0C;&#x5BF9;&#x5176;&#x4E2D;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x77E5;&#x8BC6;&#x70B9;&#x5BF9;&#x7740;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E86;&#x89E3;&#x4E00;&#x756A;&#xFF0C;&#x603B;&#x7ED3;&#x8BB0;&#x5F55;&#x4E8E;&#x6B64;&#x3002;</p>
<h2 id="&#x6848;&#x4F8B;&#x5206;&#x6790;-&#x9700;&#x6C42;&#x6765;&#x6E90;"><a class="header-anchor" href="#&#x6848;&#x4F8B;&#x5206;&#x6790;-&#x9700;&#x6C42;&#x6765;&#x6E90;"></a>&#x6848;&#x4F8B;&#x5206;&#x6790; &amp; &#x9700;&#x6C42;&#x6765;&#x6E90;</h2>
<p>&#x6BCF;&#x9022;&#x53CC;&#x5341;&#x4E00;&#x8D2D;&#x7269;&#x8282;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x624B;&#x6DD8; App &#x7684;&#x684C;&#x9762;&#x56FE;&#x6807;&#x4F1A;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x5F53;&#x7136;&#x5E94;&#x7528;&#x91CC;&#x9762;&#x7684;&#x4E3B;&#x9898;&#x8272;&#x8C03;&#x4E5F;&#x4F1A;&#x6539;&#x53D8;&#xFF0C;&#x53D8;&#x5F97;&#x975E;&#x5E38;&#x559C;&#x5E86;&#xFF0C;&#x8425;&#x9020;&#x51FA;&#x4E00;&#x79CD;&#x8282;&#x65E5;&#x7684;&#x6C1B;&#x56F4;&#xFF0C;&#x7528;&#x6237;&#x4F53;&#x9A8C;&#x6781;&#x597D;&#x3002;&#x65E2;&#x7136;&#x5B58;&#x5728;&#x8FD9;&#x6837;&#x7684;&#x4EA7;&#x54C1;&#x8FD0;&#x8425;&#x65B9;&#x5F0F;&#xFF0C;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x4ECE;&#x6280;&#x672F;&#x4E0A;&#x5B9E;&#x73B0;&#x5462;&#xFF1F;&#x4FEE;&#x6539;&#x5E94;&#x7528;&#x4E3B;&#x9898;&#x8272;&#x8C03;&#x5728;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x8C08;&#x4E86;&#xFF0C;&#x5E38;&#x89C1;&#x7684;&#x6548;&#x679C;&#x6709;&#x9ED1;&#x767D;&#x4E3B;&#x9898;&#x5207;&#x6362;&#x3001;&#x4E3B;&#x9898;&#x5305;&#x4E0B;&#x8F7D;&#x7B49;&#xFF0C;&#x5173;&#x4E8E;&#x5BF9;&#x5E94;&#x5F00;&#x53D1;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x7684;&#x8BB2;&#x89E3;&#xFF0C;&#x7F51;&#x4E0A;&#x76F8;&#x5173;&#x8D44;&#x6599;&#x5F88;&#x591A;&#x3002;&#x8FD9;&#x91CC;&#x804A;&#x804A;&#x5982;&#x4F55;&#x4FEE;&#x6539;&#x684C;&#x9762;&#x56FE;&#x6807;&#xFF0C;&#x6BD5;&#x7ADF;&#x8FD9;&#x4E2A;&#x70B9;&#x6D89;&#x53CA;&#x5230;&#x7684;&#x77E5;&#x8BC6;&#x8FD8;&#x662F;&#x5F88;&#x5C11;&#x89C1;&#x7684;&#x3002;</p>
<p>&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5229;&#x7528; AndroidManifest.xml &#x6587;&#x4EF6;&#x4E2D;&#x7684; <activity-alias> &#x6807;&#x7B7E;&#x5373;&#x53EF;&#x5B9E;&#x73B0;&#x3002;</activity-alias></p>
<h2 id="activity-alias-&#x4ECB;&#x7ECD;"><a class="header-anchor" href="#activity-alias-&#x4ECB;&#x7ECD;"></a><activity-alias> &#x4ECB;&#x7ECD;</activity-alias></h2>
<p>&#x5927;&#x5BB6;&#x77E5;&#x9053;&#xFF0C;&#x5BF9;&#x4E8E; Activity &#x7EC4;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528;&#x65F6;&#x9700;&#x8981;&#x5728; Manifest &#x6587;&#x4EF6;&#x4E2D;&#x901A;&#x8FC7; &#x6807;&#x7B7E;&#x6CE8;&#x518C; name&#x3001;theme&#x3001;intent-filter &#x7B49;&#x76F8;&#x5173;&#x5C5E;&#x6027;&#x4FE1;&#x606F;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7; Intent &#x64CD;&#x4F5C;&#x4FBF;&#x53EF;&#x4EE5;&#x542F;&#x52A8;&#x5BF9;&#x5E94; Activity&#x3002;&#x6B8A;&#x4E0D;&#x77E5;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x80FD;&#x901A;&#x8FC7; <activity-alias> &#x6807;&#x7B7E;&#x4E3A;&#x6BCF;&#x4E2A; Activity &#x6CE8;&#x518C;&#x4E00;&#x4E2A;&#x201C;&#x522B;&#x540D;&#x201D;&#xFF0C;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x522B;&#x540D;&#x4E5F;&#x80FD;&#x542F;&#x52A8;&#x5BF9;&#x5E94;&#x7684;&#x76EE;&#x6807; Activity&#x3002;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x201C;&#x522B;&#x540D;&#x201D;&#x80FD;&#x591F;&#x8BBE;&#x7F6E;&#x54EA;&#x4E9B;&#x5C5E;&#x6027;&#xFF1A;</activity-alias></p>
<pre><code>&lt;activity-alias android:enabled=[&quot;true&quot; | &quot;false&quot;]
                android:exported=[&quot;true&quot; | &quot;false&quot;]
                android:icon=&quot;drawable resource&quot;
                android:label=&quot;string resource&quot;
                android:name=&quot;string&quot;
                android:permission=&quot;string&quot;
                android:targetActivity=&quot;string&quot; &gt;
    . . .
&lt;/activity-alias&gt;
</code></pre>
<p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x5C5E;&#x6027;&#x4E0E; <activity> &#x6807;&#x7B7E;&#x7684;&#x5C5E;&#x6027;&#x4E00;&#x81F4;&#xFF0C;&#x7B80;&#x5355;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#xFF1A;</activity></p>
<ul>
<li>android:enabled &#x5C5E;&#x6027;&#xFF0C;&#x5E03;&#x5C14;&#x7C7B;&#x578B;&#xFF0C;&#x662F;&#x5426;&#x5F00;&#x542F;&#x522B;&#x540D;&#x8BBE;&#x7F6E;&#xFF0C;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A; true&#xFF1B;</li>
<li>android:exported &#x5C5E;&#x6027;&#xFF0C;&#x5E03;&#x5C14;&#x7C7B;&#x578B;&#xFF0C;&#x662F;&#x5426;&#x652F;&#x6301;&#x5176;&#x4ED6;&#x5E94;&#x7528;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x522B;&#x540D;&#x8BBF;&#x95EE;&#x76EE;&#x6807; Activity&#xFF0C;&#x9ED8;&#x8BA4;&#x503C;&#x4E3A; true&#xFF1B;</li>
<li>android:icon &#x548C; label &#x5C5E;&#x6027;&#xFF1A;&#x7C7B;&#x4F3C; <activity> &#x6807;&#x7B7E;&#xFF0C;&#x8868;&#x793A;&#x76EE;&#x6807; Activity &#x7684;&#x663E;&#x793A;&#x56FE;&#x6807;&#x548C;&#x6807;&#x7B7E;&#xFF1B;</activity></li>
<li>android:name &#x5C5E;&#x6027;&#xFF1A;Activity &#x522B;&#x540D;&#xFF0C;&#x5728; <activity> &#x6807;&#x7B7E;&#x4E2D;&#xFF0C; name &#x5C5E;&#x6027;&#x5FC5;&#x987B;&#x4E0E;&#x5BF9;&#x5E94; Activity &#x6587;&#x4EF6;&#x7684;&#x540D;&#x5B57;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#xFF0C;&#x800C;&#x8FD9;&#x91CC;&#x7684;&#x522B;&#x540D;&#x53EF;&#x4EFB;&#x610F;&#x8BBE;&#x7F6E;&#xFF0C;&#x4FDD;&#x8BC1;&#x552F;&#x4E00;&#x6027;&#x5373;&#x53EF;&#xFF1B;</activity></li>
<li>android:permission &#x5C5E;&#x6027;&#xFF1A;&#x6743;&#x9650;&#x8BBE;&#x7F6E;&#xFF0C;&#x5BF9;&#x522B;&#x540D;&#x7684;&#x4F7F;&#x7528;&#x52A0;&#x4EE5;&#x9650;&#x5236;&#xFF0C;&#x8BE6;&#x7EC6;&#x5C5E;&#x6027;&#x503C;&#x53C2;&#x8003;&#x5F00;&#x53D1;&#x8005;&#x5B98;&#x7F51;&#x5BF9; &#x6743;&#x9650;&#x90E8;&#x5206; &#x7684;&#x8BF4;&#x660E;&#xFF1B;</li>
<li>android:targetActivity &#x5C5E;&#x6027;&#xFF1A;&#x6307;&#x5B9A;&#x522B;&#x540D;&#x80FD;&#x591F;&#x542F;&#x52A8;&#x7684;&#x76EE;&#x6807; Activity&#xFF0C;&#x6CE8;&#x610F;&#xFF0C;&#x5C5E;&#x6027;&#x503C;&#x4E00;&#x5B9A;&#x8981;&#x5BF9;&#x5E94;&#x5230; <activity> &#x6807;&#x7B7E;&#x4E2D;&#x7684; name &#x5C5E;&#x6027;&#xFF0C;&#x5E76;&#x4E14;&#x8BE5; <activity> &#x6807;&#x7B7E;&#x4E00;&#x5B9A;&#x8981;&#x4F4D;&#x4E8E; <activity-alias> &#x6807;&#x7B7E;&#x524D;&#x9762;&#xFF1B;</activity-alias></activity></activity></li>
</ul>
<h2 id="&#x5B9E;&#x6218;&#x6F14;&#x7EC3;"><a class="header-anchor" href="#&#x5B9E;&#x6218;&#x6F14;&#x7EC3;"></a>&#x5B9E;&#x6218;&#x6F14;&#x7EC3;</h2>
<p>&#x4E86;&#x89E3;&#x5B8C; <activity-alias> &#x7684;&#x57FA;&#x672C;&#x77E5;&#x8BC6;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x77E5;&#x9053;&#x52A8;&#x6001;&#x4FEE;&#x6539;&#x684C;&#x9762;&#x56FE;&#x6807;&#x548C;&#x5E94;&#x7528;&#x540D;&#x79F0;&#x662F;&#x600E;&#x4E48;&#x505A;&#x5230;&#x7684;&#x4E86;&#x3002;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x7ED9;&#x6574;&#x4E2A;&#x5E94;&#x7528;&#x7684;&#x5165;&#x53E3; Activity &#x6DFB;&#x52A0;&#x4E00;&#x4E2A; <activity-alias> &#x6807;&#x7B7E;&#xFF0C;&#x5E76;&#x8BBE;&#x7F6E;&#x9884;&#x5148;&#x8BBE;&#x8BA1;&#x597D;&#x7684;&#x66FF;&#x4EE3;&#x684C;&#x9762;&#x56FE;&#x6807;&#x548C;&#x5E94;&#x7528;&#x540D;&#x79F0;&#xFF0C;&#x5E76;&#x914D;&#x7F6E;&#x76F8;&#x540C;&#x7684; <intent-filter> &#x5C5E;&#x6027;&#xFF0C;&#x52A8;&#x6001;&#x542F;&#x52A8;&#x5373;&#x53EF;&#x3002;</intent-filter></activity-alias></activity-alias></p>
<p>&#x4E3E;&#x4F8B;&#x8BF4;&#x660E;&#x4E00;&#x4E0B;&#xFF0C;Manafest &#x6587;&#x4EF6;&#x5173;&#x952E;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>&lt;application
    android:allowBackup=&quot;true&quot;
    android:icon=&quot;@mipmap/ic_launcher&quot;
    android:label=&quot;Samples&quot;
    android:supportsRtl=&quot;true&quot;
    android:name=&quot;.MyApplication&quot;
    android:theme=&quot;@style/AppTheme&quot;&gt;
    &lt;activity android:name=&quot;.MainActivity&quot;&gt;
        &lt;intent-filter&gt;
            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
        &lt;/intent-filter&gt;
    &lt;/activity&gt;

    &lt;activity-alias
        android:name=&quot;.MainAliasActivity&quot;
        android:targetActivity=&quot;.MainActivity&quot;
        android:label=&quot;Samples Alias&quot;
        android:icon=&quot;@mipmap/ic_launcher_alias&quot;
        android:enabled=&quot;false&quot;&gt;

        &lt;intent-filter&gt;
            &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

            &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
        &lt;/intent-filter&gt;

    &lt;/activity-alias&gt;

&lt;/application&gt;
</code></pre>
<p>&#x6CE8;&#x610F;&#x770B;&#xFF0C;&#x5728;&#x522B;&#x540D;&#x8BBE;&#x7F6E;&#x4E2D;&#x6DFB;&#x52A0;&#x4E86; <intent-filter> &#x6807;&#x7B7E;&#xFF0C;&#x4E0E; targetActivity &#x7684;&#x8BBE;&#x7F6E;&#x4E00;&#x81F4;&#xFF1A;</intent-filter></p>
<ul>
<li>android.intent.action.MAIN &#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x522B;&#x540D;&#x8BBE;&#x7F6E;&#x662F;&#x6574;&#x4E2A;&#x5E94;&#x7528;&#x7684;&#x5165;&#x53E3;&#xFF0C;&#x5E94;&#x7528;&#x542F;&#x52A8;&#x65F6;&#x7B2C;&#x4E00;&#x4E2A;&#x521B;&#x5EFA;&#x7684;&#x5C31;&#x662F;&#x8FD9;&#x4E2A; Activity&#xFF1B;</li>
<li>android.intent.category.LAUNCHER &#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x522B;&#x540D;&#x8BBE;&#x7F6E;&#x5C06;&#x51FA;&#x73B0;&#x5728;&#x684C;&#x9762; Launcher &#x5E94;&#x7528;&#x4E0A;&#xFF1B;</li>
</ul>
<p>&#x81F3;&#x4E8E;&#x5176;&#x4ED6;&#x5C5E;&#x6027;&#xFF0C;<activity> &#x6807;&#x7B7E;&#x4E2D;&#x4E5F;&#x6709;&#x76F8;&#x5E94;&#x8BBE;&#x7F6E;&#xFF0C;&#x53EA;&#x662F;&#x901A;&#x5E38;&#x6211;&#x4EEC;&#x5728; <application> &#x6807;&#x7B7E;&#x4E2D;&#x7EDF;&#x4E00;&#x8BBE;&#x7F6E;&#x800C;&#x5DF2;&#xFF0C;&#x7136;&#x540E;<activity> &#x6807;&#x7B7E;&#x9ED8;&#x8BA4;&#x7EE7;&#x627F;<application> &#x6807;&#x7B7E;&#x4E2D;&#x7684;&#x8BBE;&#x7F6E;&#x3002;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;android:enabled &#x5C5E;&#x6027;&#x8BBE;&#x4E3A; false&#xFF0C;&#x5426;&#x5219;&#x8FD0;&#x884C;&#x65F6;&#x5C06;&#x4F1A;&#x5728;&#x684C;&#x9762;&#x4E0A;&#x51FA;&#x73B0;&#x4E24;&#x4E2A;&#x76F8;&#x540C;&#x529F;&#x80FD;&#x4F46;&#x4E0D;&#x540C;&#x663E;&#x793A;&#x7684;&#x5E94;&#x7528;&#x56FE;&#x6807;&#x548C;&#x540D;&#x79F0;&#x3002;</application></activity></application></activity></p>
<p>&#x7136;&#x540E;&#x5728; Activity &#x4E2D;&#x52A8;&#x6001;&#x5207;&#x6362;&#xFF0C;&#x901A;&#x8FC7; PackageManager &#x5BF9;&#x8C61;&#x63D0;&#x4F9B;&#x7684; setComponentEnabledSetting() &#x65B9;&#x6CD5;&#x5173;&#x95ED;&#x5F53;&#x524D; Component &#x7EC4;&#x4EF6;&#xFF0C;&#x5E76;&#x542F;&#x52A8;&#x522B;&#x540D;&#x5BF9;&#x5E94;&#x7684; Component &#x7EC4;&#x4EF6;&#x5373;&#x53EF;&#xFF0C;&#x53C2;&#x8003;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public void onClickOne(View v){
    PackageManager pm = getPackageManager();
    pm.setComponentEnabledSetting(getComponentName(),
            PackageManager.COMPONENT_ENABLED_STATE_DISABLED, PackageManager.DONT_KILL_APP);
    pm.setComponentEnabledSetting(new ComponentName(this, &quot;com.yifeng.samples.AliasName&quot;),
            PackageManager.COMPONENT_ENABLED_STATE_ENABLED, PackageManager.DONT_KILL_APP);
}
</code></pre>
<p>&#x6548;&#x679C;&#x5982;&#x56FE;&#xFF1A;</p>
<div align="center">
<img data-original="/2017/01/14/android-change-app-launcher-icon-dynamically/1483060262.gif" class="lazy">
</div>
<p>&#x6CE8;&#x610F;&#xFF0C;&#x4FEE;&#x6539;&#x4E4B;&#x540E;&#xFF0C;&#x9700;&#x8981;&#x7A0D;&#x7B49;&#x7247;&#x523B;&#x624D;&#x80FD;&#x770B;&#x5230;&#x53D8;&#x5316;&#x3002;&#x5982;&#x679C;&#x60F3;&#x5728;&#x4FEE;&#x6539;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#x7ACB;&#x5373;&#x770B;&#x5230;&#x53D8;&#x5316;&#xFF0C;&#x53EA;&#x80FD;&#x901A;&#x8FC7; Intent &#x91CD;&#x542F; Launcher &#x5E94;&#x7528;&#x3002;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>Intent intent = new Intent(Intent.ACTION_MAIN);
intent.addCategory(Intent.CATEGORY_HOME);
intent.addCategory(Intent.CATEGORY_DEFAULT);
List&lt;ResolveInfo&gt; resolves = pm.queryIntentActivities(intent, 0);
for (ResolveInfo res : resolves) {
    if (res.activityInfo != null) {
        ActivityManager am = (ActivityManager) getSystemService(ACTIVITY_SERVICE);
        am.killBackgroundProcesses(res.activityInfo.packageName);
    }
}
</code></pre>
<p>&#x7136;&#x540E;&#x4E0D;&#x8981;&#x5FD8;&#x4E86;&#x5728; Manifest &#x6587;&#x4EF6;&#x4E2D;&#x6DFB;&#x52A0;&#x6743;&#x9650;&#xFF1A;</p>
<pre><code>&lt;uses-permission android:name=&quot;android.permission.KILL_BACKGROUND_PROCESSES&quot; /&gt;
</code></pre>
<p>&#x901A;&#x8FC7;&#x8FD9;&#x4E9B;&#x8BBE;&#x7F6E;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x5C31;&#x80FD;&#x5B9E;&#x73B0;&#x52A8;&#x6001;&#x4FEE;&#x6539;&#x5E94;&#x7528;&#x7684;&#x684C;&#x9762;&#x56FE;&#x6807;&#x548C;&#x540D;&#x79F0;&#x3002;&#x901A;&#x5E38;&#xFF0C;&#x53EF;&#x4EE5;&#x63D0;&#x524D;&#x5C06;&#x65B0;&#x7684;&#x56FE;&#x6807;&#x653E;&#x7F6E;&#x5728;&#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x5F85;&#x5230;&#x7279;&#x5B9A;&#x65F6;&#x95F4;&#x6BB5;&#x901A;&#x8FC7;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x7684;&#x6D88;&#x606F;&#x63A8;&#x9001;&#x7B49;&#x884C;&#x4E3A;&#x7075;&#x6D3B;&#x89E6;&#x53D1; App &#x4FEE;&#x6539; Launcher &#x4E0A;&#x663E;&#x793A;&#x7684;&#x56FE;&#x6807;&#x548C;&#x540D;&#x79F0;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x4E0D;&#x5FC5;&#x4E3A;&#x4E86;&#x6539;&#x4E2A;&#x56FE;&#x6807;&#x5355;&#x72EC;&#x8FED;&#x4EE3;&#x4E00;&#x4E2A;&#x65B0;&#x7248;&#x672C;&#x3002;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x4ECE;&#x4EA7;&#x54C1;&#x89D2;&#x5EA6;&#x4E0A;&#x8BB2;&#xFF0C;&#x4E00;&#x822C;&#x4E0D;&#x4F1A;&#x4E3A;&#x4E86;&#x77ED;&#x671F;&#x7684;&#x4E00;&#x4E2A;&#x6D3B;&#x52A8;&#x4FEE;&#x6539;&#x5E94;&#x7528;&#x540D;&#x79F0;&#xFF0C;&#x800C;&#x662F;&#x53EA;&#x4FEE;&#x6539;&#x684C;&#x9762;&#x56FE;&#x6807;&#xFF0C;&#x5E76;&#x4E14;&#x65B0;&#x7684;&#x684C;&#x9762;&#x56FE;&#x6807;&#x4E5F;&#x53EA;&#x662F;&#x5728;&#x539F;&#x6709;&#x7684;&#x57FA;&#x7840;&#x6837;&#x5F0F;&#x4E0A;&#x52A8;&#x52A8;&#x624B;&#x811A;&#xFF0C;&#x8D77;&#x5230;&#x9526;&#x4E0A;&#x6DFB;&#x82B1;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x4E07;&#x4E0D;&#x53EF;&#x6539;&#x5F97;&#x9762;&#x8C8C;&#x5168;&#x975E;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x8BA9;&#x7528;&#x6237;&#x4EA7;&#x751F;&#x8BEF;&#x89E3;&#xFF0C;&#x90A3;&#x5C31;&#x5F97;&#x4E0D;&#x507F;&#x5931;&#x4E86;&#x3002;</p>
<h2 id="&#x9057;&#x7559;&#x95EE;&#x9898;"><a class="header-anchor" href="#&#x9057;&#x7559;&#x95EE;&#x9898;"></a>&#x9057;&#x7559;&#x95EE;&#x9898;</h2>
<p>&#x7B2C;&#x4E00;&#x4E2A;&#xFF0C;&#x4EE5;&#x4E0A;&#x8FD9;&#x79CD;&#x8BBE;&#x7F6E;&#x53EA;&#x80FD;&#x4FEE;&#x6539; Launcher &#x4E0A;&#x7684;&#x5E94;&#x7528;&#x56FE;&#x6807;&#x548C;&#x540D;&#x79F0;&#xFF0C;&#x5C5E;&#x4E8E;&#x5E94;&#x7528;&#x7EA7;&#x522B;&#xFF08;application level&#xFF09;&#x7684;&#xFF0C;&#x65E0;&#x6CD5;&#x8FBE;&#x5230;&#x7CFB;&#x7EDF;&#x7EA7;&#x522B;&#xFF08;OS level&#xFF09;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x6BD4;&#x5982;&#x6539;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x4F7F;&#x7528; menu &#x7269;&#x7406;&#x952E;&#x6253;&#x5F00; multi-task &#x7A97;&#x53E3;&#xFF0C;&#x6216;&#x8005;&#x6253;&#x5F00;&#x8BBE;&#x7F6E;&#x67E5;&#x770B;&#x5E94;&#x7528;&#x5217;&#x8868;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;&#x5BF9;&#x5E94;&#x5E94;&#x7528;&#x7684;&#x56FE;&#x6807;&#x548C;&#x540D;&#x79F0;&#x8FD8;&#x662F;&#x663E;&#x793A;&#x4E4B;&#x524D;&#x9ED8;&#x8BA4;&#x7684;&#x90A3;&#x4E9B;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x5BF9;&#x4E8E;&#x666E;&#x901A;&#x7528;&#x6237;&#x6765;&#x8BF4;&#xFF0C;&#x4E3B;&#x8981;&#x8FD8;&#x662F;&#x5728;&#x4E8E;&#x684C;&#x9762; Launcher &#x4E0A;&#x7684;&#x663E;&#x793A;&#xFF0C;&#x6BD5;&#x7ADF;&#x8FD9;&#x91CC;&#x624D;&#x662F;&#x6700;&#x76F4;&#x89C2;&#x4E5F;&#x662F;&#x6700;&#x5E38;&#x7528;&#x5230;&#x7684;&#x5730;&#x65B9;&#x3002;</p>
<p>&#x7B2C;&#x4E8C;&#x4E2A;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5C06;&#x65B0;&#x7684;&#x684C;&#x9762;&#x56FE;&#x6807;&#x63D0;&#x524D;&#x653E;&#x7F6E;&#x5728;&#x5E94;&#x7528;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x5728; <activity-alias> &#x6807;&#x7B7E;&#x4E2D;&#x6307;&#x5B9A;&#x5BF9;&#x5E94;&#x5F15;&#x7528;&#x5373;&#x53EF;&#xFF0C;&#x6709;&#x6CA1;&#x6709;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x80FD;&#x591F;&#x5728; Java &#x4EE3;&#x7801;&#x4E2D;&#x8BBE;&#x7F6E; Icon &#x5C5E;&#x6027;&#x5462;&#xFF1F;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x5C31;&#x66F4;&#x52A0;&#x5B8C;&#x7F8E;&#x4E86;&#xFF0C;&#x5C06;&#x56FE;&#x6807;&#x6587;&#x4EF6;&#x653E;&#x7F6E;&#x5728;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4F7F;&#x7528;&#x8D77;&#x6765;&#x5C82;&#x4E0D;&#x662F;&#x66F4;&#x52A0;&#x7075;&#x6D3B;&#xFF1F;&#x4E00;&#x756A;&#x52AA;&#x529B;&#x4E4B;&#x540E;&#xFF0C;&#x8FD8;&#x662F;&#x6CA1;&#x80FD;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x4EEC;&#x6709;&#x77E5;&#x9053;&#x7684;&#x8BDD;&#xFF0C;&#x8BF7;&#x7559;&#x8A00;&#x544A;&#x77E5;&#xFF0C;&#x6216;&#x8005;&#x5173;&#x6CE8;&#x6211;&#x7684;&#x5FAE;&#x4FE1;&#x516C;&#x4F17;&#x53F7;(&#x641C;&#x7D22;&#xFF1A;NiaoTech)&#xFF0C;&#x4E0E;&#x6211;&#x4EA4;&#x6D41;&#xFF0C;&#x8C22;&#x8C22;&#x3002;</activity-alias></p>
<h2 id="&#x53EF;&#x4F9B;&#x62D3;&#x5C55;"><a class="header-anchor" href="#&#x53EF;&#x4F9B;&#x62D3;&#x5C55;"></a>&#x53EF;&#x4F9B;&#x62D3;&#x5C55;</h2>
<p>&#x4F60;&#x6709;&#x6CA1;&#x6709;&#x53D1;&#x73B0;&#xFF0C;&#x5176;&#x5B9E;&#x5229;&#x7528; <activity-alias> &#x6807;&#x7B7E;&#x4E5F;&#x80FD;&#x5B9E;&#x73B0;&#x7ED9; App &#x6DFB;&#x52A0;&#x684C;&#x9762;&#x5FEB;&#x6377;&#x65B9;&#x5F0F;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5B9E;&#x73B0;&#x6B65;&#x9AA4;&#x548C;&#x4E0A;&#x9762;&#x6240;&#x8BB2;&#x7684;&#x5185;&#x5BB9;&#x5927;&#x540C;&#x5C0F;&#x5F02;&#x3002;&#x4E0D;&#x8FC7;&#x5B98;&#x65B9;&#x7ED9;&#x4E86;&#x53E6;&#x5916;&#x4E00;&#x79CD;&#x5B9E;&#x73B0;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x5B98;&#x7F51;&#x76F8;&#x5173;&#x4ECB;&#x7ECD;&#xFF1A;<a href="https://developer.android.com/guide/topics/ui/shortcuts.html" target="_blank" rel="external">App Shortcuts</a>&#x3002;</activity-alias></p>
<blockquote>
<p>&#x4F5C;&#x8005;&#xFF1A;&#x4EA6;&#x67AB;<br>
&#x539F;&#x6587;&#x6807;&#x9898;&#x4E3A;: Android &#x5229;&#x7528; <activity-alias> &#x52A8;&#x6001;&#x6539;&#x53D8; App &#x684C;&#x9762;&#x56FE;&#x6807;<br>
&#x539F;&#x6587;&#x94FE;&#x63A5;&#x4E3A;&#xFF1A;<a href="http://yifeng.studio/2016/12/30/android-change-app-launcher-icon-dynamically/" target="_blank" rel="external">http://yifeng.studio/2016/12/30/android-change-app-launcher-icon-dynamically/</a></activity-alias></p>
</blockquote>]]></content>
    
    <summary type="html">
    
      对于一个 app，多个桌面图标入口；或者一个 app，不同时期要显示不同的桌面图标的需求，现在比较流行的实现方法有三种：一种是给相应的 Activity 增加 intent-filter，一种是使用 process 属性，另一种是使用 activity-alias 标签属性。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>RxJava线程切换原理</title>
    <link href="http://ngudream.com/2016/12/26/rxjava-thread-switch-theory/"/>
    <id>http://ngudream.com/2016/12/26/rxjava-thread-switch-theory/</id>
    <published>2016-12-26T14:13:27.000Z</published>
    <updated>2017-02-21T13:46:58.166Z</updated>
    
    <content type="html"><![CDATA[<div><a href="https://mcxiaoke.gitbooks.io/rxdocs/content/" target="_blank" rel="external"><img class="pic lazy" data-original="/2016/12/26/rxjava-thread-switch-theory/2.png" style="float:left; width:100px; height:70px; margin-right:16px" alt=""></a><span>RxJava&#x5728;&#x5708;&#x5B50;&#x91CC;&#x8D8A;&#x6765;&#x8D8A;&#x706B;&#xFF0C;&#x76F8;&#x4FE1;&#x5F88;&#x5927;&#x7684;&#x4E00;&#x4E2A;&#x539F;&#x56E0;&#x5C31;&#x662F;&#x5B83;&#x7684;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x3002;&#x5B83;&#x7684;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x53EF;&#x4EE5;&#x7528;&#x4F18;&#x96C5;&#x6765;&#x5F62;&#x5BB9;&#xFF0C;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#xFF0C;&#x7B80;&#x5355;&#x3001;&#x65B9;&#x4FBF;&#x3002;&#x4ECA;&#x5929;&#xFF0C;&#x5C31;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x7AA5;&#x63A2;&#x4E00;&#x4E0B;RxJava&#x7684;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x539F;&#x7406;&#x3002;&#x672C;&#x6B21;&#x62C6;&#x8F6E;&#x5B50;&#xFF0C;&#x8FD8;&#x662F;&#x6309;&#x539F;&#x6837;&#xFF0C;&#x901A;&#x8FC7;&#x5C0F;&#x4F8B;&#x5B50;&#xFF0C;&#x7814;&#x8BFB;RxJava&#x6E90;&#x7801;&#x7B49;&#x6765;&#x7406;&#x89E3;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x3001;&#x7ED3;&#x6784;&#x3001;&#x539F;&#x7406;&#xFF0C;&#x6211;&#x4EEC;&#x9996;&#x8981;&#x7684;&#x662F;&#x5148;&#x5BF9;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x539F;&#x7406;&#x6709;&#x4E2A;&#x5168;&#x5C40;&#x7684;&#x6982;&#x89C8;&#xFF0C;&#x7EC6;&#x8282;&#x518D;&#x6162;&#x6162;&#x6765;&#x6DF1;&#x5165;&#x3002;</span></div>
<a id="more"></a>
<h2 id="&#x524D;&#x8A00;"><a class="header-anchor" href="#&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h2>
<p>&#x7EBF;&#x7A0B;&#x7684;&#x5207;&#x6362;&#x90FD;&#x662F;&#x901A;&#x8FC7;subscribeOn&#x6216;&#x8005;observeOn&#x6765;&#x8FDB;&#x884C;&#xFF0C;&#x751F;&#x4EA7;&#x8005;&#x7684;&#x6267;&#x884C;&#x7EBF;&#x7A0B;&#x53EA;&#x53D7;subscribeOn&#x63A7;&#x5236;&#xFF0C;&#x4E0D;&#x53D7;observeOn&#x5F71;&#x54CD;&#x3002;subscribeOn&#x6307;&#x5B9A;&#x7684;&#x7EBF;&#x7A0B;&#x73AF;&#x5883;&#x80FD;&#x4E00;&#x76F4;&#x7EF4;&#x6301;&#x5230;&#x7B2C;&#x4E00;&#x6B21;observeOn&#x51FA;&#x73B0;&#x4E4B;&#x524D;&#x3002;&#x8981;&#x8BB2;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x539F;&#x7406;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x4E0B;&#x9762;&#x7684;&#x51E0;&#x4E2A;&#x7C7B;&#x5B9A;&#x4E49;&#xFF1A;</p>
<ul>
<li>Operator</li>
</ul>
<pre><code>/**
     * Operator function for lifting into an Observable.
     */
    public interface Operator&lt;R, T&gt; extends Func1&lt;Subscriber&lt;? super R&gt;, Subscriber&lt;? super T&gt;&gt; {
        // cover for generics insanity
    }
</code></pre>
<p>Operator&#x662F;Observable&#x4E2D;&#x5B9A;&#x4E49;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5373;&#x7528;&#x6237;&#x7684;&#x903B;&#x8F91;&#x64CD;&#x4F5C;&#xFF0C;RxJava&#x6846;&#x67B6;&#x4F1A;&#x8C03;&#x7528;lift&#x65B9;&#x6CD5;&#x5C06;Operator&#x5305;&#x88C5;&#x6210;&#x4E3A;Observable&#x3002;</p>
<ul>
<li>ObserveOnSubseriber</li>
</ul>
<p>ObserveOnSubseriber&#x662F;&#x88AB;&#x8BA2;&#x9605;&#x8005;&#x7684;&#x7C7B;&#xFF0C;&#x5904;&#x7406;&#x7528;&#x6237;&#x6570;&#x636E;&#x903B;&#x8F91;&#xFF0C;&#x4E5F;&#x5373;&#x751F;&#x4EA7;&#x8005;&#xFF0C;&#x7528;&#x6765;&#x4EA7;&#x751F;&#x7528;&#x6237;&#x6570;&#x636E;&#x7684;&#x3002;</p>
<ul>
<li>OperatorObserveOn</li>
</ul>
<p>OperatorObserveOn&#x662F;&#x8BA2;&#x9605;&#x8005;&#x7684;&#x7C7B;&#xFF0C;&#x63A5;&#x6536;&#x6570;&#x636E;&#x7684;&#xFF0C;&#x4E5F;&#x5373;&#x6D88;&#x8D39;&#x8005;&#xFF0C;&#x6D88;&#x8D39;&#x751F;&#x4EA7;&#x8005;&#x53D1;&#x9001;&#x8FC7;&#x6765;&#x7684;&#x6570;&#x636E;&#x3002;</p>
<ul>
<li>Worker</li>
</ul>
<p>Worker&#x662F;&#x7EBF;&#x7A0B;&#x771F;&#x6B63;&#x6267;&#x884C;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5355;&#x72EC;&#x65B0;&#x5EFA;&#x7684;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x6216;&#x7EBF;&#x7A0B;&#x6C60;&#x4E2D;&#x7684;&#x67D0;&#x4E2A;&#x7EBF;&#x7A0B;&#x3002;</p>
<h2 id="&#x539F;&#x7406;&#x89E3;&#x6790;"><a class="header-anchor" href="#&#x539F;&#x7406;&#x89E3;&#x6790;"></a>&#x539F;&#x7406;&#x89E3;&#x6790;</h2>
<p>&#x6211;&#x4EEC;&#x5148;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;Observable&#xFF1A;</p>
<pre><code>Observable.just(null)
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe();
</code></pre>
<p>just&#x65B9;&#x6CD5;&#x53C8;&#x662F;&#x8C03;&#x7528;&#x7684;ScalarSynchronousObservable&#xFF0C;&#x7136;&#x540E;new&#x4E00;&#x4E2A;OnSubscribe&#x4F5C;&#x4E3A;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x6682;&#x4E14;&#x53EB;&#x505A;1&#x53F7;OnSubscribe&#xFF0C;&#x8FD9;&#x4E2A;&#x4E0B;&#x9762;&#x4F1A;&#x518D;&#x63D0;&#x5230;&#xFF0C;&#x4E5F;&#x662F;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x533A;&#x522B;&#x6240;&#x5728;&#xFF1A;</p>
<pre><code>protected ScalarSynchronousObservable(final T t) {
        super(new OnSubscribe&lt;T&gt;() {

            @Override
            public void call(Subscriber&lt;? super T&gt; s) {
                s.onNext(t);
                s.onCompleted();
            }

        });
        this.t = t;
    }
</code></pre>
<p>&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x8981;&#x70B9;&#x5728;lift()&#x51FD;&#x6570;&#x91CC;&#x9762;&#xFF0C;&#x90FD;&#x662F;&#x57FA;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x57FA;&#x7840;&#x7684;&#x53D8;&#x6362;&#x65B9;&#x6CD5;&#xFF1A; lift(Operator)</p>
<p>&#x5148;&#x6765;&#x770B;&#x4E00;&#x4E0B;&#x5B83;&#x7684;&#x6E90;&#x7801;&#xFF1A;</p>
<pre><code>public final &lt;R&gt; Observable&lt;R&gt; lift(final Operator&lt;? extends R, ? super T&gt; operator) {
        return new Observable&lt;R&gt;(new OnSubscribe&lt;R&gt;() {
            @Override
            public void call(Subscriber&lt;? super R&gt; o) {
                try {
                    Subscriber&lt;? super T&gt; st = hook.onLift(operator).call(o);
                    try {
                        // new Subscriber created and being subscribed with so &apos;onStart&apos; it
                        st.onStart();
                        onSubscribe.call(st);
                    } catch (Throwable e) {
                        // localized capture of errors rather than it skipping all operators
                        // and ending up in the try/catch of the subscribe method which then
                        // prevents onErrorResumeNext and other similar approaches to error handling
                        if (e instanceof OnErrorNotImplementedException) {
                            throw (OnErrorNotImplementedException) e;
                        }
                        st.onError(e);
                    }
                } catch (Throwable e) {
                    if (e instanceof OnErrorNotImplementedException) {
                        throw (OnErrorNotImplementedException) e;
                    }
                    // if the lift function failed all we can do is pass the error to the final Subscriber
                    // as we don&apos;t have the operator available to us
                    o.onError(e);
                }
            }
        });
    }
</code></pre>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x8C03;&#x7528;lift()&#x65B9;&#x6CD5;&#x540E;&#xFF08;&#x5373;&#x6267;&#x884C;subscribeOn&#x6216;observeOn&#xFF09;&#xFF0C;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x7684;Observable&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x8C03;&#x7528;&#x8005;&#x7684;Observable&#xFF0C;&#x8FD9;&#x91CC;&#x540C;&#x6837;&#x662F;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;OnSubscribe&#xFF0C;&#x6682;&#x4E14;&#x53EB;&#x505A;2&#x53F7;OnSubscribe&#xFF0C;&#x6211;&#x4EEC;&#x518D;&#x56DE;&#x5934;&#x770B;&#x770B;&#xFF0C;<strong>&#x8FD9;&#x4E2A;OnSubscribe&#x4E0E;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;just()&#x65B9;&#x6CD5;&#x91CC;&#x9762;&#x8C03;&#x7528;&#x5230;&#x7684;OnSubscribe&#x4E0D;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;</strong>&#x3002;</p>
<p>&#x8FD9;&#x91CC;&#x662F;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x5173;&#x952E;&#x70B9;&#x3002;&#x5F53;&#x8C03;&#x7528;&#x94FE;&#x6765;&#x5230;lift()&#x65B9;&#x6CD5;&#x540E;&#xFF0C;&#x4F7F;&#x7528;&#x7684;&#x662F;lift()&#x6240;&#x8FD4;&#x56DE;&#x7684;&#x65B0;&#x7684; Observable&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5B83;&#x6240;&#x89E6;&#x53D1;&#x7684;onSubscribe.call(subscriber)&#x4E5F;&#x662F;&#x7528;&#x65B0;&#x7684;Observable&#x4E2D;&#x7684;&#x65B0; OnSubscribe&#xFF0C;&#x5373;&#x6211;&#x4EEC;&#x4E0A;&#x9762;&#x547D;&#x540D;&#x7684;2&#x53F7;OnSubscribe&#x3002;</p>
<h2 id="operatorsubscribeon"><a class="header-anchor" href="#operatorsubscribeon"></a>OperatorSubscribeOn</h2>
<p>&#x518D;&#x6765;&#x770B;lift()&#x51FD;&#x6570;&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x5B83;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;try&#x65B9;&#x6CD5;&#x4F53;&#x91CC;&#x9762;&#x6709;&#x4E2A;onSubscribe&#xFF0C;&#x8FD9;&#x4E2A;OnSubscribe&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x524D;&#x9762;&#x5B9A;&#x4E49;&#x7684;1&#x53F7;onSubscribe&#xFF0C;&#x5B83;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x8C03;&#x7528;just()&#x65B9;&#x6CD5;&#x540E;&#x521B;&#x5EFA;&#x7684;&#x539F;&#x59CB;Observable&#x3002;</p>
<p>&#x90A3;&#x5B83;&#x662F;&#x600E;&#x4E48;&#x505A;&#x5230;&#x5207;&#x6362;&#x7EBF;&#x7A0B;&#x7684;&#x5462;&#xFF1F;&#x5982;&#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;subscribeOn(<a href="http://Schedulers.io" target="_blank" rel="external">Schedulers.io</a>())&#xFF0C;&#x5B83;&#x901A;&#x8FC7;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF08;&#x4E3E;&#x4F8B;&#xFF09;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;Subscriber&#xFF1A;</p>
<pre><code>Subscriber&lt;? super T&gt; st = hook.onLift(operator).call(o);//&#x5C06;&#x65B0;&#x7684;Subscriber&#x5BF9;&#x8C61;o&#x4F20;&#x9012;&#x7ED9;OperatorSubscribeOn&#xFF0C;&#x5B83;&#x91CC;&#x9762;&#x7684;call()&#x65B9;&#x6CD5;&#x53BB;&#x521B;&#x5EFA;&#x65B0;&#x7684;Worker&#x7EBF;&#x7A0B;

//OperatorSubscribeOn&#x7684;call(o)&#x65B9;&#x6CD5;
@Override
    public Subscriber&lt;? super Observable&lt;T&gt;&gt; call(final Subscriber&lt;? super T&gt; subscriber) {
        final Worker inner = scheduler.createWorker();//&#x65B0;&#x5EFA;&#x7EBF;&#x7A0B;
        subscriber.add(inner);
        return new Subscriber&lt;Observable&lt;T&gt;&gt;(subscriber) {

            @Override
            public void onCompleted() {
                // ignore because this is a nested Observable and we expect only 1 Observable&lt;T&gt; emitted to onNext
            }

            @Override
            public void onError(Throwable e) {
                subscriber.onError(e);
            }

            @Override
            public void onNext(final Observable&lt;T&gt; o) {
                inner.schedule(new Action0() {

                    @Override
                    public void call() {
                        final Thread t = Thread.currentThread();

                        o.unsafeSubscribe(new Subscriber&lt;T&gt;(subscriber) {

                            @Override
                            public void onCompleted() {
                                subscriber.onCompleted();
                            }

                            @Override
                            public void onError(Throwable e) {
                                subscriber.onError(e);
                            }

                            @Override
                            public void onNext(T t) {
                                subscriber.onNext(t);
                            }

                            @Override
                            public void setProducer(final Producer producer) {
                                subscriber.setProducer(new Producer() {

                                    @Override
                                    public void request(final long n) {
                                        if (Thread.currentThread() == t) {//&#x5982;&#x679C;&#x662F;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#xFF0C;&#x5219;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6267;&#x884C;
                                            // don&apos;t schedule if we&apos;re already on the thread (primarily for first setProducer call)
                                            // see unit test &apos;testSetProducerSynchronousRequest&apos; for more context on this
                                            producer.request(n);
                                        } else {//&#x4E0D;&#x662F;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#xFF0C;&#x5C06;&#x5728;&#x65B0;&#x521B;&#x5EFA;&#x7684;Worker&#x7EBF;&#x7A0B;inner&#x4E2D;&#x6267;&#x884C;
                                            inner.schedule(new Action0() {

                                                @Override
                                                public void call() {
                                                    producer.request(n);
                                                }
                                            });
                                        }
                                    }

                                });
                            }

                        });
                    }
                });
            }

        };
    }
</code></pre>
<p>&#x7136;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528;1&#x53F7;OnSubscribe&#x7684;call()&#x65B9;&#x6CD5; onSubscribe.call(st) &#x5C06;&#x65B0;&#x521B;&#x5EFA;&#x7684;Subscriber&#x4E0E;&#x539F;&#x59CB;&#x7684;Observable&#x5173;&#x8054;&#x8D77;&#x6765;&#xFF0C;&#x5373;&#x65B0;&#x7684;Subscriber&#x53BB;&#x8BA2;&#x9605;&#x539F;&#x59CB;&#x7684;Observable&#x3002;&#x8FD9;&#x6837;&#xFF0C;&#x751F;&#x4EA7;&#x8005;</p>
<p>&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;Scheduler&#x7C7B;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x8D1F;&#x8D23;&#x5F02;&#x6B65;&#x7EBF;&#x7A0B;&#x5904;&#x7406;&#xFF0C;&#x5B83;&#x53EA;&#x8D1F;&#x8D23;&#x901A;&#x8FC7;createWorker()&#x7C7B;&#x521B;&#x5EFA;&#x51FA;&#x4E00;&#x4E2A;Worker&#x5BF9;&#x8C61;&#xFF0C;&#x771F;&#x6B63;&#x8D1F;&#x8D23;&#x4EFB;&#x52A1;&#x7684;&#x5EF6;&#x65F6;&#x5904;&#x7406;&#x3002;</p>
<h2 id="operatorobserveon"><a class="header-anchor" href="#operatorobserveon"></a>OperatorObserveOn</h2>
<p>observeOn&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#x4E5F;&#x662F;&#x8C03;&#x7528;&#x4E86;lift()&#x65B9;&#x6CD5;&#xFF0C;&#x7136;&#x540E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;operator&#xFF0C;</p>
<pre><code>//OperatorObserveOn.java
@Override
    public Subscriber&lt;? super T&gt; call(Subscriber&lt;? super T&gt; child) {
        if (scheduler instanceof ImmediateScheduler) {
            // avoid overhead, execute directly
            return child;
        } else if (scheduler instanceof TrampolineScheduler) {
            // avoid overhead, execute directly
            return child;
        } else {
            ObserveOnSubscriber&lt;T&gt; parent = new ObserveOnSubscriber&lt;T&gt;(scheduler, child);
            parent.init();
            return parent;
        }
    }

public ObserveOnSubscriber(Scheduler scheduler, Subscriber&lt;? super T&gt; child) {
            this.child = child;
            this.recursiveScheduler = scheduler.createWorker();//&#x521B;&#x5EFA;&#x65B0;&#x7684;worker&#x7EBF;&#x7A0B;
            if (UnsafeAccess.isUnsafeAvailable()) {
                queue = new SpscArrayQueue&lt;Object&gt;(RxRingBuffer.SIZE);
            } else {
                queue = new SynchronizedQueue&lt;Object&gt;(RxRingBuffer.SIZE);
            }
            this.scheduledUnsubscribe = new ScheduledUnsubscribe(recursiveScheduler);
        }

protected void schedule() {
            if (COUNTER_UPDATER.getAndIncrement(this) == 0) {
                recursiveScheduler.schedule(action);//&#x7528;&#x76F8;&#x5E94;&#x7684;&#x7EBF;&#x7A0B;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x8F93;&#x51FA;&#x8C03;&#x5EA6;
            }
        }
</code></pre>
<p>&#x7ED3;&#x5408;&#x6254;&#x7269;&#x7EBF;&#x5927;&#x5927;&#x7684;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/12/26/rxjava-thread-switch-theory/1.jpg" class="lazy">
</div>
<br>
&#x672A;&#x5B8C;&#x5F85;&#x7EED;......
<p><a href="http://blog.piasy.com/AdvancedRxJava/" target="_blank" rel="external">RxJava&#x7CFB;&#x5217;&#x6587;&#x7AE0;</a></p>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="https://mcxiaoke.gitbooks.io/rxdocs/content/" target="_blank" rel="external">https://mcxiaoke.gitbooks.io/rxdocs/content/</a></li>
<li><a href="https://gank.io/post/560e15be2dca930e00da1083#toc_16" target="_blank" rel="external">https://gank.io/post/560e15be2dca930e00da1083#toc_16</a></li>
<li><a href="http://www.jianshu.com/p/1ab2b7b61100" target="_blank" rel="external">http://www.jianshu.com/p/1ab2b7b61100</a></li>
<li><a href="https://www.zhihu.com/question/41779170?sort=created" target="_blank" rel="external">https://www.zhihu.com/question/41779170?sort=created</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;a href=&quot;https://mcxiaoke.gitbooks.io/rxdocs/content/&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/12/26/rxjava-thread-switch-theory/2.png&quot; style=&quot;float:left; width:100px; height:70px; margin-right:16px&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;span&gt;RxJava&amp;#x5728;&amp;#x5708;&amp;#x5B50;&amp;#x91CC;&amp;#x8D8A;&amp;#x6765;&amp;#x8D8A;&amp;#x706B;&amp;#xFF0C;&amp;#x76F8;&amp;#x4FE1;&amp;#x5F88;&amp;#x5927;&amp;#x7684;&amp;#x4E00;&amp;#x4E2A;&amp;#x539F;&amp;#x56E0;&amp;#x5C31;&amp;#x662F;&amp;#x5B83;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x3002;&amp;#x5B83;&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x53EF;&amp;#x4EE5;&amp;#x7528;&amp;#x4F18;&amp;#x96C5;&amp;#x6765;&amp;#x5F62;&amp;#x5BB9;&amp;#xFF0C;&amp;#x94FE;&amp;#x5F0F;&amp;#x8C03;&amp;#x7528;&amp;#xFF0C;&amp;#x7B80;&amp;#x5355;&amp;#x3001;&amp;#x65B9;&amp;#x4FBF;&amp;#x3002;&amp;#x4ECA;&amp;#x5929;&amp;#xFF0C;&amp;#x5C31;&amp;#x8BA9;&amp;#x6211;&amp;#x4EEC;&amp;#x6765;&amp;#x7AA5;&amp;#x63A2;&amp;#x4E00;&amp;#x4E0B;RxJava&amp;#x7684;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x539F;&amp;#x7406;&amp;#x3002;&amp;#x672C;&amp;#x6B21;&amp;#x62C6;&amp;#x8F6E;&amp;#x5B50;&amp;#xFF0C;&amp;#x8FD8;&amp;#x662F;&amp;#x6309;&amp;#x539F;&amp;#x6837;&amp;#xFF0C;&amp;#x901A;&amp;#x8FC7;&amp;#x5C0F;&amp;#x4F8B;&amp;#x5B50;&amp;#xFF0C;&amp;#x7814;&amp;#x8BFB;RxJava&amp;#x6E90;&amp;#x7801;&amp;#x7B49;&amp;#x6765;&amp;#x7406;&amp;#x89E3;&amp;#x6574;&amp;#x4E2A;&amp;#x8FC7;&amp;#x7A0B;&amp;#x3001;&amp;#x7ED3;&amp;#x6784;&amp;#x3001;&amp;#x539F;&amp;#x7406;&amp;#xFF0C;&amp;#x6211;&amp;#x4EEC;&amp;#x9996;&amp;#x8981;&amp;#x7684;&amp;#x662F;&amp;#x5148;&amp;#x5BF9;&amp;#x7EBF;&amp;#x7A0B;&amp;#x5207;&amp;#x6362;&amp;#x7684;&amp;#x539F;&amp;#x7406;&amp;#x6709;&amp;#x4E2A;&amp;#x5168;&amp;#x5C40;&amp;#x7684;&amp;#x6982;&amp;#x89C8;&amp;#xFF0C;&amp;#x7EC6;&amp;#x8282;&amp;#x518D;&amp;#x6162;&amp;#x6162;&amp;#x6765;&amp;#x6DF1;&amp;#x5165;&amp;#x3002;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>如何用 Clean 架构开发 Android 应用</title>
    <link href="http://ngudream.com/2016/12/21/android-clean-architecture-pattern/"/>
    <id>http://ngudream.com/2016/12/21/android-clean-architecture-pattern/</id>
    <published>2016-12-21T12:59:53.000Z</published>
    <updated>2017-01-15T07:58:44.317Z</updated>
    
    <content type="html"><![CDATA[<div><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external"><img class="pic lazy" data-original="/2016/12/21/android-clean-architecture-pattern/mvp_clean.png" style="float:left; width:100px; height:56px; margin-right:16px" alt=""></a>
<span>&#x3010;&#x7FFB;&#x8BD1;&#x3011;&#x81EA;&#x6211;&#x5F00;&#x59CB;&#x5F00;&#x53D1; Android &#x5E94;&#x7528;&#x4EE5;&#x6765;&#x5C31;&#x6709;&#x4E00;&#x79CD;&#x611F;&#x89C9;&#x2014;&#x2014;&#x6211;&#x53EF;&#x4EE5;&#x628A;&#x5B83;&#x505A;&#x5F97;&#x66F4;&#x597D;&#x3002;&#x5728;&#x6211;&#x7684;&#x804C;&#x4E1A;&#x751F;&#x6DAF;&#x4E2D;&#xFF0C;&#x6211;&#x770B;&#x5230;&#x8FC7;&#x4E0D;&#x5C11;&#x70C2;&#x4EE3;&#x7801;&#xFF0C;&#x5176;&#x4E2D;&#x4E00;&#x4E9B;&#x8FD8;&#x662F;&#x6211;&#x81EA;&#x5DF1;&#x5199;&#x7684;&#x3002;Android &#x7684;&#x590D;&#x6742;&#x6027;&#x548C;&#x70C2;&#x4EE3;&#x7801;&#x52BF;&#x5FC5;&#x9020;&#x6210;&#x5927;&#x95EE;&#x9898;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x4ECE;&#x9519;&#x8BEF;&#x4E2D;&#x6C72;&#x53D6;&#x6559;&#x8BAD;&#x5E76;&#x6301;&#x7EED;&#x6539;&#x5584;&#x5341;&#x5206;&#x91CD;&#x8981;&#x3002;&#x5728;&#x591A;&#x6B21;&#x5C1D;&#x8BD5;&#x5BFB;&#x627E;&#x66F4;&#x597D;&#x7684;&#x5F00;&#x53D1;&#x65B9;&#x5F0F;&#x540E;&#xFF0C;&#x6211;&#x9047;&#x5230;&#x4E86; Clean &#x67B6;&#x6784;&#xFF08;&#x7B80;&#x6D01;&#x67B6;&#x6784;&#xFF09;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x5C06;&#x5176;&#x5E94;&#x7528;&#x5728;&#x4E86; Android &#x5F00;&#x53D1;&#x4E2D;&#xFF0C;&#x5E76;&#x7ED3;&#x5408;&#x6211;&#x7684;&#x5F00;&#x53D1;&#x7ECF;&#x9A8C;&#x505A;&#x4E86;&#x8C03;&#x6574;&#xFF0C;&#x5199;&#x51FA;&#x4E86;&#x8FD9;&#x7BC7;&#x6211;&#x89C9;&#x5F97;&#x8F83;&#x4E3A;&#x5B9E;&#x7528;&#x3001;&#x503C;&#x5F97;&#x5206;&#x4EAB;&#x7684;&#x6587;&#x7AE0;&#x3002;</span></div>
<a id="more"></a>
<p>&#x82F1;&#x6587;&#x539F;&#x6587;&#xFF1A;<a href="https://medium.com/@dmilicic/a-detailed-guide-on-developing-android-apps-using-the-clean-architecture-pattern-d38d71e94029#.8yosmtpre" target="_blank" rel="external">A detailed guide on developing Android apps using the Clean Architecture pattern</a></p>
<blockquote>
<p><a href="https://www.oschina.net/" target="_blank" rel="external">&#x6765;&#x81EA;&#x5F00;&#x6E90;&#x4E2D;&#x56FD;</a><br>
&#x539F;&#x6587;&#x94FE;&#x63A5;:&#x3000;<a href="https://www.oschina.net/translate/developing-android-apps-using-the-clean-architecture-pattern?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">&#x5982;&#x4F55;&#x7528; Clean &#x67B6;&#x6784;&#x5F00;&#x53D1; Android &#x5E94;&#x7528; </a><br>
&#x53C2;&#x4E0E;&#x7FFB;&#x8BD1; (5&#x4EBA;) : <a href="https://my.oschina.net/jamesfancy" target="_blank" rel="external">&#x8FB9;&#x57CE;</a>, <a href="https://my.oschina.net/tocy" target="_blank" rel="external">Tocy</a>, <a href="https://my.oschina.net/viyinfo" target="_blank" rel="external">Viyi</a>, <a href="https://my.oschina.net/sensen163" target="_blank" rel="external">&#x7D2B;&#x7CFB;&#x6D41;&#x6708;</a>, <a href="https://my.oschina.net/crooner" target="_blank" rel="external">&#x65E0;&#x82E5;</a></p>
</blockquote>
<p>&#x6700;&#x8FD1;&#x6211;&#x7528; Clean &#x67B6;&#x6784;&#x4E3A;&#x5BA2;&#x6237;&#x6784;&#x5EFA;&#x4E86; app&#xFF0C;&#x5E76;&#x6536;&#x5230;&#x4E86;&#x5F88;&#x597D;&#x7684;&#x53CD;&#x9988;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E2D;&#x6211;&#x4F1A;&#x624B;&#x628A;&#x624B;&#x6559;&#x4F60;&#x5982;&#x4F55;&#x7528; Clean &#x67B6;&#x6784;&#x5F00;&#x53D1; Android &#x5E94;&#x7528;&#x3002;</p>
<h2 id="&#x4EC0;&#x4E48;&#x662F;-clean-&#x67B6;&#x6784;&#xFF1F;"><a class="header-anchor" href="#&#x4EC0;&#x4E48;&#x662F;-clean-&#x67B6;&#x6784;&#xFF1F;"></a>&#x4EC0;&#x4E48;&#x662F; Clean &#x67B6;&#x6784;&#xFF1F;</h2>
<p>&#x6709;&#x8BB8;&#x591A;&#x6587;&#x7AE0;&#x5DF2;&#x7ECF;&#x5BF9; Clean &#x67B6;&#x6784;&#x7684;&#x6982;&#x5FF5;&#x505A;&#x8FC7;&#x4ECB;&#x7ECD;&#x3002;&#x5728;&#x6B64;&#x6211;&#x8BB2;&#x4E00;&#x8BB2; Clean &#x67B6;&#x6784;&#x7684;&#x6838;&#x5FC3;&#x5185;&#x5BB9;&#x3002;</p>
<p>&#x901A;&#x5E38;&#x6240;&#x8BF4;&#x7684; Clean&#xFF0C;&#x662F;&#x6307;&#x4EE3;&#x7801;&#x88AB;&#x5206;&#x4E3A;&#x50CF;&#x6D0B;&#x8471;&#x72B6;&#x7684;&#x591A;&#x4E2A;&#x5C42;&#xFF0C;&#x5176;<strong>&#x89C4;&#x5219;&#x57FA;&#x7840;</strong>&#xFF1A;&#x5185;&#x5C42;&#x4E0D;&#x9700;&#x8981;&#x77E5;&#x9053;&#x5916;&#x5C42;&#x5728;&#x5E72;&#x4EC0;&#x4E48;&#x3002;&#x5373;<strong>&#x5411;&#x5185;&#x4F9D;&#x8D56;</strong>&#x3002;</p>
<p>&#x8FD9;&#x662F;&#x4E0A;&#x4E00;&#x6BB5;&#x5185;&#x5BB9;&#x7684;&#x76F4;&#x89C2;&#x5448;&#x73B0;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/12/21/android-clean-architecture-pattern/110613_GK36_2903254.jpg" class="lazy">
<br>
<span style="width:100%">&#x7B80;&#x6D01;&#x67B6;&#x6784;&#x6781;&#x4F73;&#x7684;&#x89C6;&#x89C9;&#x8868;&#x73B0;&#x3002;&#x56FE;&#x7247;&#x6765;&#x81EA;<a href="https://blog.8thlight.com/uncle-bob/archive.html" target="_blank" rel="external">Uncle Bob</a>&#x3002;</span>
</div>
<p>&#x6587;&#x4E2D;&#x63D0;&#x5230;&#x7684; Clean &#x67B6;&#x6784;&#x4F1A;&#x7ED9;&#x4EE3;&#x7801;&#x63D0;&#x4F9B;&#x4E00;&#x4E0B;&#x5C5E;&#x6027;&#xFF1A;</p>
<ul>
<li>&#x4E0D;&#x4F9D;&#x8D56;&#x6846;&#x67B6;&#x3002;</li>
<li>&#x53EF;&#x6D4B;&#x8BD5;&#x3002;</li>
<li>&#x4E0D;&#x4F9D;&#x8D56; UI&#x3002;</li>
<li>&#x4E0D;&#x4F9D;&#x8D56;&#x6570;&#x636E;&#x5E93;&#x3002;</li>
<li>&#x4E0D;&#x4F9D;&#x8D56;&#x5176;&#x5B83;&#x5916;&#x90E8;&#x529B;&#x91CF;</li>
</ul>
<p>&#x6211;&#x5E0C;&#x671B;&#x4F60;&#x80FD;&#x7406;&#x89E3;&#x8FD9;&#x51E0;&#x70B9;&#x5728;&#x4E0B;&#x9762;&#x7684;&#x793A;&#x4F8B;&#x4E2D;&#x662F;&#x5982;&#x4F55;&#x4F53;&#x73B0;&#x7684;&#x3002;&#x66F4;&#x591A;&#x5173;&#x4E8E; Clean &#x67B6;&#x6784;&#x7684;&#x89E3;&#x91CA;&#xFF0C;&#x6211;&#x63A8;&#x8350;&#x4F60;&#x770B;&#x770B;&#x8FD9;&#x7BC7;<a href="https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html" target="_blank" rel="external">&#x6587;&#x7AE0;</a>&#x548C;&#x8FD9;&#x4E2A;<a href="https://vimeo.com/43612849" target="_blank" rel="external">&#x89C6;&#x9891;</a>&#x3002;</p>
<h2 id="&#x8FD9;&#x5728;-anroid-&#x4E2D;&#x610F;&#x5473;&#x7740;&#x4EC0;&#x4E48;"><a class="header-anchor" href="#&#x8FD9;&#x5728;-anroid-&#x4E2D;&#x610F;&#x5473;&#x7740;&#x4EC0;&#x4E48;"></a>&#x8FD9;&#x5728; Anroid &#x4E2D;&#x610F;&#x5473;&#x7740;&#x4EC0;&#x4E48;</h2>
<p>&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x53EF;&#x4EE5;&#x6709;&#x4EFB;&#x610F;&#x6570;&#x91CF;&#x7684;&#x5C42;&#xFF0C;&#x9664;&#x975E;&#x4F60;&#x7684; Android &#x5E94;&#x7528;&#x5305;&#x542B;&#x4F01;&#x4E1A;&#x7EA7;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#xFF0C;&#x6700;&#x5E38;&#x89C1;&#x7684;&#x662F;3&#x5C42;&#xFF1A;</p>
<ul>
<li>&#x5916;&#x5C42;&#xFF1A;&#x5B9E;&#x73B0;&#x5C42;</li>
<li>&#x4E2D;&#x95F4;&#x5C42;&#xFF1A;&#x63A5;&#x53E3;&#x9002;&#x914D;&#x5C42;</li>
<li>&#x5185;&#x5C42;&#xFF1A;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C42;</li>
</ul>
<p><strong>&#x5B9E;&#x73B0;&#x5C42;</strong>&#x662F;&#x6846;&#x67B6;&#x8981;&#x6C42;&#x6240;&#x6709;&#x4E8B;&#x60C5;&#x53D1;&#x751F;&#x7684;&#x5730;&#x65B9;&#x3002;&#x6784;&#x67B6;&#x4EE3;&#x7801;<strong>&#x5305;&#x62EC;&#x6BCF;&#x884C;&#x4EE3;&#x7801;&#x90FD;&#x4E0D;&#x662F;&#x5728;&#x89E3;&#x51B3;&#x4F60;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;</strong>&#xFF0C;&#x6BD4;&#x5982;&#x6240;&#x6709; Android &#x5F00;&#x53D1;&#x8005;&#x90FD;&#x559C;&#x6B22;&#x521B;&#x5EFA;&#x7684; Activity &#x548C; Fragment&#xFF0C;&#x53D1;&#x9001; Intent&#xFF0C;&#x4EE5;&#x53CA;&#x5176;&#x5B83;&#x7F51;&#x7EDC;&#x548C;&#x6570;&#x636E;&#x5E93;&#x76F8;&#x5173;&#x7684;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#x3002;</p>
<p><strong>&#x63A5;&#x53E3;&#x9002;&#x914D;&#x5C42;</strong>&#x7684;&#x76EE;&#x6807;&#x662F;&#x8FDE;&#x63A5;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x548C;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#x3002;</p>
<p>&#x6700;&#x91CD;&#x8981;&#x7684;&#x95EE;&#x9898;&#x662F;<strong>&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C42;</strong>&#x3002;&#x8FD9;&#x91CC;&#x662F;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x4E2D;&#x5B9E;&#x9645;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x5730;&#x65B9;&#x3002;&#x8FD9;&#x91CC;&#x4E0D;&#x4F1A;&#x6709;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#xFF0C;&#x4F60;<strong>&#x5E94;&#x8BE5;&#x80FD;&#x5728;&#x6CA1;&#x6709;&#x6A21;&#x62DF;&#x5668;&#x652F;&#x6301;&#x4E0B;&#x8FD0;&#x884C;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;</strong>&#x3002;&#x8FD9;&#x6837;&#x4F60;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#x624D;<strong>&#x5BB9;&#x6613;&#x6D4B;&#x8BD5;&#x3001;&#x5F00;&#x53D1;&#x548C;&#x7EF4;&#x62A4;</strong>&#x3002;&#x8FD9;&#x662F; Clean &#x67B6;&#x6784;&#x7684;&#x4E3B;&#x8981;&#x4F18;&#x52BF;&#x3002;</p>
<p>&#x6838;&#x5FC3;&#x5C42;&#x4E4B;&#x4E0A;&#x7684;&#x6BCF;&#x4E00;&#x5C42;&#x90FD;&#x9700;&#x8981;&#x4E3A;&#x4E0B;&#x4E00;&#x5C42;&#x8F6C;&#x6362;&#x6A21;&#x578B;&#x7ED3;&#x6784;&#x3002;&#x5185;&#x5C42;&#x4E0D;&#x4F1A;&#x5F15;&#x7528;&#x5916;&#x5C42;&#x7684;&#x6A21;&#x578B;&#xFF0C;&#x4F46;&#x5916;&#x5C42;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5185;&#x5C42;&#x7684;&#x6A21;&#x578B;&#x3002;&#x8FD9;&#x4E5F;&#x662F;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684;<strong>&#x4F9D;&#x8D56;&#x89C4;&#x5219;</strong>&#x3002;&#x867D;&#x7136;&#x8FD9;&#x6837;&#x505A;&#x4F1A;&#x5BFC;&#x81F4;&#x66F4;&#x5927;&#x7684;&#x5F00;&#x9500;&#xFF0C;&#x4F46;&#x80FD;&#x786E;&#x4FDD;&#x5404;&#x5C42;&#x4EE3;&#x7801;&#x4E4B;&#x95F4;&#x7684;&#x89E3;&#x8026;&#x3002;</p>
<blockquote>
<p>&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x6A21;&#x578B;&#x8F6C;&#x6362;&#xFF1F;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x5F53;&#x903B;&#x8F91;&#x5C42;&#x7684;&#x6A21;&#x578B;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x5F88;&#x4F18;&#x96C5;&#x5730;&#x5C55;&#x73B0;&#x7ED9;&#x7528;&#x6237;&#xFF0C;&#x6216;&#x662F;&#x9700;&#x8981;&#x540C;&#x65F6;&#x5C55;&#x793A;&#x591A;&#x4E2A;&#x903B;&#x8F91;&#x5C42;&#x7684;&#x6A21;&#x578B;&#x65F6;&#xFF0C;&#x6700;&#x597D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; ViewModel &#x7C7B;&#x6765;&#x66F4;&#x597D;&#x7684;&#x8FDB;&#x884C; UI &#x5C55;&#x793A;&#x3002;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x5728;&#x5916;&#x5C42;&#x4F7F;&#x7528;&#x8F6C;&#x6362;&#x5668;&#x7C7B;&#x5C06;&#x4E1A;&#x52A1;&#x6A21;&#x578B;&#x8F6C;&#x6362;&#x6210;&#x5408;&#x9002;&#x7684; ViewModel&#x3002;</p>
</blockquote>
<blockquote>
<p>&#x53E6;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;&#x5047;&#x8BBE;&#x4F60;&#x8981;&#x4ECE;&#x5916;&#x90E8;&#x6570;&#x636E;&#x5C42;&#x7684;  ContentProvider &#x5F97;&#x5230;&#x4E00;&#x4E2A; Cursor &#x5BF9;&#x8C61;&#xFF0C;&#x5916;&#x5C42;&#x8981;&#x5148;&#x628A;&#x5B83;&#x8F6C;&#x6362;&#x6210;&#x5185;&#x5C42;&#x7684;&#x4E1A;&#x52A1;&#x6A21;&#x578B;&#xFF0C;&#x518D;&#x9001;&#x7ED9;&#x4F60;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5C42;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x3002;</p>
</blockquote>
<p>&#x6587;&#x672B;&#x6211;&#x4F1A;&#x7ED9;&#x51FA;&#x66F4;&#x591A;&#x76F8;&#x5173;&#x8D44;&#x6E90;&#xFF0C;&#x4EE5;&#x4FBF;&#x4F60;&#x4E86;&#x89E3;&#x66F4;&#x591A;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x3002;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x4E86;&#x89E3; Clean &#x67B6;&#x6784;&#x7684;&#x57FA;&#x672C;&#x539F;&#x7406;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7528;&#x4EE3;&#x7801;&#x793A;&#x4F8B;&#x8FDB;&#x884C;&#x8BF4;&#x660E;&#xFF1A;&#x7528; Clean &#x67B6;&#x6784;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x529F;&#x80FD;&#x3002;</p>
<h2 id="&#x600E;&#x6837;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;-clean-&#x5E94;&#x7528;&#xFF1F;"><a class="header-anchor" href="#&#x600E;&#x6837;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;-clean-&#x5E94;&#x7528;&#xFF1F;"></a>&#x600E;&#x6837;&#x5F00;&#x59CB;&#x6784;&#x5EFA;&#x4E00;&#x4E2A; Clean &#x5E94;&#x7528;&#xFF1F;</h2>
<p>&#x6211;&#x505A;&#x4E86;&#x4E00;&#x4E2A;<a href="https://github.com/dmilicic/Android-Clean-Boilerplate" target="_blank" rel="external">&#x6837;&#x677F;&#x9879;&#x76EE;</a>&#xFF0C;&#x5B83;&#x4E3A;&#x4F60;&#x63D0;&#x4F9B;&#x4E86;&#x6240;&#x6709;&#x7684;&#x5E95;&#x5C42;&#x547D;&#x4EE4;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A; <strong>Clean &#x542F;&#x52A8;&#x5305;</strong>&#xFF0C;&#x5728;&#x8BBE;&#x8BA1;&#x4E4B;&#x521D;&#x5C31;&#x5305;&#x542B;&#x6700;&#x5E38;&#x7528;&#x7684;&#x4E00;&#x4E9B;&#x5DE5;&#x5177;&#x5305;&#x3002;&#x4F60;&#x53EF;&#x514D;&#x8D39;&#x4E0B;&#x8F7D;&#x548C;&#x4FEE;&#x6539;&#xFF0C;&#x8FD8;&#x80FD;&#x7528;&#x5B83;&#x5EFA;&#x7ACB;&#x81EA;&#x5DF1;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x3002;</p>
<p>&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x627E;&#x5230;&#x5165;&#x95E8;&#x9879;&#x76EE;: <a href="https://github.com/dmilicic/Android-Clean-Boilerplate" target="_blank" rel="external">Android Clean Boilerplate</a></p>
<h2 id="&#x5F00;&#x59CB;&#x7F16;&#x5199;&#x65B0;&#x7528;&#x4F8B;"><a class="header-anchor" href="#&#x5F00;&#x59CB;&#x7F16;&#x5199;&#x65B0;&#x7528;&#x4F8B;"></a>&#x5F00;&#x59CB;&#x7F16;&#x5199;&#x65B0;&#x7528;&#x4F8B;</h2>
<p>&#x672C;&#x8282;&#x5C06;&#x89E3;&#x91CA;&#x6240;&#x6709;&#x9700;&#x8981;&#x7F16;&#x5199;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F60;&#x53EF;&#x901A;&#x8FC7;&#x4E0A;&#x4E00;&#x8282;&#x63D0;&#x4F9B;&#x7684;&#x6837;&#x677F;&#x6587;&#x4EF6;&#x4F7F;&#x7528; Clean &#x65B9;&#x6CD5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x3002; &#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x53EA;&#x4EE3;&#x8868;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x90E8;&#x5206;&#x72EC;&#x7ACB;&#x529F;&#x80FD;&#x3002; &#x7528;&#x6237;&#xFF08;&#x4F8B;&#x5982;&#xFF0C;&#x5728;&#x70B9;&#x51FB;&#x65F6;&#xFF09;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x542F;&#x7528;&#x6216;&#x4E0D;&#x542F;&#x7528;&#x3002;</p>
<p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x6765;&#x89E3;&#x91CA;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x7684;&#x7ED3;&#x6784;&#x548C;&#x672F;&#x8BED;&#x3002;&#x8FD9;&#x91CC;&#x8981;&#x8BF4;&#x7684;&#x662F;&#x6211;&#x5982;&#x4F55;&#x6784;&#x5EFA;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#xFF0C;&#x5176;&#x65B9;&#x6CD5;&#x5E76;&#x4E0D;&#x56FA;&#x5B9A;&#xFF0C;&#x4F60;&#x53EF;&#x6839;&#x636E;&#x4F60;&#x7684;&#x9700;&#x6C42;&#x7EC4;&#x7EC7;&#x4E0D;&#x540C;&#x7684;&#x7ED3;&#x6784;&#x3002;</p>
<h3 id="&#x7ED3;&#x6784;"><a class="header-anchor" href="#&#x7ED3;&#x6784;"></a>&#x7ED3;&#x6784;</h3>
<p>&#x4E00;&#x822C;&#x7684; Android &#x5E94;&#x7528;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul>
<li>&#x5916;&#x5C42;&#x5305;&#xFF1A;UI&#x3001;Storage&#x3001;Network &#x7B49;&#x3002;</li>
<li>&#x4E2D;&#x5C42;&#x5305;&#xFF1A;Presenters, Converters</li>
<li>&#x5185;&#x5C42;&#x5305;&#xFF1A;Interactors&#x3001;Models&#x3001;Repositories&#x3001;Executor</li>
</ul>
<h3 id="&#x5916;&#x5C42;"><a class="header-anchor" href="#&#x5916;&#x5C42;"></a>&#x5916;&#x5C42;</h3>
<p>&#x4E0A;&#x9762;&#x5DF2;&#x7ECF;&#x63D0;&#x5230;&#x8FC7;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x6846;&#x67B6;&#x7684;&#x7EC6;&#x8282;&#x3002;</p>
<p><strong>UI</strong>&#x200A;&#x2014;&#x5305;&#x62EC; Activite&#x3001;Fragment&#x3001;Adapter &#x548C;&#x5176;&#x5B83;&#x7528;&#x6237;&#x754C;&#x9762;&#x76F8;&#x5173;&#x7684;&#x4EE3;&#x7801;&#x3002;</p>
<p><strong>Storage</strong>&#x200A;&#x2014;&#x200A;&#x6570;&#x636E;&#x5E93;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#xFF0C;&#x5B9E;&#x73B0; Interactor &#x9700;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x7528;&#x4E8E;&#x8BBF;&#x95EE;&#x548C;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x3002;&#x5305;&#x542B;&#x5982; <a href="https://developer.android.com/guide/topics/providers/content-providers.html" target="_blank" rel="external">ContentProviders</a> &#x6216;&#x8005;&#x50CF; <a href="https://github.com/Raizlabs/DBFlow" target="_blank" rel="external">DBFlow</a> &#x8FD9;&#x6837;&#x7684; ORM&#x3002;</p>
<p><strong>Network</strong>&#x200A;&#x2014;&#x200A;&#x7C7B;&#x4F3C; <a href="http://square.github.io/retrofit/" target="_blank" rel="external">Retrofit</a> &#x7684;&#x7F51;&#x7EDC;&#x64CD;&#x4F5C;&#x3002;</p>
<h3 id="&#x4E2D;&#x5C42;"><a class="header-anchor" href="#&#x4E2D;&#x5C42;"></a>&#x4E2D;&#x5C42;</h3>
<p>&#x7C98;&#x5408;&#x4EE3;&#x7801;&#x5C42;&#xFF0C;&#x5C06;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x4E0E;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x3002;</p>
<p><strong>Presenters</strong>&#x200A;&#x2014;&#x200A;&#x5904;&#x7406;&#x6765;&#x81EA; UI &#x7684;&#x4E8B;&#x4EF6;&#xFF08;&#x6BD4;&#x5982;&#x7528;&#x6237;&#x5355;&#x51FB;&#xFF09;&#x6216;&#x8005;&#x5E38;&#x7528;&#x4F5C;&#x5185;&#x5C42;&#xFF08;Interactor&#xFF09;&#x7684;&#x56DE;&#x8C03;&#x3002;</p>
<p><strong>Converters</strong>&#x200A;&#x2014;&#x200A;&#x8F6C;&#x6362;&#x5668;&#x5BF9;&#x8C61;&#x8D1F;&#x8D23;&#x628A;&#x5185;&#x90E8;&#x6A21;&#x578B;&#x8F6C;&#x6362;&#x4E3A;&#x5916;&#x90E8;&#x6A21;&#x578B;&#xFF0C;&#x53CD;&#x4E4B;&#x4EA6;&#x7136;&#x3002;</p>
<p>&#x5185;&#x5C42;</p>
<p>&#x6838;&#x5FC3;&#x5C42;&#x5305;&#x542B;&#x5927;&#x90E8;&#x5206;&#x9AD8;&#x7B49;&#x7EA7;&#x4EE3;&#x7801;&#x3002;<strong>&#x8FD9;&#x91CC;&#x7684;&#x6240;&#x6709;&#x7C7B;&#x90FD;&#x662F; POJO</strong>&#x3002;&#x8FD9;&#x4E00;&#x5C42;&#x4E2D;&#x7684;&#x7C7B;&#x548C;&#x5BF9;&#x8C61;&#x90FD;&#x4E0D;&#x662F;&#x7279;&#x5B9A;&#x8FD0;&#x884C;&#x5728; Android &#x5E94;&#x7528;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#x7684;&#x79FB;&#x690D;&#x5230;&#x5176;&#x5B83; JVM &#x8FD0;&#x884C;&#x3002;</p>
<p><strong>Interactors</strong> - &#x8FD9;&#x4E9B;&#x662F;&#x5B9E;&#x9645;&#x5305;&#x542B;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#x7684;&#x7C7B;&#x3002;&#x8FD9;&#x4E9B;&#x7C7B;&#x5728;&#x540E;&#x53F0;&#x8FD0;&#x884C;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x56DE;&#x8C03;&#x5411;&#x4E0A;&#x5C42;&#x4F20;&#x9012;&#x4E8B;&#x4EF6;&#x3002;&#x5728;&#x4E00;&#x4E9B;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;&#x5B83;&#x4EEC;&#x4E5F;&#x88AB;&#x79F0;&#x4E3A;&#x7528;&#x4F8B;&#xFF08;&#x53EF;&#x80FD;&#x662F;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;&#x540D;&#x79F0;&#xFF09;&#x3002;&#x5728;&#x60A8;&#x7684;&#x9879;&#x76EE;&#x4E2D;&#x53EF;&#x80FD;&#x6709;&#x5F88;&#x591A;&#x5C0F;&#x7684;&#x7528;&#x4E8E;&#x89E3;&#x51B3;&#x7279;&#x5B9A;&#x95EE;&#x9898; Interactor &#x7C7B;&#xFF0C;&#x8FD9;&#x5C5E;&#x6B63;&#x5E38;&#x73B0;&#x8C61;&#x3002;&#x53EF;&#x4EE5;&#x8BF4;&#xFF0C;&#x5B83;&#x7B26;&#x5408;<a href="https://en.wikipedia.org/wiki/Single_responsibility_principle" target="_blank" rel="external">&#x5355;&#x4E00;&#x8D23;&#x4EFB;&#x539F;&#x5219;</a>&#xFF0C;&#x800C;&#x4E14;&#x8FD9;&#x6837;&#x7684;&#x7406;&#x89E3;&#x66F4;&#x5BB9;&#x6613;&#x8BA9;&#x4EBA;&#x63A5;&#x53D7;&#x3002;</p>
<p><strong>Models</strong> - &#x8FD9;&#x4E9B;&#x662F;&#x60A8;&#x5728;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E2D;&#x5904;&#x7406;&#x7684;&#x4E1A;&#x52A1;&#x6A21;&#x578B;&#x3002;</p>
<p><strong>Repositories</strong> - &#x6B64;&#x5305;&#x4EC5;&#x5305;&#x542B;&#x6570;&#x636E;&#x5E93;&#x6216;&#x5176;&#x4ED6;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#x3002;Interactors &#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x63A5;&#x53E3;&#x6765;&#x8BBF;&#x95EE;&#x548C;&#x5B58;&#x50A8;&#x6570;&#x636E;&#x3002;&#x4E5F;&#x79F0;&#x4E3A;<a href="https://msdn.microsoft.com/en-us/library/ff649690.aspx" target="_blank" rel="external">&#x4ED3;&#x5E93;&#x6A21;&#x5F0F;</a>&#x3002;</p>
<p><strong>Executor</strong> - &#x6B64;&#x5305;&#x5305;&#x542B;&#x7528;&#x4E8E;&#x8C03;&#x7528;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5668;&#x5728;&#x540E;&#x53F0;&#x6267;&#x884C; Interactors &#x7684;&#x4EE3;&#x7801;&#x3002;&#x8FD9;&#x4E2A;&#x5305;&#x4E00;&#x822C;&#x4E0D;&#x9700;&#x8981;&#x4F60;&#x4FEE;&#x6539;&#x4EFB;&#x4F55;&#x90E8;&#x5206;&#x3002;</p>
<h3 id="&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;"><a class="header-anchor" href="#&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;"></a>&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;</h3>
<p>&#x5728;&#x8FD9;&#x4E2A;&#x793A;&#x4F8B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x7528;&#x4F8B;&#x662F;&#xFF1A; &#x201C;<strong>&#x5728; app &#x542F;&#x52A8;&#x65F6;&#x8BFB;&#x53D6;&#x5B58;&#x50A8;&#x5728;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x6D88;&#x606F;&#x5E76;&#x5C55;&#x793A;&#x3002;</strong>&#x201D; &#x6B64;&#x793A;&#x4F8B;&#x5C06;&#x4F1A;&#x5C55;&#x793A;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x4E09;&#x4E2A;&#x7A0B;&#x5E8F;&#x5305;&#x6765;&#x5B8C;&#x6210;&#x7528;&#x4F8B;&#x7684;&#x529F;&#x80FD;&#xFF1A;</p>
<ul>
<li>presentation &#x5305;&#xFF08;&#x5C55;&#x793A;&#x5305;&#xFF09;</li>
<li>storage &#x5305;&#xFF08;&#x5B58;&#x50A8;&#x5305;&#xFF09;</li>
<li>domain &#x5305;&#xFF08;&#x4E3B;&#x5305;&#xFF09;</li>
</ul>
<p>&#x524D;&#x4E24;&#x4E2A;&#x5C5E;&#x4E8E;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5C5E;&#x4E8E;&#x5185;&#x90E8;/&#x6838;&#x5FC3;&#x5C42;&#x5B9E;&#x73B0;&#x3002;</p>
<p><strong>Presentation</strong> &#x5305;&#x4E3B;&#x8981;&#x8D1F;&#x8D23;&#x6240;&#x6709;&#x4E0E;&#x5C4F;&#x5E55;&#x663E;&#x793A;&#x76F8;&#x5173;&#x7684;&#x90E8;&#x5206;&#x2014;&#x2014;&#x5305;&#x62EC;&#x5168;&#x90E8;&#x7684; <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter" target="_blank" rel="external">MVP</a> &#x6808;&#xFF0C;&#x5373;&#x5305;&#x62EC; UI &#x548C; presenter &#x8FD9;&#x4E24;&#x4E2A;&#x4E0D;&#x540C;&#x5C42;&#x7684;&#x7EC4;&#x4EF6;&#x3002;</p>
<h2 id="&#x7F16;&#x5199;&#x65B0;&#x7684;-interactor-&#x5185;&#x90E8;-&#x6838;&#x5FC3;&#x5C42;"><a class="header-anchor" href="#&#x7F16;&#x5199;&#x65B0;&#x7684;-interactor-&#x5185;&#x90E8;-&#x6838;&#x5FC3;&#x5C42;"></a>&#x7F16;&#x5199;&#x65B0;&#x7684; Interactor &#xFF08;&#x5185;&#x90E8;/&#x6838;&#x5FC3;&#x5C42;&#xFF09;</h2>
<p>&#x4E8B;&#x5B9E;&#x4E0A;&#x4F60;&#x53EF;&#x4EE5;&#x4ECE;&#x67B6;&#x6784;&#x7684;&#x4EFB;&#x610F;&#x5C42;&#x5F00;&#x59CB;&#x7F16;&#x7801;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x8FD8;&#x662F;&#x63A8;&#x8350;&#x4F60;&#x9996;&#x5148;&#x4ECE;&#x6838;&#x5FC3;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5F00;&#x59CB;&#x3002;&#x56E0;&#x4E3A;&#x903B;&#x8F91;&#x4EE3;&#x7801;&#x5199;&#x597D;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E0D;&#x9700;&#x8981; activity &#x4E5F;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#x3002;</p>
<p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5148;&#x4ECE;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; Interactor &#x5F00;&#x59CB;&#x3002;Interactor &#x662F;&#x7528;&#x4F8B;&#x4E3B;&#x903B;&#x8F91;&#x5B9E;&#x73B0;&#x7684;&#x5730;&#x65B9;&#x3002;<strong>&#x6240;&#x6709;&#x7684; Interactors &#x90FD;&#x8FD0;&#x884C;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#xFF0C;&#x56E0;&#x6B64;&#x5E94;&#x8BE5;&#x4E0D;&#x4F1A;&#x5BF9; UI &#x5C55;&#x793A;&#x9020;&#x6210;&#x5F71;&#x54CD;</strong>&#x3002; &#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A; Interactor&#xFF0C;&#x53EB;&#x505A; <strong>WelcomingInteractor</strong>&#x3002;</p>
<pre><code>public interface WelcomingInteractor extends Interactor { 
 
    interface Callback { 
 
        void onMessageRetrieved(String message);
 
        void onRetrievalFailed(String error);
    } 
}
</code></pre>
<p><strong>Callback</strong> &#x8D1F;&#x8D23;&#x548C;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x7684; UI &#x4EA4;&#x4E92;&#xFF0C;&#x6211;&#x4EEC;&#x4E4B;&#x6240;&#x4EE5;&#x5C06;&#x5176;&#x653E;&#x5728; Interactor &#x63A5;&#x53E3;&#x4E2D;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x5C06;&#x5176;&#x91CD;&#x65B0;&#x547D;&#x540D;&#x4E3A; WelcomingInteractorCallback&#x2014;&#x2014;&#x7528;&#x4E8E;&#x5C06;&#x5176;&#x4E0E;&#x5176;&#x4ED6;&#x56DE;&#x8C03;&#x533A;&#x5206;&#x3002;&#x4E0B;&#x9762;&#x8BA9;&#x6211;&#x4EEC;&#x5B9E;&#x73B0;&#x53D6;&#x56DE;&#x6D88;&#x606F;&#x7684;&#x903B;&#x8F91;&#x3002;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E2A; Interactor &#x7684; <strong>MessageRepository</strong>&#xFF0C;&#x53EF;&#x4EE5;&#x7ED9;&#x6211;&#x4EEC;&#x53D1;&#x9001;&#x6B22;&#x8FCE;&#x6D88;&#x606F;&#x3002;</p>
<pre><code> MessageRepository { 
    String getWelcomeMessage();
}
</code></pre>
<p>&#x4E0B;&#x9762;&#x8BA9;&#x6211;&#x4EEC;&#x53C2;&#x8003;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5B9E;&#x73B0; Interactor &#x63A5;&#x53E3;&#x3002;&#x6211;&#x4EEC;&#x7684;&#x5B9E;&#x73B0;&#x5FC5;&#x987B;&#x6269;&#x5C55;&#x81EA; <strong>AbstractInteractor&#xFF0C;&#x8FD9;&#x6837;&#x4EE3;&#x7801;&#x5C31;&#x80FD;&#x5728;&#x540E;&#x53F0;&#x6267;&#x884C;&#x4E86;</strong>&#x3002;</p>
<pre><code>public class WelcomingInteractorImpl extends AbstractInteractor implements WelcomingInteractor {
    
    ...    
    private void notifyError() {
        mMainThread.post(new Runnable() {            @Override
            public void run() {
                mCallback.onRetrievalFailed(&quot;Nothing to welcome you with :(&quot;);
            }
        });
    }    private void postMessage(final String msg) {
        mMainThread.post(new Runnable() {            @Override
            public void run() {
                mCallback.onMessageRetrieved(msg);
            }
        });
    }    @Override
    public void run() {        // retrieve the message
        final String message = mMessageRepository.getWelcomeMessage();        // check if we have failed to retrieve our message
        if (message == null || message.length() == 0) {            // notify the failure on the main thread
            notifyError();            return;
        }        // we have retrieved our message, notify the UI on the main thread
        postMessage(message);
    }
</code></pre>
<div align="center">
WelcomingInteractor &#x8FD0;&#x884C;&#x65B9;&#x6CD5;&#x3002;
</div>
<p>&#x8FD9;&#x91CC;&#x5C1D;&#x8BD5;&#x83B7;&#x53D6;&#x4E86;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x53D1;&#x9001;&#x6D88;&#x606F;&#x6216;&#x8005;&#x9519;&#x8BEF;&#x7801;&#x5230; UI &#x5C42;&#x7528;&#x4E8E;&#x663E;&#x793A;&#x3002;&#x6211;&#x4EEC;&#x901A;&#x8FC7; Callback &#x901A;&#x77E5; UI&#xFF0C;&#x8FD9;&#x4E2A; Callback &#x626E;&#x6F14;&#x7684;&#x662F; presenter &#x7684;&#x89D2;&#x8272;&#x3002;<strong>&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x662F;&#x6211;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x7684;&#x5173;&#x952E;&#x3002;&#x5176;&#x4ED6;&#x6846;&#x67B6;&#x90FD;&#x662F;&#x4F9D;&#x8D56;&#x4E8E;&#x6846;&#x67B6;&#x672C;&#x8EAB;&#x3002;</strong></p>
<p>&#x8BA9;&#x6211;&#x4EEC;&#x770B;&#x4E00;&#x4E0B; Interactor &#x7A76;&#x7ADF;&#x6709;&#x54EA;&#x4E9B;&#x4F9D;&#x8D56;&#xFF1A;</p>
<pre><code>import com.kodelabs.boilerplate.domain.executor.Executor;
import com.kodelabs.boilerplate.domain.executor.MainThread;
import com.kodelabs.boilerplate.domain.interactors.WelcomingInteractor;
import com.kodelabs.boilerplate.domain.interactors.base.AbstractInteractor;
import com.kodelabs.boilerplate.domain.repository.MessageRepository;
</code></pre>
<p>&#x6B63;&#x5982;&#x4F60;&#x6240;&#x770B;&#x5230;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;<strong>&#x6CA1;&#x6709;&#x63D0;&#x5230;&#x4EFB;&#x4F55; Android &#x4EE3;&#x7801;</strong>&#xFF0C;&#x8FD9;&#x5C31;&#x662F; Clean &#x67B6;&#x6784;&#x7684;<strong>&#x4E3B;&#x8981;&#x597D;&#x5904;</strong>&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x770B;&#x5230;<strong>&#x6846;&#x67B6;&#x7684;&#x72EC;&#x7ACB;&#x6027;</strong>&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x6CE8; UI &#x6216;&#x6570;&#x636E;&#x5E93;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x662F;&#x8C03;&#x7528;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x3002;</p>
<h2 id="&#x6D4B;&#x8BD5;-interactor"><a class="header-anchor" href="#&#x6D4B;&#x8BD5;-interactor"></a>&#x6D4B;&#x8BD5; Interactor</h2>
<p>&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;<strong>&#x8131;&#x79BB;&#x4EFF;&#x771F;&#x5668;&#x8FD0;&#x884C;&#x5E76;&#x6D4B;&#x8BD5; Interator</strong>&#x3002;&#x6765;&#x5199;&#x4E2A;&#x7B80;&#x5355;&#x7684; <strong>JUnit</strong> &#x6D4B;&#x8BD5;&#x786E;&#x4FDD;&#x5B83;&#x6709;&#x6548;&#x3002;</p>
<pre><code>...    @Test
    public void testWelcomeMessageFound() throws Exception {

        String msg = &quot;Welcome, friend!&quot;;

        when(mMessageRepository.getWelcomeMessage())
                .thenReturn(msg);

        WelcomingInteractorImpl interactor = new WelcomingInteractorImpl(
            mExecutor, 
            mMainThread, 
            mMockedCallback, 
            mMessageRepository
        );
        interactor.run();

        Mockito.verify(mMessageRepository).getWelcomeMessage();
        Mockito.verifyNoMoreInteractions(mMessageRepository);
        Mockito.verify(mMockedCallback).onMessageRetrieved(msg);
    }
</code></pre>
<p>&#x8FD9;&#x4E2A; Interactor &#x4EE3;&#x7801;&#x5E76;&#x4E0D;&#x77E5;&#x9053;&#x5B83;&#x4F1A;&#x7528;&#x5728; Android &#x5E94;&#x7528;&#x4E2D;&#x3002;&#x8FD9;&#x8BC1;&#x660E;&#x4E86;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;&#x7B2C;&#x4E8C;&#x70B9;&#x2014;&#x2014;&#x6211;&#x4EEC;&#x7684;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x662F;<strong>&#x53EF;&#x6D4B;&#x8BD5;&#x7684;</strong>&#x3002;</p>
<h2 id="&#x7F16;&#x5199;&#x5C55;&#x73B0;&#x5C42;"><a class="header-anchor" href="#&#x7F16;&#x5199;&#x5C55;&#x73B0;&#x5C42;"></a>&#x7F16;&#x5199;&#x5C55;&#x73B0;&#x5C42;</h2>
<p>&#x5C55;&#x73B0;&#x4EE3;&#x7801;&#x5C5E;&#x4E8E;&#x7B80;&#x6D01;&#x6846;&#x67B6;&#x7684;<strong>&#x5916;&#x5C42;</strong>&#x3002;&#x5B83;&#x7531;&#x5411;&#x7528;&#x6237;&#x5448;&#x73B0;&#x754C;&#x9762;&#x7684;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#x7EC4;&#x6210;&#x3002;&#x6211;&#x4EEC;&#x4F7F;&#x7528; <strong>MainActivity</strong> &#x7C7B;&#x5728;&#x7528;&#x6237;&#x56DE;&#x5230;&#x5E94;&#x7528;&#x7684;&#x65F6;&#x5019;&#x5411;&#x7528;&#x6237;&#x663E;&#x793A;&#x6B22;&#x8FCE;&#x4FE1;&#x606F;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x4ECE; <strong>Presenter</strong> &#x548C; <strong>View</strong> &#x5F00;&#x59CB;&#x5199;&#x754C;&#x9762;&#x3002;&#x89C6;&#x56FE;&#x9700;&#x8981;&#x5E72;&#x7684;&#x552F;&#x4E00;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x5C31;&#x662F;&#x663E;&#x793A;&#x6B22;&#x8FCE;&#x4FE1;&#x606F;&#xFF1A;</p>
<pre><code>public interface MainPresenter extends BasePresenter { 
 
    interface View extends BaseView { 
        void displayWelcomeMessage(String msg);
    } 
}
</code></pre>
<p>&#x90A3;&#x4E48;&#xFF0C;&#x7528;&#x6237;&#x56DE;&#x5230;&#x5E94;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5E94;&#x8BE5;&#x5982;&#x4F55;&#x5F00;&#x59CB; Interactor &#x5462;&#xFF1F;&#x4E00;&#x5207;&#x4E0D;&#x4E25;&#x683C;&#x76F8;&#x5173;&#x7684;&#x4E1C;&#x897F;&#x90FD;&#x5E94;&#x8BE5;&#x653E;&#x5728; Presenter &#x7C7B;&#x4E2D;&#x3002;&#x8FD9;&#x6709;&#x52A9;&#x4E8E;&#x7EC4;&#x7EC7;<a href="https://en.wikipedia.org/wiki/Separation_of_concerns" target="_blank" rel="external">&#x79BB;&#x6563;&#x7684;&#x5173;&#x7CFB;</a>&#x5E76;&#x9632;&#x6B62; Activity &#x53D8;&#x5F97;&#x81C3;&#x80BF;&#x3002;&#x8FD9;&#x5305;&#x62EC;&#x6240;&#x6709;&#x7528; Interator &#x8FD0;&#x884C;&#x7684;&#x4EE3;&#x7801;&#x3002;</p>
<p>&#x5728; <strong>MainActivity</strong> &#x7C7B;&#x4E2D;&#x91CD;&#x8F7D; <strong>onResume()</strong> &#x65B9;&#x6CD5;&#xFF1A;</p>
<pre><code>@Override
protected void onResume() {
    super.onResume();
    // let&apos;s start welcome message retrieval when the app resumes
    mPresenter.resume();
}
</code></pre>
<p>&#x6240;&#x6709; <strong>Presenter</strong> &#x5BF9;&#x8C61;&#x90FD;&#x8981;&#x5728;&#x5B9E;&#x73B0; <strong>BasePresenter</strong> &#x7684;&#x65F6;&#x5019;&#x5B9E;&#x73B0; <strong>resume()</strong> &#x65B9;&#x6CD5;&#x3002;</p>
<blockquote>
<p>&#x6CE8;&#x610F;&#xFF1A;&#x6709;&#x4E9B;&#x654F;&#x9510;&#x7684;&#x8BFB;&#x8005;&#x4F1A;&#x53D1;&#x73B0;&#x6211;&#x5728; BasePresenter &#x63A5;&#x53E3;&#x4E2D;&#x6DFB;&#x52A0;&#x4E86; Android &#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x65B9;&#x6CD5;&#xFF0C;&#x5373;&#x4F7F; Presenter &#x5728;&#x8F83;&#x4F4E;&#x5C42;&#x3002;Presenter &#x4E0D;&#x4F1A;&#x83B7;&#x77E5; UI &#x5C42;&#x7684;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x2014;&#x2014;&#x6BD4;&#x5982;&#x5B83;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x6307;&#x5B9A; Android &#x7279;&#x5B9A;&#x7684; * &#x4E8B;&#x4EF6;* &#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x4E2A; UI &#x90FD;&#x9700;&#x8981;&#x5411;&#x7528;&#x6237;&#x5C55;&#x793A;&#x3002;&#x60F3;&#x50CF;&#x4E00;&#x4E0B;&#xFF0C;&#x6211;&#x8C03;&#x7528;&#x7684;&#x662F;  onUIShow() &#x800C;&#x4E0D;&#x662F; onResumt()&#xFF0C;&#x7ED3;&#x679C;&#x4F1A;&#x600E;&#x4E48;&#x6837;&#x5462;&#x3002;&#x4E00;&#x5207;&#x8FD0;&#x884C;&#x826F;&#x597D;&#xFF0C;&#x4E0D;&#x662F;&#x5417;&#xFF1F;<img class="emoji" draggable="false" alt="&#x1F603;" src="https://twemoji.maxcdn.com/2/72x72/1f603.png"></p>
</blockquote>
<p>&#x6240;&#x6709;&#x7684; Presenter &#x5728;&#x7EE7;&#x627F; BasePresenter &#x65F6;&#x90FD;&#x8981;&#x5B9E;&#x73B0; resume() &#x65B9;&#x6CD5;&#x3002;&#x6211;&#x4EEC;&#x5728; <strong>MainPresenter</strong> &#x7684; <strong>Resume()</strong> &#x65B9;&#x6CD5;&#x4E2D;&#x542F;&#x52A8; Interactor&#x3002;</p>
<pre><code>@Override
public void resume() {
    mView.showProgress();    
    // initialize the interactor
    WelcomingInteractor interactor = new WelcomingInteractorImpl(
            mExecutor,
            mMainThread, 
            this, 
            mMessageRepository
    );    
    // run the interactor
    interactor.execute();
}
</code></pre>
<p><strong>execute()</strong> &#x65B9;&#x6CD5;&#x4F1A;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C; <strong>WelcomingInteractorImpl</strong> &#x7684; <strong>run()</strong> &#x65B9;&#x6CD5;&#x3002;&#x800C; <strong>run()</strong> &#x65B9;&#x6CD5;&#x5728;<strong>&#x7F16;&#x5199;&#x65B0;&#x7684; Interactor</strong> &#x4E00;&#x8282;&#x4E2D;&#x4F1A;&#x6709;&#x4ECB;&#x7ECD;&#x3002;</p>
<p>&#x4F60;&#x53EF;&#x80FD;&#x6CE8;&#x610F;&#x5230; Interactor &#x7684;&#x884C;&#x4E3A;&#x4E0E; <strong>AsyncTask</strong> &#x76F8;&#x7C7B;&#x4F3C;&#xFF0C;&#x90FD;&#x662F;&#x5728;&#x63D0;&#x4F9B;&#x6240;&#x9700;&#x4E1C;&#x897F;&#x540E;&#x8FD0;&#x884C;&#x3002;&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x4F7F;&#x7528; AsyncTask &#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x8FD9;&#x662F; <strong>Android &#x4EE3;&#x7801;</strong>&#xFF0C;&#x9700;&#x8981;&#x6A21;&#x62DF;&#x5668;&#x624D;&#x80FD;&#x8FD0;&#x884C;&#x6216;&#x6D4B;&#x8BD5;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x4E3A; Interfactor &#x63D0;&#x4F9B;&#x4E0B;&#x5217;&#x5C5E;&#x6027;&#xFF1A;</p>
<ul>
<li><strong>ThreadExecutor</strong> &#x5B9E;&#x4F8B;&#x8D1F;&#x8D23;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C; Interactor&#x3002;&#x6211;&#x901A;&#x5E38;&#x4F1A;&#x4F7F;&#x7528;&#x5355;&#x4F8B;&#x6A21;&#x5F0F;&#x3002;&#x8FD9;&#x4E2A;&#x7C7B;&#x5B9E;&#x9645;&#x9A7B;&#x7559;&#x5728;&#x57DF;&#x5305;&#x4E2D;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x5728;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#x3002;</li>
<li><strong>MainThreadImpl</strong> &#x5B9E;&#x4F8B;&#x8D1F;&#x8D23;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0A;&#x4ECE; Interactor &#x53D1;&#x9001;&#x53EF;&#x8FD0;&#x884C;&#x5BF9;&#x8C61;&#x3002;&#x4E3B;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6846;&#x67B6;&#x4EE3;&#x7801;&#x8BBF;&#x95EE;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x7C7B;&#x9700;&#x8981;&#x5728;&#x5916;&#x5C42;&#x5B9E;&#x73B0;&#x3002;</li>
<li>&#x4F60;&#x53EF;&#x80FD;&#x6CE8;&#x610F;&#x5230;&#x6211;&#x4EEC;&#x5411; Interactor &#x63D0;&#x4F9B;&#x4E86; this &#xFF0C;&#x56E0;&#x4E3A; MainPresenter &#x4E5F;&#x662F;&#x4E00;&#x4E2A; Callback &#x5BF9;&#x8C61;&#xFF0C;Interactor &#x4F1A;&#x7528;&#x5B83;&#x5728;&#x4E8B;&#x4EF6;&#x56DE;&#x8C03;&#x4E2D;&#x66F4;&#x65B0; UI&#x3002;</li>
<li><strong>WelcomeMessageRepository</strong> &#x5B9E;&#x73B0;&#x4E86; Interactor &#x7528;&#x5230;&#x7684; <strong>MessageRepository</strong> &#x63A5;&#x53E3;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x5B83;&#x7684;&#x5B9E;&#x4F8B;&#x3002;<strong>WelcomeMessageRepository</strong> &#x4F1A;&#x5728;<strong>&#x7F16;&#x5199;&#x5B58;&#x50A8;&#x5C42;</strong>&#x4E00;&#x8282;&#x4E2D;&#x8BE6;&#x8FF0;&#x3002;</li>
</ul>
<blockquote>
<p>&#x6CE8;&#x610F;&#xFF1A;&#x56E0;&#x4E3A;&#x6BCF;&#x6B21;&#x90FD;&#x9700;&#x8981;&#x5411; Interactor &#x63D0;&#x4F9B;&#x8BB8;&#x591A;&#x5C5E;&#x6027;&#xFF0C;&#x5C06;  Dagger 2 &#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x6846;&#x67B6;&#x4F1A;&#x63D0;&#x4F9B;&#x4E0D;&#x5C11;&#x5E2E;&#x52A9;&#x3002;&#x7B80;&#x660E;&#x8D77;&#x89C1;&#xFF0C;&#x6B64;&#x5904;&#x6CA1;&#x6709;&#x5C06;&#x5176;&#x6CE8;&#x5165;&#x3002;&#x4F60;&#x53EF;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x9009;&#x62E9;&#x4F7F;&#x7528;&#x3002;</p>
</blockquote>
<p>&#x4E3A;&#x4EC0;&#x4E48; <strong>this</strong> &#x4E5F;&#x662F; Callback &#x5462;&#xFF1F;&#xFF0C;&#x56E0;&#x4E3A; <strong>MainActivity</strong> &#x7684; <strong>MainPresenter</strong> &#x5B9E;&#x73B0;&#x4E86; Callback &#x63A5;&#x53E3;&#xFF1A;</p>
<pre><code>public class MainPresenterImpl extends AbstractPresenter implements MainPresenter, WelcomingInteractor.Callback {
</code></pre>
<p>&#x6211;&#x4EEC;&#x76D1;&#x542C;&#x7684;&#x4E8B;&#x4EF6;&#x6765;&#x81EA;&#x4E8E; Interactor &#x3002;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x6765;&#x81EA;&#x4E8E; <strong>MainPresenter</strong>&#xFF1A;</p>
<pre><code>@Override 
public void onMessageRetrieved(String message) {
    mView.hideProgress(); 
    mView.displayWelcomeMessage(message);
} 
 
@Override 
public void onRetrievalFailed(String error) {
    mView.hideProgress(); 
    onError(error);
}
</code></pre>
<p>&#x5728;&#x4EE3;&#x7801;&#x6BB5;&#x4E2D;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x7684; View &#x5176;&#x5B9E;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x4E86; MainPresenter.View &#x63A5;&#x53E3;&#x7684; <strong>MainActivity</strong>&#xFF1A;</p>
<pre><code>public class MainActivity extends AppCompatActivity implements MainPresenter.View {
</code></pre>
<p>&#x5B83;&#x8D1F;&#x8D23;&#x663E;&#x793A;&#x6B22;&#x8FCE;&#x4FE1;&#x606F;&#xFF1A;</p>
<pre><code>@Override 
public void displayWelcomeMessage(String msg) {
    mWelcomeTextView.setText(msg);
}
</code></pre>
<p>&#x8FD9;&#x5DEE;&#x4E0D;&#x591A;&#x5C31;&#x662F;&#x8868;&#x793A;&#x5C42;&#x7684;&#x5185;&#x5BB9;&#x4E86;&#x3002;</p>
<h2 id="&#x7F16;&#x5199;&#x5B58;&#x50A8;&#x5C42;"><a class="header-anchor" href="#&#x7F16;&#x5199;&#x5B58;&#x50A8;&#x5C42;"></a>&#x7F16;&#x5199;&#x5B58;&#x50A8;&#x5C42;</h2>
<p>repository &#x4E2D;&#x7684;&#x63A5;&#x53E3;&#x5C31;&#x5728;&#x5B58;&#x50A8;&#x5C42;&#x5B9E;&#x73B0;&#x3002;&#x6240;&#x6709;&#x6570;&#x636E;&#x5E93;&#x76F8;&#x5173;&#x7684;&#x4EE3;&#x7801;&#x90FD;&#x5728;&#x8FD9;&#x91CC;&#x3002;&#x4ED3;&#x5E93;&#x6A21;&#x5F0F;&#x53EA;&#x662F;&#x8868;&#x8FBE;&#x6570;&#x636E;&#x6765;&#x6E90;&#x3002;&#x4F46;&#x6211;&#x4EEC;&#x7684;&#x4E3B;&#x8981;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E0D;&#x5728;&#x4E4E;&#x9996;&#x6570;&#x636E;&#x7684;&#x6765;&#x6E90;&#x2014;&#x2014;&#x4E0D;&#x7BA1;&#x5B83;&#x662F;&#x6765;&#x81EA;&#x6570;&#x636E;&#x5E93;&#x3001;&#x670D;&#x52A1;&#x5668;&#x8FD8;&#x662F;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x3002;</p>
<p>&#x5BF9;&#x4E8E;&#x590D;&#x6742;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; <a href="https://developer.android.com/guide/topics/providers/content-providers.html" target="_blank" rel="external">ContentProviders</a> &#x6216;&#x8005;&#x50CF; <a href="https://github.com/Raizlabs/DBFlow" target="_blank" rel="external">DBFlow</a> &#x8FD9;&#x6837;&#x7684; ORM &#x5DE5;&#x5177;&#x5904;&#x7406;&#x3002;&#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x4ECE; Web &#x63A5;&#x6536;&#x6570;&#x636E;&#xFF0C;&#x90A3;&#x5C31;&#x4F1A;&#x7528;&#x5230; <a href="http://square.github.io/retrofit/" target="_blank" rel="external">Retrofit</a>&#x3002;&#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x7B80;&#x5355;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x5B58;&#x50A8;&#xFF0C;&#x90A3;&#x4F60;&#x4F1A;&#x7528;&#x5230; <a href="https://developer.android.com/training/basics/data-storage/shared-preferences.html" target="_blank" rel="external">SharedPreferences</a>&#x3002;&#x4E0D;&#x7BA1;&#x600E;&#x6837;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x9009;&#x62E9;&#x6B63;&#x786E;&#x7684;&#x5DE5;&#x5177;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x7684;&#x6570;&#x636E;&#x5E93;&#x5E76;&#x4E0D;&#x662F;&#x771F;&#x6B63;&#x7684;&#x6570;&#x636E;&#x5E93;&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x7C7B;&#xFF0C;&#x901A;&#x8FC7;&#x5EF6;&#x8FDF;&#x6765;&#x6A21;&#x62DF;&#xFF1A;</p>
<pre><code>public class WelcomeMessageRepository implements MessageRepository { 
    @Override 
    public String getWelcomeMessage() {
        String msg = &quot;Welcome, friend!&quot;; // let&apos;s be friendly
 
        // let&apos;s simulate some network/database lag 
        try { 
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            e.printStackTrace();
        } 
 
        return msg;
    } 
}
</code></pre>
<p>&#x5C31; <strong>WelcomingInteractor</strong> &#x800C;&#x8A00;&#xFF0C;&#x5EF6;&#x8FDF;&#x7684;&#x539F;&#x56E0;&#x53EF;&#x80FD;&#x662F;&#x7531;&#x771F;&#x5B9E;&#x7F51;&#x7EDC;&#x6216;&#x5176;&#x4ED6;&#x539F;&#x56E0;&#x9020;&#x6210;&#x7684;&#xFF0C;&#x4F46;&#x5B83;&#x5E76;&#x4E0D;&#x5728;&#x4E4E;&#xFF0C;&#x5B83;&#x53EA;&#x9700;&#x8981;&#x6570;&#x636E;&#x63D0;&#x4F9B;&#x8005;&#x5B9E;&#x73B0; <strong>MessageRepository</strong> &#x63A5;&#x53E3;&#x5C31;&#x597D;&#x3002;</p>
<h2 id="&#x6982;&#x89C8;"><a class="header-anchor" href="#&#x6982;&#x89C8;"></a>&#x6982;&#x89C8;</h2>
<p>&#x8FD9;&#x4E2A;<a href="https://github.com/dmilicic/Android-Clean-Boilerplate/tree/example" target="_blank" rel="external">&#x793A;&#x4F8B;</a>&#x5DF2;&#x7ECF;&#x653E;&#x5728;GitHub&#x4E0A;&#x3002;&#x5404;&#x4E2A;&#x7C7B;&#x4E4B;&#x95F4;&#x7684;&#x8C03;&#x7528;&#x5173;&#x7CFB;&#x603B;&#x7ED3;&#x5982;&#x4E0B;&#xFF1A;</p>
<blockquote>
<p>MainActivity -&gt;MainPresenter -&gt; WelcomingInteractor -&gt; WelcomeMessageRepository -&gt; WelcomingInteractor -&gt; MainPresenter -&gt; MainActivity</p>
</blockquote>
<p>&#x6CE8;&#x610F;&#x8FD9;&#x4E2A;&#x63A7;&#x5236;&#x6D41;&#x7A0B;&#xFF0C;&#x8FD9;&#x975E;&#x5E38;&#x91CD;&#x8981;&#xFF1A;</p>
<blockquote>
<p>Outer&#x200A;&#x2014;&#x200A;Mid&#x200A;&#x2014;&#x200A;Core&#x200A;&#x2014;&#x200A;Outer&#x200A;&#x2014;&#x200A;Core&#x200A;&#x2014;&#x200A;Mid&#x200A;&#x2014;&#x200A;Outer</p>
</blockquote>
<p>&#x5728;&#x4E00;&#x4E2A;&#x7528;&#x4F8B;&#x4E2D;&#x591A;&#x6B21;&#x8BBF;&#x95EE;&#x5916;&#x5C42;&#x662F;&#x5F88;&#x5E38;&#x89C1;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x5982;&#x679C;&#x4F60;&#x8981;&#x663E;&#x793A;&#x70B9;&#x4EC0;&#x4E48;&#xFF0C;&#x5B58;&#x50A8;&#x70B9;&#x4EC0;&#x4E48;&#x5E76;&#x4ECE; Web &#x8BBF;&#x95EE;&#x4E9B;&#x4EC0;&#x4E48;&#xFF0C;&#x63A7;&#x5236;&#x6D41;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x8BBF;&#x95EE;&#x5916;&#x5C42;&#x4E09;&#x6B21;&#x3002;</p>
<h2 id="&#x7ED3;&#x8BBA;"><a class="header-anchor" href="#&#x7ED3;&#x8BBA;"></a>&#x7ED3;&#x8BBA;</h2>
<p>&#x5BF9;&#x4E8E;&#x6211;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x662F;&#x8FC4;&#x4ECA;&#x4E3A;&#x6B62;&#x5F00;&#x53D1;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x6700;&#x4F73;&#x65B9;&#x5F0F;&#x3002;&#x89E3;&#x8026;&#x7684;&#x4EE3;&#x7801;&#x80FD;&#x8BA9;&#x4EBA;&#x628A;&#x6CE8;&#x610F;&#x529B;&#x653E;&#x5728;&#x5177;&#x4F53;&#x7684;&#x95EE;&#x9898;&#x4E0A;&#xFF0C;&#x800C;&#x4E0D;&#x53D7;&#x5176;&#x4ED6;&#x4E8B;&#x4EF6;&#x5E72;&#x6270;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x9519;&#x7684; <a href="https://en.wikipedia.org/wiki/SOLID_%28object-oriented_design%29" target="_blank" rel="external">SOLID</a> &#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x8FD8;&#x9700;&#x8981;&#x4E00;&#x4E9B;&#x65F6;&#x95F4;&#x9002;&#x5E94;&#x3002;&#x5E0C;&#x671B;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x793A;&#x4F8B;&#x80FD;&#x8BA9;&#x4F60;&#x5BF9;&#x8BE5;&#x5185;&#x5BB9;&#x6709;&#x8FDB;&#x4E00;&#x6B65;&#x4E86;&#x89E3;&#x3002;</p>
<p>&#x4F7F;&#x7528;&#x7B80;&#x6D01;&#x67B6;&#x6784;&#xFF0C;&#x6211;&#x8FD8;&#x5EFA;&#x7ACB;&#x4E86;&#x4E00;&#x4E2A;&#x5F00;&#x6E90;&#x7684;&#x6210;&#x672C;&#x8DDF;&#x8E2A;&#x5E94;&#x7528;&#xFF0C;&#x5B83;&#x80FD;&#x5C55;&#x793A;&#x4E00;&#x9879;&#x5E94;&#x7528;&#x7684;&#x7F16;&#x7801;&#x3002;&#x6B64;&#x5E94;&#x7528;&#x5E76;&#x65E0;&#x521B;&#x65B0;&#x5185;&#x5BB9;&#xFF0C;&#x4F60;&#x82E5;&#x611F;&#x5174;&#x8DA3;&#xFF0C;&#x53EF;&#x67E5;&#x770B;&#xFF1A;<a href="https://github.com/dmilicic/android-clean-sample-app" target="_blank" rel="external">&#x6210;&#x672C;&#x8DDF;&#x8E2A;&#x5E94;&#x7528;&#x793A;&#x4F8B;</a></p>
<p>&#x53E6;&#x5916;&#xFF0C;&#x6B64;&#x793A;&#x4F8B; app &#x662F;&#x6839;&#x636E;&#x7B80;&#x6D01;&#x7684;&#x542F;&#x52A8;&#x5305;&#x521B;&#x5EFA;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x8FD9;&#x91CC;&#x627E;&#x5230;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF1A;<a href="https://github.com/dmilicic/android-clean-sample-app" target="_blank" rel="external">Android Clean Boilerplate</a></p>
<h2 id="&#x76F8;&#x5173;&#x9605;&#x8BFB;"><a class="header-anchor" href="#&#x76F8;&#x5173;&#x9605;&#x8BFB;"></a>&#x76F8;&#x5173;&#x9605;&#x8BFB;</h2>
<p>&#x672C;&#x6307;&#x5357;&#x662F;&#x5BF9;&#x8BE5;<a href="http://fernandocejas.com/2014/09/03/architecting-android-the-clean-way/" target="_blank" rel="external">&#x6587;&#x7AE0;</a>&#x7684;&#x6269;&#x5C55;&#x3002;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x6211;&#x5728;&#x793A;&#x4F8B;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;<strong>&#x5E38;&#x89C4;&#x7684;Java&#x4EE3;&#x7801;</strong>&#xFF0C;&#x4EE5;&#x907F;&#x514D;&#x5728;&#x5C55;&#x793A;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#x6709;&#x5176;&#x5B83;&#x7684;&#x5F71;&#x54CD;&#x3002;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x770B;&#x5230;&#x5728;&#x7B80;&#x6D01;&#x67B6;&#x6784;&#x4E2D;&#x4F7F;&#x7528; <strong>RxJava</strong> &#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x770B;<a href="http://fernandocejas.com/2015/07/18/architecting-android-the-evolution/" target="_blank" rel="external">&#x8FD9;&#x4E2A;</a>&#x3002;</p>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;a href=&quot;https://github.com/ReactiveX/RxJava&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/12/21/android-clean-architecture-pattern/mvp_clean.png&quot; style=&quot;float:left; width:100px; height:56px; margin-right:16px&quot; alt=&quot;&quot;&gt;&lt;/a&gt;
&lt;span&gt;&amp;#x3010;&amp;#x7FFB;&amp;#x8BD1;&amp;#x3011;&amp;#x81EA;&amp;#x6211;&amp;#x5F00;&amp;#x59CB;&amp;#x5F00;&amp;#x53D1; Android &amp;#x5E94;&amp;#x7528;&amp;#x4EE5;&amp;#x6765;&amp;#x5C31;&amp;#x6709;&amp;#x4E00;&amp;#x79CD;&amp;#x611F;&amp;#x89C9;&amp;#x2014;&amp;#x2014;&amp;#x6211;&amp;#x53EF;&amp;#x4EE5;&amp;#x628A;&amp;#x5B83;&amp;#x505A;&amp;#x5F97;&amp;#x66F4;&amp;#x597D;&amp;#x3002;&amp;#x5728;&amp;#x6211;&amp;#x7684;&amp;#x804C;&amp;#x4E1A;&amp;#x751F;&amp;#x6DAF;&amp;#x4E2D;&amp;#xFF0C;&amp;#x6211;&amp;#x770B;&amp;#x5230;&amp;#x8FC7;&amp;#x4E0D;&amp;#x5C11;&amp;#x70C2;&amp;#x4EE3;&amp;#x7801;&amp;#xFF0C;&amp;#x5176;&amp;#x4E2D;&amp;#x4E00;&amp;#x4E9B;&amp;#x8FD8;&amp;#x662F;&amp;#x6211;&amp;#x81EA;&amp;#x5DF1;&amp;#x5199;&amp;#x7684;&amp;#x3002;Android &amp;#x7684;&amp;#x590D;&amp;#x6742;&amp;#x6027;&amp;#x548C;&amp;#x70C2;&amp;#x4EE3;&amp;#x7801;&amp;#x52BF;&amp;#x5FC5;&amp;#x9020;&amp;#x6210;&amp;#x5927;&amp;#x95EE;&amp;#x9898;&amp;#x3002;&amp;#x6240;&amp;#x4EE5;&amp;#xFF0C;&amp;#x4ECE;&amp;#x9519;&amp;#x8BEF;&amp;#x4E2D;&amp;#x6C72;&amp;#x53D6;&amp;#x6559;&amp;#x8BAD;&amp;#x5E76;&amp;#x6301;&amp;#x7EED;&amp;#x6539;&amp;#x5584;&amp;#x5341;&amp;#x5206;&amp;#x91CD;&amp;#x8981;&amp;#x3002;&amp;#x5728;&amp;#x591A;&amp;#x6B21;&amp;#x5C1D;&amp;#x8BD5;&amp;#x5BFB;&amp;#x627E;&amp;#x66F4;&amp;#x597D;&amp;#x7684;&amp;#x5F00;&amp;#x53D1;&amp;#x65B9;&amp;#x5F0F;&amp;#x540E;&amp;#xFF0C;&amp;#x6211;&amp;#x9047;&amp;#x5230;&amp;#x4E86; Clean &amp;#x67B6;&amp;#x6784;&amp;#xFF08;&amp;#x7B80;&amp;#x6D01;&amp;#x67B6;&amp;#x6784;&amp;#xFF09;&amp;#x3002;&amp;#x4E8E;&amp;#x662F;&amp;#x6211;&amp;#x5C06;&amp;#x5176;&amp;#x5E94;&amp;#x7528;&amp;#x5728;&amp;#x4E86; Android &amp;#x5F00;&amp;#x53D1;&amp;#x4E2D;&amp;#xFF0C;&amp;#x5E76;&amp;#x7ED3;&amp;#x5408;&amp;#x6211;&amp;#x7684;&amp;#x5F00;&amp;#x53D1;&amp;#x7ECF;&amp;#x9A8C;&amp;#x505A;&amp;#x4E86;&amp;#x8C03;&amp;#x6574;&amp;#xFF0C;&amp;#x5199;&amp;#x51FA;&amp;#x4E86;&amp;#x8FD9;&amp;#x7BC7;&amp;#x6211;&amp;#x89C9;&amp;#x5F97;&amp;#x8F83;&amp;#x4E3A;&amp;#x5B9E;&amp;#x7528;&amp;#x3001;&amp;#x503C;&amp;#x5F97;&amp;#x5206;&amp;#x4EAB;&amp;#x7684;&amp;#x6587;&amp;#x7AE0;&amp;#x3002;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Architecture" scheme="http://ngudream.com/tags/Architecture/"/>
    
  </entry>
  
  <entry>
    <title>响应式MVP架构todo-mvp-rxjava实践</title>
    <link href="http://ngudream.com/2016/12/12/android-mvp-rxjava-practice/"/>
    <id>http://ngudream.com/2016/12/12/android-mvp-rxjava-practice/</id>
    <published>2016-12-12T15:08:01.000Z</published>
    <updated>2017-02-25T14:27:58.300Z</updated>
    
    <content type="html"><![CDATA[<div><a href="https://github.com/googlesamples/android-architecture" target="_blank" rel="external"><img class="pic lazy" data-original="/2016/12/12/android-mvp-rxjava-practice/pain.png" style="float:left; width:100px; height:66px; margin-right:16px" alt=""></a>
<span>&#x5F88;&#x591A;&#x65F6;&#x5019;&#xFF0C;Activity&#x53EF;&#x80FD;&#x65E2;&#x627F;&#x62C5;UI&#x663E;&#x793A;&#x5DE5;&#x4F5C;&#xFF0C;&#x53C8;&#x627F;&#x62C5;&#x90E8;&#x5206;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x5DE5;&#x4F5C;&#xFF0C;&#x751A;&#x81F3;&#x662F;&#x5404;&#x79CD;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x3001;&#x56DE;&#x8C03;&#x7B49;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;Activity&#x7684;&#x4EE3;&#x7801;&#x4F1A;&#x5FEB;&#x901F;&#x81A8;&#x80C0;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x51E0;&#x5343;&#x884C;&#x4EE3;&#x7801;&#x7684;Activity&#x3002;&#x4E00;&#x4E2A;&#x5230;&#x8FD9;&#x6837;&#x7684;&#x7C7B;&#x5C31;&#x662F;&#x6BD4;&#x8F83;&#x75DB;&#x82E6;&#x7684;&#x4E8B;&#x60C5;&#x3002;&#x90A3;&#x7528;&#x4EC0;&#x4E48;&#x529E;&#x6CD5;&#x89E3;&#x51B3;&#x5462;&#xFF1F;</span></div>
<a id="more"></a>
<p>&#x73B0;&#x5728;&#x57FA;&#x672C;&#x662F;&#x91C7;&#x53D6;&#x6A2A;&#x5411;&#x5207;&#x5272;&#x7EC6;&#x5206;&#x6216;&#x8005;&#x7EB5;&#x5411;&#x5C42;&#x6B21;&#x5316;&#xFF1A;</p>
<ul>
<li>&#x7B2C;&#x4E00;&#x79CD;&#x662F;&#x6A21;&#x5757;&#x5316;</li>
<li>&#x7B2C;&#x4E8C;&#x79CD;&#x662F;&#x5206;&#x5C42;</li>
</ul>
<p>&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x6700;&#x7EC8;&#x8981;&#x5B9E;&#x73B0;&#x7684;&#x90FD;&#x662F;&#x89E3;&#x8026;&#x3002;&#x5206;&#x5C42;&#x8BB2;&#x7684;&#x662F;&#x7EB5;&#x5411;&#x5C42;&#x9762;&#x4E0A;&#x7684;&#x89E3;&#x8026;&#xFF0C;&#x6A21;&#x5757;&#x5316;&#x5219;&#x662F;&#x6A2A;&#x5411;&#x4E0A;&#x7684;&#x89E3;&#x8026;&#x3002;</p>
<h2 id="mvp-rxjava"><a class="header-anchor" href="#mvp-rxjava"></a>MVP-RxJava</h2>
<p>&#x73B0;&#x5728;&#x8BA9;&#x6211;&#x4EEC;&#x6765;&#x5B9E;&#x8DF5;&#x4E00;&#x4E0B;Google&#x5B98;&#x65B9;&#x63D0;&#x4F9B;&#x7684;MVP-RxJava&#x3002;</p>
<p>MVP&#x67B6;&#x6784;&#x4E2D;&#x5C06;&#x8FD9;&#x4E09;&#x5C42;&#x5206;&#x522B;&#x62BD;&#x8C61;&#x5230;&#x5404;&#x81EA;&#x7684;&#x63A5;&#x53E3;&#x5F53;&#x4E2D;&#xFF0C;&#x4ECE;&#x800C;&#x901A;&#x8FC7;&#x5206;&#x5C42;&#x6765;&#x8FDB;&#x884C;&#x89E3;&#x8026;&#x7684;&#x6846;&#x67B6;&#x3002;&#x901A;&#x8FC7;&#x63A5;&#x53E3;&#x5C06;&#x5C42;&#x6B21;&#x4E4B;&#x95F4;&#x8FDB;&#x884C;&#x9694;&#x79BB;&#xFF0C;&#x800C;Presenter&#x5BF9;View&#x548C;Model&#x7684;&#x76F8;&#x4E92;&#x4F9D;&#x8D56;&#x4E5F;&#x662F;&#x4F9D;&#x8D56;&#x4E8E;&#x5404;&#x81EA;&#x7684;&#x63A5;&#x53E3;&#x3002;&#x8FD9;&#x70B9;&#x7B26;&#x5408;&#x4E86;&#x63A5;&#x53E3;&#x9694;&#x79BB;&#x539F;&#x5219;&#xFF0C;&#x4E5F;&#x6B63;&#x662F;&#x9762;&#x5411;&#x63A5;&#x53E3;&#x7F16;&#x7A0B;&#x3002;&#x6BCF;&#x4E2A;&#x7C7B;&#x90FD;&#x5C3D;&#x91CF;&#x7B26;&#x5408;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x8BBE;&#x8BA1;&#x539F;&#x5219;&#xFF0C;&#x91C7;&#x7528;&#x5355;&#x4E00;&#x804C;&#x8D23;&#x539F;&#x5219;&#xFF0C;&#x4EE5;&#x4FBF;&#x6574;&#x4E2A;&#x9879;&#x76EE;&#x67B6;&#x6784;&#x6E05;&#x6670;&#x5206;&#x5DE5;&#x660E;&#x786E;&#x3002;</p>
<p>Google&#x63D0;&#x4F9B;&#x7684;Android&#x5B98;&#x65B9;MVP&#x6574;&#x4E2A;&#x9879;&#x76EE;&#x7684;&#x903B;&#x8F91;&#x56FE;&#x5982;&#x4E0B;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/12/12/android-mvp-rxjava-practice/1.jpg" class="lazy">
</div>
<p>&#x4F7F;&#x7528;&#x8FD9;&#x6837;&#x7684;&#x67B6;&#x6784;&#x6709;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x7684;&#x597D;&#x5904;&#x5C31;&#x662F;&#x89E3;&#x8026;&#xFF0C;view&#x5C31;&#x53EA;&#x8D1F;&#x8D23;&#x66F4;&#x65B0;UI&#xFF0C;&#x663E;&#x793A;&#x63A7;&#x4EF6;&#xFF0C;&#x5B8C;&#x6210;&#x4E0E;&#x7528;&#x6237;&#x7684;&#x4EA4;&#x4E92;&#xFF1B;model&#x7684;&#x804C;&#x8D23;&#x5462;&#x5C31;&#x662F;&#x53BB;&#x52A0;&#x8F7D;&#x6570;&#x636E;&#xFF1B;&#x5177;&#x4F53;&#x7684;model&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x53BB;&#x83B7;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x83B7;&#x53D6;&#x5B8C;&#x4E86;&#x4E4B;&#x540E;ui&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x53BB;&#x66F4;&#x65B0;&#xFF0C;&#x8FD9;&#x4E00;&#x5207;&#x90FD;&#x662F;&#x7531;presenter&#x53BB;&#x5B8C;&#x6210;&#x3002;&#x8FD9;&#x6837;&#x505A;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x9002;&#x5408;&#x56E2;&#x961F;&#x534F;&#x4F5C;&#x53BB;&#x5F00;&#x53D1;&#xFF0C;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#x4E5F;&#x65B9;&#x4FBF;&#x6D4B;&#x8BD5;&#xFF0C;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x4E4B;&#x95F4;&#x4E92;&#x4E0D;&#x5E72;&#x6270;&#x3002;</p>
<p>&#x6211;&#x4EEC;&#x77E5;&#x9053;&#xFF0C;&#x5728;Android&#x4E2D;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x4E00;&#x822C;&#x4F7F;&#x7528;AsycTask&#x6765;&#x5B8C;&#x6210;&#xFF0C;&#x4F46;&#x662F;AsycTask&#x6709;&#x5F88;&#x591A;&#x7F3A;&#x70B9;&#xFF0C;&#x5982;&#x4E0D;&#x80FD;&#x65B9;&#x4FBF;&#x7684;&#x7EC8;&#x6B62;&#x4EFB;&#x52A1;&#x7684;&#x6267;&#x884C;&#x7B49;&#x3002;</p>
<p>RxAndroid&#x662F;&#x4E00;&#x4E2A;&#x5728; Java VM &#x4E0A;&#x4F7F;&#x7528;&#x53EF;&#x89C2;&#x6D4B;&#x7684;&#x5E8F;&#x5217;&#x6765;&#x7EC4;&#x6210;&#x5F02;&#x6B65;&#x7684;&#x3001;&#x57FA;&#x4E8E;&#x4E8B;&#x4EF6;&#x7684;&#x7A0B;&#x5E8F;&#x7684;&#x5E93;&#xFF0C;&#x5B83;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x66FF;&#x4EE3;AsycTask&#x6765;&#x5B8C;&#x6210;&#x5404;&#x79CD;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x6709;BindActivity&#x548C;BindFragment&#x65B9;&#x6CD5;&#xFF0C;&#x4F60;&#x6839;&#x672C;&#x4E0D;&#x9700;&#x8981;&#x8003;&#x8651;&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x65F6;&#x7684;Activity&#x548C;Fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x95EE;&#x9898;&#x3002;</p>
<p>&#x5F02;&#x6B65;&#x64CD;&#x4F5C;&#x5F88;&#x5173;&#x952E;&#x7684;&#x4E00;&#x70B9;&#x662F;&#x7A0B;&#x5E8F;&#x7684;&#x7B80;&#x6D01;&#x6027;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x8C03;&#x5EA6;&#x8FC7;&#x7A0B;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5F02;&#x6B65;&#x4EE3;&#x7801;&#x7ECF;&#x5E38;&#x4F1A;&#x65E2;&#x96BE;&#x5199;&#x4E5F;&#x96BE;&#x88AB;&#x8BFB;&#x61C2;&#x3002; Android &#x521B;&#x9020;&#x7684;AsyncTask&#xA0;&#x548C;Handler&#xA0;&#xFF0C;&#x5176;&#x5B9E;&#x90FD;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x5F02;&#x6B65;&#x4EE3;&#x7801;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x3002;RxJava &#x7684;&#x4F18;&#x52BF;&#x4E5F;&#x662F;&#x7B80;&#x6D01;&#xFF0C;&#x4F46;&#x5B83;&#x7684;&#x7B80;&#x6D01;&#x7684;&#x4E0E;&#x4F17;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x5728;&#x4E8E;&#xFF0C;&#x968F;&#x7740;&#x7A0B;&#x5E8F;&#x903B;&#x8F91;&#x53D8;&#x5F97;&#x8D8A;&#x6765;&#x8D8A;&#x590D;&#x6742;&#xFF0C;&#x5B83;&#x4F9D;&#x7136;&#x80FD;&#x591F;&#x4FDD;&#x6301;&#x7B80;&#x6D01;&#x3002;</p>
<p>&#x7ECF;&#x8FC7;&#x6280;&#x672F;&#x9009;&#x578B;&#x3001;&#x7A0B;&#x5E8F;&#x7ED3;&#x6784;&#x8BBE;&#x8BA1;&#xFF0C;&#x518D;&#x7ED3;&#x5408;&#x4E0A;&#x9762;&#x5217;&#x4E3E;&#x7684;&#x67B6;&#x6784;&#x8BBE;&#x8BA1;&#x4F18;&#x70B9;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x9879;&#x76EE;&#x4E2D;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x67B6;&#x6784;&#x8FDB;&#x884C;&#x8BBE;&#x8BA1;&#x5B9E;&#x73B0;&#xFF0C;&#x5373;MVP+RxJava+Realm&#x7684;&#x6A21;&#x5F0F;&#x3002;</p>
<div align="center">
<img data-original="/2016/12/12/android-mvp-rxjava-practice/2.jpg" class="lazy">
</div>
<p>&#x5176;&#x4E2D;&#x7F51;&#x7EDC;&#x5C42;&#x4F7F;&#x7528;&#x4E86;OkHttp&#xFF0C;&#x901A;&#x8FC7;&#x54CD;&#x5E94;&#x5F0F;&#x7684;RxJava&#x4E0E;Presenter&#x4EA4;&#x4E92;&#xFF0C;&#x518D;&#x7531;Presenter&#x4E0E;&#x754C;&#x9762;&#x4EA4;&#x4E92;&#xFF0C;&#x5B9E;&#x73B0;&#x89E3;&#x85D5;&#xFF1B;&#x6570;&#x636E;&#x5E93;&#x5219;&#x9009;&#x62E9;&#x4E86;&#x6027;&#x80FD;&#x66F4;&#x9AD8;&#x3001;&#x7F16;&#x7A0B;&#x66F4;&#x7B80;&#x6D01;&#x4F18;&#x96C5;&#x7684;Realm&#xFF0C;&#x5B83;&#x4E0E;RxJava&#x914D;&#x5408;&#x4F7F;&#x7528;&#x4E5F;&#x66F4;&#x65B9;&#x4FBF;&#x5FEB;&#x6377;&#x3002;</p>
<h2 id="&#x6A21;&#x5F0F;&#x6BD4;&#x8F83;"><a class="header-anchor" href="#&#x6A21;&#x5F0F;&#x6BD4;&#x8F83;"></a>&#x6A21;&#x5F0F;&#x6BD4;&#x8F83;</h2>
<h3 id="mvp-&#x4E0E;-mvc"><a class="header-anchor" href="#mvp-&#x4E0E;-mvc"></a>MVP &#x4E0E; MVC</h3>
<div align="center">
<img data-original="/2016/12/12/android-mvp-rxjava-practice/20160120100717863.jpg" class="lazy">
</div>
<ul>
<li>&#x5BF9;&#x4E8E;&#x539F;&#x751F;&#x7684;Android&#x9879;&#x76EE;&#x6765;&#x8BF4;&#xFF0C;layout.xml&#x91CC;&#x9762;&#x7684;xml&#x6587;&#x4EF6;&#x5C31;&#x5BF9;&#x5E94;&#x4E8E;MVC&#x7684;view&#x5C42;</li>
<li>&#x5F53;&#x7528;&#x6237;&#x51FA;&#x53D1;&#x4E8B;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#xFF0C;view&#x5C42;&#x4F1A;&#x53D1;&#x9001;&#x6307;&#x4EE4;&#x5230;controller&#x5C42;&#xFF0C;&#x63A5;&#x7740;controller&#x53BB;&#x901A;&#x77E5;model&#x5C42;&#x66F4;&#x65B0;&#x6570;&#x636E;&#xFF0C;model&#x5C42;&#x66F4;&#x65B0;&#x5B8C;&#x6570;&#x636E;&#x4EE5;&#x540E;&#x76F4;&#x63A5;&#x663E;&#x793A;&#x5728;view&#x5C42;&#x4E0A;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;MVC&#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x3002;</li>
<li>MVP&#x4E2D;&#x628A;Layout&#x5E03;&#x5C40;&#x548C;Activity&#x4F5C;&#x4E3A;View&#x5C42;&#xFF0C;&#x589E;&#x52A0;&#x4E86;Presenter&#xFF0C;Presenter&#x5C42;&#x4E0E;Model&#x5C42;&#x8FDB;&#x884C;&#x4E1A;&#x52A1;&#x7684;&#x4EA4;&#x4E92;&#xFF0C;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x4E0E;View&#x5C42;&#x4EA4;&#x4E92;&#xFF08;&#x4E5F;&#x5C31;&#x662F;Activity&#xFF09;&#x8FDB;&#x884C;&#x56DE;&#x8C03;&#x6765;&#x5237;&#x65B0;UI</li>
<li>&#x5728;MVP&#x4E2D;View&#x5E76;&#x4E0D;&#x76F4;&#x63A5;&#x4F7F;&#x7528;Model&#xFF0C;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x662F;&#x901A;&#x8FC7;Presenter (MVC&#x4E2D;&#x7684;Controller)&#x6765;&#x8FDB;&#x884C;&#x7684;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x4EA4;&#x4E92;&#x90FD;&#x53D1;&#x751F;&#x5728;Presenter&#x5185;&#x90E8;</li>
</ul>
<h3 id="&#x4F18;&#x7F3A;&#x70B9;"><a class="header-anchor" href="#&#x4F18;&#x7F3A;&#x70B9;"></a>&#x4F18;&#x7F3A;&#x70B9;</h3>
<h4 id="mvc"><a class="header-anchor" href="#mvc"></a>MVC</h4>
<p>&#x4F18;&#x70B9;&#xFF1A;</p>
<ol>
<li>&#x9996;&#x5148;&#x5C31;&#x662F;&#x7406;&#x89E3;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#xFF0C;&#x6280;&#x672F;&#x542B;&#x91CF;&#x4E0D;&#x9AD8;&#xFF0C;&#x8FD9;&#x5BF9;&#x5F00;&#x53D1;&#x548C;&#x7EF4;&#x62A4;&#x6765;&#x8BF4;&#x6210;&#x672C;&#x8F83;&#x4F4E;&#x4E5F;&#x6613;&#x4E8E;&#x7EF4;&#x62A4;&#x4E0E;&#x4FEE;&#x6539;&#x3002;</li>
<li>&#x8026;&#x5408;&#x6027;&#x4E0D;&#x9AD8;&#xFF0C;&#x8868;&#x73B0;&#x5C42;&#x4E0E;&#x4E1A;&#x52A1;&#x5C42;&#x5206;&#x79BB;&#x5404;&#x53F8;&#x5176;&#x804C;&#xFF0C;&#x5BF9;&#x5F00;&#x53D1;&#x6765;&#x8BF4;&#x5F88;&#x6709;&#x5229;&#x3002;</li>
</ol>
<p>&#x7F3A;&#x70B9;&#xFF1A;</p>
<ol>
<li>Controller&#x5BF9;&#x5E94;&#x7684;&#x662F;Activity&#xFF0C;&#x800C;Activity&#x4E2D;&#x5374;&#x53C8;&#x5177;&#x6709;&#x64CD;&#x4F5C;UI&#x7684;&#x529F;&#x80FD;&#xFF0C;Activity&#x6240;&#x5728;&#x7684;Controller&#x662F;&#x975E;&#x5E38;&#x91CD;&#x7684;&#xFF0C;&#x5404;&#x5C42;&#x6B21;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#x60C5;&#x51B5;&#x4E5F;&#x6BD4;&#x8F83;&#x4E25;&#x91CD;&#xFF0C;&#x4E0D;&#x65B9;&#x4FBF;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x3002;</li>
<li>MVC &#x6CA1;&#x6709;&#x5B8C;&#x5168;&#x89E3;&#x8026;&#xFF0C;view&#x5C42;&#x548C;model&#x5C42;&#x662F;&#x76F8;&#x4E92;&#x53EF;&#x77E5;&#x7684;&#x3002;</li>
</ol>
<h4 id="mvp"><a class="header-anchor" href="#mvp"></a>MVP</h4>
<p>&#x4F18;&#x70B9;&#xFF1A;</p>
<ol>
<li>&#x4E0E;MVC&#x6700;&#x660E;&#x663E;&#x7684;&#x5DEE;&#x522B;&#x5C31;&#x662F;view&#x5C42;&#x548C;model&#x5C42;&#x4E0D;&#x518D;&#x76F8;&#x4E92;&#x53EF;&#x77E5;&#xFF0C;&#x5B8C;&#x5168;&#x7684;&#x89E3;&#x8026;&#x3002;</li>
<li>&#x65B9;&#x4FBF;&#x6D4B;&#x8BD5;&#x9A71;&#x52A8;&#x5F00;&#x53D1;&#x3002;</li>
<li>&#x4EE3;&#x7801;&#x590D;&#x7528;&#x5EA6;&#x8F83;&#x9AD8;&#x3002;</li>
</ol>
<h3 id="mvp-&#x4E0E;-mvvm"><a class="header-anchor" href="#mvp-&#x4E0E;-mvvm"></a>MVP &#x4E0E; MVVM</h3>
<p>&#x4E0E;MVVM&#xFF08;Model-View-ViewModel&#xFF09;&#x7684;&#x533A;&#x522B;&#xFF1A;</p>
<p>MVVM&#x4E0E;MVP&#x975E;&#x5E38;&#x76F8;&#x4F3C;&#xFF0C;&#x552F;&#x4E00;&#x533A;&#x522B;&#x662F;View&#x548C;Model&#x8FDB;&#x884C;&#x53CC;&#x5411;&#x7ED1;&#x5B9A;&#xFF0C;&#x4E24;&#x8005;&#x4E4B;&#x95F4;&#x6709;&#x4E00;&#x65B9;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x5219;&#x4F1A;&#x53CD;&#x5E94;&#x5230;&#x53E6;&#x4E00;&#x65B9;&#x4E0A;&#x3002;MVVM&#x6A21;&#x5F0F;&#x6709;&#x70B9;&#x50CF;ListView&#x4E0E;Adapter&#x3001;&#x6570;&#x636E;&#x96C6;&#x7684;&#x5173;&#x7CFB;&#xFF0C;&#x5F53;&#x6570;&#x636E;&#x96C6;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x8C03;&#x7528;Adapter&#x7684;notifyDataSetChanged&#x4E4B;&#x540E;View&#x5C31;&#x76F4;&#x63A5;&#x66F4;&#x65B0;&#xFF0C;&#x540C;&#x65F6;&#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x53C8;&#x6CA1;&#x6709;&#x8026;&#x5408;&#xFF0C;&#x4F7F;&#x5F97;ListView&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x7075;&#x6D3B;&#x3002;</p>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp-rxjava/" target="_blank" rel="external">TODO-MVP-RXJAVA</a></li>
<li><a href="https://labs.ribot.co.uk/android-application-architecture-8b6e34acda65#.roya5ayke" target="_blank" rel="external">Android Application Architecture</a></li>
<li><a href="https://github.com/googlesamples/android-architecture" target="_blank" rel="external">Android Architecture Blueprints</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;a href=&quot;https://github.com/googlesamples/android-architecture&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/12/12/android-mvp-rxjava-practice/pain.png&quot; style=&quot;float:left; width:100px; height:66px; margin-right:16px&quot; alt=&quot;&quot;&gt;&lt;/a&gt;
&lt;span&gt;&amp;#x5F88;&amp;#x591A;&amp;#x65F6;&amp;#x5019;&amp;#xFF0C;Activity&amp;#x53EF;&amp;#x80FD;&amp;#x65E2;&amp;#x627F;&amp;#x62C5;UI&amp;#x663E;&amp;#x793A;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF0C;&amp;#x53C8;&amp;#x627F;&amp;#x62C5;&amp;#x90E8;&amp;#x5206;&amp;#x4E1A;&amp;#x52A1;&amp;#x903B;&amp;#x8F91;&amp;#x5DE5;&amp;#x4F5C;&amp;#xFF0C;&amp;#x751A;&amp;#x81F3;&amp;#x662F;&amp;#x5404;&amp;#x79CD;&amp;#x7F51;&amp;#x7EDC;&amp;#x8BF7;&amp;#x6C42;&amp;#x3001;&amp;#x56DE;&amp;#x8C03;&amp;#x7B49;&amp;#xFF0C;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x8BDD;Activity&amp;#x7684;&amp;#x4EE3;&amp;#x7801;&amp;#x4F1A;&amp;#x5FEB;&amp;#x901F;&amp;#x81A8;&amp;#x80C0;&amp;#xFF0C;&amp;#x6709;&amp;#x65F6;&amp;#x5019;&amp;#x6211;&amp;#x4EEC;&amp;#x53EF;&amp;#x4EE5;&amp;#x770B;&amp;#x5230;&amp;#x51E0;&amp;#x5343;&amp;#x884C;&amp;#x4EE3;&amp;#x7801;&amp;#x7684;Activity&amp;#x3002;&amp;#x4E00;&amp;#x4E2A;&amp;#x5230;&amp;#x8FD9;&amp;#x6837;&amp;#x7684;&amp;#x7C7B;&amp;#x5C31;&amp;#x662F;&amp;#x6BD4;&amp;#x8F83;&amp;#x75DB;&amp;#x82E6;&amp;#x7684;&amp;#x4E8B;&amp;#x60C5;&amp;#x3002;&amp;#x90A3;&amp;#x7528;&amp;#x4EC0;&amp;#x4E48;&amp;#x529E;&amp;#x6CD5;&amp;#x89E3;&amp;#x51B3;&amp;#x5462;&amp;#xFF1F;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
  <entry>
    <title>Android 知识梳理</title>
    <link href="http://ngudream.com/2016/11/30/android-data-gather/"/>
    <id>http://ngudream.com/2016/11/30/android-data-gather/</id>
    <published>2016-11-30T15:16:15.000Z</published>
    <updated>2017-01-15T07:58:44.320Z</updated>
    
    <content type="html"><![CDATA[<p>&#x6765;&#x4E00;&#x5F20;googdev&#x7684;&#x601D;&#x7EF4;&#x5BFC;&#x56FE;&#xFF0C;&#x770B;&#x770B;&#x5982;&#x4F55;&#x7CFB;&#x7EDF;&#x7684;&#x5B66;&#x4E60; Android &#x5F00;&#x53D1;&#x77E5;&#x8BC6;&#x3002;</p>
<div align="center">
<img data-original="/2016/11/30/android-data-gather/20160913000554907.png" class="lazy">
</div>
<p>&#x518D;&#x6765;&#x4E00;&#x5F20;Android&#x77E5;&#x8BC6;&#x70B9;&#x603B;&#x7ED3;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/11/30/android-data-gather/20160108161827482.png" class="lazy">
</div>
<p>&#x672C;&#x7BC7;&#x535A;&#x5BA2;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x77E5;&#x8BC6;&#x6574;&#x7406;&#xFF0C;&#x56E0;&#x4E3A;&#x7F51;&#x4E0A;&#x5BF9;&#x4E8E;Android&#x7684;&#x77E5;&#x8BC6;&#x4ECB;&#x7ECD;&#x8DB3;&#x591F;&#x591A;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4E0D;&#x518D;&#x5199;&#x76F8;&#x5173;&#x6587;&#x7AE0;&#xFF08;&#x4E3B;&#x8981;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x5199;&#x7684;&#x4E0D;&#x5982;&#x4EBA;&#x5BB6;&#x597D;&#xFF09;&#xFF0C;&#x6240;&#x4EE5;&#x6240;&#x6709;&#x6587;&#x7AE0;&#x5747;&#x6765;&#x81EA;&#x5176;&#x4ED6;&#x5927;&#x795E;&#x4E4B;&#x624B;&#xFF0C;&#x4E0D;&#x8D34;&#x539F;&#x6587;&#x7AE0;&#xFF0C;&#x53EA;&#x63D0;&#x4F9B;&#x8FDE;&#x63A5;&#xFF0C;&#x56E0;&#x6B64;&#x672C;&#x6587;&#x65E8;&#x5728;&#x51CF;&#x5C11;&#x4F60;&#x5BF9;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x7684;&#x641C;&#x7D22;&#x8FC7;&#x7A0B;&#xFF0C;&#x65B9;&#x4FBF;&#x67E5;&#x627E;&#x76F8;&#x5173;&#x77E5;&#x8BC6;&#x3002;</p>
<blockquote>
<p>&#x6587;&#x7AE0;&#x4F5C;&#x8005;:<a href="http://www.codemx.cn/" target="_blank" rel="external">&#x58A8;&#x9999;</a><br>
&#x539F;&#x59CB;&#x94FE;&#x63A5;:<a href="http://www.codemx.cn/2016/05/04/2016-05-04-Android-Tree/" target="_blank" rel="external">http://www.codemx.cn/2016/05/04/2016-05-04-Android-Tree/</a></p>
</blockquote>
<h2 id="activity"><a class="header-anchor" href="#activity"></a>Activity</h2>
<p>Activity&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x6B63;&#x5E38;&#x7ED3;&#x675F;&#x548C;&#x975E;&#x6B63;&#x5E38;&#x9500;&#x6BC1;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x548C;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x53CA;&#x5176;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#xFF1B;</p>
<ul>
<li><a href="http://hukai.me/android-training-managing-the-activity-lifecycle-lesson-1/" target="_blank" rel="external">Android Training - &#x8BE6;&#x89E3;Activity&#x751F;&#x547D;&#x5468;&#x671F;(Lesson 1 - &#x542F;&#x52A8;&#x4E0E;&#x9500;&#x6BC1;Activity)</a></li>
<li><a href="http://hukai.me/android-training-managing-the-activity-lifecycle-lesson-2/" target="_blank" rel="external">Android Training - &#x8BE6;&#x89E3;Activity&#x751F;&#x547D;&#x5468;&#x671F;(Lesson 2 - &#x6682;&#x505C;&#x4E0E;&#x6062;&#x590D;activity)</a></li>
<li><a href="http://hukai.me/android-training-managing-the-activity-lifecycle-lesson-3/" target="_blank" rel="external">Android Training - &#x8BE6;&#x89E3;Activity&#x751F;&#x547D;&#x5468;&#x671F;(Lesson 3 - &#x505C;&#x6B62;&#x4E0E;&#x91CD;&#x542F;activity)</a></li>
<li><a href="http://hukai.me/android-training-managing-the-activity-lifecycle-lesson-4/" target="_blank" rel="external">Android Training - &#x8BE6;&#x89E3;Activity&#x751F;&#x547D;&#x5468;&#x671F;(Lesson 4 - &#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x9500;&#x6BC1;&#x7684;activity)</a></li>
<li><a href="http://www.cnblogs.com/hanyonglu/archive/2012/03/28/2420515.html" target="_blank" rel="external">Android&#x5F00;&#x53D1;&#x4E4B;InstanceState&#x8BE6;&#x89E3;</a></li>
</ul>
<h3 id="activity&#x542F;&#x52A8;&#x6A21;&#x5F0F;"><a class="header-anchor" href="#activity&#x542F;&#x52A8;&#x6A21;&#x5F0F;"></a>Activity&#x542F;&#x52A8;&#x6A21;&#x5F0F;</h3>
<ul>
<li><a href="http://jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0520/2897.html" target="_blank" rel="external">Activity&#x542F;&#x52A8;&#x6A21;&#x5F0F;&#x56FE;&#x6587;&#x8BE6;&#x89E3;&#xFF1A;standard, singleTop, singleTask &#x4EE5;&#x53CA; singleInstance</a></li>
<li><a href="http://blog.csdn.net/zhangjg_blog/article/details/10923643" target="_blank" rel="external">Android&#x4E2D;Activity&#x56DB;&#x79CD;&#x542F;&#x52A8;&#x6A21;&#x5F0F;&#x548C;taskAffinity&#x5C5E;&#x6027;&#x8BE6;&#x89E3;</a></li>
</ul>
<h3 id="activity&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;"><a class="header-anchor" href="#activity&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;"></a>Activity&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;</h3>
<ul>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6689748" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6703247" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5185;&#x90E8;&#x542F;&#x52A8;Activity&#x8FC7;&#x7A0B;&#xFF08;startActivity&#xFF09;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6720261" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x5728;&#x65B0;&#x7684;&#x8FDB;&#x7A0B;&#x4E2D;&#x542F;&#x52A8;&#x65B0;&#x7684;Activity&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</a></li>
<li><a href="http://www.soso.io/article/113440.html" target="_blank" rel="external">Activity&#x7684;&#x56DE;&#x6536;&#x8FC7;&#x7A0B;&#x53CA;&#x539F;&#x7406;</a></li>
</ul>
<h2 id="view"><a class="header-anchor" href="#view"></a>View</h2>
<h3 id="view&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;"><a class="header-anchor" href="#view&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;"></a>View&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;</h3>
<ul>
<li><a href="http://blog.csdn.net/wangjinyu501/article/details/9008271" target="_blank" rel="external">Android View&#x7ED8;&#x5236;&#x6D41;&#x7A0B;</a></li>
<li><a href="http://a.codekk.com/detail/Android/lightSky/%E5%85%AC%E5%85%B1%E6%8A%80%E6%9C%AF%E7%82%B9%E4%B9%8B%20View%20%E7%BB%98%E5%88%B6%E6%B5%81%E7%A8%8B" target="_blank" rel="external">&#x516C;&#x5171;&#x6280;&#x672F;&#x70B9;&#x4E4B; View &#x7ED8;&#x5236;&#x6D41;&#x7A0B;</a></li>
<li><a href="http://blog.csdn.net/qinjuning/article/details/8051811" target="_blank" rel="external">Android&#x4E2D;measure&#x8FC7;&#x7A0B;&#x3001;WRAP_CONTENT&#x8BE6;&#x89E3;&#x4EE5;&#x53CA;xml&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x89E3;&#x6790;&#x6D41;&#x7A0B;&#x6D45;&#x6790;(&#x4E0A;)</a></li>
<li><a href="http://blog.csdn.net/qinjuning/article/details/8074262" target="_blank" rel="external">Android&#x4E2D;measure&#x8FC7;&#x7A0B;&#x3001;WRAP_CONTENT&#x8BE6;&#x89E3;&#x4EE5;&#x53CA;xml&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x89E3;&#x6790;&#x6D41;&#x7A0B;&#x6D45;&#x6790;(&#x4E0B;)</a></li>
<li><a href="http://blog.csdn.net/qinjuning/article/details/7474827" target="_blank" rel="external">Android&#x4E2D;View(&#x89C6;&#x56FE;)&#x7ED8;&#x5236;&#x4E0D;&#x540C;&#x72B6;&#x6001;&#x80CC;&#x666F;&#x56FE;&#x7247;&#x539F;&#x7406;&#x6DF1;&#x5165;&#x5206;&#x6790;&#x4EE5;&#x53CA;StateListDrawable&#x4F7F;&#x7528;&#x8BE6;&#x89E3;</a></li>
<li><a href="http://blog.csdn.net/qinjuning/article/details/7226787" target="_blank" rel="external">Android&#x4E2D;&#x5C06;&#x5E03;&#x5C40;&#x6587;&#x4EF6;/View&#x6DFB;&#x52A0;&#x81F3;&#x7A97;&#x53E3;&#x8FC7;&#x7A0B;&#x5206;&#x6790; &#x2014;- &#x4ECE;setContentView()&#x8C08;&#x8D77;</a></li>
</ul>
<h3 id="view&#x7684;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x539F;&#x7406;"><a class="header-anchor" href="#view&#x7684;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x539F;&#x7406;"></a>View&#x7684;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://www.jianshu.com/p/e99b5e8bd67b#" target="_blank" rel="external">&#x56FE;&#x89E3; Android &#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x673A;&#x5236;</a></li>
<li><a href="http://blog.csdn.net/wangjinyu501/article/details/22584465" target="_blank" rel="external">Android &#x4E2D;Touch&#xFF08;&#x89E6;&#x5C4F;&#xFF09;&#x4E8B;&#x4EF6;&#x4F20;&#x9012;&#x673A;&#x5236;</a></li>
<li><a href="http://www.cnblogs.com/sunzn/archive/2013/05/10/3064129.html" target="_blank" rel="external">Android &#x7F16;&#x7A0B;&#x4E0B; Touch &#x4E8B;&#x4EF6;&#x7684;&#x5206;&#x53D1;&#x548C;&#x6D88;&#x8D39;&#x673A;&#x5236;</a></li>
<li><a href="http://blog.csdn.net/lvxiangan/article/details/9309927" target="_blank" rel="external">Android-onInterceptTouchEvent()&#x548C;onTouchEvent()&#x603B;&#x7ED3;</a></li>
<li></li>
</ul>
<p>&#x6CE8;&#xFF1A;&#x4E0A;&#x9762;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x6CA1;&#x627E;&#x5230;&#x539F;&#x521B;&#xFF0C;&#x8FDE;&#x63A5;&#x662F;&#x8F6C;&#x8F7D;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x8C01;&#x627E;&#x5230;&#x539F;&#x521B;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x7ED9;&#x6211;&#x3002;</p>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/49203945" target="_blank" rel="external">Android&#x4E2D;View&#x7684;&#x91CF;&#x7B97;&#x3001;&#x5E03;&#x5C40;&#x53CA;&#x7ED8;&#x56FE;&#x673A;&#x5236;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/49403315" target="_blank" rel="external">&#x6E90;&#x7801;&#x89E3;&#x6790;Android&#x4E2D;View&#x7684;measure&#x91CF;&#x7B97;&#x8FC7;&#x7A0B;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/50366021" target="_blank" rel="external">&#x6E90;&#x7801;&#x89E3;&#x6790;Android&#x4E2D;View&#x7684;layout&#x5E03;&#x5C40;&#x8FC7;&#x7A0B;</a></li>
</ul>
<h3 id="&#x81EA;&#x5B9A;&#x4E49;view"><a class="header-anchor" href="#&#x81EA;&#x5B9A;&#x4E49;view"></a>&#x81EA;&#x5B9A;&#x4E49;View</h3>
<ul>
<li><a href="http://blog.csdn.net/aigestudio/article/details/41212583" target="_blank" rel="external">&#x81EA;&#x5B9A;&#x4E49;&#x63A7;&#x4EF6;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;(&#x7CFB;&#x5217;&#x6559;&#x7A0B;)</a></li>
<li><a href="http://www.gcssloop.com/customview/CustomViewIndex" target="_blank" rel="external">&#x5B89;&#x5353;&#x81EA;&#x5B9A;&#x4E49;View&#x6559;&#x7A0B;&#x76EE;&#x5F55;</a></li>
</ul>
<h3 id="&#x81EA;&#x5B9A;&#x4E49;viewgroup"><a class="header-anchor" href="#&#x81EA;&#x5B9A;&#x4E49;viewgroup"></a>&#x81EA;&#x5B9A;&#x4E49;ViewGroup</h3>
<ul>
<li><a href="http://blog.csdn.net/lmj623565791/article/details/38339817" target="_blank" rel="external">Android &#x624B;&#x628A;&#x624B;&#x6559;&#x60A8;&#x81EA;&#x5B9A;&#x4E49;ViewGroup</a></li>
<li><a href="http://blog.csdn.net/lmj623565791/article/details/38352503" target="_blank" rel="external">Android &#x81EA;&#x5B9A;&#x4E49;ViewGroup &#x5B9E;&#x6218;&#x7BC7; -&gt; &#x5B9E;&#x73B0;FlowLayout</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/51314039" target="_blank" rel="external">Android&#x4E2D;&#x81EA;&#x5B9A;&#x4E49;View&#x3001;ViewGroup&#x7406;&#x8BBA;&#x57FA;&#x7840;&#x8BE6;&#x89E3;</a></li>
</ul>
<h3 id="listview"><a class="header-anchor" href="#listview"></a>ListView</h3>
<ul>
<li><a href="http://blog.csdn.net/guolin_blog/article/details/44996879" target="_blank" rel="external">Android ListView&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x5B8C;&#x5168;&#x89E3;&#x6790;&#xFF0C;&#x5E26;&#x4F60;&#x4ECE;&#x6E90;&#x7801;&#x7684;&#x89D2;&#x5EA6;&#x5F7B;&#x5E95;&#x7406;&#x89E3;</a></li>
</ul>
<h2 id="broadcast"><a class="header-anchor" href="#broadcast"></a>Broadcast</h2>
<h3 id="&#x5E7F;&#x64AD;&#x7684;&#x5206;&#x7C7B;&#x53CA;&#x533A;&#x522B;-&#x6CE8;&#x518C;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x5E7F;&#x64AD;&#x7684;&#x5206;&#x7C7B;&#x53CA;&#x533A;&#x522B;-&#x6CE8;&#x518C;&#x65B9;&#x6CD5;"></a>&#x5E7F;&#x64AD;&#x7684;&#x5206;&#x7C7B;&#x53CA;&#x533A;&#x522B;,&#x6CE8;&#x518C;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://www.cnblogs.com/net168/p/3980068.html" target="_blank" rel="external">&#x89E3;&#x6790;BroadcastReceiver&#x4E4B;&#x4F60;&#x9700;&#x8981;&#x4E86;&#x89E3;&#x7684;&#x4E00;&#x4E9B;&#x4E1C;&#x4E1C;</a></li>
</ul>
<h3 id="&#x5E7F;&#x64AD;&#x5B9E;&#x73B0;&#x8DE8;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1;&#x7684;&#x539F;&#x7406;"><a class="header-anchor" href="#&#x5E7F;&#x64AD;&#x5B9E;&#x73B0;&#x8DE8;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1;&#x7684;&#x539F;&#x7406;"></a>&#x5E7F;&#x64AD;&#x5B9E;&#x73B0;&#x8DE8;&#x8FDB;&#x7A0B;&#x901A;&#x4FE1;&#x7684;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6737352" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6CE8;&#x518C;&#x5E7F;&#x64AD;&#x63A5;&#x6536;&#x5668;&#xFF08;registerReceiver&#xFF09;&#x7684;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6744448" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x53D1;&#x9001;&#x5E7F;&#x64AD;&#xFF08;sendBroadcast&#xFF09;&#x7684;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</a></li>
</ul>
<h2 id="service"><a class="header-anchor" href="#service"></a>Service</h2>
<h3 id="service&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;"><a class="header-anchor" href="#service&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;"></a>Service&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;</h3>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/48169339" target="_blank" rel="external">Android&#x4E2D;bindService&#x7684;&#x4F7F;&#x7528;&#x53CA;Service&#x751F;&#x547D;&#x5468;&#x671F;</a></li>
</ul>
<h3 id="&#x7ED1;&#x5B9A;&#x548C;&#x975E;&#x7ED1;&#x5B9A;service&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x7ED1;&#x5B9A;&#x548C;&#x975E;&#x7ED1;&#x5B9A;service&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>&#x7ED1;&#x5B9A;&#x548C;&#x975E;&#x7ED1;&#x5B9A;Service&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/48169339" target="_blank" rel="external">Android&#x4E2D;bindService&#x7684;&#x4F7F;&#x7528;&#x53CA;Service&#x751F;&#x547D;&#x5468;&#x671F;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/48015475" target="_blank" rel="external">Android&#x901A;&#x8FC7;startService&#x5B9E;&#x73B0;&#x6279;&#x91CF;&#x4E0B;&#x8F7D;&#x793A;&#x4F8B;</a></li>
</ul>
<h3 id="service&#x7684;&#x539F;&#x7406;"><a class="header-anchor" href="#service&#x7684;&#x539F;&#x7406;"></a>Service&#x7684;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6745181" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7ED1;&#x5B9A;&#x670D;&#x52A1;&#xFF08;bindService&#xFF09;&#x7684;&#x8FC7;&#x7A0B;&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;</a></li>
</ul>
<h3 id="intentservice"><a class="header-anchor" href="#intentservice"></a>IntentService</h3>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/48046861" target="_blank" rel="external">Android&#x4E2D;IntentService&#x7684;&#x4F7F;&#x7528;&#x53CA;&#x5176;&#x6E90;&#x7801;&#x89E3;&#x6790;</a></li>
</ul>
<h3 id="accessibility-services"><a class="header-anchor" href="#accessibility-services"></a>Accessibility Services</h3>
<ul>
<li><a href="http://www.android-doc.com/guide/topics/ui/accessibility/services.html" target="_blank" rel="external">Building Accessibility Services(&#x5EFA;&#x7ACB;&#x53EF;&#x8BBF;&#x95EE;&#x6027;&#x670D;&#x52A1;)</a></li>
<li><a href="http://blog.csdn.net/androidsecurity/article/details/41890369?utm_source=tuicool" target="_blank" rel="external">Android Accessibility(&#x8F85;&#x52A9;&#x529F;&#x80FD;) &#x2013;&#x5B9E;&#x73B0;Android&#x5E94;&#x7528;&#x81EA;&#x52A8;&#x5B89;&#x88C5;&#x3001;&#x5378;&#x8F7D;</a></li>
<li><a href="http://www.infoq.com/cn/articles/android-accessibility-installing?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global" target="_blank" rel="external">&#x4F7F;&#x7528;Android Accessibility&#x5B9E;&#x73B0;&#x514D;Root&#x81EA;&#x52A8;&#x6279;&#x91CF;&#x5B89;&#x88C5;&#x529F;&#x80FD;</a></li>
</ul>
<h2 id="contentprovider"><a class="header-anchor" href="#contentprovider"></a>ContentProvider</h2>
<h3 id="contentprovider&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#contentprovider&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>ContentProvider&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://blog.sina.com.cn/s/blog_9f233c070101euqx.html" target="_blank" rel="external">Android ContentProvider&#x548C;Uri&#x8BE6;&#x89E3; (&#x7EDD;&#x5BF9;&#x5168;&#x9762;)</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6950440" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;Content Provider&#x5E94;&#x7528;&#x5B9E;&#x4F8B;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6963418" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;Content Provider&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6967204" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;Content Provider&#x5728;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#x6570;&#x636E;&#x7684;&#x539F;&#x7406;&#x5206;&#x6790;</a></li>
<li><a href="http://blog.csdn.net/luoshengyang/article/details/6985171" target="_blank" rel="external">Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7EC4;&#x4EF6;Content Provider&#x7684;&#x5171;&#x4EAB;&#x6570;&#x636E;&#x66F4;&#x65B0;&#x901A;&#x77E5;&#x673A;&#x5236;&#x5206;&#x6790;</a></li>
</ul>
<p>&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#xFF0C;&#x4E0E;Applocation&#x548C;Activity&#x6BD4;&#x8F83;&#x542F;&#x52A8;&#x987A;&#x5E8F;&#x662F;&#x600E;&#x6837;&#x7684;&#xFF1B;</p>
<p>Contentprovider&#x7684;onCreate&#x65B9;&#x6CD5;&#x5728;Application&#x7684;onCreate&#x65B9;&#x6CD5;&#x524D;&#x9762;&#xFF0C;&#x8D44;&#x6599;&#x5982;&#x4E0B;&#xFF1A;</p>
<ul>
<li><a href="http://www.jianshu.com/p/a1f40b39b3de" target="_blank" rel="external">android &#x5E94;&#x7528;&#x7684;&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#x5206;&#x6790;</a></li>
</ul>
<h2 id="handler"><a class="header-anchor" href="#handler"></a>Handler</h2>
<h3 id="handle&#x7684;&#x539F;&#x7406;&#x53CA;&#x673A;&#x5236;"><a class="header-anchor" href="#handle&#x7684;&#x539F;&#x7406;&#x53CA;&#x673A;&#x5236;"></a>Handle&#x7684;&#x539F;&#x7406;&#x53CA;&#x673A;&#x5236;</h3>
<ul>
<li><a href="http://www.cnblogs.com/codingmyworld/archive/2011/09/12/2174255.html" target="_blank" rel="external">android&#x7684;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236;&#xFF08;&#x56FE;+&#x6E90;&#x7801;&#x5206;&#x6790;&#xFF09;&#x2014;&#x2014;Looper,Handler,Message</a></li>
<li><a href="http://blog.csdn.net/lmj623565791/article/details/38377229" target="_blank" rel="external">Android &#x5F02;&#x6B65;&#x6D88;&#x606F;&#x5904;&#x7406;&#x673A;&#x5236; &#x8BA9;&#x4F60;&#x6DF1;&#x5165;&#x7406;&#x89E3; Looper&#x3001;Handler&#x3001;Message&#x4E09;&#x8005;&#x5173;&#x7CFB;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/47180325" target="_blank" rel="external">&#x6DF1;&#x5165;&#x6E90;&#x7801;&#x89E3;&#x6790;Android&#x4E2D;&#x7684;Handler,Message,MessageQueue,Looper</a></li>
<li><a href="http://www.cnblogs.com/lbangel/p/4335855.html" target="_blank" rel="external">Handler&#x7684;&#x53D1;&#x9001;&#x5904;&#x7406;&#x6D88;&#x606F;&#x7684;&#x65B9;&#x6CD5;&#x603B;&#x4F1A;&#x53CA;&#x5404;&#x81EA;&#x7684;&#x4F18;&#x7F3A;&#x70B9;</a></li>
</ul>
<h3 id="handler&#x7684;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#handler&#x7684;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>Handler&#x7684;&#x6B63;&#x786E;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://stackoverflow.com/questions/11278875/handlers-and-memory-leaks-in-android" target="_blank" rel="external">Handlers and memory leaks in Android</a></li>
</ul>
<h2 id="intent"><a class="header-anchor" href="#intent"></a>Intent</h2>
<h3 id="intent&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#intent&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>Intent&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<ul>
<li><a href="http://blog.csdn.net/iispring/article/details/48417779" target="_blank" rel="external">Android&#x4E2D;Intent&#x6982;&#x8FF0;&#x53CA;&#x4F7F;&#x7528;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/48481793" target="_blank" rel="external">Android&#x4E2D;Intent&#x5BF9;&#x8C61;&#x4E0E;Intent Filter&#x8FC7;&#x6EE4;&#x5339;&#x914D;&#x8FC7;&#x7A0B;&#x8BE6;&#x89E3;</a></li>
<li><a href="http://blog.csdn.net/iispring/article/details/48578295" target="_blank" rel="external">Android&#x4E2D;&#x5E38;&#x89C1;Intent&#x4E60;&#x60EF;&#x7528;&#x6CD5;-&#x4E0A;&#x7BC7;(&#x9644;&#x6E90;&#x7801;&#x4E0B;&#x8F7D;) </a></li>
</ul>
<h3 id="intent&#x5C5E;&#x6027;"><a class="header-anchor" href="#intent&#x5C5E;&#x6027;"></a>Intent&#x5C5E;&#x6027;</h3>
<ul>
<li><a href="http://blog.csdn.net/github_25928675/article/details/46460417" target="_blank" rel="external">Android&#x6743;&#x9650;&#x548C;&#x52A8;&#x4F5C;&#x5927;&#x5168;</a></li>
</ul>
<h2 id="&#x7F51;&#x7EDC;"><a class="header-anchor" href="#&#x7F51;&#x7EDC;"></a>&#x7F51;&#x7EDC;</h2>
<h3 id="socket&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;"><a class="header-anchor" href="#socket&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;"></a>Socket&#x7684;&#x539F;&#x7406;&#x53CA;&#x4F7F;&#x7528;</h3>
<ul>
<li><a href="http://blog.csdn.net/jiajia4336/article/details/8798421" target="_blank" rel="external">Socket&#x901A;&#x4FE1;&#x539F;&#x7406;&#x548C;&#x5B9E;&#x8DF5;</a></li>
</ul>
<h3 id="tcp-udp&#x7684;&#x539F;&#x7406;"><a class="header-anchor" href="#tcp-udp&#x7684;&#x539F;&#x7406;"></a>TCP&#x3001;UDP&#x7684;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://blog.chinaunix.net/uid-26833883-id-3627644.html" target="_blank" rel="external">TCP&#x3001;UDP&#x3001;IP &#x534F;&#x8BAE;&#x5206;&#x6790; </a></li>
</ul>
<h3 id="http&#x901A;&#x4FE1;&#x539F;&#x7406;"><a class="header-anchor" href="#http&#x901A;&#x4FE1;&#x539F;&#x7406;"></a>Http&#x901A;&#x4FE1;&#x539F;&#x7406;</h3>
<ul>
<li><a href="https://github.com/GeniusVJR/LearningNotes/blob/master/Part4/Network/Http%E5%8D%8F%E8%AE%AE.md" target="_blank" rel="external">Http&#x534F;&#x8BAE;</a></li>
<li><a href="http://www.cnblogs.com/rocomp/p/4803864.html" target="_blank" rel="external">HTTP&#x534F;&#x8BAE;&#x62A5;&#x6587;&#x3001;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x53CA;Java&#x4E2D;&#x7684;HTTP&#x901A;&#x4FE1;&#x6280;&#x672F;&#x8BE6;&#x89E3;</a></li>
</ul>
<h2 id="bluetooth"><a class="header-anchor" href="#bluetooth"></a>Bluetooth</h2>
<h3 id="&#x84DD;&#x7259;2-0"><a class="header-anchor" href="#&#x84DD;&#x7259;2-0"></a>&#x84DD;&#x7259;2.0</h3>
<ul>
<li><a href="http://blog.csdn.net/lanyamokuai/article/details/5998437" target="_blank" rel="external">Bluetooth&#x4ECB;&#x7ECD;&#x53CA;&#x539F;&#x7406;</a></li>
<li><a href="http://blog.csdn.net/zhanghua1121/article/details/9331545" target="_blank" rel="external">Bluetooth&#x901A;&#x4FE1;&#x65B9;&#x5F0F;</a></li>
<li><a href="http://www.cnblogs.com/wenjiang/p/3200138.html" target="_blank" rel="external">Bluetooth&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</a></li>
</ul>
<h3 id="&#x84DD;&#x7259;4-0"><a class="header-anchor" href="#&#x84DD;&#x7259;4-0"></a>&#x84DD;&#x7259;4.0</h3>
<ul>
<li><a href="http://www.tuicool.com/articles/quiuMv" target="_blank" rel="external">BLE&#x4ECB;&#x7ECD;&#x53CA;&#x539F;&#x7406;</a></li>
<li><a href="http://www.51edu.com/it/bckf/35279.html" target="_blank" rel="external">BLE&#x901A;&#x4FE1;&#x65B9;&#x5F0F;</a></li>
<li><a href="http://www.cnblogs.com/xxzjyf/p/x_x_z_j_y_f.html" target="_blank" rel="external">BLE&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</a></li>
</ul>
<h2 id="&#x5185;&#x5B58;&#x4F18;&#x5316;"><a class="header-anchor" href="#&#x5185;&#x5B58;&#x4F18;&#x5316;"></a>&#x5185;&#x5B58;&#x4F18;&#x5316;</h2>
<ul>
<li><a href="http://gityuan.com/2016/01/02/memory-analysis-command/" target="_blank" rel="external">Android&#x5185;&#x5B58;&#x5206;&#x6790;&#x547D;&#x4EE4;</a></li>
</ul>
<h3 id="&#x7CFB;&#x7EDF;gc&#x56DE;&#x6536;&#x8FC7;&#x7A0B;&#x53CA;&#x539F;&#x7406;"><a class="header-anchor" href="#&#x7CFB;&#x7EDF;gc&#x56DE;&#x6536;&#x8FC7;&#x7A0B;&#x53CA;&#x539F;&#x7406;"></a>&#x7CFB;&#x7EDF;GC&#x56DE;&#x6536;&#x8FC7;&#x7A0B;&#x53CA;&#x539F;&#x7406;</h3>
<ul>
<li><a href="http://www.importnew.com/13504.html" target="_blank" rel="external">Java GC&#x7CFB;&#x5217;&#xFF08;1&#xFF09;&#xFF1A;Java&#x5783;&#x573E;&#x56DE;&#x6536;&#x7B80;&#x4ECB;</a></li>
<li><a href="http://www.importnew.com/13493.html" target="_blank" rel="external">Java GC&#x7CFB;&#x5217;&#xFF08;2&#xFF09;&#xFF1A;Java&#x5783;&#x573E;&#x56DE;&#x6536;&#x662F;&#x5982;&#x4F55;&#x5DE5;&#x4F5C;&#x7684;&#xFF1F;</a></li>
<li><a href="http://www.importnew.com/13827.html" target="_blank" rel="external">Java GC&#x7CFB;&#x5217;&#xFF08;3&#xFF09;&#xFF1A;&#x5783;&#x573E;&#x56DE;&#x6536;&#x5668;&#x79CD;&#x7C7B;</a></li>
<li><a href="http://www.importnew.com/13838.html" target="_blank" rel="external">Java GC&#x7CFB;&#x5217;&#xFF08;4&#xFF09;&#xFF1A;&#x5783;&#x573E;&#x56DE;&#x6536;&#x76D1;&#x89C6;&#x548C;&#x5206;&#x6790;</a></li>
</ul>
<h3 id="&#x7CFB;&#x7EDF;gc&#x56DE;&#x6536;&#x7684;&#x89E6;&#x53D1;&#x6761;&#x4EF6;"><a class="header-anchor" href="#&#x7CFB;&#x7EDF;gc&#x56DE;&#x6536;&#x7684;&#x89E6;&#x53D1;&#x6761;&#x4EF6;"></a>&#x7CFB;&#x7EDF;GC&#x56DE;&#x6536;&#x7684;&#x89E6;&#x53D1;&#x6761;&#x4EF6;</h3>
<ul>
<li><a href="http://www.cnblogs.com/killmyday/archive/2013/06/12/3132518.html" target="_blank" rel="external">Android&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x539F;&#x7406;</a></li>
<li><a href="http://www.ibm.com/developerworks/cn/opensource/os-cn-android-mmry-rcycl/" target="_blank" rel="external">Android &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x5185;&#x5B58;&#x56DE;&#x6536;&#x673A;&#x5236;</a></li>
</ul>
<h3 id="&#x5185;&#x5B58;&#x4F18;&#x5316;-v2"><a class="header-anchor" href="#&#x5185;&#x5B58;&#x4F18;&#x5316;-v2"></a>&#x5185;&#x5B58;&#x4F18;&#x5316;</h3>
<ul>
<li><a href="http://blog.csdn.net/a396901990/article/details/37914465" target="_blank" rel="external">ANDROID&#x5185;&#x5B58;&#x4F18;&#x5316;(&#x5927;&#x6C47;&#x603B;&#x2014;&#x2014;&#x4E0A;)</a></li>
<li><a href="http://blog.csdn.net/a396901990/article/details/38707007" target="_blank" rel="external">ANDROID&#x5185;&#x5B58;&#x4F18;&#x5316;(&#x5927;&#x6C47;&#x603B;&#x2014;&#x2014;&#x4E2D;)</a></li>
<li><a href="http://blog.csdn.net/a396901990/article/details/38904543" target="_blank" rel="external">ANDROID&#x5185;&#x5B58;&#x4F18;&#x5316;(&#x5927;&#x6C47;&#x603B;&#x2014;&#x2014;&#x5168;)</a></li>
<li><a href="http://hukai.me/android-performance-memory/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x4E4B;&#x5185;&#x5B58;&#x7BC7;</a></li>
</ul>
<h3 id="ui&#x4F18;&#x5316;"><a class="header-anchor" href="#ui&#x4F18;&#x5316;"></a>UI&#x4F18;&#x5316;</h3>
<ul>
<li><a href="http://blog.nimbledroid.com/2016/03/21/ways-to-hang-main-thread-zh.html?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">5&#x4E2A;&#x5BFC;&#x81F4;&#x4E3B;&#x7EBF;&#x7A0B;&#x5361;&#x987F;&#x8F83;&#x9C9C;&#x4E3A;&#x4EBA;&#x77E5;&#x7684;&#x5143;&#x51F6;</a></li>
<li><a href="http://blog.csdn.net/xyz_lmn/article/details/14524567" target="_blank" rel="external">Android&#x62BD;&#x8C61;&#x5E03;&#x5C40;&#x2014;&#x2014;include&#x3001;merge &#x3001;ViewStub</a></li>
<li><a href="http://blog.venmo.com/hf2t3h4x98p5e13z82pl8j66ngcmry/performance-tuning-on-android" target="_blank" rel="external">Performance Tuning On Android</a></li>
</ul>
<h3 id="&#x6027;&#x80FD;&#x4F18;&#x5316;"><a class="header-anchor" href="#&#x6027;&#x80FD;&#x4F18;&#x5316;"></a>&#x6027;&#x80FD;&#x4F18;&#x5316;</h3>
<ul>
<li><a href="http://hukai.me/android-performance-patterns/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x4E00;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-patterns-season-2/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x4E8C;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-patterns-season-3/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x4E09;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-patterns-season-4/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x56DB;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-patterns-season-5/" target="_blank" rel="external">Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#xFF08;&#x4E94;&#xFF09;</a></li>
<li>[Android&#x5E94;&#x7528;&#x6027;&#x80FD;&#x4F18;&#x5316;&#x4E2A;&#x4EBA;&#x603B;&#x7ED3;&#x2013;&#x56FE;&#x5F62;&#x4F18;&#x5316;)](<a href="https://mp.weixin.qq.com/s?__biz=MzAxMzYyNDkyNA==&amp;mid=403778409&amp;idx=1&amp;sn=2955f5209f2cb46c327167e9f558013c&amp;scene=0&amp;key=710a5d99946419d93bd87693b2fb201a979a3f06f49072f49e0e5dd05b91de2dbe204e56cbcd8c71cac94e931791f5f3&amp;ascene=0&amp;uin=ODU2NjQ0ODgx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.11.4+build(15E65)" target="_blank" rel="external">https://mp.weixin.qq.com/s?__biz=MzAxMzYyNDkyNA==&amp;mid=403778409&amp;idx=1&amp;sn=2955f5209f2cb46c327167e9f558013c&amp;scene=0&amp;key=710a5d99946419d93bd87693b2fb201a979a3f06f49072f49e0e5dd05b91de2dbe204e56cbcd8c71cac94e931791f5f3&amp;ascene=0&amp;uin=ODU2NjQ0ODgx&amp;devicetype=iMac+MacBookPro12%2C1+OSX+OSX+10.11.4+build(15E65)</a></li>
</ul>
<h3 id="&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x8BE6;&#x89E3;&#x53CA;&#x603B;&#x7ED3;"><a class="header-anchor" href="#&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x8BE6;&#x89E3;&#x53CA;&#x603B;&#x7ED3;"></a>&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x8BE6;&#x89E3;&#x53CA;&#x603B;&#x7ED3;</h3>
<ul>
<li><a href="http://rayleeya.iteye.com/blog/1956059" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - OOM&#xFF08;&#x4E00;&#xFF09;</a></li>
<li><a href="http://rayleeya.iteye.com/blog/1956638" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - OOM&#xFF08;&#x4E8C;&#xFF09;</a></li>
<li><a href="http://rayleeya.iteye.com/blog/1955652" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - ANR&#xFF08;&#x4E00;&#xFF09;</a></li>
<li><a href="http://rayleeya.iteye.com/blog/1955657" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - ANR&#xFF08;&#x4E8C;&#xFF09;</a></li>
<li><a href="http://rayleeya.iteye.com/blog/1956056" target="_blank" rel="external">Android &#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x6027; - ANR&#xFF08;&#x4E09;&#xFF09;</a></li>
<li><a href="http://hukai.me/android-performance-oom/" target="_blank" rel="external">Android&#x5185;&#x5B58;&#x4F18;&#x5316;&#x4E4B;OOM</a></li>
<li><a href="http://yq.aliyun.com/articles/3009" target="_blank" rel="external">Android &#x5185;&#x5B58;&#x6CC4;&#x6F0F;&#x603B;&#x7ED3;</a></li>
<li><a href="http://www.360doc.com/content/14/0526/11/9462341_381066152.shtml" target="_blank" rel="external">ANDROID &#x63A2;&#x7A76;oom&#x5185;&#x5E55;</a></li>
</ul>
<h3 id="&#x5185;&#x5B58;&#x68C0;&#x6D4B;&#x5DE5;&#x5177;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x5185;&#x5B58;&#x68C0;&#x6D4B;&#x5DE5;&#x5177;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>&#x5185;&#x5B58;&#x68C0;&#x6D4B;&#x5DE5;&#x5177;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h3>
<h4 id="blockcanary"><a class="header-anchor" href="#blockcanary"></a>BlockCanary</h4>
<ul>
<li><a href="http://blog.zhaiyifan.cn/2016/01/16/BlockCanaryTransparentPerformanceMonitor/" target="_blank" rel="external">BlockCanary &#x2014; &#x8F7B;&#x677E;&#x627E;&#x51FA;Android App&#x754C;&#x9762;&#x5361;&#x987F;&#x5143;&#x51F6;</a></li>
</ul>
<h4 id="leakcanary"><a class="header-anchor" href="#leakcanary"></a>LeakCanary</h4>
<ul>
<li><a href="http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2015/0509/2854.html" target="_blank" rel="external">LeakCanary:&#x68C0;&#x6D4B;&#x6240;&#x6709;&#x7684;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;</a></li>
</ul>
<h2 id="&#x4F20;&#x611F;&#x5668;"><a class="header-anchor" href="#&#x4F20;&#x611F;&#x5668;"></a>&#x4F20;&#x611F;&#x5668;</h2>
<ul>
<li><a href="http://blog.csdn.net/lincyang/article/details/49471929" target="_blank" rel="external">&#x52A0;&#x901F;&#x5EA6;</a></li>
<li><a href="http://blog.csdn.net/smartbetter/article/details/53161452" target="_blank" rel="external">&#x78C1;&#x529B;</a></li>
<li><a href="http://blog.csdn.net/u014492609/article/details/51741402" target="_blank" rel="external">&#x65B9;&#x5411;</a></li>
<li><a href="http://blog.csdn.net/smartbetter/article/details/53161452" target="_blank" rel="external">&#x9640;&#x87BA;</a></li>
<li><a href="http://blog.csdn.net/menuconfig/article/details/7225441" target="_blank" rel="external">&#x5149;&#x7EBF;&#x611F;&#x5E94;</a></li>
<li><a href="http://blog.csdn.net/chadcao/article/details/9928103" target="_blank" rel="external">&#x538B;&#x529B;</a></li>
<li><a href="http://www.voidcn.com/blog/chadcao/article/p-2503607.html" target="_blank" rel="external">&#x6E29;&#x5EA6;</a></li>
<li><a href="http://blog.csdn.net/luozhi3527/article/details/9999901" target="_blank" rel="external">&#x63A5;&#x8FD1;/&#x8DDD;&#x79BB;</a></li>
<li><a href="http://www.xuanyusong.com/archives/337" target="_blank" rel="external">&#x91CD;&#x529B;</a></li>
<li><a href="http://blog.csdn.net/think_soft/article/details/8101144" target="_blank" rel="external">&#x7EBF;&#x6027;&#x52A0;&#x901F;&#x5EA6;</a></li>
<li><a href="http://www.2cto.com/kf/201210/162858.html" target="_blank" rel="external">&#x65CB;&#x8F6C;&#x77E2;&#x91CF;</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_48d49130010110qw.html" target="_blank" rel="external">&#x76F8;&#x5BF9;&#x6E7F;&#x5EA6;&#x4F20;&#x611F;&#x5668;</a></li>
<li><a href="http://blog.csdn.net/think_soft/article/details/8169483" target="_blank" rel="external">&#x8FD1;&#x573A;&#x901A;&#x4FE1;&#xFF08;NFC&#xFF09;</a></li>
<li><a href="https://www.oschina.net/question/163910_28354" target="_blank" rel="external">Android&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;11&#x79CD;&#x4F20;&#x611F;&#x5668;&#x4ECB;&#x7ECD;</a></li>
<li><a href="http://blog.csdn.net/xiong_it/article/details/45917009" target="_blank" rel="external">Android&#x5F00;&#x53D1;&#xFF1A;Android&#x8BBE;&#x5907;&#x4F20;&#x611F;&#x5668;&#x5F00;&#x53D1;&#x603B;&#x7ED3;</a></li>
</ul>
<h2 id="&#x5F00;&#x53D1;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x5F00;&#x53D1;&#x6846;&#x67B6;"></a>&#x5F00;&#x53D1;&#x6846;&#x67B6;</h2>
<h3 id="&#x7F51;&#x7EDC;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x7F51;&#x7EDC;&#x6846;&#x67B6;"></a>&#x7F51;&#x7EDC;&#x6846;&#x67B6;</h3>
<ul>
<li><a href="https://github.com/square/okhttp" target="_blank" rel="external">OkHttp</a></li>
<li><a href="">Volley</a></li>
<li><a href="https://github.com/wyouflf/xUtils3" target="_blank" rel="external">xUtils3</a></li>
<li><a href="https://github.com/square/retrofit" target="_blank" rel="external">Retrofit</a></li>
</ul>
<h3 id="&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x6846;&#x67B6;"></a>&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x6846;&#x67B6;</h3>
<ul>
<li><a href="https://github.com/facebook/fresco" target="_blank" rel="external">Fresco</a></li>
<li><a href="http://fresco-cn.org/docs/index.html" target="_blank" rel="external">Fresco&#x6587;&#x6863;</a></li>
<li><a href="https://github.com/nostra13/Android-Universal-Image-Loader" target="_blank" rel="external">Android-Universal-Image-Loader</a></li>
<li><a href="https://github.com/bumptech/glide" target="_blank" rel="external">Glide</a></li>
<li><a href="https://github.com/square/picasso" target="_blank" rel="external">picasso</a></li>
<li><a href="http://www.trinea.cn/android/android-image-cache-compare/" target="_blank" rel="external">Android &#x4E09;&#x5927;&#x56FE;&#x7247;&#x7F13;&#x5B58;&#x539F;&#x7406;&#x3001;&#x7279;&#x6027;&#x5BF9;&#x6BD4;</a></li>
</ul>
<h3 id="&#x7ED8;&#x56FE;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x7ED8;&#x56FE;&#x6846;&#x67B6;"></a>&#x7ED8;&#x56FE;&#x6846;&#x67B6;</h3>
<ul>
<li><a href="https://github.com/ddanny/achartengine" target="_blank" rel="external">AChartEngine</a></li>
<li><a href="https://github.com/PhilJay/MPAndroidChart" target="_blank" rel="external">MPAndroidChart</a></li>
<li><a href="https://github.com/xcltapestry/XCL-Charts" target="_blank" rel="external">XCL-Charts</a></li>
<li><a href="https://github.com/blackfizz/EazeGraph" target="_blank" rel="external">EazeGraph</a></li>
<li><a href="https://github.com/diogobernardino/WilliamChart" target="_blank" rel="external">WilliamChart</a></li>
<li><a href="https://github.com/lecho/hellocharts-android" target="_blank" rel="external">HelloCharts for Android</a></li>
</ul>
<h3 id="&#x6570;&#x636E;&#x5E93;&#x6846;&#x67B6;"><a class="header-anchor" href="#&#x6570;&#x636E;&#x5E93;&#x6846;&#x67B6;"></a>&#x6570;&#x636E;&#x5E93;&#x6846;&#x67B6;</h3>
<ul>
<li><a href="">Provider&#xFF0C;ORMLite&#xFF0C;GreenDao</a></li>
<li><a href="http://blog.csdn.net/u012565107/article/details/21546829" target="_blank" rel="external">Provider&#xFF0C;ORMLite&#xFF0C;GreenDao&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5E76;&#x4E14;&#x7B80;&#x5355;&#x6027;&#x80FD;&#x5BF9;&#x6BD4;</a></li>
</ul>
<h3 id="&#x6CE8;&#x89E3;"><a class="header-anchor" href="#&#x6CE8;&#x89E3;"></a>&#x6CE8;&#x89E3;</h3>
<ul>
<li><a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="external">Butter Knife</a></li>
<li><a href="https://github.com/google/dagger" target="_blank" rel="external">Dragger2</a></li>
</ul>
<h2 id="&#x7F51;&#x7EDC;&#x671F;&#x520A;"><a class="header-anchor" href="#&#x7F51;&#x7EDC;&#x671F;&#x520A;"></a>&#x7F51;&#x7EDC;&#x671F;&#x520A;</h2>
<ul>
<li><a href="http://www.codekk.com/open-source-project-analysis" target="_blank" rel="external">codeKK</a></li>
<li><a href="http://gank.io/" target="_blank" rel="external">&#x5E72;&#x8D27;&#x96C6;&#x4E2D;&#x8425;</a></li>
<li><a href="http://www.androidweekly.cn/" target="_blank" rel="external">Android&#x6280;&#x672F;&#x5468;&#x62A5;</a></li>
<li><a href="http://www.devtf.cn/?tag=%E5%91%A8%E6%8A%A5" target="_blank" rel="external">&#x5F00;&#x53D1;&#x6280;&#x672F;&#x524D;&#x7EBF;</a></li>
<li><a href="http://gold.xitu.io/#/" target="_blank" rel="external">&#x6398;&#x91D1;</a></li>
<li><a href="http://toutiao.io/" target="_blank" rel="external">&#x5F00;&#x53D1;&#x8005;&#x5934;&#x6761;</a></li>
</ul>
<h2 id="&#x6280;&#x672F;&#x793E;&#x533A;"><a class="header-anchor" href="#&#x6280;&#x672F;&#x793E;&#x533A;"></a>&#x6280;&#x672F;&#x793E;&#x533A;</h2>
<ul>
<li><a href="http://www.ibm.com/developerworks/cn/" target="_blank" rel="external">IBM developerWorks</a></li>
<li><a href="http://tech.meituan.com/" target="_blank" rel="external">&#x7F8E;&#x56E2;&#x70B9;&#x8BC4;&#x6280;&#x672F;&#x56E2;&#x961F;</a></li>
<li><a href="http://club.alibabatech.org/" target="_blank" rel="external">&#x963F;&#x91CC;&#x6280;&#x672F;&#x6C99;&#x9F99;</a></li>
<li><a href="http://mogu.io/" target="_blank" rel="external">&#x8611;&#x83C7;&#x8857;&#x6280;&#x672F;&#x535A;&#x5BA2;</a></li>
<li><a href="http://taobaofed.org/" target="_blank" rel="external">&#x6DD8;&#x5B9D;&#x524D;&#x6BB5;&#x56E2;&#x961F;</a></li>
<li><a href="http://bugly.qq.com/bbs/portal.php" target="_blank" rel="external">Bugly&#x793E;&#x533A;</a></li>
<li><a href="http://www.alloyteam.com/" target="_blank" rel="external">&#x817E;&#x8BAF;AllyTeam Blog</a></li>
<li><a href="http://www.importnew.com/" target="_blank" rel="external">ImportNew</a></li>
<li><a href="http://android.jobbole.com/" target="_blank" rel="external">&#x4F2F;&#x4E50;&#x5728;&#x7EBF;</a></li>
</ul>
<h2 id="&#x8D44;&#x6E90;&#x7F51;&#x7AD9;"><a class="header-anchor" href="#&#x8D44;&#x6E90;&#x7F51;&#x7AD9;"></a>&#x8D44;&#x6E90;&#x7F51;&#x7AD9;</h2>
<ul>
<li><a href="https://android-arsenal.com/" target="_blank" rel="external">Android Arsenal</a></li>
<li><a href="http://itlanbao.com/" target="_blank" rel="external">IT&#x84DD;&#x8C79;</a></li>
<li><a href="http://a.code4app.com/" target="_blank" rel="external">Code4App</a></li>
<li><a href="http://www.23code.com/" target="_blank" rel="external">23Code</a></li>
<li><a href="http://www.see-source.com/index.html" target="_blank" rel="external">&#x5F00;&#x6E90;&#x793E;&#x533A;</a></li>
<li><a href="https://www.coolgithubprojects.com/#" target="_blank" rel="external">CoolGithubProjects</a></li>
</ul>
<h2 id="&#x535A;&#x5BA2;"><a class="header-anchor" href="#&#x535A;&#x5BA2;"></a>&#x535A;&#x5BA2;</h2>
<ul>
<li><a href="http://androidperformance.com/" target="_blank" rel="external">Gracker</a></li>
</ul>
<p>&#x4E13;&#x6CE8;&#x5199;Android&#x4F18;&#x5316;&#x7684;&#x535A;&#x5BA2;&#x3002;</p>
<ul>
<li><a href="http://hukai.me/" target="_blank" rel="external">&#x80E1;&#x51EF;</a></li>
</ul>
<p>Android&#x6027;&#x80FD;&#x4F18;&#x5316;&#x5178;&#x8303;&#x4F5C;&#x8005;&#xFF0C;&#x9AD8;&#x54C1;&#x8D28;&#x6587;&#x7AE0;&#x3002;</p>
<ul>
<li><a href="http://blog.csdn.net/Luoshengyang?viewmode=contents" target="_blank" rel="external">&#x8001;&#x7F57;&#x7684;Android&#x4E4B;&#x65C5;</a></li>
</ul>
<p>Android&#x6E90;&#x7801;&#x5206;&#x6790;&#x7CBE;&#x54C1;&#x7CFB;&#x5217;&#x3002;</p>
<ul>
<li><a href="http://blog.csdn.net/harvic880925" target="_blank" rel="external">&#x542F;&#x8230;</a></li>
</ul>
<p>&#x96C6;&#x5408;&#x4E86;&#x52A8;&#x753B;&#x3001;&#x81EA;&#x5B9A;&#x4E49;&#x63A7;&#x4EF6;&#x4EE5;&#x53CA;Android&#x5404;&#x79CD;&#x77E5;&#x8BC6;&#x7684;&#x8BE6;&#x89E3;&#x3002;</p>]]></content>
    
    <summary type="html">
    
      Android的知识点是比较琐碎和庞大的，海洋很大，知识很多，但开一扇心门点一盏心灯，愿化作一叶小舟，自由的在知识的海洋里遨游。对于Android体系的相关知识点，我们需要熟悉Android系统中的各种API，各种UI控件，网络请求，系统原理还有各种坑。当然，从事应用层开发，那必须关注用户体验和技术的平衡。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>深入理解Android之View的绘制流程</title>
    <link href="http://ngudream.com/2016/11/13/android-view-draw-theory/"/>
    <id>http://ngudream.com/2016/11/13/android-view-draw-theory/</id>
    <published>2016-11-13T15:19:04.000Z</published>
    <updated>2017-02-26T03:30:01.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="&#x6982;&#x8FF0;"><a class="header-anchor" href="#&#x6982;&#x8FF0;"></a>&#x6982;&#x8FF0;</h2>
<p>&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x4F1A;&#x4ECE;&#x6E90;&#x7801;&#xFF08;&#x57FA;&#x4E8E;Android 6.0&#xFF09;&#x89D2;&#x5EA6;&#x5206;&#x6790;Android&#x4E2D;View&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;&#xFF0C;&#x4FA7;&#x91CD;&#x4E8E;&#x5BF9;&#x6574;&#x4F53;&#x6D41;&#x7A0B;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x5BF9;&#x4E00;&#x4E9B;&#x96BE;&#x4EE5;&#x7406;&#x89E3;&#x7684;&#x70B9;&#x52A0;&#x4EE5;&#x91CD;&#x70B9;&#x9610;&#x8FF0;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x628A;View&#x7ED8;&#x5236;&#x7684;&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x628A;&#x63E1;&#x597D;&#xFF0C;&#x800C;&#x5BF9;&#x4E8E;&#x7279;&#x5B9A;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x5219;&#x53EF;&#x4EE5;&#x65E5;&#x540E;&#x518D;&#x5BF9;&#x76F8;&#x5E94;&#x6E90;&#x7801;&#x8FDB;&#x884C;&#x7814;&#x8BFB;&#x3002;<br>
&#x5728;&#x8FDB;&#x884C;&#x5B9E;&#x9645;&#x7684;&#x5206;&#x6790;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E0B;&#x9762;&#x8FD9;&#x5F20;&#x56FE;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/11/13/android-view-draw-theory/2397836-f1f6a200704884a2.png" class="lazy">
</div>
<p>&#x6211;&#x4EEC;&#x6765;&#x5BF9;&#x4E0A;&#x56FE;&#x505A;&#x51FA;&#x7B80;&#x5355;&#x89E3;&#x91CA;&#xFF1A;DecorView&#x662F;&#x4E00;&#x4E2A;&#x5E94;&#x7528;&#x7A97;&#x53E3;&#x7684;&#x6839;&#x5BB9;&#x5668;&#xFF0C;&#x5B83;&#x672C;&#x8D28;&#x4E0A;&#x662F;&#x4E00;&#x4E2A;FrameLayout&#x3002;DecorView&#x6709;&#x552F;&#x4E00;&#x4E00;&#x4E2A;&#x5B50;View&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5782;&#x76F4;LinearLayout&#xFF0C;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x5B50;&#x5143;&#x7D20;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;TitleView&#xFF08;ActionBar&#x7684;&#x5BB9;&#x5668;&#xFF09;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x662F;ContentView&#xFF08;&#x7A97;&#x53E3;&#x5185;&#x5BB9;&#x7684;&#x5BB9;&#x5668;&#xFF09;&#x3002;&#x5173;&#x4E8E;ContentView&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;FrameLayout&#xFF08;android.R.id.content)&#xFF0C;&#x6211;&#x4EEC;&#x5E73;&#x5E38;&#x7528;&#x7684;setContentView&#x5C31;&#x662F;&#x8BBE;&#x7F6E;&#x5B83;&#x7684;&#x5B50;View&#x3002;&#x4E0A;&#x56FE;&#x8FD8;&#x8868;&#x8FBE;&#x4E86;&#x6BCF;&#x4E2A;Activity&#x90FD;&#x4E0E;&#x4E00;&#x4E2A;Window&#xFF08;&#x5177;&#x4F53;&#x6765;&#x8BF4;&#x662F;PhoneWindow&#xFF09;&#x76F8;&#x5173;&#x8054;&#xFF0C;&#x7528;&#x6237;&#x754C;&#x9762;&#x5219;&#x7531;Window&#x6240;&#x627F;&#x8F7D;&#x3002;</p>
<h2 id="window"><a class="header-anchor" href="#window"></a>Window</h2>
<p>Window&#x5373;&#x7A97;&#x53E3;&#xFF0C;&#x8FD9;&#x4E2A;&#x6982;&#x5FF5;&#x5728;Android Framework&#x4E2D;&#x7684;&#x5B9E;&#x73B0;&#x4E3A;android.view.Window&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#xFF0C;&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#x662F;&#x5BF9;Android&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x7A97;&#x53E3;&#x7684;&#x62BD;&#x8C61;&#x3002;&#x5728;&#x4ECB;&#x7ECD;&#x8FD9;&#x4E2A;&#x7C7B;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x770B;&#x7A76;&#x7ADF;&#x4EC0;&#x4E48;&#x662F;&#x7A97;&#x53E3;&#x5462;&#xFF1F;</p>
<p>&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x7A97;&#x53E3;&#x662F;&#x4E00;&#x4E2A;&#x5B8F;&#x89C2;&#x7684;&#x601D;&#x60F3;&#xFF0C;&#x5B83;&#x662F;&#x5C4F;&#x5E55;&#x4E0A;&#x7528;&#x4E8E;&#x7ED8;&#x5236;&#x5404;&#x79CD;UI&#x5143;&#x7D20;&#x53CA;&#x54CD;&#x5E94;&#x7528;&#x6237;&#x8F93;&#x5165;&#x4E8B;&#x4EF6;&#x7684;&#x4E00;&#x4E2A;&#x77E9;&#x5F62;&#x533A;&#x57DF;&#x3002;&#x901A;&#x5E38;&#x5177;&#x5907;&#x4EE5;&#x4E0B;&#x4E24;&#x4E2A;&#x7279;&#x70B9;&#xFF1A;</p>
<ul>
<li>&#x72EC;&#x7ACB;&#x7ED8;&#x5236;&#xFF0C;&#x4E0D;&#x4E0E;&#x5176;&#x5B83;&#x754C;&#x9762;&#x76F8;&#x4E92;&#x5F71;&#x54CD;&#xFF1B;</li>
<li>&#x4E0D;&#x4F1A;&#x89E6;&#x53D1;&#x5176;&#x5B83;&#x754C;&#x9762;&#x7684;&#x8F93;&#x5165;&#x4E8B;&#x4EF6;&#xFF1B;</li>
</ul>
<p>&#x5728;Android&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x7A97;&#x53E3;&#x662F;&#x72EC;&#x5360;&#x4E00;&#x4E2A;Surface&#x5B9E;&#x4F8B;&#x7684;&#x663E;&#x793A;&#x533A;&#x57DF;&#xFF0C;&#x6BCF;&#x4E2A;&#x7A97;&#x53E3;&#x7684;Surface&#x7531;WindowManagerService&#x5206;&#x914D;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;Surface&#x770B;&#x4F5C;&#x4E00;&#x5757;&#x753B;&#x5E03;&#xFF0C;&#x5E94;&#x7528;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;Canvas&#x6216;OpenGL&#x5728;&#x5176;&#x4E0A;&#x9762;&#x4F5C;&#x753B;&#x3002;&#x753B;&#x597D;&#x4E4B;&#x540E;&#xFF0C;&#x901A;&#x8FC7;SurfaceFlinger&#x5C06;&#x591A;&#x5757;Surface&#x6309;&#x7167;&#x7279;&#x5B9A;&#x7684;&#x987A;&#x5E8F;&#xFF08;&#x5373;Z-order&#xFF09;&#x8FDB;&#x884C;&#x6DF7;&#x5408;&#xFF0C;&#x800C;&#x540E;&#x8F93;&#x51FA;&#x5230;FrameBuffer&#x4E2D;&#xFF0C;&#x8FD9;&#x6837;&#x7528;&#x6237;&#x754C;&#x9762;&#x5C31;&#x5F97;&#x4EE5;&#x663E;&#x793A;&#x3002;</p>
<p>Android.view.Window&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#x53EF;&#x4EE5;&#x770B;&#x505A;Android&#x4E2D;&#x5BF9;&#x7A97;&#x53E3;&#x8FD9;&#x4E00;&#x5B8F;&#x89C2;&#x6982;&#x5FF5;&#x6240;&#x505A;&#x7684;&#x7EA6;&#x5B9A;&#xFF0C;&#x800C;PhoneWindow&#x8FD9;&#x4E2A;&#x7C7B;&#x662F;Framework&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x7684;Android&#x7A97;&#x53E3;&#x6982;&#x5FF5;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;android.view.Window&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#x3002;</p>
<p>&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x7C7B;&#x5305;&#x542B;&#x4E86;&#x4E09;&#x4E2A;&#x6838;&#x5FC3;&#x7EC4;&#x4EF6;&#xFF1A;</p>
<ul>
<li>WindowManager.LayoutParams: &#x7A97;&#x53E3;&#x7684;&#x5E03;&#x5C40;&#x53C2;&#x6570;&#xFF1B;</li>
<li>Callback: &#x7A97;&#x53E3;&#x7684;&#x56DE;&#x8C03;&#x63A5;&#x53E3;&#xFF0C;&#x901A;&#x5E38;&#x7531;Activity&#x5B9E;&#x73B0;&#xFF1B;</li>
<li>ViewTree: &#x7A97;&#x53E3;&#x6240;&#x627F;&#x8F7D;&#x7684;&#x63A7;&#x4EF6;&#x6811;&#x3002;</li>
</ul>
<p>&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E00;&#x4E0B;Android&#x4E2D;Window&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#xFF08;&#x4E5F;&#x662F;&#x552F;&#x4E00;&#x5B9E;&#x73B0;&#xFF09;&#x2014;&#x2014;PhoneWindow&#x3002;</p>
<h2 id="phonewindow"><a class="header-anchor" href="#phonewindow"></a>PhoneWindow</h2>
<p>&#x524D;&#x9762;&#x6211;&#x4EEC;&#x63D0;&#x5230;&#x4E86;&#xFF0C;PhoneWindow&#x8FD9;&#x4E2A;&#x7C7B;&#x662F;Framework&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x7684;Android&#x7A97;&#x53E3;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x3002;&#x6211;&#x4EEC;&#x5E73;&#x65F6;&#x8C03;&#x7528;setContentView()&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;Activity&#x7684;&#x7528;&#x6237;&#x754C;&#x9762;&#x65F6;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x5BF9;&#x6240;&#x5173;&#x8054;&#x7684;PhoneWindow&#x7684;ViewTree&#x7684;&#x8BBE;&#x7F6E;&#x3002;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;Activity&#x7C7B;&#x7684;requestWindowFeature()&#x65B9;&#x6CD5;&#x6765;&#x5B9A;&#x5236;Activity&#x5173;&#x8054;PhoneWindow&#x7684;&#x5916;&#x89C2;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x5B9E;&#x9645;&#x4E0A;&#x505A;&#x7684;&#x662F;&#x628A;&#x6211;&#x4EEC;&#x6240;&#x8BF7;&#x6C42;&#x7684;&#x7A97;&#x53E3;&#x5916;&#x89C2;&#x7279;&#x6027;&#x5B58;&#x50A8;&#x5230;&#x4E86;PhoneWindow&#x7684;mFeatures&#x6210;&#x5458;&#x4E2D;&#xFF0C;&#x5728;&#x7A97;&#x53E3;&#x7ED8;&#x5236;&#x9636;&#x6BB5;&#x751F;&#x6210;&#x5916;&#x89C2;&#x6A21;&#x677F;&#x65F6;&#xFF0C;&#x4F1A;&#x6839;&#x636E;mFeatures&#x7684;&#x503C;&#x7ED8;&#x5236;&#x7279;&#x5B9A;&#x5916;&#x89C2;&#x3002;</p>
<h3 id="&#x4ECE;setcontentview-&#x8BF4;&#x5F00;&#x53BB;"><a class="header-anchor" href="#&#x4ECE;setcontentview-&#x8BF4;&#x5F00;&#x53BB;"></a>&#x4ECE;setContentView()&#x8BF4;&#x5F00;&#x53BB;</h3>
<p>&#x5728;&#x5206;&#x6790;setContentView()&#x65B9;&#x6CD5;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x660E;&#x786E;&#xFF1A;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x53EA;&#x662F;&#x5B8C;&#x6210;&#x4E86;Activity&#x7684;ContentView&#x7684;&#x521B;&#x5EFA;&#xFF0C;&#x800C;&#x5E76;&#x6CA1;&#x6709;&#x6267;&#x884C;View&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;&#x3002;<br>
&#x5F53;&#x6211;&#x4EEC;&#x81EA;&#x5B9A;&#x4E49;Activity&#x7EE7;&#x627F;&#x81EA;android.app.Activity&#x65F6;&#x5019;&#xFF0C;&#x8C03;&#x7528;&#x7684;setContentView()&#x65B9;&#x6CD5;&#x662F;Activity&#x7C7B;&#x7684;&#xFF0C;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public void setContentView(@LayoutRes int layoutResID) {    
  getWindow().setContentView(layoutResID);    
  . . .
}
</code></pre>
<p>getWindow()&#x65B9;&#x6CD5;&#x4F1A;&#x8FD4;&#x56DE;Activity&#x6240;&#x5173;&#x8054;&#x7684;PhoneWindow&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x8C03;&#x7528;&#x5230;&#x4E86;PhoneWindow&#x7684;setContentView()&#x65B9;&#x6CD5;&#xFF0C;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>@Override
public void setContentView(int layoutResID) {
  if (mContentParent == null) {
    // mContentParent&#x5373;&#x4E3A;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;ContentView&#x7684;&#x7236;&#x5BB9;&#x5668;&#xFF0C;&#x82E5;&#x4E3A;&#x7A7A;&#x5219;&#x8C03;&#x7528;installDecor()&#x751F;&#x6210;
    installDecor();
  } else if (!hasFeature(FEATURE_CONTENT_TRANSITIONS)) {
    // &#x5177;&#x6709;FEATURE_CONTENT_TRANSITIONS&#x7279;&#x6027;&#x8868;&#x793A;&#x5F00;&#x542F;&#x4E86;Transition
    // mContentParent&#x4E0D;&#x4E3A;null&#xFF0C;&#x5219;&#x79FB;&#x9664;decorView&#x7684;&#x6240;&#x6709;&#x5B50;View
    mContentParent.removeAllViews();
  }
  if (hasFeature(FEATURE_CONTENT_TRANSITIONS)) {
    // &#x5F00;&#x542F;&#x4E86;Transition&#xFF0C;&#x505A;&#x76F8;&#x5E94;&#x7684;&#x5904;&#x7406;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x8BA8;&#x8BBA;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;
    // &#x611F;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x6E90;&#x7801;
    . . .
  } else {
    // &#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4F1A;&#x6765;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x8C03;&#x7528;mLayoutInflater.inflate()&#x65B9;&#x6CD5;&#x6765;&#x586B;&#x5145;&#x5E03;&#x5C40;
    // &#x586B;&#x5145;&#x5E03;&#x5C40;&#x4E5F;&#x5C31;&#x662F;&#x628A;&#x6211;&#x4EEC;&#x8BBE;&#x7F6E;&#x7684;ContentView&#x52A0;&#x5165;&#x5230;mContentParent&#x4E2D;
    mLayoutInflater.inflate(layoutResID, mContentParent);
  }
  . . .
  // cb&#x5373;&#x4E3A;&#x8BE5;Window&#x6240;&#x5173;&#x8054;&#x7684;Activity
  final Callback cb = getCallback();
  if (cb != null &amp;&amp; !isDestroyed()) {
    // &#x8C03;&#x7528;onContentChanged()&#x56DE;&#x8C03;&#x65B9;&#x6CD5;&#x901A;&#x77E5;Activity&#x7A97;&#x53E3;&#x5185;&#x5BB9;&#x53D1;&#x751F;&#x4E86;&#x6539;&#x53D8;
    cb.onContentChanged();
  }

  . . .
}
</code></pre>
<h3 id="layoutinflater-inflate"><a class="header-anchor" href="#layoutinflater-inflate"></a>LayoutInflater.inflate()</h3>
<p>&#x5728;&#x4E0A;&#x9762;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x4E86;&#xFF0C;PhoneWindow&#x7684;setContentView()&#x65B9;&#x6CD5;&#x4E2D;&#x8C03;&#x7528;&#x4E86;LayoutInflater&#x7684;inflate()&#x65B9;&#x6CD5;&#x6765;&#x586B;&#x5145;&#x5E03;&#x5C40;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public View inflate(@LayoutRes int resource, @Nullable ViewGroup root) {
  return inflate(resource, root, root != null);
}

public View inflate(@LayoutRes int resource, @Nullable ViewGroup root, boolean attachToRoot) {
  final Resources res = getContext().getResources();
  . . .
  final XmlResourceParser parser = res.getLayout(resource);
  try {
    return inflate(parser, root, attachToRoot);
  } finally {
    parser.close();
  }
}
</code></pre>
<p>&#x5728;PhoneWindow&#x7684;setContentView()&#x65B9;&#x6CD5;&#x4E2D;&#x4F20;&#x5165;&#x4E86;decorView&#x4F5C;&#x4E3A;LayoutInflater.inflate()&#x7684;root&#x53C2;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x901A;&#x8FC7;&#x5C42;&#x5C42;&#x8C03;&#x7528;&#xFF0C;&#x6700;&#x7EC8;&#x8C03;&#x7528;&#x7684;&#x662F;inflate(XmlPullParser, ViewGroup, boolean)&#x65B9;&#x6CD5;&#x6765;&#x586B;&#x5145;&#x5E03;&#x5C40;&#x3002;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public View inflate(XmlPullParser parser, @Nullable ViewGroup root, boolean attachToRoot) {
  synchronized (mConstructorArgs) {
    . . .
    final Context inflaterContext = mContext;
    final AttributeSet attrs = Xml.asAttributeSet(parser);
    Context lastContext = (Context) mConstructorArgs[0];
    mConstructorArgs[0] = inflaterContext;

    View result = root;

    try {
      // Look for the root node.
      int type;
      // &#x4E00;&#x76F4;&#x8BFB;&#x53D6;xml&#x6587;&#x4EF6;&#xFF0C;&#x76F4;&#x5230;&#x9047;&#x5230;&#x5F00;&#x59CB;&#x6807;&#x8BB0;
      while ((type = parser.next()) != XmlPullParser.START_TAG &amp;&amp;
          type != XmlPullParser.END_DOCUMENT) {
        // Empty
       }
      // &#x6700;&#x5148;&#x9047;&#x5230;&#x7684;&#x4E0D;&#x662F;&#x5F00;&#x59CB;&#x6807;&#x8BB0;&#xFF0C;&#x62A5;&#x9519;
      if (type != XmlPullParser.START_TAG) {
        throw new InflateException(parser.getPositionDescription()
+ &quot;: No start tag found!&quot;);
      }

      final String name = parser.getName();
      . . .
      // &#x5355;&#x72EC;&#x5904;&#x7406;&lt;merge&gt;&#x6807;&#x7B7E;&#xFF0C;&#x4E0D;&#x719F;&#x6089;&#x7684;&#x540C;&#x5B66;&#x8BF7;&#x53C2;&#x8003;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x7684;&#x8BF4;&#x660E;
      if (TAG_MERGE.equals(name)) {
        // &#x82E5;&#x5305;&#x542B;&lt;merge&gt;&#x6807;&#x7B7E;&#xFF0C;&#x7236;&#x5BB9;&#x5668;&#xFF08;&#x5373;root&#x53C2;&#x6570;&#xFF09;&#x4E0D;&#x53EF;&#x4E3A;&#x7A7A;&#x4E14;attachRoot&#x987B;&#x4E3A;true&#xFF0C;&#x5426;&#x5219;&#x62A5;&#x9519;
        if (root == null || !attachToRoot) {
          throw new InflateException(&quot;&lt;merge /&gt; can be used only with a valid &quot;
+ &quot;ViewGroup root and attachToRoot=true&quot;);
        }

        // &#x9012;&#x5F52;&#x5730;&#x586B;&#x5145;&#x5E03;&#x5C40;
        rInflate(parser, root, inflaterContext, attrs, false);
     } else {
        // temp&#x4E3A;xml&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x7684;&#x6839;View
        final View temp = createViewFromTag(root, name, inflaterContext, attrs); 
        ViewGroup.LayoutParams params = null;
        if (root != null) {
          . . .
          // &#x83B7;&#x53D6;&#x7236;&#x5BB9;&#x5668;&#x7684;&#x5E03;&#x5C40;&#x53C2;&#x6570;&#xFF08;LayoutParams&#xFF09;
          params = root.generateLayoutParams(attrs);
          if (!attachToRoot) {
            // &#x82E5;attachToRoot&#x53C2;&#x6570;&#x4E3A;false&#xFF0C;&#x5219;&#x6211;&#x4EEC;&#x53EA;&#x4F1A;&#x5C06;&#x7236;&#x5BB9;&#x5668;&#x7684;&#x5E03;&#x5C40;&#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#x7ED9;&#x6839;View
            temp.setLayoutParams(params);
          }

        }

        // &#x9012;&#x5F52;&#x52A0;&#x8F7D;&#x6839;View&#x7684;&#x6240;&#x6709;&#x5B50;View
        rInflateChildren(parser, temp, attrs, true);
        . . .

        if (root != null &amp;&amp; attachToRoot) {
          // &#x82E5;&#x7236;&#x5BB9;&#x5668;&#x4E0D;&#x4E3A;&#x7A7A;&#x4E14;attachToRoot&#x4E3A;true&#xFF0C;&#x5219;&#x5C06;&#x7236;&#x5BB9;&#x5668;&#x4F5C;&#x4E3A;&#x6839;View&#x7684;&#x7236;View&#x5305;&#x88F9;&#x4E0A;&#x6765;
          root.addView(temp, params);
        }

        // &#x82E5;root&#x4E3A;&#x7A7A;&#x6216;&#x662F;attachToRoot&#x4E3A;false&#xFF0C;&#x5219;&#x4EE5;&#x6839;View&#x4F5C;&#x4E3A;&#x8FD4;&#x56DE;&#x503C;
        if (root == null || !attachToRoot) {
           result = temp;
        }
      }

    } catch (XmlPullParserException e) {
      . . . 
    } catch (Exception e) {
      . . . 
    } finally {

      . . .
    }
    return result;
  }
}
</code></pre>
<p>&#x5728;&#x4E0A;&#x9762;&#x7684;&#x6E90;&#x7801;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x5BF9;&#x4E8E;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x4E2D;&#x7684;<merge>&#x6807;&#x7B7E;&#x8FDB;&#x884C;&#x5355;&#x72EC;&#x5904;&#x7406;&#xFF0C;&#x8C03;&#x7528;rInflate()&#x65B9;&#x6CD5;&#x6765;&#x9012;&#x5F52;&#x586B;&#x5145;&#x5E03;&#x5C40;&#x3002;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</merge></p>
<pre><code>void rInflate(XmlPullParser parser, View parent, Context context,
    AttributeSet attrs, boolean finishInflate) throws XmlPullParserException, IOException {
    // &#x83B7;&#x53D6;&#x5F53;&#x524D;&#x6807;&#x8BB0;&#x7684;&#x6DF1;&#x5EA6;&#xFF0C;&#x6839;&#x6807;&#x8BB0;&#x7684;&#x6DF1;&#x5EA6;&#x4E3A;0
    final int depth = parser.getDepth();
    int type;
    while (((type = parser.next()) != XmlPullParser.END_TAG ||
        parser.getDepth() &gt; depth) &amp;&amp; type != XmlPullParser.END_DOCUMENT) {
      // &#x4E0D;&#x662F;&#x5F00;&#x59CB;&#x6807;&#x8BB0;&#x5219;&#x7EE7;&#x7EED;&#x4E0B;&#x4E00;&#x6B21;&#x8FED;&#x4EE3;
      if (type != XmlPullParser.START_TAG) {
        continue;
      }
      final String name = parser.getName();
      // &#x5BF9;&#x4E00;&#x4E9B;&#x7279;&#x6B8A;&#x6807;&#x8BB0;&#x505A;&#x5355;&#x72EC;&#x5904;&#x7406;
      if (TAG_REQUEST_FOCUS.equals(name)) {
        parseRequestFocus(parser, parent);
      } else if (TAG_TAG.equals(name)) {
        parseViewTag(parser, parent, attrs);
      } else if (TAG_INCLUDE.equals(name)) {
        if (parser.getDepth() == 0) {
          throw new InflateException(&quot;&lt;include /&gt; cannot be the root element&quot;);
        }
        // &#x5BF9;&lt;include&gt;&#x505A;&#x5904;&#x7406;
        parseInclude(parser, context, parent, attrs);
      } else if (TAG_MERGE.equals(name)) {
        throw new InflateException(&quot;&lt;merge /&gt; must be the root element&quot;);
      } else {
        // &#x5BF9;&#x4E00;&#x822C;&#x6807;&#x8BB0;&#x7684;&#x5904;&#x7406;
        final View view = createViewFromTag(parent, name, context, attrs);
        final ViewGroup viewGroup = (ViewGroup) parent;
        final ViewGroup.LayoutParams params=viewGroup.generateLayoutParams(attrs);
        // &#x9012;&#x5F52;&#x5730;&#x52A0;&#x8F7D;&#x5B50;View
        rInflateChildren(parser, view, attrs, true);
        viewGroup.addView(view, params);
      }
    }

    if (finishInflate) {
        parent.onFinishInflate();
    }
}
</code></pre>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x4E0A;&#x9762;&#x7684;inflate()&#x548C;rInflate()&#x65B9;&#x6CD5;&#x4E2D;&#x90FD;&#x8C03;&#x7528;&#x4E86;rInflateChildren()&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>final void rInflateChildren(XmlPullParser parser, View parent, AttributeSet attrs, boolean finishInflate) throws XmlPullParserException, IOException {
    rInflate(parser, parent, parent.getContext(), attrs, finishInflate);
}
</code></pre>
<p>&#x4ECE;&#x6E90;&#x7801;&#x4E2D;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;rInflateChildren()&#x65B9;&#x6CD5;&#x5B9E;&#x9645;&#x4E0A;&#x8C03;&#x7528;&#x4E86;rInflate()&#x65B9;&#x6CD5;&#x3002;</p>
<p>&#x5230;&#x8FD9;&#x91CC;&#xFF0C;setContentView()&#x7684;&#x6574;&#x4F53;&#x6267;&#x884C;&#x6D41;&#x7A0B;&#x6211;&#x4EEC;&#x5C31;&#x5206;&#x6790;&#x5B8C;&#x4E86;&#xFF0C;&#x81F3;&#x6B64;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x4E86;Activity&#x7684;ContentView&#x7684;&#x521B;&#x5EFA;&#x4E0E;&#x8BBE;&#x7F6E;&#x5DE5;&#x4F5C;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x8FDB;&#x5165;&#x6B63;&#x9898;&#xFF0C;&#x5206;&#x6790;View&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;&#x3002;</p>
<h2 id="viewroot"><a class="header-anchor" href="#viewroot"></a>ViewRoot</h2>
<p>&#x5728;&#x4ECB;&#x7ECD;View&#x7684;&#x7ED8;&#x5236;&#x524D;&#xFF0C;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x77E5;&#x9053;&#x662F;&#x8C01;&#x8D1F;&#x8D23;&#x6267;&#x884C;View&#x7ED8;&#x5236;&#x7684;&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;View&#x7684;&#x7ED8;&#x5236;&#x662F;&#x7531;ViewRoot&#x6765;&#x8D1F;&#x8D23;&#x7684;&#x3002;&#x6BCF;&#x4E2A;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7A97;&#x53E3;&#x7684;decorView&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x4E0E;&#x4E4B;&#x5173;&#x8054;&#x7684;ViewRoot&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x79CD;&#x5173;&#x8054;&#x5173;&#x7CFB;&#x662F;&#x7531;WindowManager&#x6765;&#x7EF4;&#x62A4;&#x7684;&#x3002;</p>
<p>&#x90A3;&#x4E48;decorView&#x4E0E;ViewRoot&#x7684;&#x5173;&#x8054;&#x5173;&#x7CFB;&#x662F;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x5EFA;&#x7ACB;&#x7684;&#x5462;&#xFF1F;&#x7B54;&#x6848;&#x662F;Activity&#x542F;&#x52A8;&#x65F6;&#xFF0C;ActivityThread.handleResumeActivity()&#x65B9;&#x6CD5;&#x4E2D;&#x5EFA;&#x7ACB;&#x4E86;&#x5B83;&#x4EEC;&#x4E24;&#x8005;&#x7684;&#x5173;&#x8054;&#x5173;&#x7CFB;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4E0D;&#x5177;&#x4F53;&#x5206;&#x6790;&#x5B83;&#x4EEC;&#x5EFA;&#x7ACB;&#x5173;&#x8054;&#x7684;&#x65F6;&#x673A;&#x4E0E;&#x65B9;&#x5F0F;&#xFF0C;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x540C;&#x5B66;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x76F8;&#x5173;&#x6E90;&#x7801;&#x3002;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x76F4;&#x5165;&#x4E3B;&#x9898;&#xFF0C;&#x5206;&#x6790;&#x4E00;&#x4E0B;ViewRoot&#x662F;&#x5982;&#x4F55;&#x5B8C;&#x6210;View&#x7684;&#x7ED8;&#x5236;&#x7684;&#x3002;</p>
<h3 id="view&#x7ED8;&#x5236;&#x7684;&#x8D77;&#x70B9;"><a class="header-anchor" href="#view&#x7ED8;&#x5236;&#x7684;&#x8D77;&#x70B9;"></a>View&#x7ED8;&#x5236;&#x7684;&#x8D77;&#x70B9;</h3>
<p>&#x5F53;&#x5EFA;&#x7ACB;&#x597D;&#x4E86;decorView&#x4E0E;ViewRoot&#x7684;&#x5173;&#x8054;&#x540E;&#xFF0C;ViewRoot&#x7C7B;&#x7684;requestLayout()&#x65B9;&#x6CD5;&#x4F1A;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x4EE5;&#x5B8C;&#x6210;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7528;&#x6237;&#x754C;&#x9762;&#x7684;&#x521D;&#x6B21;&#x5E03;&#x5C40;&#x3002;&#x5B9E;&#x9645;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x662F;ViewRootImpl&#x7C7B;&#x7684;requestLayout()&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>@Override
public void requestLayout() {
  if (!mHandlingLayoutInLayoutRequest) {
    // &#x68C0;&#x67E5;&#x53D1;&#x8D77;&#x5E03;&#x5C40;&#x8BF7;&#x6C42;&#x7684;&#x7EBF;&#x7A0B;&#x662F;&#x5426;&#x4E3A;&#x4E3B;&#x7EBF;&#x7A0B;  
    checkThread();
    mLayoutRequested = true;
    scheduleTraversals();
  }
}
</code></pre>
<p>&#x4E0A;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x4E2D;&#x8C03;&#x7528;&#x4E86;scheduleTraversals()&#x65B9;&#x6CD5;&#x6765;&#x8C03;&#x5EA6;&#x4E00;&#x6B21;&#x5B8C;&#x6210;&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x4F1A;&#x5411;&#x4E3B;&#x7EBF;&#x7A0B;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x201C;&#x904D;&#x5386;&#x201D;&#x6D88;&#x606F;&#xFF0C;&#x6700;&#x7EC8;&#x4F1A;&#x5BFC;&#x81F4;ViewRootImpl&#x7684;performTraversals()&#x65B9;&#x6CD5;&#x88AB;&#x8C03;&#x7528;&#x3002;&#x4E0B;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x4EE5;performTraversals()&#x4E3A;&#x8D77;&#x70B9;&#xFF0C;&#x6765;&#x5206;&#x6790;View&#x7684;&#x6574;&#x4E2A;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;&#x3002;</p>
<h3 id="&#x4E09;&#x4E2A;&#x9636;&#x6BB5;"><a class="header-anchor" href="#&#x4E09;&#x4E2A;&#x9636;&#x6BB5;"></a>&#x4E09;&#x4E2A;&#x9636;&#x6BB5;</h3>
<p>View&#x7684;&#x6574;&#x4E2A;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x4EE5;&#x4E0B;&#x4E09;&#x4E2A;&#x9636;&#x6BB5;&#xFF1A;</p>
<ul>
<li>measure: &#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x8BA1;&#x7B97;View&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x9700;&#x8981;&#x7684;&#x8BDD;&#x5219;&#x8BA1;&#x7B97;&#xFF1B;</li>
<li>layout: &#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x8BA1;&#x7B97;View&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x9700;&#x8981;&#x7684;&#x8BDD;&#x5219;&#x8BA1;&#x7B97;&#xFF1B;</li>
<li>draw: &#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x7ED8;&#x5236;View&#xFF0C;&#x9700;&#x8981;&#x7684;&#x8BDD;&#x5219;&#x91CD;&#x7ED8;&#x5236;&#x3002;</li>
</ul>
<p>&#x8FD9;&#x4E09;&#x4E2A;&#x5B50;&#x9636;&#x6BB5;&#x53EF;&#x4EE5;&#x7528;&#x4E0B;&#x56FE;&#x6765;&#x63CF;&#x8FF0;&#xFF1A;</p>
<div align="center">
<img data-original="/2016/11/13/android-view-draw-theory/2397836-19c08de6439514a7.png" class="lazy">
</div>
<h4 id="measure&#x9636;&#x6BB5;"><a class="header-anchor" href="#measure&#x9636;&#x6BB5;"></a>measure&#x9636;&#x6BB5;</h4>
<p>&#x6B64;&#x9636;&#x6BB5;&#x7684;&#x76EE;&#x7684;&#x662F;&#x8BA1;&#x7B97;&#x51FA;&#x63A7;&#x4EF6;&#x6811;&#x4E2D;&#x7684;&#x5404;&#x4E2A;&#x63A7;&#x4EF6;&#x8981;&#x663E;&#x793A;&#x5176;&#x5185;&#x5BB9;&#x7684;&#x8BDD;&#xFF0C;&#x9700;&#x8981;&#x591A;&#x5927;&#x5C3A;&#x5BF8;&#x3002;&#x8D77;&#x70B9;&#x662F;ViewRootImpl&#x7684;measureHierarchy()&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>private boolean measureHierarchy(final View host, final WindowManager.LayoutParams lp, final Resources res, 
    final int desiredWindowWidth, final int desiredWindowHeight) {
  // &#x4F20;&#x5165;&#x7684;desiredWindowXxx&#x4E3A;&#x7A97;&#x53E3;&#x5C3A;&#x5BF8;
  int childWidthMeasureSpec;
  int childHeightMeasureSpec;
  boolean windowSizeMayChange = false;
  . . .
  boolean goodMeasure = false;

  if (!goodMeasure) {
    childWidthMeasureSpec = getRootMeasureSpec(desiredWindowWidth, lp.width);
    childHeightMeasureSpec = getRootMeasureSpec(desiredWindowHeight, lp.height);
    performMeasure(childWidthMeasureSpec, childHeightMeasureSpec);

    if (mWidth != host.getMeasuredWidth() || mHeight != host.getMeasuredHeight()) {
      windowSizeMayChange = true;
    }
  }
  return windowSizeMayChange;
}
</code></pre>
<p>&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x8C03;&#x7528;getRootMeasureSpec()&#x65B9;&#x6CD5;&#x6765;&#x83B7;&#x53D6;&#x6839;MeasureSpec&#xFF0C;&#x8FD9;&#x4E2A;&#x6839;MeasureSpec&#x4EE3;&#x8868;&#x4E86;&#x5BF9;decorView&#x7684;&#x5BBD;&#x9AD8;&#x7684;&#x7EA6;&#x675F;&#x4FE1;&#x606F;&#x3002;&#x7EE7;&#x7EED;&#x5206;&#x6790;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x7B80;&#x5355;&#x5730;&#x4ECB;&#x7ECD;&#x4E0B;MeasureSpec&#x7684;&#x6982;&#x5FF5;&#x3002;</p>
<p>MeasureSpec&#x662F;&#x4E00;&#x4E2A;32&#x4F4D;&#x6574;&#x6570;&#xFF0C;&#x7531;SpecMode&#x548C;SpecSize&#x4E24;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#xFF0C;&#x5176;&#x4E2D;&#xFF0C;&#x9AD8;2&#x4F4D;&#x4E3A;SpecMode&#xFF0C;&#x4F4E;30&#x4F4D;&#x4E3A;SpecSize&#x3002;SpecMode&#x4E3A;&#x6D4B;&#x91CF;&#x6A21;&#x5F0F;&#xFF0C;SpecSize&#x4E3A;&#x76F8;&#x5E94;&#x6D4B;&#x91CF;&#x6A21;&#x5F0F;&#x4E0B;&#x7684;&#x6D4B;&#x91CF;&#x5C3A;&#x5BF8;&#x3002;View&#xFF08;&#x5305;&#x62EC;&#x666E;&#x901A;View&#x548C;ViewGroup&#xFF09;&#x7684;SpecMode&#x7531;&#x672C;View&#x7684;LayoutParams&#x7ED3;&#x5408;&#x7236;View&#x7684;MeasureSpec&#x751F;&#x6210;&#x3002;</p>
<p>SpecMode&#x7684;&#x53D6;&#x503C;&#x53EF;&#x4E3A;&#x4EE5;&#x4E0B;&#x4E09;&#x79CD;&#xFF1A;</p>
<ul>
<li>EXACTLY: &#x5BF9;&#x5B50;View&#x63D0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x786E;&#x5207;&#x7684;&#x5EFA;&#x8BAE;&#x5C3A;&#x5BF8;&#xFF08;SpecSize&#xFF09;&#xFF1B;</li>
<li>AT_MOST: &#x5B50;View&#x7684;&#x5927;&#x5C0F;&#x4E0D;&#x5F97;&#x8D85;&#x8FC7;SpecSize&#xFF1B;</li>
<li>UNSPECIFIED: &#x5BF9;&#x5B50;View&#x7684;&#x5C3A;&#x5BF8;&#x4E0D;&#x4F5C;&#x9650;&#x5236;&#xFF0C;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x7CFB;&#x7EDF;&#x5185;&#x90E8;&#x3002;</li>
</ul>
<p>&#x4F20;&#x5165;performMeasure()&#x65B9;&#x6CD5;&#x7684;MeasureSpec&#x7684;SpecMode&#x4E3A;EXACTLY&#xFF0C;SpecSize&#x4E3A;&#x7A97;&#x53E3;&#x5C3A;&#x5BF8;&#x3002;</p>
<p>performMeasure()&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>private void performMeasure(int childWidthMeasureSpec, int childHeightMeasureSpec) {
  . . .
  try { 
    mView.measure(childWidthMeasureSpec, childHeightMeasureSpec);
  } finally {
    . . .
  }
}
</code></pre>
<p>&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684;mView&#x5373;&#x4E3A;decorView&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4F1A;&#x8F6C;&#x5411;&#x5BF9;View.measure()&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>/**
 * &#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x6765;&#x7B97;&#x51FA;&#x4E00;&#x4E2A;View&#x5E94;&#x8BE5;&#x4E3A;&#x591A;&#x5927;&#x3002;&#x53C2;&#x6570;&#x4E3A;&#x7236;View&#x5BF9;&#x5176;&#x5BBD;&#x9AD8;&#x7684;&#x7EA6;&#x675F;&#x4FE1;&#x606F;&#x3002;
 * &#x5B9E;&#x9645;&#x7684;&#x6D4B;&#x91CF;&#x5DE5;&#x4F5C;&#x5728;onMeasure()&#x65B9;&#x6CD5;&#x4E2D;&#x8FDB;&#x884C;
 */
public final void measure(int widthMeasureSpec, int heightMeasureSpec) {
  . . . 
  // &#x5224;&#x65AD;&#x662F;&#x5426;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x5E03;&#x5C40;

  // &#x82E5;mPrivateFlags&#x4E2D;&#x5305;&#x542B;PFLAG_FORCE_LAYOUT&#x6807;&#x8BB0;&#xFF0C;&#x5219;&#x5F3A;&#x5236;&#x91CD;&#x65B0;&#x5E03;&#x5C40;
  // &#x6BD4;&#x5982;&#x8C03;&#x7528;View.requestLayout()&#x4F1A;&#x5728;mPrivateFlags&#x4E2D;&#x52A0;&#x5165;&#x6B64;&#x6807;&#x8BB0;
  final boolean forceLayout = (mPrivateFlags &amp; PFLAG_FORCE_LAYOUT) == PFLAG_FORCE_LAYOUT;
  final boolean specChanged = widthMeasureSpec != mOldWidthMeasureSpec
      || heightMeasureSpec != mOldHeightMeasureSpec;
  final boolean isSpecExactly = MeasureSpec.getMode(widthMeasureSpec) == MeasureSpec.EXACTLY
      &amp;&amp; MeasureSpec.getMode(heightMeasureSpec) == MeasureSpec.EXACTLY;
  final boolean matchesSpecSize = getMeasuredWidth() == MeasureSpec.getSize(widthMeasureSpec)
      &amp;&amp; getMeasuredHeight() == MeasureSpec.getSize(heightMeasureSpec);
  final boolean needsLayout = specChanged
      &amp;&amp; (sAlwaysRemeasureExactly || !isSpecExactly || !matchesSpecSize);

  // &#x9700;&#x8981;&#x91CD;&#x65B0;&#x5E03;&#x5C40;  
  if (forceLayout || needsLayout) {
    . . .
    // &#x5148;&#x5C1D;&#x8BD5;&#x4ECE;&#x7F13;&#x4ECE;&#x4E2D;&#x83B7;&#x53D6;&#xFF0C;&#x82E5;forceLayout&#x4E3A;true&#x6216;&#x662F;&#x7F13;&#x5B58;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#x6216;&#x662F;
    // &#x5FFD;&#x7565;&#x7F13;&#x5B58;&#xFF0C;&#x5219;&#x8C03;&#x7528;onMeasure()&#x91CD;&#x65B0;&#x8FDB;&#x884C;&#x6D4B;&#x91CF;&#x5DE5;&#x4F5C;
    int cacheIndex = forceLayout ? -1 : mMeasureCache.indexOfKey(key);
    if (cacheIndex &lt; 0 || sIgnoreMeasureCache) {
      // measure ourselves, this should set the measured dimension flag back
      onMeasure(widthMeasureSpec, heightMeasureSpec);
      . . .
    } else {
      // &#x7F13;&#x5B58;&#x547D;&#x4E2D;&#xFF0C;&#x76F4;&#x63A5;&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x53D6;&#x503C;&#x5373;&#x53EF;&#xFF0C;&#x4E0D;&#x5FC5;&#x518D;&#x6D4B;&#x91CF;
      long value = mMeasureCache.valueAt(cacheIndex);
      // Casting a long to int drops the high 32 bits, no mask needed
      setMeasuredDimensionRaw((int) (value &gt;&gt; 32), (int) value);
      . . .
    }
    . . .
  }
  mOldWidthMeasureSpec = widthMeasureSpec;
  mOldHeightMeasureSpec = heightMeasureSpec;
  mMeasureCache.put(key, ((long) mMeasuredWidth) &lt;&lt; 32 |
      (long) mMeasuredHeight &amp; 0xffffffffL); // suppress sign extension
}
</code></pre>
<p>&#x4ECE;measure()&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x4E2D;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;&#x53EA;&#x6709;&#x4EE5;&#x4E0B;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x4E4B;&#x4E00;&#xFF0C;&#x624D;&#x4F1A;&#x8FDB;&#x884C;&#x5B9E;&#x9645;&#x7684;&#x6D4B;&#x91CF;&#x5DE5;&#x4F5C;&#xFF1A;</p>
<ul>
<li>forceLayout&#x4E3A;true&#xFF1A;&#x8FD9;&#x8868;&#x793A;&#x5F3A;&#x5236;&#x91CD;&#x65B0;&#x5E03;&#x5C40;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;View.requestLayout()&#x6765;&#x5B9E;&#x73B0;&#xFF1B;</li>
<li>needsLayout&#x4E3A;true&#xFF0C;&#x8FD9;&#x9700;&#x8981;specChanged&#x4E3A;true&#xFF08;&#x8868;&#x793A;&#x672C;&#x6B21;&#x4F20;&#x5165;&#x7684;MeasureSpec&#x4E0E;&#x4E0A;&#x6B21;&#x4F20;&#x5165;&#x7684;&#x4E0D;&#x540C;&#xFF09;&#xFF0C;&#x5E76;&#x4E14;&#x4EE5;&#x4E0B;&#x4E09;&#x4E2A;&#x6761;&#x4EF6;&#x4E4B;&#x4E00;&#x6210;&#x7ACB;&#xFF1A;
<ul>
<li>sAlwaysRemeasureExactly&#x4E3A;true: &#x8BE5;&#x53D8;&#x91CF;&#x9ED8;&#x8BA4;&#x4E3A;false&#xFF1B;</li>
<li>isSpecExactly&#x4E3A;false: &#x82E5;&#x7236;View&#x5BF9;&#x5B50;View&#x63D0;&#x51FA;&#x4E86;&#x7CBE;&#x786E;&#x7684;&#x5BBD;&#x9AD8;&#x7EA6;&#x675F;&#xFF0C;&#x5219;&#x8BE5;&#x53D8;&#x91CF;&#x4E3A;true&#xFF0C;&#x5426;&#x5219;&#x4E3A;false</li>
<li>matchesSpecSize&#x4E3A;false: &#x8868;&#x793A;&#x7236;View&#x7684;&#x5BBD;&#x9AD8;&#x5C3A;&#x5BF8;&#x8981;&#x6C42;&#x4E0E;&#x4E0A;&#x6B21;&#x6D4B;&#x91CF;&#x7684;&#x7ED3;&#x679C;&#x4E0D;&#x540C;</li>
</ul>
</li>
</ul>
<p>&#x5BF9;&#x4E8E;decorView&#x6765;&#x8BF4;&#xFF0C;&#x5B9E;&#x9645;&#x6267;&#x884C;&#x6D4B;&#x91CF;&#x5DE5;&#x4F5C;&#x7684;&#x662F;FrameLayout&#x7684;onMeasure()&#x65B9;&#x6CD5;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>@Override
protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
  int count = getChildCount();
  . . .
  int maxHeight = 0;
  int maxWidth = 0;

  int childState = 0;
  for (int i = 0; i &lt; count; i++) {
    final View child = getChildAt(i);
    if (mMeasureAllChildren || child.getVisibility() != GONE) {
      measureChildWithMargins(child, widthMeasureSpec, 0, heightMeasureSpec, 0);
      final LayoutParams lp = (LayoutParams) child.getLayoutParams();
      maxWidth = Math.max(maxWidth,
          child.getMeasuredWidth() + lp.leftMargin + lp.rightMargin);
      maxHeight = Math.max(maxHeight,
          child.getMeasuredHeight() + lp.topMargin + lp.bottomMargin);
      childState = combineMeasuredStates(childState, child.getMeasuredState());

      . . .
    }
  }

  // Account for padding too
  maxWidth += getPaddingLeftWithForeground() + getPaddingRightWithForeground();
  maxHeight += getPaddingTopWithForeground() + getPaddingBottomWithForeground();

  // Check against our minimum height and width
  maxHeight = Math.max(maxHeight, getSuggestedMinimumHeight());
  maxWidth = Math.max(maxWidth, getSuggestedMinimumWidth());

  // Check against our foreground&apos;s minimum height and width
  final Drawable drawable = getForeground();
  if (drawable != null) {
    maxHeight = Math.max(maxHeight, drawable.getMinimumHeight());
    maxWidth = Math.max(maxWidth, drawable.getMinimumWidth());
  }

  setMeasuredDimension(resolveSizeAndState(maxWidth, widthMeasureSpec, childState),
        resolveSizeAndState(maxHeight, heightMeasureSpec,
        childState &lt;&lt; MEASURED_HEIGHT_STATE_SHIFT));
  . . . 
}
</code></pre>
<p>FrameLayout&#x662F;ViewGroup&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x540E;&#x8005;&#x6709;&#x4E00;&#x4E2A;View[]&#x7C7B;&#x578B;&#x7684;&#x6210;&#x5458;&#x53D8;&#x91CF;mChildren&#xFF0C;&#x4EE3;&#x8868;&#x4E86;&#x5176;&#x5B50;View&#x96C6;&#x5408;&#x3002;&#x901A;&#x8FC7;getChildAt(i)&#x80FD;&#x83B7;&#x53D6;&#x6307;&#x5B9A;&#x7D22;&#x5F15;&#x5904;&#x7684;&#x5B50;View&#xFF0C;&#x901A;&#x8FC7;getChildCount()&#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x5B50;View&#x7684;&#x603B;&#x6570;&#x3002;</p>
<p>&#x5728;&#x4E0A;&#x9762;&#x7684;&#x6E90;&#x7801;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x8C03;&#x7528;measureChildWithMargins()&#x65B9;&#x6CD5;&#x5BF9;&#x6240;&#x6709;&#x5B50;View&#x8FDB;&#x884C;&#x4E86;&#x4E00;&#x904D;&#x6D4B;&#x91CF;&#xFF0C;&#x5E76;&#x8BA1;&#x7B97;&#x51FA;&#x6240;&#x6709;&#x5B50;View&#x7684;&#x6700;&#x5927;&#x5BBD;&#x5EA6;&#x548C;&#x6700;&#x5927;&#x9AD8;&#x5EA6;&#x3002;&#x800C;&#x540E;&#x5C06;&#x5F97;&#x5230;&#x7684;&#x6700;&#x5927;&#x9AD8;&#x5EA6;&#x548C;&#x5BBD;&#x5EA6;&#x52A0;&#x4E0A;padding&#xFF0C;&#x8FD9;&#x91CC;&#x7684;padding&#x5305;&#x62EC;&#x4E86;&#x7236;View&#x7684;padding&#x548C;&#x524D;&#x666F;&#x533A;&#x57DF;&#x7684;padding&#x3002;&#x7136;&#x540E;&#x4F1A;&#x68C0;&#x67E5;&#x662F;&#x5426;&#x8BBE;&#x7F6E;&#x4E86;&#x6700;&#x5C0F;&#x5BBD;&#x9AD8;&#xFF0C;&#x5E76;&#x4E0E;&#x5176;&#x6BD4;&#x8F83;&#xFF0C;&#x5C06;&#x4E24;&#x8005;&#x4E2D;&#x8F83;&#x5927;&#x7684;&#x8BBE;&#x4E3A;&#x6700;&#x7EC8;&#x7684;&#x6700;&#x5927;&#x5BBD;&#x9AD8;&#x3002;&#x6700;&#x540E;&#xFF0C;&#x82E5;&#x8BBE;&#x7F6E;&#x4E86;&#x524D;&#x666F;&#x56FE;&#x50CF;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x8981;&#x68C0;&#x67E5;&#x524D;&#x666F;&#x56FE;&#x50CF;&#x7684;&#x6700;&#x5C0F;&#x5BBD;&#x9AD8;&#x3002;</p>
<p>&#x7ECF;&#x8FC7;&#x4E86;&#x4EE5;&#x4E0A;&#x4E00;&#x7CFB;&#x5217;&#x6B65;&#x9AA4;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5F97;&#x5230;&#x4E86;maxHeight&#x548C;maxWidth&#x7684;&#x6700;&#x7EC8;&#x503C;&#xFF0C;&#x8868;&#x793A;&#x5F53;&#x524D;&#x5BB9;&#x5668;View&#x7528;&#x8FD9;&#x4E2A;&#x5C3A;&#x5BF8;&#x5C31;&#x80FD;&#x591F;&#x6B63;&#x5E38;&#x663E;&#x793A;&#x5176;&#x6240;&#x6709;&#x5B50;View&#xFF08;&#x540C;&#x65F6;&#x8003;&#x8651;&#x4E86;padding&#x548C;margin&#xFF09;&#x3002;&#x800C;&#x540E;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8C03;&#x7528;resolveSizeAndState()&#x65B9;&#x6CD5;&#x6765;&#x7ED3;&#x5408;&#x4F20;&#x6765;&#x7684;MeasureSpec&#x6765;&#x83B7;&#x53D6;&#x6700;&#x7EC8;&#x7684;&#x6D4B;&#x91CF;&#x5BBD;&#x9AD8;&#xFF0C;&#x5E76;&#x4FDD;&#x5B58;&#x5230;mMeasuredWidth&#x4E0E;mMeasuredHeight&#x6210;&#x5458;&#x53D8;&#x91CF;&#x4E2D;&#x3002;</p>
<p>&#x4ECE;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x7684;&#x6267;&#x884C;&#x6D41;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5BB9;&#x5668;View&#x901A;&#x8FC7;measureChildWithMargins()&#x65B9;&#x6CD5;&#x5BF9;&#x6240;&#x6709;&#x5B50;View&#x8FDB;&#x884C;&#x6D4B;&#x91CF;&#x540E;&#xFF0C;&#x624D;&#x80FD;&#x5F97;&#x5230;&#x81EA;&#x8EAB;&#x7684;&#x6D4B;&#x91CF;&#x7ED3;&#x679C;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5BF9;&#x4E8E;ViewGroup&#x53CA;&#x5176;&#x5B50;&#x7C7B;&#x6765;&#x8BF4;&#xFF0C;&#x8981;&#x5148;&#x5B8C;&#x6210;&#x5B50;View&#x7684;&#x6D4B;&#x91CF;&#xFF0C;&#x518D;&#x8FDB;&#x884C;&#x81EA;&#x8EAB;&#x7684;&#x6D4B;&#x91CF;&#xFF08;&#x8003;&#x8651;&#x8FDB;padding&#x7B49;&#xFF09;&#x3002;<br>
&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E0B;ViewGroup&#x7684;measureChildWithMargins()&#x65B9;&#x6CD5;&#x7684;&#x5B9E;&#x73B0;&#xFF1A;</p>
<pre><code>protected void measureChildWithMargins(View child,
  int parentWidthMeasureSpec, int widthUsed,
  int parentHeightMeasureSpec, int heightUsed) {
  final MarginLayoutParams lp = (MarginLayoutParams) child.getLayoutParams();
  final int childWidthMeasureSpec = getChildMeasureSpec(parentWidthMeasureSpec,
      mPaddingLeft + mPaddingRight + lp.leftMargin + lp.rightMargin + widthUsed, lp.width);
  final int childHeightMeasureSpec = getChildMeasureSpec(parentHeightMeasureSpec
      mPaddingTop + mPaddingBottom + lp.topMargin + lp.bottomMargin + heightUsed, lp.height);

  child.measure(childWidthMeasureSpec, childHeightMeasureSpec);

}
</code></pre>
<p>&#x7531;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;&#x5BF9;&#x4E8E;ViewGroup&#x6765;&#x8BF4;&#xFF0C;&#x5B83;&#x4F1A;&#x8C03;&#x7528;child.measure()&#x6765;&#x5B8C;&#x6210;&#x5B50;View&#x7684;&#x6D4B;&#x91CF;&#x3002;&#x4F20;&#x5165;ViewGroup&#x7684;MeasureSpec&#x662F;&#x5B83;&#x7684;&#x7236;View&#x7528;&#x4E8E;&#x7EA6;&#x675F;&#x5176;&#x6D4B;&#x91CF;&#x7684;&#xFF0C;&#x90A3;&#x4E48;ViewGroup&#x672C;&#x8EAB;&#x4E5F;&#x9700;&#x8981;&#x751F;&#x6210;&#x4E00;&#x4E2A;childMeasureSpec&#x6765;&#x9650;&#x5236;&#x5B83;&#x7684;&#x5B50;View&#x7684;&#x6D4B;&#x91CF;&#x5DE5;&#x4F5C;&#x3002;&#x8FD9;&#x4E2A;childMeasureSpec&#x5C31;&#x7531;getChildMeasureSpec()&#x65B9;&#x6CD5;&#x751F;&#x6210;&#x3002;&#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x6765;&#x5206;&#x6790;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A;</p>
<pre><code>public static int getChildMeasureSpec(int spec, int padding, int childDimension) {
  // spec&#x4E3A;&#x7236;View&#x7684;MeasureSpec
  // padding&#x4E3A;&#x7236;View&#x5728;&#x76F8;&#x5E94;&#x65B9;&#x5411;&#x7684;&#x5DF2;&#x7528;&#x5C3A;&#x5BF8;&#x52A0;&#x4E0A;&#x7236;View&#x7684;padding&#x548C;&#x5B50;View&#x7684;margin
  // childDimension&#x4E3A;&#x5B50;View&#x7684;LayoutParams&#x7684;&#x503C;
  int specMode = MeasureSpec.getMode(spec);
  int specSize = MeasureSpec.getSize(spec);

  // &#x73B0;&#x5728;size&#x7684;&#x503C;&#x4E3A;&#x7236;View&#x76F8;&#x5E94;&#x65B9;&#x5411;&#x4E0A;&#x7684;&#x53EF;&#x7528;&#x5927;&#x5C0F;
  int size = Math.max(0, specSize - padding);

  int resultSize = 0;
  int resultMode = 0;

  switch (specMode) {
    // Parent has imposed an exact size on us
    case MeasureSpec.EXACTLY:
      if (childDimension &gt;= 0) {
        // &#x8868;&#x793A;&#x5B50;View&#x7684;LayoutParams&#x6307;&#x5B9A;&#x4E86;&#x5177;&#x4F53;&#x5927;&#x5C0F;&#x503C;&#xFF08;xx dp&#xFF09;
        resultSize = childDimension;
        resultMode = MeasureSpec.EXACTLY;
      } else if (childDimension == LayoutParams.MATCH_PARENT) {
        // &#x5B50;View&#x60F3;&#x548C;&#x7236;View&#x4E00;&#x6837;&#x5927;
        resultSize = size;
        resultMode = MeasureSpec.EXACTLY;
      } else if (childDimension == LayoutParams.WRAP_CONTENT) {
        // &#x5B50;View&#x60F3;&#x81EA;&#x5DF1;&#x51B3;&#x5B9A;&#x5176;&#x5C3A;&#x5BF8;&#xFF0C;&#x4F46;&#x4E0D;&#x80FD;&#x6BD4;&#x7236;View&#x5927; 
        resultSize = size;
        resultMode = MeasureSpec.AT_MOST;
      }
      break;

    // Parent has imposed a maximum size on us
    case MeasureSpec.AT_MOST:
      if (childDimension &gt;= 0) {
        // &#x5B50;View&#x6307;&#x5B9A;&#x4E86;&#x5177;&#x4F53;&#x5927;&#x5C0F;
        resultSize = childDimension;
        resultMode = MeasureSpec.EXACTLY;
      } else if (childDimension == LayoutParams.MATCH_PARENT) {
        // &#x5B50;View&#x60F3;&#x8DDF;&#x7236;View&#x4E00;&#x6837;&#x5927;&#xFF0C;&#x4F46;&#x662F;&#x7236;View&#x7684;&#x5927;&#x5C0F;&#x672A;&#x56FA;&#x5B9A;&#x4E0B;&#x6765;
        // &#x6240;&#x4EE5;&#x6307;&#x5B9A;&#x7EA6;&#x675F;&#x5B50;View&#x4E0D;&#x80FD;&#x6BD4;&#x7236;View&#x5927;
        resultSize = size;
        resultMode = MeasureSpec.AT_MOST;
      } else if (childDimension == LayoutParams.WRAP_CONTENT) {
        // &#x5B50;View&#x60F3;&#x8981;&#x81EA;&#x5DF1;&#x51B3;&#x5B9A;&#x5C3A;&#x5BF8;&#xFF0C;&#x4F46;&#x4E0D;&#x80FD;&#x6BD4;&#x7236;View&#x5927;
        resultSize = size;
        resultMode = MeasureSpec.AT_MOST;
      }
      break;

      . . .
  }

  //noinspection ResourceType
  return MeasureSpec.makeMeasureSpec(resultSize, resultMode);
}
</code></pre>
<p>&#x4E0A;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x5C55;&#x73B0;&#x4E86;&#x6839;&#x636E;&#x7236;View&#x7684;MeasureSpec&#x548C;&#x5B50;View&#x7684;LayoutParams&#x751F;&#x6210;&#x5B50;View&#x7684;MeasureSpec&#x7684;&#x8FC7;&#x7A0B;&#xFF0C; &#x5B50;View&#x7684;LayoutParams&#x8868;&#x793A;&#x4E86;&#x5B50;View&#x7684;&#x671F;&#x5F85;&#x5927;&#x5C0F;&#x3002;&#x8FD9;&#x4E2A;&#x4EA7;&#x751F;&#x7684;MeasureSpec&#x7528;&#x4E8E;&#x6307;&#x5BFC;&#x5B50;View&#x81EA;&#x8EAB;&#x7684;&#x6D4B;&#x91CF;&#x7ED3;&#x679C;&#x7684;&#x786E;&#x5B9A;&#x3002;</p>
<p>&#x5728;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5F53;ParentMeasureSpec&#x7684;SpecMode&#x4E3A;EXACTLY&#x65F6;&#xFF0C;&#x8868;&#x793A;&#x7236;View&#x5BF9;&#x5B50;View&#x6307;&#x5B9A;&#x4E86;&#x786E;&#x5207;&#x7684;&#x5BBD;&#x9AD8;&#x9650;&#x5236;&#x3002;&#x6B64;&#x65F6;&#x6839;&#x636E;&#x5B50;View&#x7684;LayoutParams&#x7684;&#x4E0D;&#x540C;&#xFF0C;&#x5206;&#x4EE5;&#x4E0B;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#xFF1A;</p>
<ul>
<li>&#x5177;&#x4F53;&#x5927;&#x5C0F;&#xFF08;childDimension&#xFF09;&#xFF1A;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x4EE4;&#x5B50;View&#x7684;SpecSize&#x4E3A;childDimension&#xFF0C;&#x5373;&#x5B50;View&#x5728;LayoutParams&#x6307;&#x5B9A;&#x7684;&#x5177;&#x4F53;&#x5927;&#x5C0F;&#x503C;&#xFF1B;&#x4EE4;&#x5B50;View&#x7684;SpecMode&#x4E3A;EXACTLY&#xFF0C;&#x5373;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x82E5;&#x8BE5;&#x5B50;View&#x4E3A;&#x5BB9;&#x5668;View&#xFF0C;&#x5B83;&#x4E5F;&#x6709;&#x80FD;&#x529B;&#x7ED9;&#x5176;&#x5B50;View&#x6307;&#x5B9A;&#x786E;&#x5207;&#x7684;&#x5BBD;&#x9AD8;&#x9650;&#x5236;&#xFF08;&#x5B50;View&#x53EA;&#x80FD;&#x5728;&#x8FD9;&#x4E2A;&#x5BBD;&#x9AD8;&#x8303;&#x56F4;&#x5185;&#xFF09;&#xFF0C;&#x82E5;&#x4E3A;&#x666E;&#x901A;View&#xFF0C;&#x5B83;&#x7684;&#x6700;&#x7EC8;&#x6D4B;&#x91CF;&#x5927;&#x5C0F;&#x5C31;&#x4E3A;childDimension&#x3002;</li>
<li>match_parent&#xFF1A;&#x6B64;&#x65F6;&#x8868;&#x793A;&#x5B50;View&#x60F3;&#x548C;&#x7236;View&#x4E00;&#x6837;&#x5927;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x5F97;&#x5230;&#x7684;&#x5B50;View&#x7684;SpecMode&#x4E0E;&#x4E0A;&#x79CD;&#x60C5;&#x51B5;&#x76F8;&#x540C;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;SpecSize&#x4E3A;size&#xFF0C;&#x5373;&#x7236;View&#x7684;&#x5269;&#x4F59;&#x53EF;&#x7528;&#x5927;&#x5C0F;&#x3002;</li>
<li>wrap_content: &#x8FD9;&#x8868;&#x793A;&#x4E86;&#x5B50;View&#x60F3;&#x81EA;&#x5DF1;&#x51B3;&#x5B9A;&#x81EA;&#x5DF1;&#x7684;&#x5C3A;&#x5BF8;&#xFF08;&#x6839;&#x636E;&#x5176;&#x5185;&#x5BB9;&#x7684;&#x5927;&#x5C0F;&#x52A8;&#x6001;&#x51B3;&#x5B9A;&#xFF09;&#x3002;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x5B50;View&#x7684;&#x786E;&#x5207;&#x6D4B;&#x91CF;&#x5927;&#x5C0F;&#x53EA;&#x80FD;&#x5728;&#x5176;&#x672C;&#x8EAB;&#x7684;onMeasure()&#x65B9;&#x6CD5;&#x4E2D;&#x8BA1;&#x7B97;&#x5F97;&#x51FA;&#xFF0C;&#x7236;View&#x6B64;&#x65F6;&#x65E0;&#x4ECE;&#x77E5;&#x6653;&#x3002;&#x6240;&#x4EE5;&#x6682;&#x65F6;&#x5C06;&#x5B50;View&#x7684;SpecSize&#x8BBE;&#x4E3A;size&#xFF08;&#x7236;View&#x7684;&#x5269;&#x4F59;&#x5927;&#x5C0F;&#xFF09;&#xFF1B;&#x4EE4;&#x5B50;View&#x7684;SpecMode&#x4E3A;AT_MOST&#xFF0C;&#x8868;&#x793A;&#x4E86;&#x82E5;&#x5B50;View&#x4E3A;ViewGroup&#xFF0C;&#x5B83;&#x6CA1;&#x6709;&#x80FD;&#x529B;&#x7ED9;&#x5176;&#x5B50;View&#x6307;&#x5B9A;&#x786E;&#x5207;&#x7684;&#x5BBD;&#x9AD8;&#x9650;&#x5236;&#xFF0C;&#x6BD5;&#x7ADF;&#x5B83;&#x672C;&#x8EAB;&#x7684;&#x6D4B;&#x91CF;&#x5BBD;&#x9AD8;&#x8FD8;&#x60AC;&#x800C;&#x672A;&#x5B9A;&#x3002;</li>
</ul>
<p>&#x5F53;ParentMeasureSpec&#x7684;SpecMode&#x4E3A;AT_MOST&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x5B50;View&#x7684;LayoutParams&#x7684;&#x4E0D;&#x540C;&#x6765;&#x5206;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x8BA8;&#x8BBA;&#xFF1A;</p>
<ul>
<li>&#x5177;&#x4F53;&#x5927;&#x5C0F;&#xFF1A;&#x8FD9;&#x65F6;&#x4EE4;&#x5B50;View&#x7684;SpecSize&#x4E3A;childDimension&#xFF0C;SpecMode&#x4E3A;EXACTLY&#x3002;</li>
<li>match_parent&#xFF1A;&#x8868;&#x793A;&#x5B50;View&#x60F3;&#x548C;&#x7236;View&#x4E00;&#x6837;&#x5927;&#xFF0C;&#x6545;&#x4EE4;&#x5B50;View&#x7684;SpecSize&#x4E3A;size&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x7236;View&#x672C;&#x8EAB;&#x7684;&#x6D4B;&#x91CF;&#x5BBD;&#x9AD8;&#x8FD8;&#x65E0;&#x4ECE;&#x786E;&#x5B9A;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x662F;&#x6682;&#x65F6;&#x4EE4;&#x5B50;View&#x7684;&#x6D4B;&#x91CF;&#x7ED3;&#x679C;&#x4E3A;&#x7236;View&#x76EE;&#x524D;&#x7684;&#x53EF;&#x7528;&#x5927;&#x5C0F;&#x3002;&#x8FD9;&#x65F6;&#x4EE4;&#x5B50;View&#x7684;SpecMode&#x4E3A;AT_MOST&#x3002;</li>
<li>wrap_content&#xFF1A;&#x8868;&#x793A;&#x5B50;View&#x60F3;&#x81EA;&#x5DF1;&#x51B3;&#x5B9A;&#x5927;&#x5C0F;&#xFF08;&#x6839;&#x636E;&#x5176;&#x5185;&#x5BB9;&#x52A8;&#x6001;&#x786E;&#x5B9A;&#xFF09;&#x3002;&#x7136;&#x800C;&#x8FD9;&#x65F6;&#x7236;View&#x8FD8;&#x65E0;&#x6CD5;&#x786E;&#x5B9A;&#x5176;&#x81EA;&#x8EAB;&#x7684;&#x6D4B;&#x91CF;&#x5BBD;&#x9AD8;&#xFF0C;&#x6240;&#x4EE5;&#x6682;&#x65F6;&#x4EE4;&#x5B50;View&#x7684;SpecSize&#x4E3A;size&#xFF0C;SpecMode&#x4E3A;AT_MOST&#x3002;</li>
</ul>
<p>&#x4ECE;&#x4E0A;&#x9762;&#x7684;&#x5206;&#x6790;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x7684;&#x7ED3;&#x8BBA;&#xFF0C;&#x5F53;&#x5B50;View&#x7684;&#x6D4B;&#x91CF;&#x7ED3;&#x679C;&#x80FD;&#x591F;&#x786E;&#x5B9A;&#x65F6;&#xFF0C;&#x5B50;View&#x7684;SpecMode&#x5C31;&#x4E3A;EXACTLY&#xFF1B;&#x5F53;&#x5B50;View&#x7684;&#x6D4B;&#x91CF;&#x7ED3;&#x679C;&#x8FD8;&#x4E0D;&#x80FD;&#x786E;&#x5B9A;&#xFF08;&#x53EA;&#x662F;&#x6682;&#x65F6;&#x8BBE;&#x4E3A;&#x67D0;&#x4E2A;&#x503C;&#xFF09;&#x65F6;&#xFF0C;&#x5B50;View&#x7684;SpecMode&#x4E3A;AT_MOST&#x3002;</p>
<p>&#x5728;measureChildWithMargins()&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x83B7;&#x53D6;&#x4E86;&#x77E5;&#x9053;&#x5B50;View&#x6D4B;&#x91CF;&#x7684;MeasureSpec&#x540E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x8981;&#x8C03;&#x7528;child.measure()&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x628A;&#x83B7;&#x53D6;&#x5230;&#x7684;childMeasureSpec&#x4F20;&#x5165;&#x3002;&#x8FD9;&#x65F6;&#x4FBF;&#x53C8;&#x4F1A;&#x8C03;&#x7528;onMeasure()&#x65B9;&#x6CD5;&#xFF0C;&#x82E5;&#x6B64;&#x65F6;&#x7684;&#x5B50;View&#x4E3A;ViewGroup&#x7684;&#x5B50;&#x7C7B;&#xFF0C;&#x4FBF;&#x4F1A;&#x8C03;&#x7528;&#x76F8;&#x5E94;&#x5BB9;&#x5668;&#x7C7B;&#x7684;onMeasure()&#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x4ED6;&#x5BB9;&#x5668;View&#x7684;onMeasure()&#x65B9;&#x6CD5;&#x4E0E;FrameLayout&#x7684;onMeasure()&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x76F8;&#x4F3C;&#x3002;</p>
<p>&#x4E0B;&#x9762;&#x4F1A;&#x6211;&#x4EEC;&#x56DE;&#x5230;FrameLayout&#x7684;onMeasure()&#x65B9;&#x6CD5;&#xFF0C;&#x5F53;&#x9012;&#x5F52;&#x5730;&#x6267;&#x884C;&#x5B8C;&#x6240;&#x6709;&#x5B50;View&#x7684;&#x6D4B;&#x91CF;&#x5DE5;&#x4F5C;&#x540E;&#xFF0C;&#x4F1A;&#x8C03;&#x7528;resolveSizeAndState()&#x65B9;&#x6CD5;&#x6765;&#x6839;&#x636E;&#x4E4B;&#x524D;&#x7684;&#x6D4B;&#x91CF;&#x7ED3;&#x679C;&#x786E;&#x5B9A;&#x6700;&#x7EC8;&#x5BF9;FrameLayout&#x7684;&#x6D4B;&#x91CF;&#x7ED3;&#x679C;&#x5E76;&#x5B58;&#x50A8;&#x8D77;&#x6765;&#x3002;View&#x7C7B;&#x7684;resolveSizeAndState()&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public static int resolveSizeAndState(int size, int measureSpec, int childMeasuredState) {
  final int specMode = MeasureSpec.getMode(measureSpec);
  final int specSize = MeasureSpec.getSize(measureSpec);
  final int result;
  switch (specMode) {
    case MeasureSpec.AT_MOST:
      if (specSize &lt; size) {
        // &#x7236;View&#x7ED9;&#x5B9A;&#x7684;&#x6700;&#x5927;&#x5C3A;&#x5BF8;&#x5C0F;&#x4E8E;&#x5B8C;&#x5168;&#x663E;&#x793A;&#x5185;&#x5BB9;&#x6240;&#x9700;&#x5C3A;&#x5BF8;
        // &#x5219;&#x5728;&#x6D4B;&#x91CF;&#x7ED3;&#x679C;&#x4E0A;&#x52A0;&#x4E0A;MEASURED_STATE_TOO_SMALL
        result = specSize | MEASURED_STATE_TOO_SMALL;
      } else {
       result = size;
      }
      break;

    case MeasureSpec.EXACTLY:
      // &#x82E5;specMode&#x4E3A;EXACTLY&#xFF0C;&#x5219;&#x4E0D;&#x8003;&#x8651;size&#xFF0C;result&#x76F4;&#x63A5;&#x8D4B;&#x503C;&#x4E3A;specSize
      result = specSize;
      break;

    case MeasureSpec.UNSPECIFIED:
    default:
      result = size;
  }

  return result | (childMeasuredState &amp; MEASURED_STATE_MASK);

}
</code></pre>
<p>&#x5BF9;&#x4E8E;&#x666E;&#x901A;View&#xFF0C;&#x4F1A;&#x8C03;&#x7528;View&#x7C7B;&#x7684;onMeasure()&#x65B9;&#x6CD5;&#x6765;&#x8FDB;&#x884C;&#x5B9E;&#x9645;&#x7684;&#x6D4B;&#x91CF;&#x5DE5;&#x4F5C;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
    setMeasuredDimension(getDefaultSize(getSuggestedMinimumWidth(), widthMeasureSpec),
        getDefaultSize(getSuggestedMinimumHeight(), heightMeasureSpec));
}
</code></pre>
<p>&#x5BF9;&#x4E8E;&#x666E;&#x901A;View&#xFF08;&#x975E;ViewgGroup&#xFF09;&#x6765;&#x8BF4;&#xFF0C;&#x53EA;&#x9700;&#x5B8C;&#x6210;&#x81EA;&#x8EAB;&#x7684;&#x6D4B;&#x91CF;&#x5DE5;&#x4F5C;&#x5373;&#x53EF;&#x3002;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x4E2D;&#x901A;&#x8FC7;setMeasuredDimension()&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x6D4B;&#x91CF;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x5177;&#x4F53;&#x6765;&#x8BF4;&#x662F;&#x4EE5;getDefaultSize()&#x65B9;&#x6CD5;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x6765;&#x4F5C;&#x4E3A;&#x6D4B;&#x91CF;&#x7ED3;&#x679C;&#x3002;getDefaultSize()&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public static int getDefaultSize(int size, int measureSpec) {
  int result = size;
  int specMode = MeasureSpec.getMode(measureSpec);
  int specSize = MeasureSpec.getSize(measureSpec);
  switch (specMode) {
    case MeasureSpec.UNSPECIFIED:
      result = size;
      break;
    case MeasureSpec.AT_MOST:
    case MeasureSpec.EXACTLY:
      result = specSize;
      break;
  }
  return result;
}
</code></pre>
<p>&#x7531;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;View&#x7684;getDefaultSize()&#x65B9;&#x6CD5;&#x5BF9;&#x4E8E;AT_MOST&#x548C;EXACTLY&#x8FD9;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x90FD;&#x8FD4;&#x56DE;&#x4E86;SpecSize&#x4F5C;&#x4E3A;result&#x3002;&#x6240;&#x4EE5;&#x82E5;&#x6211;&#x4EEC;&#x7684;&#x81EA;&#x5B9A;&#x4E49;View&#x76F4;&#x63A5;&#x7EE7;&#x627F;&#x4E86;View&#x7C7B;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x8981;&#x81EA;&#x5DF1;&#x5BF9;wrap_content (&#x5BF9;&#x5E94;&#x4E86;AT_MOST)&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x8FDB;&#x884C;&#x5904;&#x7406;&#xFF0C;&#x5426;&#x5219;&#x5BF9;&#x81EA;&#x5B9A;&#x4E49;View&#x6307;&#x5B9A;wrap_content&#x5C31;&#x548C;match_parent&#x6548;&#x679C;&#x4E00;&#x6837;&#x4E86;&#x3002;</p>
<h4 id="layout&#x9636;&#x6BB5;"><a class="header-anchor" href="#layout&#x9636;&#x6BB5;"></a>layout&#x9636;&#x6BB5;</h4>
<p>layout&#x9636;&#x6BB5;&#x7684;&#x57FA;&#x672C;&#x601D;&#x60F3;&#x4E5F;&#x662F;&#x7531;&#x6839;View&#x5F00;&#x59CB;&#xFF0C;&#x9012;&#x5F52;&#x5730;&#x5B8C;&#x6210;&#x6574;&#x4E2A;&#x63A7;&#x4EF6;&#x6811;&#x7684;&#x5E03;&#x5C40;&#xFF08;layout&#xFF09;&#x5DE5;&#x4F5C;&#x3002;</p>
<p><strong>&#xFF08;1&#xFF09;View.layout()</strong></p>
<p>&#x6211;&#x4EEC;&#x628A;&#x5BF9;decorView&#x7684;layout()&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x4F5C;&#x4E3A;&#x5E03;&#x5C40;&#x6574;&#x4E2A;&#x63A7;&#x4EF6;&#x6811;&#x7684;&#x8D77;&#x70B9;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x8C03;&#x7528;&#x7684;&#x662F;View&#x7C7B;&#x7684;layout()&#x65B9;&#x6CD5;&#xFF0C;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public void layout(int l, int t, int r, int b) {
    // l&#x4E3A;&#x672C;View&#x5DE6;&#x8FB9;&#x7F18;&#x4E0E;&#x7236;View&#x5DE6;&#x8FB9;&#x7F18;&#x7684;&#x8DDD;&#x79BB;
    // t&#x4E3A;&#x672C;View&#x4E0A;&#x8FB9;&#x7F18;&#x4E0E;&#x7236;View&#x4E0A;&#x8FB9;&#x7F18;&#x7684;&#x8DDD;&#x79BB;
    // r&#x4E3A;&#x672C;View&#x53F3;&#x8FB9;&#x7F18;&#x4E0E;&#x7236;View&#x5DE6;&#x8FB9;&#x7F18;&#x7684;&#x8DDD;&#x79BB;
    // b&#x4E3A;&#x672C;View&#x4E0B;&#x8FB9;&#x7F18;&#x4E0E;&#x7236;View&#x4E0A;&#x8FB9;&#x7F18;&#x7684;&#x8DDD;&#x79BB;
    . . .
    boolean changed = isLayoutModeOptical(mParent) ?            setOpticalFrame(l, t, r, b) : setFrame(l, t, r, b);
    if (changed || (mPrivateFlags &amp; PFLAG_LAYOUT_REQUIRED) == PFLAG_LAYOUT_REQUIRED) {
        onLayout(changed, l, t, r, b);
        . . .

    }
    . . .
}
</code></pre>
<p>&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4F1A;&#x8C03;&#x7528;setFrame()&#x65B9;&#x6CD5;&#x6765;&#x8BBE;&#x7F6E;View&#x7684;mLeft&#x3001;mTop&#x3001;mRight&#x548C;mBottom&#x56DB;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x56DB;&#x4E2A;&#x53C2;&#x6570;&#x63CF;&#x8FF0;&#x4E86;View&#x76F8;&#x5BF9;&#x5176;&#x7236;View&#x7684;&#x4F4D;&#x7F6E;&#xFF08;&#x5206;&#x522B;&#x8D4B;&#x503C;&#x4E3A;l, t, r, b&#xFF09;&#xFF0C;&#x5728;setFrame()&#x65B9;&#x6CD5;&#x4E2D;&#x4F1A;&#x5224;&#x65AD;View&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x5426;&#x53D1;&#x751F;&#x4E86;&#x6539;&#x53D8;&#xFF0C;&#x82E5;&#x53D1;&#x751F;&#x4E86;&#x6539;&#x53D8;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5BF9;&#x5B50;View&#x8FDB;&#x884C;&#x91CD;&#x65B0;&#x5E03;&#x5C40;&#xFF0C;&#x5BF9;&#x5B50;View&#x7684;&#x5C40;&#x90E8;&#x662F;&#x901A;&#x8FC7;onLayout()&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#x4E86;&#x3002;&#x7531;&#x4E8E;&#x666E;&#x901A;View&#xFF08; &#x975E;ViewGroup&#xFF09;&#x4E0D;&#x542B;&#x5B50;View&#xFF0C;&#x6240;&#x4EE5;View&#x7C7B;&#x7684;onLayout()&#x65B9;&#x6CD5;&#x4E3A;&#x7A7A;&#x3002;&#x56E0;&#x6B64;&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x770B;ViewGroup&#x7C7B;&#x7684;onLayout()&#x65B9;&#x6CD5;&#x7684;&#x5B9E;&#x73B0;&#x3002;</p>
<p><strong>&#xFF08;2&#xFF09;ViewGroup.onLayout()</strong></p>
<p>&#x5B9E;&#x9645;&#x4E0A;ViewGroup&#x7C7B;&#x7684;onLayout()&#x65B9;&#x6CD5;&#x662F;abstract&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x4E0D;&#x540C;&#x7684;&#x5E03;&#x5C40;&#x7BA1;&#x7406;&#x5668;&#x6709;&#x7740;&#x4E0D;&#x540C;&#x7684;&#x5E03;&#x5C40;&#x65B9;&#x5F0F;&#x3002;<br>
&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4EE5;decorView&#xFF0C;&#x4E5F;&#x5C31;&#x662F;FrameLayout&#x7684;onLayout()&#x65B9;&#x6CD5;&#x4E3A;&#x4F8B;&#xFF0C;&#x5206;&#x6790;ViewGroup&#x7684;&#x5E03;&#x5C40;&#x8FC7;&#x7A0B;&#xFF1A;</p>
<pre><code>@Override
protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
  layoutChildren(left, top, right, bottom, false /* no force left gravity */);
}

void layoutChildren(int left, int top, int right, int bottom, boolean forceLeftGravity) {
  final int count = getChildCount();
  final int parentLeft = getPaddingLeftWithForeground();
  final int parentRight = right - left - getPaddingRightWithForeground();
  final int parentTop = getPaddingTopWithForeground();
  final int parentBottom = bottom - top - getPaddingBottomWithForeground();

  for (int i = 0; i &lt; count; i++) {
    final View child = getChildAt(i);
    if (child.getVisibility() != GONE) {
      final LayoutParams lp = (LayoutParams) child.getLayoutParams();
      final int width = child.getMeasuredWidth();
      final int height = child.getMeasuredHeight();
      int childLeft;
      int childTop;
      int gravity = lp.gravity;

      if (gravity == -1) {
        gravity = DEFAULT_CHILD_GRAVITY;
      }

      final int layoutDirection = getLayoutDirection();
      final int absoluteGravity = Gravity.getAbsoluteGravity(gravity, layoutDirection);
      final int verticalGravity = gravity &amp; Gravity.VERTICAL_GRAVITY_MASK;

      switch (absoluteGravity &amp; Gravity.HORIZONTAL_GRAVITY_MASK) {
        case Gravity.CENTER_HORIZONTAL:
          childLeft = parentLeft + (parentRight - parentLeft - width) / 2 +
lp.leftMargin - lp.rightMargin;
          break;

        case Gravity.RIGHT:
          if (!forceLeftGravity) {
            childLeft = parentRight - width - lp.rightMargin;
            break;
          }

        case Gravity.LEFT:
        default:
          childLeft = parentLeft + lp.leftMargin;

      }

      switch (verticalGravity) {
        case Gravity.TOP:
          childTop = parentTop + lp.topMargin;
          break;

        case Gravity.CENTER_VERTICAL:
          childTop = parentTop + (parentBottom - parentTop - height) / 2 +
lp.topMargin - lp.bottomMargin;
          break;

        case Gravity.BOTTOM:
          childTop = parentBottom - height - lp.bottomMargin;
          break;

        default:
          childTop = parentTop + lp.topMargin;
      }
      child.layout(childLeft, childTop, childLeft + width, childTop + height);
    }
  }
}
</code></pre>
<p>&#x5728;&#x4E0A;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;parentLeft&#x8868;&#x793A;&#x5F53;&#x524D;View&#x4E3A;&#x5176;&#x5B50;View&#x663E;&#x793A;&#x533A;&#x57DF;&#x6307;&#x5B9A;&#x7684;&#x4E00;&#x4E2A;&#x5DE6;&#x8FB9;&#x754C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5B50;View&#x663E;&#x793A;&#x533A;&#x57DF;&#x7684;&#x5DE6;&#x8FB9;&#x7F18;&#x5230;&#x7236;View&#x7684;&#x5DE6;&#x8FB9;&#x7F18;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;parentRight&#x3001;parentTop&#x3001;parentBottom&#x7684;&#x542B;&#x4E49;&#x540C;&#x7406;&#x3002;&#x786E;&#x5B9A;&#x4E86;&#x5B50;View&#x7684;&#x663E;&#x793A;&#x533A;&#x57DF;&#x540E;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#xFF0C;&#x7528;&#x4E00;&#x4E2A;for&#x5FAA;&#x73AF;&#x6765;&#x5B8C;&#x6210;&#x5B50;View&#x7684;&#x5E03;&#x5C40;&#x3002;</p>
<p>&#x5728;&#x786E;&#x4FDD;&#x5B50;View&#x7684;&#x53EF;&#x89C1;&#x6027;&#x4E0D;&#x4E3A;GONE&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x4F1A;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x5E03;&#x5C40;&#x3002;&#x9996;&#x5148;&#x4F1A;&#x83B7;&#x53D6;&#x5B50;View&#x7684;LayoutParams&#x3001;layoutDirection&#x7B49;&#x4E00;&#x7CFB;&#x5217;&#x53C2;&#x6570;&#x3002;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684;childLeft&#x4EE3;&#x8868;&#x4E86;&#x6700;&#x7EC8;&#x5B50;View&#x7684;&#x5DE6;&#x8FB9;&#x7F18;&#x8DDD;&#x7236;View&#x5DE6;&#x8FB9;&#x7F18;&#x7684;&#x8DDD;&#x79BB;&#xFF0C;childTop&#x4EE3;&#x8868;&#x4E86;&#x5B50;View&#x7684;&#x4E0A;&#x8FB9;&#x7F18;&#x8DDD;&#x7236;View&#x7684;&#x4E0A;&#x8FB9;&#x7F18;&#x7684;&#x8DDD;&#x79BB;&#x3002;&#x4F1A;&#x6839;&#x636E;&#x5B50;View&#x7684;layout_gravity&#x7684;&#x53D6;&#x503C;&#x5BF9;childLeft&#x548C;childTop&#x505A;&#x51FA;&#x4E0D;&#x540C;&#x7684;&#x8C03;&#x6574;&#x3002;&#x6700;&#x540E;&#x4F1A;&#x8C03;&#x7528;child.layout()&#x65B9;&#x6CD5;&#x5BF9;&#x5B50;View&#x7684;&#x4F4D;&#x7F6E;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x8BBE;&#x7F6E;&#xFF0C;&#x8FD9;&#x65F6;&#x4FBF;&#x8F6C;&#x5230;&#x4E86;View.layout()&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x82E5;&#x5B50;View&#x662F;&#x5BB9;&#x5668;View&#xFF0C;&#x5219;&#x4F1A;&#x9012;&#x5F52;&#x5730;&#x5BF9;&#x5176;&#x5B50;View&#x8FDB;&#x884C;&#x5E03;&#x5C40;&#x3002;</p>
<p>&#x5230;&#x8FD9;&#x91CC;&#xFF0C;layout&#x9636;&#x6BB5;&#x7684;&#x5927;&#x81F4;&#x6D41;&#x7A0B;&#x6211;&#x4EEC;&#x5C31;&#x5206;&#x6790;&#x5B8C;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x9636;&#x6BB5;&#x4E3B;&#x8981;&#x5C31;&#x662F;&#x6839;&#x636E;&#x4E0A;&#x4E00;&#x9636;&#x6BB5;&#x5F97;&#x5230;&#x7684;View&#x7684;&#x6D4B;&#x91CF;&#x5BBD;&#x9AD8;&#x6765;&#x786E;&#x5B9A;View&#x7684;&#x6700;&#x7EC8;&#x663E;&#x793A;&#x4F4D;&#x7F6E;&#x3002;&#x663E;&#x7136;&#xFF0C;&#x7ECF;&#x8FC7;&#x4E86;measure&#x9636;&#x6BB5;&#x548C;layout&#x9636;&#x6BB5;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x786E;&#x5B9A;&#x597D;&#x4E86;View&#x7684;&#x5927;&#x5C0F;&#x548C;&#x4F4D;&#x7F6E;&#xFF0C;&#x90A3;&#x4E48;&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x53EF;&#x4EE5;&#x5F00;&#x59CB;&#x7ED8;&#x5236;View&#x4E86;&#x3002;</p>
<h4 id="draw&#x9636;&#x6BB5;"><a class="header-anchor" href="#draw&#x9636;&#x6BB5;"></a>draw&#x9636;&#x6BB5;</h4>
<p>&#x5BF9;&#x4E8E;&#x672C;&#x9636;&#x6BB5;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x6211;&#x4EEC;&#x4EE5;decorView.draw()&#x4F5C;&#x4E3A;&#x5206;&#x6790;&#x7684;&#x8D77;&#x70B9;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;View.draw()&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>public void draw(Canvas canvas) {
  . . . 
  // &#x7ED8;&#x5236;&#x80CC;&#x666F;&#xFF0C;&#x53EA;&#x6709;dirtyOpaque&#x4E3A;false&#x65F6;&#x624D;&#x8FDB;&#x884C;&#x7ED8;&#x5236;&#xFF0C;&#x4E0B;&#x540C;
  int saveCount;
  if (!dirtyOpaque) {
    drawBackground(canvas);
  }

  . . . 

  // &#x7ED8;&#x5236;&#x81EA;&#x8EAB;&#x5185;&#x5BB9;
  if (!dirtyOpaque) onDraw(canvas);

  // &#x7ED8;&#x5236;&#x5B50;View
  dispatchDraw(canvas);

   . . .
  // &#x7ED8;&#x5236;&#x6EDA;&#x52A8;&#x6761;&#x7B49;
  onDrawForeground(canvas);

}
</code></pre>
<p>&#x7B80;&#x5355;&#x8D77;&#x89C1;&#xFF0C;&#x5728;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x6211;&#x4EEC;&#x7701;&#x7565;&#x4E86;&#x5B9E;&#x73B0;&#x6ED1;&#x52A8;&#x65F6;&#x6E10;&#x53D8;&#x8FB9;&#x6846;&#x6548;&#x679C;&#x76F8;&#x5173;&#x7684;&#x903B;&#x8F91;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;View&#x7C7B;&#x7684;onDraw()&#x65B9;&#x6CD5;&#x4E3A;&#x7A7A;&#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x4E2A;View&#x7ED8;&#x5236;&#x81EA;&#x8EAB;&#x7684;&#x65B9;&#x5F0F;&#x90FD;&#x4E0D;&#x5C3D;&#x76F8;&#x540C;&#xFF0C;&#x5BF9;&#x4E8E;decorView&#x6765;&#x8BF4;&#xFF0C;&#x7531;&#x4E8E;&#x5B83;&#x662F;&#x5BB9;&#x5668;View&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x672C;&#x8EAB;&#x5E76;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x8981;&#x7ED8;&#x5236;&#x7684;&#x3002;dispatchDraw()&#x65B9;&#x6CD5;&#x7528;&#x4E8E;&#x7ED8;&#x5236;&#x5B50;View&#xFF0C;&#x663E;&#x7136;&#x666E;&#x901A;View&#xFF08;&#x975E;ViewGroup&#xFF09;&#x5E76;&#x4E0D;&#x80FD;&#x5305;&#x542B;&#x5B50;View&#xFF0C;&#x6240;&#x4EE5;View&#x7C7B;&#x4E2D;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x5B9E;&#x73B0;&#x4E3A;&#x7A7A;&#x3002;</p>
<p>ViewGroup&#x7C7B;&#x7684;dispatchDraw()&#x65B9;&#x6CD5;&#x4E2D;&#x4F1A;&#x4F9D;&#x6B21;&#x8C03;&#x7528;drawChild()&#x65B9;&#x6CD5;&#x6765;&#x7ED8;&#x5236;&#x5B50;View&#xFF0C;drawChild()&#x65B9;&#x6CD5;&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p>
<pre><code>protected boolean drawChild(Canvas canvas, View child, long drawingTime) {
  return child.draw(canvas, this, drawingTime);
}
</code></pre>
<p>&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x4E86;View.draw(Canvas, ViewGroup&#xFF0C;long)&#x65B9;&#x6CD5;&#x6765;&#x5BF9;&#x5B50;View&#x8FDB;&#x884C;&#x7ED8;&#x5236;&#x3002;&#x5728;draw(Canvas, ViewGroup, long)&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x9996;&#x5148;&#x5BF9;canvas&#x8FDB;&#x884C;&#x4E86;&#x4E00;&#x7CFB;&#x5217;&#x53D8;&#x6362;&#xFF0C;&#x4EE5;&#x53D8;&#x6362;&#x5230;&#x5C06;&#x8981;&#x88AB;&#x7ED8;&#x5236;&#x7684;View&#x7684;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x3002;&#x5B8C;&#x6210;&#x5BF9;canvas&#x7684;&#x53D8;&#x6362;&#x540E;&#xFF0C;&#x4FBF;&#x4F1A;&#x8C03;&#x7528;View.draw(Canvas)&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x5B9E;&#x9645;&#x7684;&#x7ED8;&#x5236;&#x5DE5;&#x4F5C;&#xFF0C;&#x6B64;&#x65F6;&#x4F20;&#x5165;&#x7684;canvas&#x4E3A;&#x7ECF;&#x8FC7;&#x53D8;&#x6362;&#x7684;&#xFF0C;&#x5728;&#x5C06;&#x88AB;&#x7ED8;&#x5236;View&#x7684;&#x5750;&#x6807;&#x7CFB;&#x4E0B;&#x7684;canvas&#x3002;</p>
<p>&#x8FDB;&#x5165;&#x5230;View.draw(Canvas)&#x65B9;&#x6CD5;&#x540E;&#xFF0C;&#x4F1A;&#x5411;&#x4E4B;&#x524D;&#x4ECB;&#x7ECD;&#x7684;&#x4E00;&#x6837;&#xFF0C;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x51E0;&#x6B65;&#xFF1A;</p>
<ul>
<li>&#x7ED8;&#x5236;&#x80CC;&#x666F;;</li>
<li>&#x901A;&#x8FC7;onDraw()&#x7ED8;&#x5236;&#x81EA;&#x8EAB;&#x5185;&#x5BB9;;</li>
<li>&#x901A;&#x8FC7;dispatchDraw()&#x7ED8;&#x5236;&#x5B50;View;</li>
<li>&#x7ED8;&#x5236;&#x6EDA;&#x52A8;&#x6761;</li>
</ul>
<p>&#x81F3;&#x6B64;&#xFF0C;&#x6574;&#x4E2A;View&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;&#x6211;&#x4EEC;&#x5C31;&#x5206;&#x6790;&#x5B8C;&#x4E86;&#x3002;&#x82E5;&#x6587;&#x4E2D;&#x6709;&#x53D9;&#x8FF0;&#x4E0D;&#x6E05;&#x6670;&#x6216;&#x662F;&#x4E0D;&#x51C6;&#x786E;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5E0C;&#x671B;&#x5927;&#x5BB6;&#x80FD;&#x591F;&#x6307;&#x51FA;&#xFF0C;&#x8C22;&#x8C22;&#x5927;&#x5BB6;&#xFF1A;&#xFF09;</p>
<h2 id="&#x53C2;&#x8003;&#x8D44;&#x6599;"><a class="header-anchor" href="#&#x53C2;&#x8003;&#x8D44;&#x6599;"></a>&#x53C2;&#x8003;&#x8D44;&#x6599;</h2>
<ul>
<li>&#x300A;&#x6DF1;&#x5165;&#x7406;&#x89E3;Android&#xFF08;&#x5377;&#x4E09;&#xFF09;&#x300B;</li>
<li>&#x300A;Android&#x5F00;&#x53D1;&#x827A;&#x672F;&#x63A2;&#x7D22;&#x300B;</li>
<li><a href="http://www.codekk.com/blogs/detail/54cfab086c4761e5001b253f" target="_blank" rel="external">&#x516C;&#x5171;&#x6280;&#x672F;&#x70B9;&#x4E4B;View&#x7684;&#x7ED8;&#x5236;&#x6D41;&#x7A0B;</a></li>
</ul>
<blockquote>
<p>&#x4F5C;&#x8005;&#xFF1A;<a href="http://www.jianshu.com/u/640ce09fd6ec" target="_blank" rel="external">absfree</a><br>
&#x539F;&#x6587;&#xFF1A;<a href="http://www.jianshu.com/p/060b5f68da79?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="external">http://www.jianshu.com/p/060b5f68da79?hmsr=toutiao.io&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io</a></p>
</blockquote>]]></content>
    
    <summary type="html">
    
      本篇文章会从源码（基于Android 6.0）角度分析Android中View的绘制流程，侧重于对整体流程的分析，对一些难以理解的点加以重点阐述，目的是把View绘制的整个流程把握好，而对于特定实现细节则可以日后再对相应源码进行研读。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Glide的基本使用</title>
    <link href="http://ngudream.com/2016/11/06/android-glide-use/"/>
    <id>http://ngudream.com/2016/11/06/android-glide-use/</id>
    <published>2016-11-06T13:31:45.000Z</published>
    <updated>2017-01-15T07:58:44.330Z</updated>
    
    <content type="html"><![CDATA[<div><a href="https://github.com/bumptech/glide" target="_blank" rel="external"><img class="pic lazy" data-original="/2016/11/06/android-glide-use/glide_logo.png" style="float:left; width:100px; height:56px; margin-right:16px" alt="Picasso"></a>
<span>Glide&#x662F;google&#x63A8;&#x8350;&#x7684;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x5E93;&#xFF08;&#x975E;google&#x5B98;&#x65B9;&#x51FA;&#x54C1;&#xFF09;&#xFF0C;google&#x9996;&#x6B21;&#x516C;&#x5F00;&#x63D0;&#x5230;&#x5B83;&#x662F;&#x5728;&#x6CF0;&#x56FD;&#x4E3E;&#x884C;&#x7684;&#x8C37;&#x6B4C;&#x5F00;&#x53D1;&#x8005;&#x8BBA;&#x575B;&#x4E0A;&#xFF0C;&#x5B83;&#x7684;&#x4F5C;&#x8005;&#x662F;bumptech&#x3002;google&#x7684;&#x597D;&#x4E9B;&#x5F00;&#x6E90;&#x9879;&#x76EE;&#x4E5F;&#x662F;&#x7528;&#x7684;&#x8FD9;&#x4E2A;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x5E93;&#xFF0C;&#x50CF;2014&#x5E74;Google I/O&#x5927;&#x4F1A;&#x4E0A;&#x53D1;&#x5E03;&#x7684;&#x5B98;&#x65B9;App&#x3002;github&#x5730;&#x5740;&#x662F;&#xFF1A;<a href="https://github.com/bumptech/glide" target="_blank" rel="external">https://github.com/bumptech/glide</a></span></div>
<a id="more"></a>
<h2 id="&#x57FA;&#x672C;&#x914D;&#x7F6E;"><a class="header-anchor" href="#&#x57FA;&#x672C;&#x914D;&#x7F6E;"></a>&#x57FA;&#x672C;&#x914D;&#x7F6E;</h2>
<p>&#x5982;&#x679C;&#x5927;&#x5BB6;&#x4F7F;&#x7528;AndroidStudio&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;compile:</p>
<pre><code>repositories {
  mavenCentral() // jcenter() works as well because it pulls from Maven Central
}

dependencies {
  compile &apos;com.github.bumptech.glide:glide:3.7.0&apos;
  compile &apos;com.android.support:support-v4:24.1.0&apos;
}
</code></pre>
<p><strong>&#x56E0;&#x4E3A;Glide&#x9700;&#x8981;&#x4F9D;&#x8D56;Support Library v4&#xFF0C;&#x6240;&#x4EE5;&#x522B;&#x5FD8;&#x4E86;&#x5F15;&#x5165;&#x3002;</strong> &#x8FD9;&#x4E2A;library&#x7684;&#x7248;&#x672C;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x60C5;&#x51B5;&#x6765;&#x5B9A;&#xFF0C;&#x4E0D;&#x662F;&#x975E;&#x5F97;24.1.0&#x3002;</p>
<p>&#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;maven&#x7684;&#x65B9;&#x5F0F;&#xFF1A;</p>
<pre><code>&lt;dependency&gt;
  &lt;groupId&gt;com.github.bumptech.glide&lt;/groupId&gt;
  &lt;artifactId&gt;glide&lt;/artifactId&gt;
  &lt;version&gt;3.7.0&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
  &lt;groupId&gt;com.google.android&lt;/groupId&gt;
  &lt;artifactId&gt;support-v4&lt;/artifactId&gt;
  &lt;version&gt;r7&lt;/version&gt;
&lt;/dependency&gt;
</code></pre>
<p>&#x5982;&#x679C;&#x5BF9;&#x9879;&#x76EE;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x6DF7;&#x6DC6;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x6DFB;&#x52A0;ProGuard&#x89C4;&#x5219;&#xFF1A;</p>
<pre><code>-keep public class * implements com.bumptech.glide.module.GlideModule
-keep public enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$** {
  **[] $VALUES;
  public *;
}
-keepresourcexmlelements manifest/application/meta-data@value=GlideModule
</code></pre>
<h2 id="&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"><a class="header-anchor" href="#&#x4F7F;&#x7528;&#x65B9;&#x6CD5;"></a>&#x4F7F;&#x7528;&#x65B9;&#x6CD5;</h2>
<h3 id="glide&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;"><a class="header-anchor" href="#glide&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;"></a>Glide&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;</h3>
<p>Glide&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;HttpUrlConnection&#x8FDB;&#x884C;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#xFF0C;&#x4E3A;&#x4E86;&#x8BA9;APP&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#x7684;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x5F62;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x8BA9;Glide&#x4F7F;&#x7528;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x7684;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x5F62;&#x5F0F;&#x8BF7;&#x6C42;&#x7F51;&#x7EDC;&#x8D44;&#x6E90;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x9009;OkHttp</p>
<p>&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4E00;&#x53E5;&#x8BDD;&#xFF08;&#x4F7F;&#x7528;&#x94FE;&#x5F0F;&#x8C03;&#x7528;&#xFF09;&#xFF0C;&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x5F02;&#x6B65;&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#xFF1A;</p>
<pre><code>Glide.with(imageView.getContext()).load(url).into(imageView);
</code></pre>
<p>&#x5B83;&#x7684;load&#x65B9;&#x6CD5;&#x63D0;&#x4F9B;&#x4E86;&#x56DB;&#x79CD;&#x5F62;&#x5F0F;&#xFF0C;&#x6BCF;&#x4E2A;&#x90FD;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;RequestCreator&#xFF1A;</p>
<ul>
<li>load(Uri uri)</li>
<li>load(String path)</li>
<li>load(File file)</li>
<li>load(int resourceId)</li>
<li>load(byte[] model)</li>
<li>load(T model)</li>
</ul>
<p>&#x4ECE;&#x53C2;&#x6570;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x52A0;&#x8F7D;&#x672C;&#x5730;&#x7684;&#xFF0C;&#x6709;&#x7684;&#x662F;&#x4ECE;&#x7F51;&#x7EDC;&#x4E0A;&#x53D6;&#x7684;&#x3002;&#x5176;&#x4E2D;load&#x7684;&#x8D44;&#x6E90;&#x53EF;&#x4EE5;&#x662F;&#x672C;&#x5730;&#x89C6;&#x9891;&#x3002;</p>
<h3 id="glide&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;"><a class="header-anchor" href="#glide&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;"></a>Glide&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;</h3>
<p>&#x52A0;&#x8F7D;&#x7F51;&#x7EDC;&#x56FE;&#x7247;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5728;load&#x7684;&#x53C2;&#x6570;&#x91CC;&#x4F20;&#x5165;&#x4E00;&#x4E2A;url&#x5C31;&#x884C;&#xFF1A;</p>
<pre><code>Glide.with(imageView.getContext())
                 .load(url)
                 .error(R.drawable.photo_holder_72dp)
                 .into(imageView);
</code></pre>
<p>error&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x672C;&#x5730;&#x56FE;&#x7247;&#xFF0C;&#x5F53;&#x7F51;&#x7EDC;&#x52A0;&#x8F7D;&#x51FA;&#x9519;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x663E;&#x793A;&#x8FD9;&#x5F20;&#x672C;&#x5730;&#x7684;&#x56FE;&#x7247;&#x3002;</p>
<h3 id="&#x6E05;&#x9664;&#x5185;&#x5B58;&#x7F13;&#x5B58;"><a class="header-anchor" href="#&#x6E05;&#x9664;&#x5185;&#x5B58;&#x7F13;&#x5B58;"></a>&#x6E05;&#x9664;&#x5185;&#x5B58;&#x7F13;&#x5B58;</h3>
<pre><code>// &#x5FC5;&#x987B;&#x5728;UI&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;
    Glide.get(context).clearMemory();
</code></pre>
<h3 id="&#x6E05;&#x9664;&#x78C1;&#x76D8;&#x7F13;&#x5B58;"><a class="header-anchor" href="#&#x6E05;&#x9664;&#x78C1;&#x76D8;&#x7F13;&#x5B58;"></a>&#x6E05;&#x9664;&#x78C1;&#x76D8;&#x7F13;&#x5B58;</h3>
<pre><code> // &#x5FC5;&#x987B;&#x5728;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#x4E2D;&#x8C03;&#x7528;&#xFF0C;&#x5EFA;&#x8BAE;&#x540C;&#x65F6;clearMemory()
   Glide.get(applicationContext).clearDiskCache();
</code></pre>
<h3 id="&#x786C;&#x76D8;&#x7F13;&#x5B58;"><a class="header-anchor" href="#&#x786C;&#x76D8;&#x7F13;&#x5B58;"></a>&#x786C;&#x76D8;&#x7F13;&#x5B58;</h3>
<ul>
<li>DiskCacheStrategy.NONE &#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x7F13;&#x5B58;&#xFF0C;&#x5C31;&#x50CF;&#x521A;&#x8BA8;&#x8BBA;&#x7684;&#x90A3;&#x6837;</li>
<li>DiskCacheStrategy.SOURCE &#x4EC5;&#x4EC5;&#x53EA;&#x7F13;&#x5B58;&#x539F;&#x6765;&#x7684;&#x5168;&#x5206;&#x8FA8;&#x7387;&#x7684;&#x56FE;&#x50CF;</li>
<li>DiskCacheStrategy.RESULT &#x4EC5;&#x4EC5;&#x7F13;&#x5B58;&#x6700;&#x7EC8;&#x7684;&#x56FE;&#x50CF;&#xFF0C;&#x5373;&#x964D;&#x4F4E;&#x5206;&#x8FA8;&#x7387;&#x540E;&#x7684;&#xFF08;&#x6216;&#x8005;&#x662F;&#x8F6C;&#x6362;&#x540E;&#x7684;&#xFF09;</li>
<li>DiskCacheStrategy.ALL &#x7F13;&#x5B58;&#x6240;&#x6709;&#x7248;&#x672C;&#x7684;&#x56FE;&#x50CF;&#xFF08;&#x9ED8;&#x8BA4;&#x884C;&#x4E3A;&#xFF09;</li>
</ul>
<h3 id="&#x4F18;&#x5148;&#x7EA7;"><a class="header-anchor" href="#&#x4F18;&#x5148;&#x7EA7;"></a>&#x4F18;&#x5148;&#x7EA7;</h3>
<ul>
<li>Priority.LOW</li>
<li>Priority.NORMAL</li>
<li>Priority.HIGH</li>
<li>Priority.IMMEDIATE</li>
</ul>
<pre><code>Glide.with(this)
                .load(url)
                .priority(Priority.HIGH)
                .into(mIVTest);
</code></pre>
<p>&#x5176;&#x5B83;&#x7528;&#x6CD5;&#x4E24;&#x8005;&#x5927;&#x4F53;&#x76F8;&#x540C;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x7B14;&#x8005;&#x7684;&#x53E6;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#xFF1A;<br>
<a href="http://ngudream.com/2016/10/17/android-picasso-use/">Picasso&#x7684;&#x57FA;&#x672C;&#x4F7F;&#x7528;</a></p>
<h2 id="&#x4E0E;picasso&#x533A;&#x522B;"><a class="header-anchor" href="#&#x4E0E;picasso&#x533A;&#x522B;"></a>&#x4E0E;Picasso&#x533A;&#x522B;</h2>
<h3 id="&#x65B9;&#x6CD5;&#x533A;&#x522B;"><a class="header-anchor" href="#&#x65B9;&#x6CD5;&#x533A;&#x522B;"></a>&#x65B9;&#x6CD5;&#x533A;&#x522B;</h3>
<p>&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x4E3E;&#x4F8B;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x51FA;Glide&#x7684;&#x7528;&#x6CD5;&#x548C;Picasso&#x7684;&#x57FA;&#x672C;&#x4E00;&#x81F4;&#xFF0C;&#x50CF;placeholder&#x3001;centerCrop&#x7B49;&#x7B49;&#x90FD;&#x6709;&#x3002;&#x4F46;&#x4E5F;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x533A;&#x522B;&#x7684;&#xFF1A;</p>
<ol>
<li>with()&#x65B9;&#x6CD5;<br>
with&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570;&#xFF0C;Glide&#x53EF;&#x4EE5;&#x662F;&#x591A;&#x79CD;&#xFF1A;
<ul>
<li>public static RequestManager with(Context context)</li>
<li>public static RequestManager with(Activity activity)</li>
<li>public static RequestManager with(FragmentActivity activity)</li>
<li>public static RequestManager with(android.app.Fragment fragment)</li>
<li>public static RequestManager with(Fragment fragment)</li>
</ul>
</li>
</ol>
<p>&#x5C06;Activity/Fragment&#x4F5C;&#x4E3A;with()&#x53C2;&#x6570;&#x7684;&#x597D;&#x5904;&#x662F;&#xFF1A;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x4F1A;&#x548C;Activity/Fragment&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#xFF0C;&#x6BD4;&#x5982;Paused&#x72B6;&#x6001;&#x5728;&#x6682;&#x505C;&#x52A0;&#x8F7D;&#xFF0C;&#x5728;Resumed&#x7684;&#x65F6;&#x5019;&#x53C8;&#x81EA;&#x52A8;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#x3002;</p>
<p>&#x800C;Picasso&#x53EA;&#x63A5;&#x53D7;Context&#xFF1A;<br>
	* public static Picasso with(Context context)</p>
<ol start="2">
<li>
<p>crossFade()&#x65B9;&#x6CD5;<br>
Glide&#x5E26;&#x4E86;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x52A8;&#x753B;&#xFF0C;&#x5373;&#x6DE1;&#x5165;&#x6DE1;&#x51FA;&#x6548;&#x679C;&#xFF0C;&#x9ED8;&#x8BA4;300ms&#xFF0C;&#x53EF;&#x4EE5;&#x4F20;&#x53C2;&#xFF1B;&#x800C;Picasso&#x662F;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x3002;</p>
</li>
<li>
<p>animate()&#x65B9;&#x6CD5;<br>
Glide&#x652F;&#x6301;&#x81EA;&#x5B9A;&#x4E49;&#x52A8;&#x753B;&#xFF0C;&#x800C;Picasso&#x4E0D;&#x63D0;&#x4F9B;&#x6B64;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x53EA;&#x6709;&#x4E00;&#x79CD;&#x52A8;&#x753B;&#xFF08;fading in&#xFF09;&#xFF0C;&#x8981;&#x8BBE;&#x7F6E;&#x52A8;&#x753B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7C7B;&#x4F3C;PicassoDrawable&#x90A3;&#x6837;&#x8BBE;&#x7F6E;&#x3002;</p>
</li>
<li>
<p>asGif()&#x3001;asBitmap()&#x65B9;&#x6CD5;<br>
Glide&#x53EF;&#x4EE5;&#x52A0;&#x8F7D;gif&#x56FE;&#x7247;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;asGif&#x6765;&#x5224;&#x65AD;&#x662F;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;gif&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x662F;&#xFF0C;&#x5219;&#x8D70;error()&#x7684;&#x903B;&#x8F91;&#xFF1B;&#x5982;&#x679C;&#x4F60;&#x52A0;&#x8F7D;&#x7684;&#x662F;&#x4E00;&#x4E2A;gif&#x56FE;&#x7247;&#x5730;&#x5740;&#xFF0C;&#x4F46;&#x53C8;&#x53EA;&#x60F3;&#x663E;&#x793A;&#x5B83;&#x7684;&#x7B2C;&#x4E00;&#x5E27;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;asBitmap()&#x65B9;&#x6CD5;&#x3002;</p>
</li>
</ol>
<p>asGif():</p>
<pre><code>Glide.with(this)
                .load(url)
                .asGif()
                .into(mIVTest);
</code></pre>
<p>asBitmap():</p>
<pre><code>Glide.with(this)
                .load(url)
                .asBitmap()
                .into(mIVTest);
</code></pre>
<ol start="5">
<li>
<p>skipMemoryCache()&#x65B9;&#x6CD5;<br>
Glide&#x8FD8;&#x63D0;&#x4F9B;skipMemoryCache()&#x65B9;&#x6CD5;&#x8DF3;&#x8FC7;&#x5185;&#x5B58;&#x7F13;&#x5B58;&#xFF0C;&#x4F46;&#x5728;Picasso&#x4E2D;&#x6B64;&#x65B9;&#x6CD5;&#x5DF2;&#x7ECF;&#x88AB;deprecated&#xFF0C;&#x5EFA;&#x8BAE;&#x6539;&#x6210;&#x4F7F;&#x7528;MemoryPolicy&#x3002;</p>
</li>
<li>
<p>&#x663E;&#x793A;&#x672C;&#x5730;&#x89C6;&#x9891;<br>
Glide&#x652F;&#x6301;&#x52A0;&#x8F7D;&#x672C;&#x5730;&#x89C6;&#x9891;&#xFF0C;&#x800C;Picasso&#x4E0D;&#x652F;&#x6301;&#x3002;</p>
</li>
</ol>
<pre><code>String filePath = &quot;/storage/emulated/0/Pictures/example_video.mp4&quot;;
Glide.with(context).load(Uri.fromFile(new File(filePath)))
.into(mIVVideo);
</code></pre>
<ol start="7">
<li>thumbnail()&#x65B9;&#x6CD5;<br>
Glide&#x63D0;&#x4F9B;thumbnail()&#x65B9;&#x6CD5;&#x7528;&#x4E8E;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x5F53;&#x524D;&#x6240;&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#x7684;thumbnail&#x3002;</li>
</ol>
<h3 id="&#x529F;&#x80FD;&#x533A;&#x522B;"><a class="header-anchor" href="#&#x529F;&#x80FD;&#x533A;&#x522B;"></a>&#x529F;&#x80FD;&#x533A;&#x522B;</h3>
<ol>
<li>
<p>&#x56FE;&#x7247;&#x8D28;&#x91CF;</p>
<ul>
<li>Glide&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;RGB_565&#x4F5C;&#x4E3A;bitmap&#x7684;&#x683C;&#x5F0F;</li>
<li>Picasso&#x5219;&#x4F7F;&#x7528;ARGB_8888&#x683C;&#x5F0F;&#xFF0C;&#x6240;&#x4EE5;&#x8D28;&#x91CF;&#x6BD4;Glide&#x597D;</li>
</ul>
</li>
<li>
<p>Glide&#x652F;&#x6301;gif&#x52A8;&#x753B;&#xFF0C;&#x800C;Picasso&#x4E0D;&#x652F;&#x6301;</p>
</li>
<li>
<p>glide load&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x4F20;&#x5165;&#x7A7A;&#x503C;&#xFF0C;&#x800C;picasso&#x4F20;&#x7A7A;&#x53C2;&#x6570;&#x7684;&#x8BDD;&#x4F1A;&#x76F4;&#x63A5;&#x62A5;&#x4EE5;&#x4E0B;&#x7684;&#x9519;&#x8BEF;&#xFF1A;</p>
</li>
</ol>
<pre><code>Caused by: java.lang.IllegalArgumentException: Path must not be empty.
at com.squareup.picasso.Picasso.load(Picasso.java:297)
at com.meizu.rxjava.example.MainActivity.onCreate(MainActivity.java:21)
at android.app.Activity.performCreate(Activity.java:6378)
at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1124)
at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2656)
at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2774)&#xA0;
at android.app.ActivityThread.-wrap11(ActivityThread.java)&#xA0;
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1588)&#xA0;
at android.os.Handler.dispatchMessage(Handler.java:111)&#xA0;
at android.os.Looper.loop(Looper.java:207)&#xA0;
at android.app.ActivityThread.main(ActivityThread.java:5955)&#xA0;
at java.lang.reflect.Method.invoke(Native Method)
</code></pre>
<ol start="4">
<li>Glide&#x8FD8;&#x53EF;&#x4EE5;&#x5C06;&#x4EFB;&#x610F;&#x672C;&#x5730;&#x89C6;&#x9891;&#x89E3;&#x7801;&#x6210;&#x4E00;&#x5F20;&#x9759;&#x6001;&#x56FE;&#x7247;</li>
</ol>
<h3 id="&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x533A;&#x522B;"><a class="header-anchor" href="#&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x533A;&#x522B;"></a>&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x533A;&#x522B;</h3>
<ol>
<li>Picasso&#x7F13;&#x5B58;&#x7684;&#x662F;&#x5168;&#x5C3A;&#x5BF8;&#x7684;&#xFF0C;&#x800C;Glide&#x7F13;&#x5B58;&#x7684;&#x662F;&#x8DDF;ImageView&#x5C3A;&#x5BF8;&#x76F8;&#x540C;&#x7684;&#x3002;Picasso&#x53EA;&#x7F13;&#x5B58;&#x4E00;&#x4E2A;&#x5168;&#x5C3A;&#x5BF8;&#xFF0C;&#x800C;Glide&#x4F1A;&#x4E3A;&#x6BCF;&#x79CD;&#x5927;&#x5C0F;&#x7684;imageview&#x7F13;&#x5B58;&#x4E00;&#x6B21;&#x3002;</li>
</ol>
<h2 id="&#x603B;&#x7ED3;"><a class="header-anchor" href="#&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h2>
<ul>
<li>Glide&#x548C;Picasso&#x5728;&#x7528;&#x6CD5;&#x4E0A;&#x6709;&#x9AD8;&#x5EA6;&#x7684;&#x76F8;&#x4F3C;&#x6027;</li>
<li>Glide&#x8FDC;&#x6BD4;Picasso&#x5FEB;&#xFF0C;&#x4F46;&#x662F;&#x9700;&#x8981;&#x66F4;&#x5927;&#x7684;&#x7A7A;&#x95F4;&#x6765;&#x7F13;&#x5B58;&#x3002;</li>
<li>Glide&#x52A0;&#x8F7D;gif&#x56FE;&#x7247;&#x7684;&#x529F;&#x80FD;&#x548C;&#x6027;&#x80FD;&#x4E0D;&#x9519;</li>
<li>Glide&#x7684;with()&#x65B9;&#x6CD5;&#x4F20;&#x5165;Activity &#x6216; Fragment&#xFF0C;&#x5219;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x4F1A;&#x548C;&#x5B83;&#x4EEC;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x4E00;&#x81F4;&#xFF0C;&#x65B9;&#x4FBF;&#x7BA1;&#x7406;&#x3002;</li>
</ul>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="http://www.jb51.net/article/83152.htm" target="_blank" rel="external">http://www.jb51.net/article/83152.htm</a></li>
<li><a href="http://blog.csdn.net/shangmingchao/article/details/51125554" target="_blank" rel="external">http://blog.csdn.net/shangmingchao/article/details/51125554</a></li>
<li><a href="http://www.open-open.com/lib/view/open1456706971921.html" target="_blank" rel="external">http://www.open-open.com/lib/view/open1456706971921.html</a> &#x7CFB;&#x5217;&#x6587;&#x7AE0;</li>
</ul>]]></content>
    
    <summary type="html">
    
      &lt;div&gt;&lt;a href=&quot;https://github.com/bumptech/glide&quot;&gt;&lt;img class=&quot;pic lazy&quot; data-original=&quot;/2016/11/06/android-glide-use/glide_logo.png&quot; style=&quot;float:left; width:100px; height:56px; margin-right:16px&quot; alt=&quot;Picasso&quot;&gt;&lt;/a&gt;
&lt;span&gt;Glide&amp;#x662F;google&amp;#x63A8;&amp;#x8350;&amp;#x7684;&amp;#x56FE;&amp;#x7247;&amp;#x52A0;&amp;#x8F7D;&amp;#x5E93;&amp;#xFF08;&amp;#x975E;google&amp;#x5B98;&amp;#x65B9;&amp;#x51FA;&amp;#x54C1;&amp;#xFF09;&amp;#xFF0C;google&amp;#x9996;&amp;#x6B21;&amp;#x516C;&amp;#x5F00;&amp;#x63D0;&amp;#x5230;&amp;#x5B83;&amp;#x662F;&amp;#x5728;&amp;#x6CF0;&amp;#x56FD;&amp;#x4E3E;&amp;#x884C;&amp;#x7684;&amp;#x8C37;&amp;#x6B4C;&amp;#x5F00;&amp;#x53D1;&amp;#x8005;&amp;#x8BBA;&amp;#x575B;&amp;#x4E0A;&amp;#xFF0C;&amp;#x5B83;&amp;#x7684;&amp;#x4F5C;&amp;#x8005;&amp;#x662F;bumptech&amp;#x3002;google&amp;#x7684;&amp;#x597D;&amp;#x4E9B;&amp;#x5F00;&amp;#x6E90;&amp;#x9879;&amp;#x76EE;&amp;#x4E5F;&amp;#x662F;&amp;#x7528;&amp;#x7684;&amp;#x8FD9;&amp;#x4E2A;&amp;#x56FE;&amp;#x7247;&amp;#x52A0;&amp;#x8F7D;&amp;#x5E93;&amp;#xFF0C;&amp;#x50CF;2014&amp;#x5E74;Google I/O&amp;#x5927;&amp;#x4F1A;&amp;#x4E0A;&amp;#x53D1;&amp;#x5E03;&amp;#x7684;&amp;#x5B98;&amp;#x65B9;App&amp;#x3002;github&amp;#x5730;&amp;#x5740;&amp;#x662F;&amp;#xFF1A;&lt;a href=&quot;https://github.com/bumptech/glide&quot;&gt;https://github.com/bumptech/glide&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
      <category term="Glide" scheme="http://ngudream.com/tags/Glide/"/>
    
  </entry>
  
  <entry>
    <title>教你写Android网络框架之基本架构</title>
    <link href="http://ngudream.com/2016/11/01/android-network-base-structure/"/>
    <id>http://ngudream.com/2016/11/01/android-network-base-structure/</id>
    <published>2016-11-01T15:22:29.000Z</published>
    <updated>2017-01-15T07:58:44.343Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>&#x6587;&#x7AE0;&#x8F6C;&#x81EA;&#xFF1A;<a href="http://www.devtf.cn/?p=662" target="_blank" rel="external">http://www.devtf.cn/?p=662</a></p>
</blockquote>
<h2 id="&#x524D;&#x8A00;"><a class="header-anchor" href="#&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h2>
<p>&#x5728;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7F51;&#x7EDC;&#x662F;&#x6211;&#x4EEC;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x5C31;&#x4EE5;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#x6216;&#x8005;&#x8BF4;&#x7F51;&#x7EDC;&#x6A21;&#x5757;&#x5F00;&#x59CB;&#x3002;&#x5728;&#x8FD9;&#x4E2A;&#x6846;&#x67B6;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x4F1A;&#x6574;&#x7406;&#x5F00;&#x53D1;&#x601D;&#x8DEF;&#x3001;&#x4EE5;&#x53CA;&#x9047;&#x5230;&#x4E00;&#x4E9B;&#x8BBE;&#x8BA1;&#x95EE;&#x9898;&#x65F6;&#x4F1A;&#x6709;&#x600E;&#x4E48;&#x6837;&#x7684;&#x8003;&#x8651;&#x3001;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x53EA;&#x662F;&#x6211;&#x4E2A;&#x4EBA;&#x7684;&#x89C2;&#x70B9;&#xFF0C;&#x5927;&#x5BB6;&#x4E5F;&#x53EF;&#x4EE5;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x5B9E;&#x73B0;&#x3002;&#x9664;&#x4E86;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#xFF0C;&#x540E;&#x7EED;&#x7684;&#x7CFB;&#x5217;&#x8FD8;&#x60F3;&#x66F4;&#x65B0;ImageLoader&#x6846;&#x67B6;&#x3001;ORM&#x6846;&#x67B6;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x65F6;&#x95F4;&#x4E5F;&#x4F1A;&#x589E;&#x52A0;&#x52A8;&#x753B;&#x6846;&#x67B6;&#x548C;&#x5FAE;&#x535A;&#x5F00;&#x53D1;&#x7684;&#x7CFB;&#x5217;&#x6587;&#x7AE0;&#x3002;</p>
<p>&#x5F53;&#x7136;&#x8FD9;&#x4E9B;&#x6846;&#x67B6;&#x53EA;&#x662F;&#x4E00;&#x4E9B;&#x7B80;&#x5355;&#x7684;&#x6846;&#x67B6;&#x57FA;&#x7840;&#xFF0C;&#x672C;&#x4EBA;&#x6C34;&#x5E73;&#x3001;&#x65F6;&#x95F4;&#x6709;&#x9650;&#xFF0C;&#x800C;&#x4E14;&#x5DF2;&#x7ECF;&#x6709;&#x73B0;&#x6210;&#x3001;&#x6210;&#x719F;&#x7684;&#x5F88;&#x591A;&#x6846;&#x67B6;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x4EE5;&#x91CD;&#x590D;&#x9020;&#x8F6E;&#x5B50;&#x7684;&#x6001;&#x5EA6;&#x53BB;&#x5B66;&#x4E60;&#x8F6E;&#x5B50;&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#xFF0C;&#x4ECE;&#x800C;&#x8FBE;&#x5230;&#x80FD;&#x591F;&#x9020;&#x8F6E;&#x5B50;&#x7684;&#x5730;&#x6B65;&#x3002;&#x81F3;&#x4E8E;&#x5F88;&#x591A;&#x7EC6;&#x8282;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x8FC7;&#x591A;&#x8BA8;&#x8BBA;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5174;&#x8DA3;&#xFF0C;&#x5404;&#x4F4D;&#x53EF;&#x4EE5;&#x81EA;&#x884C;&#x7814;&#x7A76;&#x3002;</p>
<p>&#x6700;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x6682;&#x4E14;&#x628A;&#x8FD9;&#x4E2A;&#x6846;&#x67B6;&#x547D;&#x540D;&#x4E3A;SimpleNet&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x4E00;&#x8D77;&#x8FDB;&#x5165;&#x4E3B;&#x9898;&#x5427;&#x3002;</p>
<h2 id="&#x57FA;&#x672C;&#x7ED3;&#x6784;"><a class="header-anchor" href="#&#x57FA;&#x672C;&#x7ED3;&#x6784;"></a>&#x57FA;&#x672C;&#x7ED3;&#x6784;</h2>
<div align="center">
<img data-original="/2016/11/01/android-network-base-structure/20150115142804901.jpg" class="lazy">
<br>
<span>&#x56FE;1 &#xFF08; SimpleNet&#x7684;&#x57FA;&#x672C;&#x7ED3;&#x6784; &#xFF09;</span>
</div>
<p>SimpleNet&#x6846;&#x67B6;&#x7684;&#x57FA;&#x672C;&#x7ED3;&#x6784;&#x7C7B;&#x4F3C;&#x4E8E;Volley,&#x5305;&#x62EC;&#x4E00;&#x4E9B;&#x547D;&#x540D;&#x4E0A;&#x4E5F;&#x6709;&#x8DDF;Volley&#x4E00;&#x81F4;&#x3002;&#x5B83;&#x4E3B;&#x8981;&#x5206;&#x4E3A;&#x56DB;&#x4E2A;&#x90E8;&#x5206;&#xFF0C;&#x6700;&#x4E0A;&#x9762;&#x7684;&#x90E8;&#x5206;&#x4E3A;Request&#xFF0C;&#x5373;&#x5404;&#x79CD;&#x8BF7;&#x6C42;&#x7C7B;&#x578B;&#x3002;&#x4F8B;&#x5982;&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E3A;json&#x7684;&#x5BF9;&#x5E94;&#x4E3A;JsonRequest&#xFF0C;&#x8FD4;&#x56DE;&#x6570;&#x636E;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4E3A;StringRequest&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x4E0A;&#x4F20;&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x9700;&#x8981;&#x4F7F;&#x7528;MultipartRequest&#xFF0C;&#x8BE5;&#x8BF7;&#x6C42;&#x53EA;&#x652F;&#x6301;&#x5C0F;&#x6587;&#x4EF6;&#x7684;&#x4E0A;&#x4F20;&#xFF0C;&#x5982;&#x679C;&#x4E0A;&#x4F20;&#x7684;&#x6587;&#x4EF6;&#x8FC7;&#x5927;&#x5219;&#x4F1A;&#x4EA7;&#x751F;OOM&#x3002;</p>
<p>&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x4E3A;&#x6D88;&#x606F;&#x961F;&#x5217;&#xFF0C;&#x6D88;&#x606F;&#x961F;&#x5217;&#x7EF4;&#x62A4;&#x4E86;&#x63D0;&#x4EA4;&#x7ED9;&#x7F51;&#x7EDC;&#x6846;&#x67B6;&#x7684;&#x8BF7;&#x6C42;&#x5217;&#x8868;&#xFF0C;&#x5E76;&#x4E14;&#x6839;&#x636E;&#x76F8;&#x5E94;&#x7684;&#x89C4;&#x5219;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x66F4;&#x5177;&#x4F18;&#x5148;&#x7EA7;&#x548C;&#x8FDB;&#x5165;&#x961F;&#x5217;&#x7684;&#x987A;&#x5E8F;&#x6765;&#x6267;&#x884C;&#xFF0C;&#x8BE5;&#x961F;&#x5217;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;PriorityBlockingQueue&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x961F;&#x5217;&#x4F1A;&#x88AB;&#x5E76;&#x53D1;&#x7684;&#x8BBF;&#x95EE;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x4FDD;&#x8BC1;&#x8BBF;&#x95EE;&#x7684;&#x539F;&#x5B50;&#x6027;&#x3002;</p>
<p>&#x7B2C;&#x4E09;&#x90E8;&#x5206;&#x662F;Executor&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7F51;&#x7EDC;&#x7684;&#x6267;&#x884C;&#x8005;&#x3002;&#x8BE5;Executor&#x7EE7;&#x627F;&#x81EA;Thread&#xFF0C;&#x5728;run&#x65B9;&#x6CD5;&#x4E2D;&#x5FAA;&#x73AF;&#x8BBF;&#x95EE;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x7684;&#x8BF7;&#x6C42;&#x961F;&#x5217;&#xFF0C;&#x8BF7;&#x6C42;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#x5C06;&#x7ED3;&#x679C;&#x6295;&#x9012;&#x7ED9;UI&#x7EBF;&#x7A0B;&#x3002;&#x4E3A;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x63A7;&#x5236;&#x8BF7;&#x6C42;&#x961F;&#x5217;&#xFF0C;&#x4F8B;&#x5982;&#x8BF7;&#x6C42;&#x6392;&#x5E8F;&#x3001;&#x53D6;&#x6D88;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x5E76;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x7EBF;&#x7A0B;&#x6C60;&#x6765;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x662F;&#x81EA;&#x884C;&#x7BA1;&#x7406;&#x961F;&#x5217;&#x548C;Thread&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x8FD9;&#x6837;&#x6574;&#x4E2A;&#x7ED3;&#x6784;&#x4E5F;&#x53D8;&#x5F97;&#x66F4;&#x4E3A;&#x7075;&#x6D3B;&#x3002;</p>
<p>&#x7B2C;&#x56DB;&#x90E8;&#x5206;&#x5219;&#x662F;Response&#x6295;&#x9012;&#x7C7B;&#xFF0C;&#x5728;&#x7B2C;&#x4E09;&#x90E8;&#x5206;&#x7684;Executor&#x4E2D;&#x6267;&#x884C;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#xFF0C;Executor&#x662F;Thread&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x80FD;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x66F4;&#x65B0;UI&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x4F7F;&#x7528;ResponseDelivery&#x6765;&#x5C01;&#x88C5;Response&#x7684;&#x6295;&#x9012;&#xFF0C;&#x4FDD;&#x8BC1;Response&#x6267;&#x884C;&#x5728;UI&#x7EBF;&#x7A0B;&#x3002;</p>
<p>&#x6BCF;&#x4E2A;&#x90E8;&#x5206;&#x804C;&#x8D23;&#x90FD;&#x76F8;&#x5BF9;&#x5355;&#x4E00;&#xFF0C;&#x8FD9;&#x6837;&#x4FBF;&#x4E8E;&#x65E5;&#x540E;&#x7684;&#x5347;&#x7EA7;&#x548C;&#x7EF4;&#x62A4;&#x3002;</p>
<h2 id="&#x6846;&#x67B6;&#x5206;&#x6790;"><a class="header-anchor" href="#&#x6846;&#x67B6;&#x5206;&#x6790;"></a>&#x6846;&#x67B6;&#x5206;&#x6790;</h2>
<div align="center">
<img data-original="/2016/11/01/android-network-base-structure/20150115144429294.jpg" class="lazy">
<br>
<span>&#x56FE;2</span>
</div>
<p>&#x4F46;&#x5728;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5F80;&#x5F80;&#x4F1A;&#x628A;UI&#x548C;&#x4E1A;&#x52A1;&#x5C42;&#x8026;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x7684;&#x5173;&#x7CFB;&#x592A;&#x5BC6;&#x5207;&#x4E86;&#xFF0C;&#x5206;&#x89E3;&#x8D77;&#x6765;&#x5E76;&#x4E0D;&#x662F;&#x90A3;&#x4E48;&#x5BB9;&#x6613;&#x3002;&#x9AD8;&#x624B;&#x80FD;&#x591F;&#x628A;&#x590D;&#x6742;&#x7684;&#x4E8B;&#x60C5;&#x7B80;&#x5355;&#x5316;&#xFF0C;&#x800C;&#x5206;&#x89E3;&#x5C31;&#x662F;&#x7B80;&#x5355;&#x5316;&#x7684;&#x91CD;&#x8981;&#x624B;&#x6BB5;&#xFF0C;&#x5206;&#x89E3;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x5728;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#x6211;&#x4EEC;&#x6210;&#x4E3A;&#x91CD;&#x6784;&#x3002;</p>
<p>&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5C31;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x5206;&#x5C42;&#x6982;&#x5FF5;&#xFF0C;&#x4E3A;&#x4E86;&#x4FBF;&#x4E8E;&#x7406;&#x89E3;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x5982;&#x56FE;1&#x7684;&#x7ED3;&#x6784;&#x6765;&#x52A0;&#x6DF1;&#x7406;&#x89E3;&#x3002;&#x90A3;&#x4E48;&#x5206;&#x5C42;&#x6709;&#x4EC0;&#x4E48;&#x4F18;&#x7F3A;&#x70B9;&#x5462;&#xFF1F;</p>
<p><strong>&#x4F18;&#x70B9;&#xFF1A;</strong></p>
<ul>
<li>&#x590D;&#x6742;&#x95EE;&#x9898;&#x5206;&#x89E3;&#x7B80;&#x5355;&#x5316;&#xFF0C;&#x6BCF;&#x4E00;&#x5C42;&#x8D1F;&#x8D23;&#x81EA;&#x5DF1;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5E76;&#x5411;&#x5916;&#x63D0;&#x4F9B;&#x670D;&#x52A1;&#xFF1B;</li>
<li>&#x804C;&#x8D23;&#x5206;&#x79BB;&#xFF0C;&#x590D;&#x6742;&#x7684;&#x7CFB;&#x7EDF;&#x90FD;&#x6709;&#x5F88;&#x591A;&#x4EBA;&#x5458;&#x8FDB;&#x884C;&#x5F00;&#x53D1;&#xFF0C;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#x5F00;&#x53D1;&#x7684;&#x7BA1;&#x7406;&#x548C;&#x96C6;&#x6210;&#x662F;&#x4E2A;&#x5F88;&#x4E25;&#x91CD;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5206;&#x5C42;&#x8BBE;&#x8BA1;&#x5B9E;&#x73B0;&#x4E4B;&#x540E;&#xFF0C;&#x6BCF;&#x5C42;&#x53EA;&#x9700;&#x5B9A;&#x4E49;&#x597D;&#x81EA;&#x5DF1;&#x7684;&#x5BF9;&#x5916;&#x63A5;&#x53E3;&#xFF0C;&#x5176;&#x4ED6;&#x4F9D;&#x8D56;&#x5C42;&#x670D;&#x52A1;&#x7684;&#x5C31;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x5F00;&#x53D1;&#xFF1B;</li>
<li>&#x6BCF;&#x4E00;&#x5C42;&#x5BF9;&#x5176;&#x4ED6;&#x5C42;&#x90FD;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#xFF0C;&#x5BF9;&#x5916;&#x9690;&#x85CF;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#xFF0C;&#x4E0A;&#x5C42;&#x65E0;&#x9700;&#x77E5;&#x9053;&#x4E0B;&#x5C42;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x53EA;&#x9700;&#x8C03;&#x7528;&#x63A5;&#x53E3;&#x5373;&#x53EF;&#xFF1B;</li>
<li>&#x6709;&#x5229;&#x4E8E;&#x6807;&#x51C6;&#x5316;&#x3002;</li>
</ul>
<p><strong>&#x7F3A;&#x70B9;&#xFF1A;</strong></p>
<ul>
<li>&#x5206;&#x5C42;&#x4E4B;&#x540E;&#x5BF9;&#x4E8E;&#x9886;&#x57DF;&#x4E1A;&#x52A1;&#x7684;&#x4FEE;&#x6539;&#x6709;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x5F88;&#x591A;&#x5C42;&#xFF1B;</li>
<li>&#x8FC7;&#x591A;&#x7684;&#x5C42;&#x6B21;&#x5F71;&#x54CD;&#x6027;&#x80FD;&#x3002;</li>
</ul>
<p>&#x5982;&#x4E0A;&#x6240;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x7684;SimpleNet&#x5E76;&#x4E0D;&#x662F;&#x5206;&#x5C42;&#x7684;&#xFF0C;&#x800C;&#x662F;&#x7B80;&#x5355;&#x7684;&#x6A21;&#x5757;&#x5316;&#xFF0C;&#x4F46;&#x662F;&#x7406;&#x8BBA;&#x57FA;&#x7840;&#x90FD;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x4F9D;&#x8D56;&#x4E8E;&#x62BD;&#x8C61;&#x800C;&#x4E0D;&#x4F9D;&#x8D56;&#x4E8E;&#x5B9E;&#x73B0;&#x3001;&#x5355;&#x4E00;&#x804C;&#x8D23;&#x2026;&#x2026;&#x8FD9;&#x91CC;&#x5F15;&#x5165;&#x5206;&#x5C42;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x8FD9;&#x662F;&#x4FBF;&#x4E8E;&#x7406;&#x89E3;&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x662F;&#x5E0C;&#x671B;&#x5927;&#x5BB6;&#x5728;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#x80FD;&#x591F;&#x5C3D;&#x91CF;&#x4FDD;&#x8BC1;&#x6A21;&#x5757;&#x7684;&#x5185;&#x805A;&#x6027;&#x3001;&#x8026;&#x5408;&#x6027;&#x3002;</p>
<p>&#x518D;&#x770B;SimpleNet&#xFF0C;Request&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7684;&#x6CDB;&#x578B;&#x7C7B;&#xFF0C;&#x6CDB;&#x578B;&#x7C7B;&#x578B;&#x5C31;&#x662F;&#x8FD4;&#x56DE;&#x7684;Response&#x7C7B;&#x578B;&#xFF0C;&#x4F8B;&#x5982;StringRequest&#x5C31;&#x662F;&#x7EE7;&#x627F;&#x81EA;Request&#x3002;&#x7B2C;&#x4E8C;&#x90E8;&#x5206;&#x7684;RequestQueue&#x4F9D;&#x8D56;&#x4E8E;Request&#xFF0C;Request&#x662F;&#x62BD;&#x8C61;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x4EFB;&#x4F55;Request&#x7684;&#x5B50;&#x7C7B;&#x90FD;&#x53EF;&#x4EE5;&#x4F20;&#x9012;&#x5230;&#x8BF7;&#x6C42;&#x961F;&#x5217;&#x4E2D;&#x6765;&#xFF0C;&#x5B83;&#x4F9D;&#x8D56;&#x7684;&#x662F;&#x62BD;&#x8C61;Request&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5177;&#x4F53;&#x7684;&#x67D0;&#x4E2A;&#x5B9E;&#x73B0;&#xFF0C;&#x56E0;&#x6B64;&#x4FDD;&#x8BC1;&#x4E86;&#x53EF;&#x6269;&#x5C55;&#x6027;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x6240;&#x9700;&#x7684;Request&#xFF0C;&#x4F8B;&#x5982;&#x5927;&#x6587;&#x4EF6;&#x7684;&#x4E0A;&#x4F20;Request&#x3002;&#x540C;&#x7406;&#xFF0C;&#x7B2C;&#x4E09;&#x90E8;&#x5206;&#x7684;NetworkExecutor&#x4E5F;&#x53EA;&#x662F;&#x4F9D;&#x8D56;&#x4E8E;Request&#x62BD;&#x8C61;&#xFF0C;&#x4F46;&#x8FD9;&#x91CC;&#x53C8;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;HttpStack&#xFF0C;&#x8FD9;&#x4E2A;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x7684;&#x771F;&#x6B63;&#x6267;&#x884C;&#x8005;&#xFF0C;&#x6709;HttpClientStack&#x548C;HttpUrlConnStack&#xFF0C;&#x4E24;&#x8005;&#x5206;&#x522B;&#x4E3A;Apache&#x7684;HttpClient&#x548C;java&#x7684;HttpURLConnection&#xFF0C;&#x5173;&#x4E8E;&#x8FD9;&#x4E24;&#x8005;&#x7684;&#x533A;&#x522B;&#x8BF7;&#x53C2;&#x8003;:Android&#x8BBF;&#x95EE;&#x7F51;&#x7EDC;&#xFF0C;&#x4F7F;&#x7528;HttpURLConnection&#x8FD8;&#x662F;HttpClient&#xFF1F;&#x3002;HttpStack&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#xFF0C;&#x5177;&#x4F53;&#x4F7F;&#x7528;HttpClient&#x8FD8;&#x662F;HttpURLConnection&#x5219;&#x7531;&#x8FD0;&#x884C;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x6765;&#x5B9A;&#xFF0C;HttpStackFactory&#x4F1A;&#x6839;&#x636E;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x7ED9;&#x6846;&#x67B6;&#x8FD4;&#x56DE;&#x5BF9;&#x5E94;&#x7684;HttpStack&#x3002;&#x6700;&#x540E;&#x7684;ResponseDelivery&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x53EA;&#x662F;&#x901A;&#x8FC7;Handler&#x5C06;&#x7ED3;&#x679C;&#x6295;&#x9012;&#x7ED9;UI&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6267;&#x884C;RequestListener&#x7684;onComplete&#x65B9;&#x6CD5;&#xFF0C;&#x6B64;&#x65F6;&#x7F51;&#x7EDC;&#x6267;&#x884C;&#x5B8C;&#x6210;&#xFF0C;&#x7528;&#x6237;&#x5373;&#x53EF;&#x5728;&#x8BE5;&#x65B9;&#x6CD5;&#x4E2D;&#x66F4;&#x65B0;UI&#x6216;&#x8005;&#x76F8;&#x5173;&#x7684;&#x5176;&#x4ED6;&#x7684;&#x64CD;&#x4F5C;&#x3002;</p>
<p>&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x518D;&#x770B;&#x770B;SimpleNet&#x7684;&#x5DE5;&#x7A0B;&#x7ED3;&#x6784;&#xFF0C;&#x5982;&#x56FE;3&#x6240;&#x793A;&#x3002;</p>
<div align="center">
<img data-original="/2016/11/01/android-network-base-structure/20150115164926687.jpg" class="lazy">
<br>
<span>&#x56FE;3</span>
</div>
<p>&#x8FD9;&#x5C31;&#x662F;SimpleNet&#x6846;&#x67B6;&#x7684;&#x57FA;&#x672C;&#x7ED3;&#x6784;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x671F;&#x5F85;&#x4E0B;&#x4E00;&#x7BC7;&#x535A;&#x5BA2;&#x7684;&#x66F4;&#x65B0;.</p>
<p><a href="https://github.com/hehonghui/simple_net_framework" target="_blank" rel="external">SimpleNet&#x7F51;&#x7EDC;&#x6846;&#x67B6;github&#x5730;&#x5740;</a></p>]]></content>
    
    <summary type="html">
    
      在开发过程中，网络是我们很重要的一部分，因此我们就以网络框架或者说网络模块开始。在这个框架开发过程中，笔者会整理开发思路、以及遇到一些设计问题时会有怎么样的考虑、解决方案，当然这只是笔者个人的观点，大家也可以有自己的实现。除了网络框架，后续的系列还想更新ImageLoader框架、ORM框架。如果有时间，笔者也会增加动画框架和微博开发的系列文章。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Android" scheme="http://ngudream.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>RxJava线程切换</title>
    <link href="http://ngudream.com/2016/10/31/rxjava-thread-switch/"/>
    <id>http://ngudream.com/2016/10/31/rxjava-thread-switch/</id>
    <published>2016-10-31T12:56:42.000Z</published>
    <updated>2017-01-15T07:58:44.475Z</updated>
    
    <content type="html"><![CDATA[<h2 id="&#x524D;&#x8A00;"><a class="header-anchor" href="#&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h2>
<p>RxJava&#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x79CD;&#x7EBF;&#x7A0B;&#x8C03;&#x8BD5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;RxJava.Observable&#x53D6;&#x4EE3;AsyncTask&#x548C;AsyncTaskLoader&#x3002;</p>
<ul>
<li><strong>subscribeOn()</strong> &#x7528;&#x6765;&#x6307;&#x5B9A;Observable&#x4E2D;&#x7684;&#x903B;&#x8F91;&#x8FC7;&#x7A0B;&#x5728;&#x7279;&#x5B9A;&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x4E0A;&#x8C03;&#x7528;&#x3002;
<ul>
<li>create()</li>
<li>just()</li>
<li>flatmap()</li>
<li>map()</li>
<li>filter()</li>
<li>doOnSubscribe()</li>
<li>&#x7B49;&#x7B49;</li>
</ul>
</li>
</ul>
<div align="center">
<img data-original="/2016/10/31/rxjava-thread-switch/subscribeOn.jpg" class="lazy">
<br>
<span>subscribeOn() &#x539F;&#x7406;&#x56FE;</span>
</div>
<ul>
<li><strong>observeOn()</strong> &#x7528;&#x6765;&#x6307;&#x5B9A;Observable&#x7684;&#x7ED3;&#x679C;&#x6570;&#x636E;&#x5728;&#x7279;&#x5B9A;&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x4E0A;&#x8C03;&#x7528;&#x3002;
<ul>
<li>onNext()</li>
<li>onError()</li>
<li>onComplete()</li>
<li>doOnNext()</li>
<li>map()</li>
<li>&#x7B49;&#x7B49;</li>
</ul>
</li>
</ul>
<div align="center">
<img data-original="/2016/10/31/rxjava-thread-switch/observeOn.jpg" class="lazy">
<br>
<span>observeOn() &#x539F;&#x7406;&#x56FE;</span>
</div>
<p>RxJava&#x53EF;&#x4EE5;&#x5207;&#x6362;&#x591A;&#x79CD;&#x7EBF;&#x7A0B;&#xFF1A;</p>
<ul>
<li>Schedulers.immediate() &#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x7ACB;&#x5373;&#x6267;&#x884C;</li>
<li>Schedulers.trampoline() &#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#xFF0C;&#x4F46;&#x5148;&#x7B49;&#x5F85;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x5B8C;&#x5F53;&#x524D;&#x4EFB;&#x52A1;</li>
<li>Schedulers.newThread() &#x5728;&#x65B0;&#x7684;&#x7EBF;&#x7A0B;&#x4E0A;&#x6267;&#x884C;</li>
<li>Schedulers.computation() &#x8BA1;&#x7B97;&#x6240;&#x4F7F;&#x7528;&#x7684; Scheduler&#x3002;&#x8FD9;&#x4E2A;&#x8BA1;&#x7B97;&#x6307;&#x7684;&#x662F; CPU &#x5BC6;&#x96C6;&#x578B;&#x8BA1;&#x7B97;&#xFF0C;&#x5373;&#x4E0D;&#x4F1A;&#x88AB; I/O &#x7B49;&#x64CD;&#x4F5C;&#x9650;&#x5236;&#x6027;&#x80FD;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x4F8B;&#x5982;&#x56FE;&#x5F62;&#x7684;&#x8BA1;&#x7B97;&#x3002;&#x8FD9;&#x4E2A; Scheduler &#x4F7F;&#x7528;&#x7684;&#x56FA;&#x5B9A;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x5927;&#x5C0F;&#x4E3A; CPU &#x6838;&#x6570;&#x3002;&#x4E0D;&#x8981;&#x628A; I/O &#x64CD;&#x4F5C;&#x653E;&#x5728; computation() &#x4E2D;&#xFF0C;&#x5426;&#x5219; I/O &#x64CD;&#x4F5C;&#x7684;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x4F1A;&#x6D6A;&#x8D39; CPU&#x3002;</li>
<li><a href="http://Schedulers.io" target="_blank" rel="external">Schedulers.io</a>() &#x5728;I/O&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x64CD;&#x4F5C;</li>
<li>AndroidSchedulers.mainThread() &#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x6267;&#x884C;</li>
</ul>
<h2 id="mainthread"><a class="header-anchor" href="#mainthread"></a>mainThread</h2>
<p>&#x6307;&#x5B9A;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#xFF1A;</p>
<pre><code>Observable.just(1)
                .subscribeOn(AndroidSchedulers.mainThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;map&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x548C;subscribe&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x5728;main&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x7684;&#x3002;</p>
<h2 id="i-o"><a class="header-anchor" href="#i-o"></a>I/O</h2>
<p>&#x6307;&#x5B9A;&#x5728;I/O&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x3002;</p>
<pre><code>Observable.just(1)
                .subscribeOn(Schedulers.io())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;map&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x548C;subscribe&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x5728;I/O&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x7684;&#x3002;</p>
<h2 id="newthread"><a class="header-anchor" href="#newthread"></a>newThread</h2>
<p>&#x6307;&#x5B9A;&#x5728;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x3002;</p>
<pre><code>Observable.just(1)
                .subscribeOn(Schedulers.newThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxNewThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: RxNewThreadScheduler-1
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;map&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x548C;subscribe&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x7684;&#x3002;</p>
<p>&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;subscribeOn&#x6216;observeOn&#x6307;&#x5B9A;&#x7EBF;&#x7A0B;&#xFF0C;&#x5219;&#x4F7F;&#x7528;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x3002;</p>
<pre><code>Log.d(TAG, &quot;[onCreate] cur_thread: &quot; + Thread.currentThread().getName());
        Observable.just(1)
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [onCreate] cur_thread: main
D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#x662F;&#x4E3B;&#x7EBF;&#x7A0B;&#xFF0C;map&#x7684;&#x6267;&#x884C;&#x548C;subscribe&#x7684;&#x6267;&#x884C;&#x90FD;&#x662F;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x3002;</p>
<p>&#x5176;&#x5B83;&#x5404;&#x79CD;&#x7684;&#x6307;&#x5B9A;&#x7EBF;&#x7A0B;&#x7C7B;&#x4F3C;&#xFF0C;&#x5728;&#x6B64;&#x4E0D;&#x518D;&#x4E3E;&#x4F8B;&#x54C8;&#x3002;</p>
<h2 id="&#x7EBF;&#x7A0B;&#x5207;&#x6362;"><a class="header-anchor" href="#&#x7EBF;&#x7A0B;&#x5207;&#x6362;"></a>&#x7EBF;&#x7A0B;&#x5207;&#x6362;</h2>
<p>&#x5176;&#x5B9E;&#x524D;&#x9762;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x4F7F;&#x7528;&#x5230;&#x4E86;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#xFF0C;&#x5C31;&#x662F; Observable.just(1)&#x7684;&#x521B;&#x5EFA;&#x5176;&#x5B9E;&#x662F;&#x8FD0;&#x884C;&#x5728;Activity&#x7684;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#xFF0C;&#x7D27;&#x63A5;&#x7740;&#x901A;&#x8FC7;subscribeOn(<a href="http://Schedulers.io" target="_blank" rel="external">Schedulers.io</a>())&#xFF0C;&#x5C06;&#x5B83;&#x5207;&#x6362;&#x5230;&#x4E86;I/O&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;map&#x4E2D;&#x7684;&#x64CD;&#x4F5C;&#x3002;</p>
<h3 id="&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0E;io&#x7EBF;&#x7A0B;&#x5207;&#x6362;"><a class="header-anchor" href="#&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0E;io&#x7EBF;&#x7A0B;&#x5207;&#x6362;"></a>&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0E;IO&#x7EBF;&#x7A0B;&#x5207;&#x6362;</h3>
<p>&#x6211;&#x4EEC;&#x6765;&#x5B9E;&#x73B0;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E0E;I/O&#x7EBF;&#x7A0B;&#x7684;&#x5207;&#x6362;&#xFF0C;I/O&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;map&#x64CD;&#x4F5C;&#xFF0C;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;subscribe&#x3002;</p>
<pre><code>Observable.just(1)
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>map&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x7531;&#x7D27;&#x8DDF;&#x7740;&#x5B83;&#x7684;&#x524D;&#x9762;&#x4E00;&#x4E2A;&#x6216;&#x8005;&#x5B83;&#x540E;&#x9762;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;subscribeOn&#x51B3;&#x5B9A;&#x3002;subscribe&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x5219;&#x7531;&#x7D27;&#x8DDF;&#x7740;&#x5B83;&#x7684;observeOn&#x51B3;&#x5B9A;&#x3002;</p>
<p>&#x518D;&#x6765;&#x53D8;&#x6362;&#x4E00;&#x4E0B;map&#x4E0E;subscribeOn&#x3001;observeOn&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x770B;&#x770B;&#x7ED3;&#x679C;&#xFF1A;</p>
<pre><code>new Thread(new Runnable() {
            @Override
            public void run() {
                Observable.just(1)
                        .subscribeOn(Schedulers.io())
                        .observeOn(AndroidSchedulers.mainThread())
                        .map(new Func1&lt;Integer, Integer&gt;() {
                            @Override
                            public Integer call(Integer in) {
                                Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                                Log.d(TAG, &quot;[call] input: &quot; + in);
                                int result = in * 2;
                                return result;
                            }
                        })
                        .subscribe(new Action1&lt;Integer&gt;() {
                            @Override
                            public void call(Integer result) {
                                Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                                Log.d(TAG, &quot;[call] output: &quot; + result);
                            }
                        });
            }
        }).start();
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x6211;&#x4EEC;&#x5728;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#x91CC;&#x9762;&#x521B;&#x5EFA; Observable.just(1)&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x6362;&#x4E86;map&#x4E0E;subscribeOn&#x3001;observeOn&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x901A;&#x8FC7;&#x8F93;&#x51FA;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;map&#x53D7;&#x79BB;&#x5B83;&#x6700;&#x8FD1;&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x5F71;&#x54CD;observeOn(AndroidSchedulers.mainThread())&#xFF0C;&#x5728;&#x4E3B;&#x7EBF;&#x7A0B;&#x4E2D;&#x6267;&#x884C;&#x5B83;&#x7684;&#x903B;&#x8F91;&#x3002;</p>
<p>&#x518D;&#x6765;&#x770B;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;</p>
<pre><code>Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                Log.d(TAG, &quot;[call] create_thread: &quot; + Thread.currentThread().getName());
                subscriber.onNext(1);
                subscriber.onCompleted();
            }
        })
                .subscribeOn(Schedulers.io())
                .observeOn(AndroidSchedulers.mainThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] create_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;create()&#x65B9;&#x6CD5;&#x6700;&#x8FD1;&#x7684;&#x4E00;&#x4E2A;subscribeOn&#x51B3;&#x5B9A;&#x4E86;&#x5B83;call()&#x6240;&#x5728;&#x7684;&#x7EBF;&#x7A0B;&#x3002;</p>
<blockquote>
<p>&#x8D75;&#x5F66;&#x519B; <a href="http://www.cnblogs.com/zhaoyanjun/p/5624395.html" target="_blank" rel="external">RxJava &#x548C; RxAndroid &#x4E94;&#xFF08;&#x7EBF;&#x7A0B;&#x8C03;&#x5EA6;&#xFF09;</a></p>
</blockquote>
<ol>
<li>
<p>&#x5BF9;&#x4E8E; create()&#xFF0C;just()&#xFF0C;from()&#xFF0C;doOnSubscribe() &#x7B49;&#x521B;&#x5EFA;Observable&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E3A;<strong>&#x4E8B;&#x4EF6;&#x4EA7;&#x751F;</strong></p>
</li>
<li>
<p>&#x5BF9;&#x4E8E; map()&#xFF0C;flapMap()&#xFF0C;scan()&#xFF0C;filter() &#x7B49;&#x5904;&#x7406;&#x903B;&#x8F91;&#x8FC7;&#x7A0B;&#xFF08;&#x53D1;&#x5C04;&#x6570;&#x636E;&#x548C;&#x901A;&#x77E5;&#xFF09;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E3A;<strong>&#x4E8B;&#x4EF6;&#x52A0;&#x5DE5;</strong></p>
</li>
<li>
<p>&#x5BF9;&#x4E8E;subscribe()&#x64CD;&#x4F5C;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E3A;<strong>&#x4E8B;&#x4EF6;&#x6D88;&#x8D39;</strong></p>
<ul>
<li>&#x4E8B;&#x4EF6;&#x4EA7;&#x751F;&#xFF1A;&#x9ED8;&#x8BA4;&#x8FD0;&#x884C;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#xFF0C;&#x53EF;&#x4EE5;&#x7531; subscribeOn() &#x81EA;&#x5B9A;&#x4E49;&#x7EBF;&#x7A0B;</li>
<li>&#x4E8B;&#x4EF6;&#x52A0;&#x5DE5;&#xFF1A;&#x9ED8;&#x8BA4;&#x8DDF;&#x4E8B;&#x4EF6;&#x4EA7;&#x751F;&#x7684;&#x7EBF;&#x7A0B;&#x4FDD;&#x6301;&#x4E00;&#x81F4;, &#x53EF;&#x4EE5;&#x7531; observeOn() &#x81EA;&#x5B9A;&#x4E49;&#x7EBF;&#x7A0B;</li>
<li>&#x4E8B;&#x4EF6;&#x6D88;&#x8D39;&#xFF1A;&#x9ED8;&#x8BA4;&#x8FD0;&#x884C;&#x5728;&#x5F53;&#x524D;&#x7EBF;&#x7A0B;&#xFF0C;&#x53EF;&#x4EE5;&#x6709;observeOn() &#x81EA;&#x5B9A;&#x4E49;</li>
</ul>
</li>
</ol>
<h3 id="doonsubscribe"><a class="header-anchor" href="#doonsubscribe"></a>doOnSubscribe</h3>
<p>doOnSubscribe&#x6267;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#x7531;&#x5B83;&#x540E;&#x9762;&#x7D27;&#x6839;&#x7684;subscribeOn&#x51B3;&#x5B9A;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B83;&#x524D;&#x9762;&#x7684;&#x3002;</p>
<pre><code>Observable.just(1)
                .doOnSubscribe(new Action0() {
                    @Override
                    public void call() {
                        Log.d(TAG, &quot;[call] doOnSubscribe_thread: &quot; + Thread.currentThread().getName());
                    }
                })
                .subscribeOn(Schedulers.newThread())
                .observeOn(AndroidSchedulers.mainThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] doOnSubscribe_thread: RxNewThreadScheduler-1
D/MainActivity: [call] map_thread: main
D/MainActivity: [call] input: 1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06;subscribeOn(Schedulers.newThread())&#x79FB;&#x5230;.doOnSubscribe(new Action0())&#x524D;&#x9762;&#x53BB;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F1A;&#x770B;&#x5230;&#x4E0B;&#x9762;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;</p>
<pre><code>Observable.just(1)
                .subscribeOn(Schedulers.io())
                .doOnSubscribe(new Action0() {
                    @Override
                    public void call() {
                        Log.d(TAG, &quot;[call] doOnSubscribe_thread: &quot; + Thread.currentThread().getName());
                    }
                })

D/MainActivity: [call] doOnSubscribe_thread: main
</code></pre>
<p>&#x5373;doOnSubscribe&#x5E76;&#x6CA1;&#x6709;&#x53D7;&#x5230;&#x5B83;&#x524D;&#x9762;&#x7684;subscribeOn&#x5F71;&#x54CD;&#xFF0C;&#x8FD8;&#x662F;&#x5728;&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;&#x5373;&#x4E3B;&#x7EBF;&#x7A0B;&#x6267;&#x884C;&#x3002;</p>
<h3 id="doonnext"><a class="header-anchor" href="#doonnext"></a>doOnNext</h3>
<p>doOnNext&#x6267;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#x7531;&#x5B83;&#x524D;&#x9762;&#x7D27;&#x8DDF;&#x7684;observeOn&#x51B3;&#x5B9A;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B83;&#x540E;&#x9762;&#x7684;&#x3002;</p>
<pre><code>Observable.just(1)
                .subscribeOn(Schedulers.newThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .observeOn(Schedulers.computation())
                .doOnNext(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer integer) {
                        Log.d(TAG, &quot;[call] doOnNext_thread: &quot; + Thread.currentThread().getName());
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxNewThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] doOnNext_thread: RxComputationThreadPool-3
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06;doOnNext&#x524D;&#x7684;observeOn&#x53BB;&#x6389;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F1A;&#x770B;&#x5230;&#x4E0B;&#x9762;&#x7684;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] map_thread: RxNewThreadScheduler-1
D/MainActivity: [call] input: 1
D/MainActivity: [call] doOnNext_thread: RxNewThreadScheduler-1
D/MainActivity: [call] subscribe_thread: main
D/MainActivity: [call] output: 2
</code></pre>
<h3 id="&#x591A;&#x4E2A;subscribeon"><a class="header-anchor" href="#&#x591A;&#x4E2A;subscribeon"></a>&#x591A;&#x4E2A;subscribeOn</h3>
<p>&#x5B83;&#x662F;&#x5B9A;&#x4E49;&#x4E8B;&#x4EF6;&#x4EA7;&#x751F;&#x7EBF;&#x7A0B;&#x7684;</p>
<pre><code>Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                Log.d(TAG, &quot;[call] create_thread: &quot; + Thread.currentThread().getName());
                subscriber.onNext(1);
                subscriber.onCompleted();
            }
        })
                .subscribeOn(Schedulers.newThread())
                .subscribeOn(Schedulers.io())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map1_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .subscribeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] create_thread: RxNewThreadScheduler-1
D/MainActivity: [call] map1_thread: RxNewThreadScheduler-1
D/MainActivity: [call] subscribe_thread: RxNewThreadScheduler-1
</code></pre>
<p>&#x901A;&#x8FC7;&#x7ED3;&#x679C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#x90FD;&#x8FD0;&#x884C;&#x5728;&#x4E86;&#x540C;&#x4E00;&#x4E2A;&#x65B0;&#x7EBF;&#x7A0B;&#x91CC;&#x9762;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5C31;&#x7B97;&#x94FE;&#x5F0F;&#x91CC;&#x9762;&#x5199;&#x4E86;&#x591A;&#x4E2A; subscribeOn&#xFF0C;&#x94FE;&#x63A5;&#x8FD8;&#x662F;&#x53EA;&#x53D7;&#x7B2C;&#x4E00;&#x4E2A; subscribeOn &#x7684;&#x5F71;&#x54CD;&#x3002;</p>
<h3 id="&#x591A;&#x4E2A;observeon"><a class="header-anchor" href="#&#x591A;&#x4E2A;observeon"></a>&#x591A;&#x4E2A;observeOn</h3>
<p>&#x5B83;&#x662F;&#x5B9A;&#x4E49;&#x4E8B;&#x4EF6;&#x6D88;&#x8D39;&#x7EBF;&#x7A0B;&#x7684;</p>
<pre><code>Observable.create(new Observable.OnSubscribe&lt;Integer&gt;() {
            @Override
            public void call(Subscriber&lt;? super Integer&gt; subscriber) {
                Log.d(TAG, &quot;[call] create_thread: &quot; + Thread.currentThread().getName());
                subscriber.onNext(1);
                subscriber.onCompleted();
            }
        })
                .observeOn(Schedulers.io())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map1_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .observeOn(Schedulers.newThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer integer) {
                        Log.d(TAG, &quot;[call] map2_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + integer);
                        int result = integer * 2;
                        return result;
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] create_thread: main
D/MainActivity: [call] map1_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] map2_thread: RxNewThreadScheduler-1
D/MainActivity: [call] subscribe_thread: main
</code></pre>
<p>&#x901A;&#x8FC7;&#x7ED3;&#x679C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x7684;&#x8F6C;&#x5316;&#x90FD;&#x751F;&#x6548;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5728;&#x4E8B;&#x4EF6;&#x7684;&#x52A0;&#x5DE5;&#x3001;&#x6D88;&#x8D39;&#x4E0A;&#x662F;&#x53D7;&#x79BB;&#x5B83;&#x6700;&#x65B0;&#x7684; observeOn &#x5F71;&#x54CD;&#x3002;</p>
<h3 id="&#x6DF7;&#x5408;&#x8C03;&#x5EA6;"><a class="header-anchor" href="#&#x6DF7;&#x5408;&#x8C03;&#x5EA6;"></a>&#x6DF7;&#x5408;&#x8C03;&#x5EA6;</h3>
<p>&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x95F4;&#x7684;&#x6765;&#x56DE;&#x5207;&#x6362;</p>
<pre><code>Observable.just(1)
                .doOnSubscribe(new Action0() {
                    @Override
                    public void call() {
                        Log.d(TAG, &quot;[call] doOnSubscribe_thread: &quot; + Thread.currentThread().getName());
                    }
                })
                .subscribeOn(Schedulers.computation())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer in) {
                        Log.d(TAG, &quot;[call] map1_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + in);
                        int result = in * 2;
                        return result;
                    }
                })
                .observeOn(Schedulers.newThread())
                .map(new Func1&lt;Integer, Integer&gt;() {
                    @Override
                    public Integer call(Integer integer) {
                        Log.d(TAG, &quot;[call] map2_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] input: &quot; + integer);
                        return integer * 2;
                    }
                })
                .observeOn(AndroidSchedulers.mainThread())
                .doOnNext(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer integer) {
                        Log.d(TAG, &quot;[call] doOnNext_thread: &quot; + Thread.currentThread().getName());
                    }
                })
                .observeOn(Schedulers.io())
                .subscribe(new Action1&lt;Integer&gt;() {
                    @Override
                    public void call(Integer result) {
                        Log.d(TAG, &quot;[call] subscribe_thread: &quot; + Thread.currentThread().getName());
                        Log.d(TAG, &quot;[call] output: &quot; + result);
                    }
                });
</code></pre>
<p>&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x4E3A;&#xFF1A;</p>
<pre><code>D/MainActivity: [call] doOnSubscribe_thread: RxComputationThreadPool-3
D/MainActivity: [call] map1_thread: RxComputationThreadPool-3
D/MainActivity: [call] input: 1
D/MainActivity: [call] map2_thread: RxNewThreadScheduler-1
D/MainActivity: [call] input: 2
D/MainActivity: [call] doOnNext_thread: main
D/MainActivity: [call] subscribe_thread: RxCachedThreadScheduler-1
D/MainActivity: [call] output: 4
</code></pre>
<h2 id="&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;"><a class="header-anchor" href="#&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;"></a>&#x6D4B;&#x8BD5;&#x7ED3;&#x8BBA;</h2>
<ul>
<li>observeOn &#x51B3;&#x5B9A;&#x4E0B;&#x6E38;&#x4EE3;&#x7801;&#x8FD0;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;observeOn &#x5982;&#x679C;&#x4E0D;&#x5B9A;&#x4E49;&#x5219;&#x662F;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x5F53;&#x524D;&#x8FD0;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#x3002;</li>
<li>observeOn &#x4E8B;&#x4EF6;&#x7684;&#x52A0;&#x5DE5;&#x3001;&#x6D88;&#x8D39;&#x4E0A;&#x662F;&#x53D7;&#x79BB;&#x5B83;&#x6700;&#x65B0;&#x7684; observeOn &#x5F71;&#x54CD;&#x3002;</li>
<li>subscribeOn &#x51B3;&#x5B9A;&#x6700;&#x539F;&#x59CB;&#x6570;&#x636E;&#x6E90;&#x53D1;&#x5C04;&#x6570;&#x636E;&#x4EE3;&#x7801;&#x8FD0;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#xFF0C;&#x800C;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x53D1;&#x5C04;&#x6570;&#x636E;&#x4EE3;&#x7801;&#x662F;&#x7531; observeOn &#x51B3;&#x5B9A;&#x7684;&#x3002;</li>
<li>subscribeOn &#x5982;&#x679C;&#x5728;&#x94FE;&#x5F0F;&#x4E2D;&#x586B;&#x5199;&#x591A;&#x4E2A;&#xFF0C;&#x53EA;&#x4F1A;&#x53D7;&#x7B2C;&#x4E00;&#x4E2A;&#x7684;&#x5F71;&#x54CD;&#x3002;RxJava&#x5206;&#x914D;&#x7EBF;&#x7A0B;&#x65F6;&#x662F;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x94FE;&#x81EA;&#x4E0B;&#x800C;&#x4E0A;&#x5904;&#x7406;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x4E0A;&#x9762;&#x7684; subscribeOn &#x4F1A;&#x8986;&#x76D6;&#x4E0B;&#x9762;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4; subscribeOn &#x5728;&#x8C03;&#x7528;&#x94FE;&#x4E2D;&#x6700;&#x591A;&#x5B9A;&#x4E49;&#x4E00;&#x6B21;&#x5C31;&#x53EF;&#x4EE5;&#xFF0C;&#x4F4D;&#x7F6E;&#x4EFB;&#x610F;&#x3002;</li>
<li>doOnSubscribe &#x53D7;&#x5176;&#x540E;&#x7684; subscribeOn &#x5F71;&#x54CD;&#xFF0C;doOnNext&#x53D7;&#x5176;&#x524D;&#x7684; observeOn &#x5F71;&#x54CD;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;subcribe&#x53D1;&#x751F;&#x7684;&#x7EBF;&#x7A0B;&#x51B3;&#x5B9A;&#x4E86;&#xFF0C;doOnSubscribe()&#x6267;&#x884C;&#x6240;&#x5728;&#x7684;&#x7EBF;&#x7A0B;&#x3002;</li>
</ul>
<h2 id="&#x53C2;&#x8003;"><a class="header-anchor" href="#&#x53C2;&#x8003;"></a>&#x53C2;&#x8003;</h2>
<ul>
<li><a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="external">http://gank.io/post/560e15be2dca930e00da1083</a></li>
<li><a href="http://blog.csdn.net/xmxkf/article/details/51821940" target="_blank" rel="external">http://blog.csdn.net/xmxkf/article/details/51821940</a></li>
<li><a href="http://www.cnblogs.com/zhaoyanjun/p/5624395.html" target="_blank" rel="external">http://www.cnblogs.com/zhaoyanjun/p/5624395.html</a></li>
<li><a href="http://www.jianshu.com/p/6add06ae5dde" target="_blank" rel="external">http://www.jianshu.com/p/6add06ae5dde</a></li>
<li><a href="http://blog.csdn.net/yaoyasong/article/details/50666743" target="_blank" rel="external">http://blog.csdn.net/yaoyasong/article/details/50666743</a></li>
<li><a href="http://gank.io/post/560e15be2dca930e00da1083" target="_blank" rel="external">http://gank.io/post/560e15be2dca930e00da1083</a></li>
</ul>]]></content>
    
    <summary type="html">
    
      RxJava线程的切换是通过lift方法来完成的，观察者切换线程使用observeOn()，即决定onNext, onError和onCompleted方法或者Action1&lt;Boolean&gt;、Action1&lt;Throwable&gt;在哪个线程执行；被观察者切换线程使用subscriberOn()，即决定Observable全部的处理过程在如个线程执行。
    
    </summary>
    
      <category term="移动开发" scheme="http://ngudream.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="RxJava" scheme="http://ngudream.com/tags/RxJava/"/>
    
  </entry>
  
</feed>
